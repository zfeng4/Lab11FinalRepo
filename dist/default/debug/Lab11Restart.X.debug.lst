

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 26 19:12:58 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	intentry,global,class=CODE,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	dabs	1,0xCA0,32
    87                           	dabs	1,0xC20,80
    88                           	dabs	1,0xBA0,80
    89                           	dabs	1,0xB20,80
    90                           	dabs	1,0xAA0,80
    91                           	dabs	1,0xA20,80
    92                           	dabs	1,0x9A0,80
    93                           	dabs	1,0x920,80
    94                           	dabs	1,0x8A0,80
    95                           	dabs	1,0x820,80
    96                           	dabs	1,0x7A0,80
    97                           	dabs	1,0x720,80
    98                           	dabs	1,0x6A0,80
    99                           	dabs	1,0x64E,34
   100                           	dabs	1,0x23EE,0,_inputArray
   101                           	dabs	1,0x7E,2
   102  0000                     
   103                           ; Version 2.05
   104                           ; Generated 20/12/2018 GMT
   105                           ; 
   106                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC16F18446 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  008C                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  008E                     	;# 
   163  008F                     	;# 
   164  0090                     	;# 
   165  0090                     	;# 
   166  0091                     	;# 
   167  0092                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0094                     	;# 
   172  0095                     	;# 
   173  0096                     	;# 
   174  0096                     	;# 
   175  0097                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009A                     	;# 
   179  009B                     	;# 
   180  009B                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  010F                     	;# 
   192  0110                     	;# 
   193  0111                     	;# 
   194  0112                     	;# 
   195  0113                     	;# 
   196  0114                     	;# 
   197  0115                     	;# 
   198  0116                     	;# 
   199  0117                     	;# 
   200  0118                     	;# 
   201  0119                     	;# 
   202  0119                     	;# 
   203  0119                     	;# 
   204  011A                     	;# 
   205  011A                     	;# 
   206  011A                     	;# 
   207  011B                     	;# 
   208  011B                     	;# 
   209  011B                     	;# 
   210  011B                     	;# 
   211  011B                     	;# 
   212  011C                     	;# 
   213  011C                     	;# 
   214  011C                     	;# 
   215  011D                     	;# 
   216  011D                     	;# 
   217  011D                     	;# 
   218  011E                     	;# 
   219  011E                     	;# 
   220  011E                     	;# 
   221  011F                     	;# 
   222  011F                     	;# 
   223  011F                     	;# 
   224  011F                     	;# 
   225  011F                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  018E                     	;# 
   229  018F                     	;# 
   230  0190                     	;# 
   231  0191                     	;# 
   232  0192                     	;# 
   233  0196                     	;# 
   234  0197                     	;# 
   235  0198                     	;# 
   236  0199                     	;# 
   237  019A                     	;# 
   238  019B                     	;# 
   239  019C                     	;# 
   240  020C                     	;# 
   241  020D                     	;# 
   242  020E                     	;# 
   243  020E                     	;# 
   244  020F                     	;# 
   245  020F                     	;# 
   246  0210                     	;# 
   247  0210                     	;# 
   248  0211                     	;# 
   249  0211                     	;# 
   250  0212                     	;# 
   251  0213                     	;# 
   252  0214                     	;# 
   253  0214                     	;# 
   254  0215                     	;# 
   255  0215                     	;# 
   256  0216                     	;# 
   257  0216                     	;# 
   258  0217                     	;# 
   259  0217                     	;# 
   260  0218                     	;# 
   261  0219                     	;# 
   262  021A                     	;# 
   263  021A                     	;# 
   264  021B                     	;# 
   265  021B                     	;# 
   266  021C                     	;# 
   267  021C                     	;# 
   268  021D                     	;# 
   269  021D                     	;# 
   270  021E                     	;# 
   271  021F                     	;# 
   272  028C                     	;# 
   273  028C                     	;# 
   274  028D                     	;# 
   275  028D                     	;# 
   276  028E                     	;# 
   277  028F                     	;# 
   278  0290                     	;# 
   279  0291                     	;# 
   280  0292                     	;# 
   281  0292                     	;# 
   282  0293                     	;# 
   283  0293                     	;# 
   284  0294                     	;# 
   285  0295                     	;# 
   286  0296                     	;# 
   287  0297                     	;# 
   288  0298                     	;# 
   289  0298                     	;# 
   290  0299                     	;# 
   291  0299                     	;# 
   292  029A                     	;# 
   293  029B                     	;# 
   294  029C                     	;# 
   295  029D                     	;# 
   296  029F                     	;# 
   297  030C                     	;# 
   298  030C                     	;# 
   299  030D                     	;# 
   300  030E                     	;# 
   301  030F                     	;# 
   302  0310                     	;# 
   303  0310                     	;# 
   304  0311                     	;# 
   305  0312                     	;# 
   306  0313                     	;# 
   307  0314                     	;# 
   308  0314                     	;# 
   309  0315                     	;# 
   310  0316                     	;# 
   311  0317                     	;# 
   312  0318                     	;# 
   313  0318                     	;# 
   314  0319                     	;# 
   315  031A                     	;# 
   316  031B                     	;# 
   317  038C                     	;# 
   318  038C                     	;# 
   319  038D                     	;# 
   320  038E                     	;# 
   321  0390                     	;# 
   322  0390                     	;# 
   323  0391                     	;# 
   324  0392                     	;# 
   325  048C                     	;# 
   326  048C                     	;# 
   327  048D                     	;# 
   328  048E                     	;# 
   329  048F                     	;# 
   330  048F                     	;# 
   331  0490                     	;# 
   332  0491                     	;# 
   333  0492                     	;# 
   334  0492                     	;# 
   335  0493                     	;# 
   336  0494                     	;# 
   337  0495                     	;# 
   338  0495                     	;# 
   339  0496                     	;# 
   340  0497                     	;# 
   341  0498                     	;# 
   342  0499                     	;# 
   343  049A                     	;# 
   344  049B                     	;# 
   345  049C                     	;# 
   346  049D                     	;# 
   347  058C                     	;# 
   348  058C                     	;# 
   349  058D                     	;# 
   350  058E                     	;# 
   351  058F                     	;# 
   352  058F                     	;# 
   353  0590                     	;# 
   354  0591                     	;# 
   355  0592                     	;# 
   356  0593                     	;# 
   357  059C                     	;# 
   358  059C                     	;# 
   359  059D                     	;# 
   360  059D                     	;# 
   361  059E                     	;# 
   362  059F                     	;# 
   363  060C                     	;# 
   364  060C                     	;# 
   365  060D                     	;# 
   366  060D                     	;# 
   367  060E                     	;# 
   368  060F                     	;# 
   369  0610                     	;# 
   370  0611                     	;# 
   371  0612                     	;# 
   372  0613                     	;# 
   373  0614                     	;# 
   374  0616                     	;# 
   375  0616                     	;# 
   376  0617                     	;# 
   377  0617                     	;# 
   378  0618                     	;# 
   379  0619                     	;# 
   380  061A                     	;# 
   381  061B                     	;# 
   382  061C                     	;# 
   383  061D                     	;# 
   384  061E                     	;# 
   385  070C                     	;# 
   386  070D                     	;# 
   387  070E                     	;# 
   388  070F                     	;# 
   389  0710                     	;# 
   390  0711                     	;# 
   391  0712                     	;# 
   392  0713                     	;# 
   393  0714                     	;# 
   394  0716                     	;# 
   395  0717                     	;# 
   396  0718                     	;# 
   397  0719                     	;# 
   398  071A                     	;# 
   399  071B                     	;# 
   400  071C                     	;# 
   401  071D                     	;# 
   402  071E                     	;# 
   403  0796                     	;# 
   404  0797                     	;# 
   405  0798                     	;# 
   406  0799                     	;# 
   407  079A                     	;# 
   408  079B                     	;# 
   409  079C                     	;# 
   410  079D                     	;# 
   411  080C                     	;# 
   412  080D                     	;# 
   413  080E                     	;# 
   414  080F                     	;# 
   415  0810                     	;# 
   416  0811                     	;# 
   417  0812                     	;# 
   418  0813                     	;# 
   419  0814                     	;# 
   420  081A                     	;# 
   421  081A                     	;# 
   422  081B                     	;# 
   423  081C                     	;# 
   424  081C                     	;# 
   425  081D                     	;# 
   426  081E                     	;# 
   427  081F                     	;# 
   428  088C                     	;# 
   429  088D                     	;# 
   430  088E                     	;# 
   431  088F                     	;# 
   432  0890                     	;# 
   433  0891                     	;# 
   434  0892                     	;# 
   435  0893                     	;# 
   436  0895                     	;# 
   437  0896                     	;# 
   438  0897                     	;# 
   439  0898                     	;# 
   440  0899                     	;# 
   441  089A                     	;# 
   442  089B                     	;# 
   443  090C                     	;# 
   444  090E                     	;# 
   445  090F                     	;# 
   446  091F                     	;# 
   447  098F                     	;# 
   448  098F                     	;# 
   449  0990                     	;# 
   450  0991                     	;# 
   451  0992                     	;# 
   452  0993                     	;# 
   453  0994                     	;# 
   454  0995                     	;# 
   455  0996                     	;# 
   456  0997                     	;# 
   457  1E0F                     	;# 
   458  1E10                     	;# 
   459  1E11                     	;# 
   460  1E12                     	;# 
   461  1E13                     	;# 
   462  1E14                     	;# 
   463  1E15                     	;# 
   464  1E16                     	;# 
   465  1E17                     	;# 
   466  1E18                     	;# 
   467  1E19                     	;# 
   468  1E1A                     	;# 
   469  1E1B                     	;# 
   470  1E1C                     	;# 
   471  1E1D                     	;# 
   472  1E1E                     	;# 
   473  1E1F                     	;# 
   474  1E20                     	;# 
   475  1E21                     	;# 
   476  1E22                     	;# 
   477  1E23                     	;# 
   478  1E24                     	;# 
   479  1E25                     	;# 
   480  1E26                     	;# 
   481  1E27                     	;# 
   482  1E28                     	;# 
   483  1E29                     	;# 
   484  1E2A                     	;# 
   485  1E2B                     	;# 
   486  1E2C                     	;# 
   487  1E2D                     	;# 
   488  1E2E                     	;# 
   489  1E2F                     	;# 
   490  1E30                     	;# 
   491  1E31                     	;# 
   492  1E32                     	;# 
   493  1E33                     	;# 
   494  1E34                     	;# 
   495  1E35                     	;# 
   496  1E36                     	;# 
   497  1E37                     	;# 
   498  1E8F                     	;# 
   499  1E90                     	;# 
   500  1E91                     	;# 
   501  1E92                     	;# 
   502  1E93                     	;# 
   503  1E94                     	;# 
   504  1E95                     	;# 
   505  1E96                     	;# 
   506  1E97                     	;# 
   507  1E9C                     	;# 
   508  1E9D                     	;# 
   509  1E9E                     	;# 
   510  1EA1                     	;# 
   511  1EA2                     	;# 
   512  1EA3                     	;# 
   513  1EA4                     	;# 
   514  1EA9                     	;# 
   515  1EAA                     	;# 
   516  1EB1                     	;# 
   517  1EB2                     	;# 
   518  1EB8                     	;# 
   519  1EB9                     	;# 
   520  1EBA                     	;# 
   521  1EBB                     	;# 
   522  1EBC                     	;# 
   523  1EBD                     	;# 
   524  1EBE                     	;# 
   525  1EC3                     	;# 
   526  1EC5                     	;# 
   527  1EC6                     	;# 
   528  1EC7                     	;# 
   529  1EC8                     	;# 
   530  1EC9                     	;# 
   531  1ECA                     	;# 
   532  1ECB                     	;# 
   533  1ECB                     	;# 
   534  1ECB                     	;# 
   535  1ECC                     	;# 
   536  1ECC                     	;# 
   537  1ECC                     	;# 
   538  1F10                     	;# 
   539  1F11                     	;# 
   540  1F12                     	;# 
   541  1F14                     	;# 
   542  1F15                     	;# 
   543  1F1C                     	;# 
   544  1F1D                     	;# 
   545  1F1E                     	;# 
   546  1F1F                     	;# 
   547  1F20                     	;# 
   548  1F21                     	;# 
   549  1F22                     	;# 
   550  1F23                     	;# 
   551  1F24                     	;# 
   552  1F25                     	;# 
   553  1F26                     	;# 
   554  1F27                     	;# 
   555  1F38                     	;# 
   556  1F39                     	;# 
   557  1F3A                     	;# 
   558  1F3B                     	;# 
   559  1F3C                     	;# 
   560  1F3D                     	;# 
   561  1F3E                     	;# 
   562  1F3F                     	;# 
   563  1F43                     	;# 
   564  1F44                     	;# 
   565  1F45                     	;# 
   566  1F46                     	;# 
   567  1F47                     	;# 
   568  1F48                     	;# 
   569  1F49                     	;# 
   570  1F4A                     	;# 
   571  1F4E                     	;# 
   572  1F4F                     	;# 
   573  1F50                     	;# 
   574  1F51                     	;# 
   575  1F52                     	;# 
   576  1F53                     	;# 
   577  1F54                     	;# 
   578  1F55                     	;# 
   579  1FE4                     	;# 
   580  1FE5                     	;# 
   581  1FE6                     	;# 
   582  1FE7                     	;# 
   583  1FE8                     	;# 
   584  1FE8                     	;# 
   585  1FE9                     	;# 
   586  1FEA                     	;# 
   587  1FEB                     	;# 
   588  1FED                     	;# 
   589  1FEE                     	;# 
   590  1FEF                     	;# 
   591  0000                     	;# 
   592  0001                     	;# 
   593  0002                     	;# 
   594  0003                     	;# 
   595  0004                     	;# 
   596  0005                     	;# 
   597  0006                     	;# 
   598  0007                     	;# 
   599  0008                     	;# 
   600  0009                     	;# 
   601  000A                     	;# 
   602  000B                     	;# 
   603  000C                     	;# 
   604  000D                     	;# 
   605  000E                     	;# 
   606  0012                     	;# 
   607  0013                     	;# 
   608  0014                     	;# 
   609  0018                     	;# 
   610  0019                     	;# 
   611  001A                     	;# 
   612  008C                     	;# 
   613  008C                     	;# 
   614  008D                     	;# 
   615  008E                     	;# 
   616  008E                     	;# 
   617  008F                     	;# 
   618  0090                     	;# 
   619  0090                     	;# 
   620  0091                     	;# 
   621  0092                     	;# 
   622  0092                     	;# 
   623  0093                     	;# 
   624  0094                     	;# 
   625  0094                     	;# 
   626  0095                     	;# 
   627  0096                     	;# 
   628  0096                     	;# 
   629  0097                     	;# 
   630  0098                     	;# 
   631  0099                     	;# 
   632  009A                     	;# 
   633  009B                     	;# 
   634  009B                     	;# 
   635  009C                     	;# 
   636  009D                     	;# 
   637  009D                     	;# 
   638  009E                     	;# 
   639  009F                     	;# 
   640  010C                     	;# 
   641  010C                     	;# 
   642  010D                     	;# 
   643  010E                     	;# 
   644  010F                     	;# 
   645  010F                     	;# 
   646  0110                     	;# 
   647  0111                     	;# 
   648  0112                     	;# 
   649  0113                     	;# 
   650  0114                     	;# 
   651  0115                     	;# 
   652  0116                     	;# 
   653  0117                     	;# 
   654  0118                     	;# 
   655  0119                     	;# 
   656  0119                     	;# 
   657  0119                     	;# 
   658  011A                     	;# 
   659  011A                     	;# 
   660  011A                     	;# 
   661  011B                     	;# 
   662  011B                     	;# 
   663  011B                     	;# 
   664  011B                     	;# 
   665  011B                     	;# 
   666  011C                     	;# 
   667  011C                     	;# 
   668  011C                     	;# 
   669  011D                     	;# 
   670  011D                     	;# 
   671  011D                     	;# 
   672  011E                     	;# 
   673  011E                     	;# 
   674  011E                     	;# 
   675  011F                     	;# 
   676  011F                     	;# 
   677  011F                     	;# 
   678  011F                     	;# 
   679  011F                     	;# 
   680  018C                     	;# 
   681  018D                     	;# 
   682  018E                     	;# 
   683  018F                     	;# 
   684  0190                     	;# 
   685  0191                     	;# 
   686  0192                     	;# 
   687  0196                     	;# 
   688  0197                     	;# 
   689  0198                     	;# 
   690  0199                     	;# 
   691  019A                     	;# 
   692  019B                     	;# 
   693  019C                     	;# 
   694  020C                     	;# 
   695  020D                     	;# 
   696  020E                     	;# 
   697  020E                     	;# 
   698  020F                     	;# 
   699  020F                     	;# 
   700  0210                     	;# 
   701  0210                     	;# 
   702  0211                     	;# 
   703  0211                     	;# 
   704  0212                     	;# 
   705  0213                     	;# 
   706  0214                     	;# 
   707  0214                     	;# 
   708  0215                     	;# 
   709  0215                     	;# 
   710  0216                     	;# 
   711  0216                     	;# 
   712  0217                     	;# 
   713  0217                     	;# 
   714  0218                     	;# 
   715  0219                     	;# 
   716  021A                     	;# 
   717  021A                     	;# 
   718  021B                     	;# 
   719  021B                     	;# 
   720  021C                     	;# 
   721  021C                     	;# 
   722  021D                     	;# 
   723  021D                     	;# 
   724  021E                     	;# 
   725  021F                     	;# 
   726  028C                     	;# 
   727  028C                     	;# 
   728  028D                     	;# 
   729  028D                     	;# 
   730  028E                     	;# 
   731  028F                     	;# 
   732  0290                     	;# 
   733  0291                     	;# 
   734  0292                     	;# 
   735  0292                     	;# 
   736  0293                     	;# 
   737  0293                     	;# 
   738  0294                     	;# 
   739  0295                     	;# 
   740  0296                     	;# 
   741  0297                     	;# 
   742  0298                     	;# 
   743  0298                     	;# 
   744  0299                     	;# 
   745  0299                     	;# 
   746  029A                     	;# 
   747  029B                     	;# 
   748  029C                     	;# 
   749  029D                     	;# 
   750  029F                     	;# 
   751  030C                     	;# 
   752  030C                     	;# 
   753  030D                     	;# 
   754  030E                     	;# 
   755  030F                     	;# 
   756  0310                     	;# 
   757  0310                     	;# 
   758  0311                     	;# 
   759  0312                     	;# 
   760  0313                     	;# 
   761  0314                     	;# 
   762  0314                     	;# 
   763  0315                     	;# 
   764  0316                     	;# 
   765  0317                     	;# 
   766  0318                     	;# 
   767  0318                     	;# 
   768  0319                     	;# 
   769  031A                     	;# 
   770  031B                     	;# 
   771  038C                     	;# 
   772  038C                     	;# 
   773  038D                     	;# 
   774  038E                     	;# 
   775  0390                     	;# 
   776  0390                     	;# 
   777  0391                     	;# 
   778  0392                     	;# 
   779  048C                     	;# 
   780  048C                     	;# 
   781  048D                     	;# 
   782  048E                     	;# 
   783  048F                     	;# 
   784  048F                     	;# 
   785  0490                     	;# 
   786  0491                     	;# 
   787  0492                     	;# 
   788  0492                     	;# 
   789  0493                     	;# 
   790  0494                     	;# 
   791  0495                     	;# 
   792  0495                     	;# 
   793  0496                     	;# 
   794  0497                     	;# 
   795  0498                     	;# 
   796  0499                     	;# 
   797  049A                     	;# 
   798  049B                     	;# 
   799  049C                     	;# 
   800  049D                     	;# 
   801  058C                     	;# 
   802  058C                     	;# 
   803  058D                     	;# 
   804  058E                     	;# 
   805  058F                     	;# 
   806  058F                     	;# 
   807  0590                     	;# 
   808  0591                     	;# 
   809  0592                     	;# 
   810  0593                     	;# 
   811  059C                     	;# 
   812  059C                     	;# 
   813  059D                     	;# 
   814  059D                     	;# 
   815  059E                     	;# 
   816  059F                     	;# 
   817  060C                     	;# 
   818  060C                     	;# 
   819  060D                     	;# 
   820  060D                     	;# 
   821  060E                     	;# 
   822  060F                     	;# 
   823  0610                     	;# 
   824  0611                     	;# 
   825  0612                     	;# 
   826  0613                     	;# 
   827  0614                     	;# 
   828  0616                     	;# 
   829  0616                     	;# 
   830  0617                     	;# 
   831  0617                     	;# 
   832  0618                     	;# 
   833  0619                     	;# 
   834  061A                     	;# 
   835  061B                     	;# 
   836  061C                     	;# 
   837  061D                     	;# 
   838  061E                     	;# 
   839  070C                     	;# 
   840  070D                     	;# 
   841  070E                     	;# 
   842  070F                     	;# 
   843  0710                     	;# 
   844  0711                     	;# 
   845  0712                     	;# 
   846  0713                     	;# 
   847  0714                     	;# 
   848  0716                     	;# 
   849  0717                     	;# 
   850  0718                     	;# 
   851  0719                     	;# 
   852  071A                     	;# 
   853  071B                     	;# 
   854  071C                     	;# 
   855  071D                     	;# 
   856  071E                     	;# 
   857  0796                     	;# 
   858  0797                     	;# 
   859  0798                     	;# 
   860  0799                     	;# 
   861  079A                     	;# 
   862  079B                     	;# 
   863  079C                     	;# 
   864  079D                     	;# 
   865  080C                     	;# 
   866  080D                     	;# 
   867  080E                     	;# 
   868  080F                     	;# 
   869  0810                     	;# 
   870  0811                     	;# 
   871  0812                     	;# 
   872  0813                     	;# 
   873  0814                     	;# 
   874  081A                     	;# 
   875  081A                     	;# 
   876  081B                     	;# 
   877  081C                     	;# 
   878  081C                     	;# 
   879  081D                     	;# 
   880  081E                     	;# 
   881  081F                     	;# 
   882  088C                     	;# 
   883  088D                     	;# 
   884  088E                     	;# 
   885  088F                     	;# 
   886  0890                     	;# 
   887  0891                     	;# 
   888  0892                     	;# 
   889  0893                     	;# 
   890  0895                     	;# 
   891  0896                     	;# 
   892  0897                     	;# 
   893  0898                     	;# 
   894  0899                     	;# 
   895  089A                     	;# 
   896  089B                     	;# 
   897  090C                     	;# 
   898  090E                     	;# 
   899  090F                     	;# 
   900  091F                     	;# 
   901  098F                     	;# 
   902  098F                     	;# 
   903  0990                     	;# 
   904  0991                     	;# 
   905  0992                     	;# 
   906  0993                     	;# 
   907  0994                     	;# 
   908  0995                     	;# 
   909  0996                     	;# 
   910  0997                     	;# 
   911  1E0F                     	;# 
   912  1E10                     	;# 
   913  1E11                     	;# 
   914  1E12                     	;# 
   915  1E13                     	;# 
   916  1E14                     	;# 
   917  1E15                     	;# 
   918  1E16                     	;# 
   919  1E17                     	;# 
   920  1E18                     	;# 
   921  1E19                     	;# 
   922  1E1A                     	;# 
   923  1E1B                     	;# 
   924  1E1C                     	;# 
   925  1E1D                     	;# 
   926  1E1E                     	;# 
   927  1E1F                     	;# 
   928  1E20                     	;# 
   929  1E21                     	;# 
   930  1E22                     	;# 
   931  1E23                     	;# 
   932  1E24                     	;# 
   933  1E25                     	;# 
   934  1E26                     	;# 
   935  1E27                     	;# 
   936  1E28                     	;# 
   937  1E29                     	;# 
   938  1E2A                     	;# 
   939  1E2B                     	;# 
   940  1E2C                     	;# 
   941  1E2D                     	;# 
   942  1E2E                     	;# 
   943  1E2F                     	;# 
   944  1E30                     	;# 
   945  1E31                     	;# 
   946  1E32                     	;# 
   947  1E33                     	;# 
   948  1E34                     	;# 
   949  1E35                     	;# 
   950  1E36                     	;# 
   951  1E37                     	;# 
   952  1E8F                     	;# 
   953  1E90                     	;# 
   954  1E91                     	;# 
   955  1E92                     	;# 
   956  1E93                     	;# 
   957  1E94                     	;# 
   958  1E95                     	;# 
   959  1E96                     	;# 
   960  1E97                     	;# 
   961  1E9C                     	;# 
   962  1E9D                     	;# 
   963  1E9E                     	;# 
   964  1EA1                     	;# 
   965  1EA2                     	;# 
   966  1EA3                     	;# 
   967  1EA4                     	;# 
   968  1EA9                     	;# 
   969  1EAA                     	;# 
   970  1EB1                     	;# 
   971  1EB2                     	;# 
   972  1EB8                     	;# 
   973  1EB9                     	;# 
   974  1EBA                     	;# 
   975  1EBB                     	;# 
   976  1EBC                     	;# 
   977  1EBD                     	;# 
   978  1EBE                     	;# 
   979  1EC3                     	;# 
   980  1EC5                     	;# 
   981  1EC6                     	;# 
   982  1EC7                     	;# 
   983  1EC8                     	;# 
   984  1EC9                     	;# 
   985  1ECA                     	;# 
   986  1ECB                     	;# 
   987  1ECB                     	;# 
   988  1ECB                     	;# 
   989  1ECC                     	;# 
   990  1ECC                     	;# 
   991  1ECC                     	;# 
   992  1F10                     	;# 
   993  1F11                     	;# 
   994  1F12                     	;# 
   995  1F14                     	;# 
   996  1F15                     	;# 
   997  1F1C                     	;# 
   998  1F1D                     	;# 
   999  1F1E                     	;# 
  1000  1F1F                     	;# 
  1001  1F20                     	;# 
  1002  1F21                     	;# 
  1003  1F22                     	;# 
  1004  1F23                     	;# 
  1005  1F24                     	;# 
  1006  1F25                     	;# 
  1007  1F26                     	;# 
  1008  1F27                     	;# 
  1009  1F38                     	;# 
  1010  1F39                     	;# 
  1011  1F3A                     	;# 
  1012  1F3B                     	;# 
  1013  1F3C                     	;# 
  1014  1F3D                     	;# 
  1015  1F3E                     	;# 
  1016  1F3F                     	;# 
  1017  1F43                     	;# 
  1018  1F44                     	;# 
  1019  1F45                     	;# 
  1020  1F46                     	;# 
  1021  1F47                     	;# 
  1022  1F48                     	;# 
  1023  1F49                     	;# 
  1024  1F4A                     	;# 
  1025  1F4E                     	;# 
  1026  1F4F                     	;# 
  1027  1F50                     	;# 
  1028  1F51                     	;# 
  1029  1F52                     	;# 
  1030  1F53                     	;# 
  1031  1F54                     	;# 
  1032  1F55                     	;# 
  1033  1FE4                     	;# 
  1034  1FE5                     	;# 
  1035  1FE6                     	;# 
  1036  1FE7                     	;# 
  1037  1FE8                     	;# 
  1038  1FE8                     	;# 
  1039  1FE9                     	;# 
  1040  1FEA                     	;# 
  1041  1FEB                     	;# 
  1042  1FED                     	;# 
  1043  1FEE                     	;# 
  1044  1FEF                     	;# 
  1045  0000                     	;# 
  1046  0001                     	;# 
  1047  0002                     	;# 
  1048  0003                     	;# 
  1049  0004                     	;# 
  1050  0005                     	;# 
  1051  0006                     	;# 
  1052  0007                     	;# 
  1053  0008                     	;# 
  1054  0009                     	;# 
  1055  000A                     	;# 
  1056  000B                     	;# 
  1057  000C                     	;# 
  1058  000D                     	;# 
  1059  000E                     	;# 
  1060  0012                     	;# 
  1061  0013                     	;# 
  1062  0014                     	;# 
  1063  0018                     	;# 
  1064  0019                     	;# 
  1065  001A                     	;# 
  1066  008C                     	;# 
  1067  008C                     	;# 
  1068  008D                     	;# 
  1069  008E                     	;# 
  1070  008E                     	;# 
  1071  008F                     	;# 
  1072  0090                     	;# 
  1073  0090                     	;# 
  1074  0091                     	;# 
  1075  0092                     	;# 
  1076  0092                     	;# 
  1077  0093                     	;# 
  1078  0094                     	;# 
  1079  0094                     	;# 
  1080  0095                     	;# 
  1081  0096                     	;# 
  1082  0096                     	;# 
  1083  0097                     	;# 
  1084  0098                     	;# 
  1085  0099                     	;# 
  1086  009A                     	;# 
  1087  009B                     	;# 
  1088  009B                     	;# 
  1089  009C                     	;# 
  1090  009D                     	;# 
  1091  009D                     	;# 
  1092  009E                     	;# 
  1093  009F                     	;# 
  1094  010C                     	;# 
  1095  010C                     	;# 
  1096  010D                     	;# 
  1097  010E                     	;# 
  1098  010F                     	;# 
  1099  010F                     	;# 
  1100  0110                     	;# 
  1101  0111                     	;# 
  1102  0112                     	;# 
  1103  0113                     	;# 
  1104  0114                     	;# 
  1105  0115                     	;# 
  1106  0116                     	;# 
  1107  0117                     	;# 
  1108  0118                     	;# 
  1109  0119                     	;# 
  1110  0119                     	;# 
  1111  0119                     	;# 
  1112  011A                     	;# 
  1113  011A                     	;# 
  1114  011A                     	;# 
  1115  011B                     	;# 
  1116  011B                     	;# 
  1117  011B                     	;# 
  1118  011B                     	;# 
  1119  011B                     	;# 
  1120  011C                     	;# 
  1121  011C                     	;# 
  1122  011C                     	;# 
  1123  011D                     	;# 
  1124  011D                     	;# 
  1125  011D                     	;# 
  1126  011E                     	;# 
  1127  011E                     	;# 
  1128  011E                     	;# 
  1129  011F                     	;# 
  1130  011F                     	;# 
  1131  011F                     	;# 
  1132  011F                     	;# 
  1133  011F                     	;# 
  1134  018C                     	;# 
  1135  018D                     	;# 
  1136  018E                     	;# 
  1137  018F                     	;# 
  1138  0190                     	;# 
  1139  0191                     	;# 
  1140  0192                     	;# 
  1141  0196                     	;# 
  1142  0197                     	;# 
  1143  0198                     	;# 
  1144  0199                     	;# 
  1145  019A                     	;# 
  1146  019B                     	;# 
  1147  019C                     	;# 
  1148  020C                     	;# 
  1149  020D                     	;# 
  1150  020E                     	;# 
  1151  020E                     	;# 
  1152  020F                     	;# 
  1153  020F                     	;# 
  1154  0210                     	;# 
  1155  0210                     	;# 
  1156  0211                     	;# 
  1157  0211                     	;# 
  1158  0212                     	;# 
  1159  0213                     	;# 
  1160  0214                     	;# 
  1161  0214                     	;# 
  1162  0215                     	;# 
  1163  0215                     	;# 
  1164  0216                     	;# 
  1165  0216                     	;# 
  1166  0217                     	;# 
  1167  0217                     	;# 
  1168  0218                     	;# 
  1169  0219                     	;# 
  1170  021A                     	;# 
  1171  021A                     	;# 
  1172  021B                     	;# 
  1173  021B                     	;# 
  1174  021C                     	;# 
  1175  021C                     	;# 
  1176  021D                     	;# 
  1177  021D                     	;# 
  1178  021E                     	;# 
  1179  021F                     	;# 
  1180  028C                     	;# 
  1181  028C                     	;# 
  1182  028D                     	;# 
  1183  028D                     	;# 
  1184  028E                     	;# 
  1185  028F                     	;# 
  1186  0290                     	;# 
  1187  0291                     	;# 
  1188  0292                     	;# 
  1189  0292                     	;# 
  1190  0293                     	;# 
  1191  0293                     	;# 
  1192  0294                     	;# 
  1193  0295                     	;# 
  1194  0296                     	;# 
  1195  0297                     	;# 
  1196  0298                     	;# 
  1197  0298                     	;# 
  1198  0299                     	;# 
  1199  0299                     	;# 
  1200  029A                     	;# 
  1201  029B                     	;# 
  1202  029C                     	;# 
  1203  029D                     	;# 
  1204  029F                     	;# 
  1205  030C                     	;# 
  1206  030C                     	;# 
  1207  030D                     	;# 
  1208  030E                     	;# 
  1209  030F                     	;# 
  1210  0310                     	;# 
  1211  0310                     	;# 
  1212  0311                     	;# 
  1213  0312                     	;# 
  1214  0313                     	;# 
  1215  0314                     	;# 
  1216  0314                     	;# 
  1217  0315                     	;# 
  1218  0316                     	;# 
  1219  0317                     	;# 
  1220  0318                     	;# 
  1221  0318                     	;# 
  1222  0319                     	;# 
  1223  031A                     	;# 
  1224  031B                     	;# 
  1225  038C                     	;# 
  1226  038C                     	;# 
  1227  038D                     	;# 
  1228  038E                     	;# 
  1229  0390                     	;# 
  1230  0390                     	;# 
  1231  0391                     	;# 
  1232  0392                     	;# 
  1233  048C                     	;# 
  1234  048C                     	;# 
  1235  048D                     	;# 
  1236  048E                     	;# 
  1237  048F                     	;# 
  1238  048F                     	;# 
  1239  0490                     	;# 
  1240  0491                     	;# 
  1241  0492                     	;# 
  1242  0492                     	;# 
  1243  0493                     	;# 
  1244  0494                     	;# 
  1245  0495                     	;# 
  1246  0495                     	;# 
  1247  0496                     	;# 
  1248  0497                     	;# 
  1249  0498                     	;# 
  1250  0499                     	;# 
  1251  049A                     	;# 
  1252  049B                     	;# 
  1253  049C                     	;# 
  1254  049D                     	;# 
  1255  058C                     	;# 
  1256  058C                     	;# 
  1257  058D                     	;# 
  1258  058E                     	;# 
  1259  058F                     	;# 
  1260  058F                     	;# 
  1261  0590                     	;# 
  1262  0591                     	;# 
  1263  0592                     	;# 
  1264  0593                     	;# 
  1265  059C                     	;# 
  1266  059C                     	;# 
  1267  059D                     	;# 
  1268  059D                     	;# 
  1269  059E                     	;# 
  1270  059F                     	;# 
  1271  060C                     	;# 
  1272  060C                     	;# 
  1273  060D                     	;# 
  1274  060D                     	;# 
  1275  060E                     	;# 
  1276  060F                     	;# 
  1277  0610                     	;# 
  1278  0611                     	;# 
  1279  0612                     	;# 
  1280  0613                     	;# 
  1281  0614                     	;# 
  1282  0616                     	;# 
  1283  0616                     	;# 
  1284  0617                     	;# 
  1285  0617                     	;# 
  1286  0618                     	;# 
  1287  0619                     	;# 
  1288  061A                     	;# 
  1289  061B                     	;# 
  1290  061C                     	;# 
  1291  061D                     	;# 
  1292  061E                     	;# 
  1293  070C                     	;# 
  1294  070D                     	;# 
  1295  070E                     	;# 
  1296  070F                     	;# 
  1297  0710                     	;# 
  1298  0711                     	;# 
  1299  0712                     	;# 
  1300  0713                     	;# 
  1301  0714                     	;# 
  1302  0716                     	;# 
  1303  0717                     	;# 
  1304  0718                     	;# 
  1305  0719                     	;# 
  1306  071A                     	;# 
  1307  071B                     	;# 
  1308  071C                     	;# 
  1309  071D                     	;# 
  1310  071E                     	;# 
  1311  0796                     	;# 
  1312  0797                     	;# 
  1313  0798                     	;# 
  1314  0799                     	;# 
  1315  079A                     	;# 
  1316  079B                     	;# 
  1317  079C                     	;# 
  1318  079D                     	;# 
  1319  080C                     	;# 
  1320  080D                     	;# 
  1321  080E                     	;# 
  1322  080F                     	;# 
  1323  0810                     	;# 
  1324  0811                     	;# 
  1325  0812                     	;# 
  1326  0813                     	;# 
  1327  0814                     	;# 
  1328  081A                     	;# 
  1329  081A                     	;# 
  1330  081B                     	;# 
  1331  081C                     	;# 
  1332  081C                     	;# 
  1333  081D                     	;# 
  1334  081E                     	;# 
  1335  081F                     	;# 
  1336  088C                     	;# 
  1337  088D                     	;# 
  1338  088E                     	;# 
  1339  088F                     	;# 
  1340  0890                     	;# 
  1341  0891                     	;# 
  1342  0892                     	;# 
  1343  0893                     	;# 
  1344  0895                     	;# 
  1345  0896                     	;# 
  1346  0897                     	;# 
  1347  0898                     	;# 
  1348  0899                     	;# 
  1349  089A                     	;# 
  1350  089B                     	;# 
  1351  090C                     	;# 
  1352  090E                     	;# 
  1353  090F                     	;# 
  1354  091F                     	;# 
  1355  098F                     	;# 
  1356  098F                     	;# 
  1357  0990                     	;# 
  1358  0991                     	;# 
  1359  0992                     	;# 
  1360  0993                     	;# 
  1361  0994                     	;# 
  1362  0995                     	;# 
  1363  0996                     	;# 
  1364  0997                     	;# 
  1365  1E0F                     	;# 
  1366  1E10                     	;# 
  1367  1E11                     	;# 
  1368  1E12                     	;# 
  1369  1E13                     	;# 
  1370  1E14                     	;# 
  1371  1E15                     	;# 
  1372  1E16                     	;# 
  1373  1E17                     	;# 
  1374  1E18                     	;# 
  1375  1E19                     	;# 
  1376  1E1A                     	;# 
  1377  1E1B                     	;# 
  1378  1E1C                     	;# 
  1379  1E1D                     	;# 
  1380  1E1E                     	;# 
  1381  1E1F                     	;# 
  1382  1E20                     	;# 
  1383  1E21                     	;# 
  1384  1E22                     	;# 
  1385  1E23                     	;# 
  1386  1E24                     	;# 
  1387  1E25                     	;# 
  1388  1E26                     	;# 
  1389  1E27                     	;# 
  1390  1E28                     	;# 
  1391  1E29                     	;# 
  1392  1E2A                     	;# 
  1393  1E2B                     	;# 
  1394  1E2C                     	;# 
  1395  1E2D                     	;# 
  1396  1E2E                     	;# 
  1397  1E2F                     	;# 
  1398  1E30                     	;# 
  1399  1E31                     	;# 
  1400  1E32                     	;# 
  1401  1E33                     	;# 
  1402  1E34                     	;# 
  1403  1E35                     	;# 
  1404  1E36                     	;# 
  1405  1E37                     	;# 
  1406  1E8F                     	;# 
  1407  1E90                     	;# 
  1408  1E91                     	;# 
  1409  1E92                     	;# 
  1410  1E93                     	;# 
  1411  1E94                     	;# 
  1412  1E95                     	;# 
  1413  1E96                     	;# 
  1414  1E97                     	;# 
  1415  1E9C                     	;# 
  1416  1E9D                     	;# 
  1417  1E9E                     	;# 
  1418  1EA1                     	;# 
  1419  1EA2                     	;# 
  1420  1EA3                     	;# 
  1421  1EA4                     	;# 
  1422  1EA9                     	;# 
  1423  1EAA                     	;# 
  1424  1EB1                     	;# 
  1425  1EB2                     	;# 
  1426  1EB8                     	;# 
  1427  1EB9                     	;# 
  1428  1EBA                     	;# 
  1429  1EBB                     	;# 
  1430  1EBC                     	;# 
  1431  1EBD                     	;# 
  1432  1EBE                     	;# 
  1433  1EC3                     	;# 
  1434  1EC5                     	;# 
  1435  1EC6                     	;# 
  1436  1EC7                     	;# 
  1437  1EC8                     	;# 
  1438  1EC9                     	;# 
  1439  1ECA                     	;# 
  1440  1ECB                     	;# 
  1441  1ECB                     	;# 
  1442  1ECB                     	;# 
  1443  1ECC                     	;# 
  1444  1ECC                     	;# 
  1445  1ECC                     	;# 
  1446  1F10                     	;# 
  1447  1F11                     	;# 
  1448  1F12                     	;# 
  1449  1F14                     	;# 
  1450  1F15                     	;# 
  1451  1F1C                     	;# 
  1452  1F1D                     	;# 
  1453  1F1E                     	;# 
  1454  1F1F                     	;# 
  1455  1F20                     	;# 
  1456  1F21                     	;# 
  1457  1F22                     	;# 
  1458  1F23                     	;# 
  1459  1F24                     	;# 
  1460  1F25                     	;# 
  1461  1F26                     	;# 
  1462  1F27                     	;# 
  1463  1F38                     	;# 
  1464  1F39                     	;# 
  1465  1F3A                     	;# 
  1466  1F3B                     	;# 
  1467  1F3C                     	;# 
  1468  1F3D                     	;# 
  1469  1F3E                     	;# 
  1470  1F3F                     	;# 
  1471  1F43                     	;# 
  1472  1F44                     	;# 
  1473  1F45                     	;# 
  1474  1F46                     	;# 
  1475  1F47                     	;# 
  1476  1F48                     	;# 
  1477  1F49                     	;# 
  1478  1F4A                     	;# 
  1479  1F4E                     	;# 
  1480  1F4F                     	;# 
  1481  1F50                     	;# 
  1482  1F51                     	;# 
  1483  1F52                     	;# 
  1484  1F53                     	;# 
  1485  1F54                     	;# 
  1486  1F55                     	;# 
  1487  1FE4                     	;# 
  1488  1FE5                     	;# 
  1489  1FE6                     	;# 
  1490  1FE7                     	;# 
  1491  1FE8                     	;# 
  1492  1FE8                     	;# 
  1493  1FE9                     	;# 
  1494  1FEA                     	;# 
  1495  1FEB                     	;# 
  1496  1FED                     	;# 
  1497  1FEE                     	;# 
  1498  1FEF                     	;# 
  1499  0000                     	;# 
  1500  0001                     	;# 
  1501  0002                     	;# 
  1502  0003                     	;# 
  1503  0004                     	;# 
  1504  0005                     	;# 
  1505  0006                     	;# 
  1506  0007                     	;# 
  1507  0008                     	;# 
  1508  0009                     	;# 
  1509  000A                     	;# 
  1510  000B                     	;# 
  1511  000C                     	;# 
  1512  000D                     	;# 
  1513  000E                     	;# 
  1514  0012                     	;# 
  1515  0013                     	;# 
  1516  0014                     	;# 
  1517  0018                     	;# 
  1518  0019                     	;# 
  1519  001A                     	;# 
  1520  008C                     	;# 
  1521  008C                     	;# 
  1522  008D                     	;# 
  1523  008E                     	;# 
  1524  008E                     	;# 
  1525  008F                     	;# 
  1526  0090                     	;# 
  1527  0090                     	;# 
  1528  0091                     	;# 
  1529  0092                     	;# 
  1530  0092                     	;# 
  1531  0093                     	;# 
  1532  0094                     	;# 
  1533  0094                     	;# 
  1534  0095                     	;# 
  1535  0096                     	;# 
  1536  0096                     	;# 
  1537  0097                     	;# 
  1538  0098                     	;# 
  1539  0099                     	;# 
  1540  009A                     	;# 
  1541  009B                     	;# 
  1542  009B                     	;# 
  1543  009C                     	;# 
  1544  009D                     	;# 
  1545  009D                     	;# 
  1546  009E                     	;# 
  1547  009F                     	;# 
  1548  010C                     	;# 
  1549  010C                     	;# 
  1550  010D                     	;# 
  1551  010E                     	;# 
  1552  010F                     	;# 
  1553  010F                     	;# 
  1554  0110                     	;# 
  1555  0111                     	;# 
  1556  0112                     	;# 
  1557  0113                     	;# 
  1558  0114                     	;# 
  1559  0115                     	;# 
  1560  0116                     	;# 
  1561  0117                     	;# 
  1562  0118                     	;# 
  1563  0119                     	;# 
  1564  0119                     	;# 
  1565  0119                     	;# 
  1566  011A                     	;# 
  1567  011A                     	;# 
  1568  011A                     	;# 
  1569  011B                     	;# 
  1570  011B                     	;# 
  1571  011B                     	;# 
  1572  011B                     	;# 
  1573  011B                     	;# 
  1574  011C                     	;# 
  1575  011C                     	;# 
  1576  011C                     	;# 
  1577  011D                     	;# 
  1578  011D                     	;# 
  1579  011D                     	;# 
  1580  011E                     	;# 
  1581  011E                     	;# 
  1582  011E                     	;# 
  1583  011F                     	;# 
  1584  011F                     	;# 
  1585  011F                     	;# 
  1586  011F                     	;# 
  1587  011F                     	;# 
  1588  018C                     	;# 
  1589  018D                     	;# 
  1590  018E                     	;# 
  1591  018F                     	;# 
  1592  0190                     	;# 
  1593  0191                     	;# 
  1594  0192                     	;# 
  1595  0196                     	;# 
  1596  0197                     	;# 
  1597  0198                     	;# 
  1598  0199                     	;# 
  1599  019A                     	;# 
  1600  019B                     	;# 
  1601  019C                     	;# 
  1602  020C                     	;# 
  1603  020D                     	;# 
  1604  020E                     	;# 
  1605  020E                     	;# 
  1606  020F                     	;# 
  1607  020F                     	;# 
  1608  0210                     	;# 
  1609  0210                     	;# 
  1610  0211                     	;# 
  1611  0211                     	;# 
  1612  0212                     	;# 
  1613  0213                     	;# 
  1614  0214                     	;# 
  1615  0214                     	;# 
  1616  0215                     	;# 
  1617  0215                     	;# 
  1618  0216                     	;# 
  1619  0216                     	;# 
  1620  0217                     	;# 
  1621  0217                     	;# 
  1622  0218                     	;# 
  1623  0219                     	;# 
  1624  021A                     	;# 
  1625  021A                     	;# 
  1626  021B                     	;# 
  1627  021B                     	;# 
  1628  021C                     	;# 
  1629  021C                     	;# 
  1630  021D                     	;# 
  1631  021D                     	;# 
  1632  021E                     	;# 
  1633  021F                     	;# 
  1634  028C                     	;# 
  1635  028C                     	;# 
  1636  028D                     	;# 
  1637  028D                     	;# 
  1638  028E                     	;# 
  1639  028F                     	;# 
  1640  0290                     	;# 
  1641  0291                     	;# 
  1642  0292                     	;# 
  1643  0292                     	;# 
  1644  0293                     	;# 
  1645  0293                     	;# 
  1646  0294                     	;# 
  1647  0295                     	;# 
  1648  0296                     	;# 
  1649  0297                     	;# 
  1650  0298                     	;# 
  1651  0298                     	;# 
  1652  0299                     	;# 
  1653  0299                     	;# 
  1654  029A                     	;# 
  1655  029B                     	;# 
  1656  029C                     	;# 
  1657  029D                     	;# 
  1658  029F                     	;# 
  1659  030C                     	;# 
  1660  030C                     	;# 
  1661  030D                     	;# 
  1662  030E                     	;# 
  1663  030F                     	;# 
  1664  0310                     	;# 
  1665  0310                     	;# 
  1666  0311                     	;# 
  1667  0312                     	;# 
  1668  0313                     	;# 
  1669  0314                     	;# 
  1670  0314                     	;# 
  1671  0315                     	;# 
  1672  0316                     	;# 
  1673  0317                     	;# 
  1674  0318                     	;# 
  1675  0318                     	;# 
  1676  0319                     	;# 
  1677  031A                     	;# 
  1678  031B                     	;# 
  1679  038C                     	;# 
  1680  038C                     	;# 
  1681  038D                     	;# 
  1682  038E                     	;# 
  1683  0390                     	;# 
  1684  0390                     	;# 
  1685  0391                     	;# 
  1686  0392                     	;# 
  1687  048C                     	;# 
  1688  048C                     	;# 
  1689  048D                     	;# 
  1690  048E                     	;# 
  1691  048F                     	;# 
  1692  048F                     	;# 
  1693  0490                     	;# 
  1694  0491                     	;# 
  1695  0492                     	;# 
  1696  0492                     	;# 
  1697  0493                     	;# 
  1698  0494                     	;# 
  1699  0495                     	;# 
  1700  0495                     	;# 
  1701  0496                     	;# 
  1702  0497                     	;# 
  1703  0498                     	;# 
  1704  0499                     	;# 
  1705  049A                     	;# 
  1706  049B                     	;# 
  1707  049C                     	;# 
  1708  049D                     	;# 
  1709  058C                     	;# 
  1710  058C                     	;# 
  1711  058D                     	;# 
  1712  058E                     	;# 
  1713  058F                     	;# 
  1714  058F                     	;# 
  1715  0590                     	;# 
  1716  0591                     	;# 
  1717  0592                     	;# 
  1718  0593                     	;# 
  1719  059C                     	;# 
  1720  059C                     	;# 
  1721  059D                     	;# 
  1722  059D                     	;# 
  1723  059E                     	;# 
  1724  059F                     	;# 
  1725  060C                     	;# 
  1726  060C                     	;# 
  1727  060D                     	;# 
  1728  060D                     	;# 
  1729  060E                     	;# 
  1730  060F                     	;# 
  1731  0610                     	;# 
  1732  0611                     	;# 
  1733  0612                     	;# 
  1734  0613                     	;# 
  1735  0614                     	;# 
  1736  0616                     	;# 
  1737  0616                     	;# 
  1738  0617                     	;# 
  1739  0617                     	;# 
  1740  0618                     	;# 
  1741  0619                     	;# 
  1742  061A                     	;# 
  1743  061B                     	;# 
  1744  061C                     	;# 
  1745  061D                     	;# 
  1746  061E                     	;# 
  1747  070C                     	;# 
  1748  070D                     	;# 
  1749  070E                     	;# 
  1750  070F                     	;# 
  1751  0710                     	;# 
  1752  0711                     	;# 
  1753  0712                     	;# 
  1754  0713                     	;# 
  1755  0714                     	;# 
  1756  0716                     	;# 
  1757  0717                     	;# 
  1758  0718                     	;# 
  1759  0719                     	;# 
  1760  071A                     	;# 
  1761  071B                     	;# 
  1762  071C                     	;# 
  1763  071D                     	;# 
  1764  071E                     	;# 
  1765  0796                     	;# 
  1766  0797                     	;# 
  1767  0798                     	;# 
  1768  0799                     	;# 
  1769  079A                     	;# 
  1770  079B                     	;# 
  1771  079C                     	;# 
  1772  079D                     	;# 
  1773  080C                     	;# 
  1774  080D                     	;# 
  1775  080E                     	;# 
  1776  080F                     	;# 
  1777  0810                     	;# 
  1778  0811                     	;# 
  1779  0812                     	;# 
  1780  0813                     	;# 
  1781  0814                     	;# 
  1782  081A                     	;# 
  1783  081A                     	;# 
  1784  081B                     	;# 
  1785  081C                     	;# 
  1786  081C                     	;# 
  1787  081D                     	;# 
  1788  081E                     	;# 
  1789  081F                     	;# 
  1790  088C                     	;# 
  1791  088D                     	;# 
  1792  088E                     	;# 
  1793  088F                     	;# 
  1794  0890                     	;# 
  1795  0891                     	;# 
  1796  0892                     	;# 
  1797  0893                     	;# 
  1798  0895                     	;# 
  1799  0896                     	;# 
  1800  0897                     	;# 
  1801  0898                     	;# 
  1802  0899                     	;# 
  1803  089A                     	;# 
  1804  089B                     	;# 
  1805  090C                     	;# 
  1806  090E                     	;# 
  1807  090F                     	;# 
  1808  091F                     	;# 
  1809  098F                     	;# 
  1810  098F                     	;# 
  1811  0990                     	;# 
  1812  0991                     	;# 
  1813  0992                     	;# 
  1814  0993                     	;# 
  1815  0994                     	;# 
  1816  0995                     	;# 
  1817  0996                     	;# 
  1818  0997                     	;# 
  1819  1E0F                     	;# 
  1820  1E10                     	;# 
  1821  1E11                     	;# 
  1822  1E12                     	;# 
  1823  1E13                     	;# 
  1824  1E14                     	;# 
  1825  1E15                     	;# 
  1826  1E16                     	;# 
  1827  1E17                     	;# 
  1828  1E18                     	;# 
  1829  1E19                     	;# 
  1830  1E1A                     	;# 
  1831  1E1B                     	;# 
  1832  1E1C                     	;# 
  1833  1E1D                     	;# 
  1834  1E1E                     	;# 
  1835  1E1F                     	;# 
  1836  1E20                     	;# 
  1837  1E21                     	;# 
  1838  1E22                     	;# 
  1839  1E23                     	;# 
  1840  1E24                     	;# 
  1841  1E25                     	;# 
  1842  1E26                     	;# 
  1843  1E27                     	;# 
  1844  1E28                     	;# 
  1845  1E29                     	;# 
  1846  1E2A                     	;# 
  1847  1E2B                     	;# 
  1848  1E2C                     	;# 
  1849  1E2D                     	;# 
  1850  1E2E                     	;# 
  1851  1E2F                     	;# 
  1852  1E30                     	;# 
  1853  1E31                     	;# 
  1854  1E32                     	;# 
  1855  1E33                     	;# 
  1856  1E34                     	;# 
  1857  1E35                     	;# 
  1858  1E36                     	;# 
  1859  1E37                     	;# 
  1860  1E8F                     	;# 
  1861  1E90                     	;# 
  1862  1E91                     	;# 
  1863  1E92                     	;# 
  1864  1E93                     	;# 
  1865  1E94                     	;# 
  1866  1E95                     	;# 
  1867  1E96                     	;# 
  1868  1E97                     	;# 
  1869  1E9C                     	;# 
  1870  1E9D                     	;# 
  1871  1E9E                     	;# 
  1872  1EA1                     	;# 
  1873  1EA2                     	;# 
  1874  1EA3                     	;# 
  1875  1EA4                     	;# 
  1876  1EA9                     	;# 
  1877  1EAA                     	;# 
  1878  1EB1                     	;# 
  1879  1EB2                     	;# 
  1880  1EB8                     	;# 
  1881  1EB9                     	;# 
  1882  1EBA                     	;# 
  1883  1EBB                     	;# 
  1884  1EBC                     	;# 
  1885  1EBD                     	;# 
  1886  1EBE                     	;# 
  1887  1EC3                     	;# 
  1888  1EC5                     	;# 
  1889  1EC6                     	;# 
  1890  1EC7                     	;# 
  1891  1EC8                     	;# 
  1892  1EC9                     	;# 
  1893  1ECA                     	;# 
  1894  1ECB                     	;# 
  1895  1ECB                     	;# 
  1896  1ECB                     	;# 
  1897  1ECC                     	;# 
  1898  1ECC                     	;# 
  1899  1ECC                     	;# 
  1900  1F10                     	;# 
  1901  1F11                     	;# 
  1902  1F12                     	;# 
  1903  1F14                     	;# 
  1904  1F15                     	;# 
  1905  1F1C                     	;# 
  1906  1F1D                     	;# 
  1907  1F1E                     	;# 
  1908  1F1F                     	;# 
  1909  1F20                     	;# 
  1910  1F21                     	;# 
  1911  1F22                     	;# 
  1912  1F23                     	;# 
  1913  1F24                     	;# 
  1914  1F25                     	;# 
  1915  1F26                     	;# 
  1916  1F27                     	;# 
  1917  1F38                     	;# 
  1918  1F39                     	;# 
  1919  1F3A                     	;# 
  1920  1F3B                     	;# 
  1921  1F3C                     	;# 
  1922  1F3D                     	;# 
  1923  1F3E                     	;# 
  1924  1F3F                     	;# 
  1925  1F43                     	;# 
  1926  1F44                     	;# 
  1927  1F45                     	;# 
  1928  1F46                     	;# 
  1929  1F47                     	;# 
  1930  1F48                     	;# 
  1931  1F49                     	;# 
  1932  1F4A                     	;# 
  1933  1F4E                     	;# 
  1934  1F4F                     	;# 
  1935  1F50                     	;# 
  1936  1F51                     	;# 
  1937  1F52                     	;# 
  1938  1F53                     	;# 
  1939  1F54                     	;# 
  1940  1F55                     	;# 
  1941  1FE4                     	;# 
  1942  1FE5                     	;# 
  1943  1FE6                     	;# 
  1944  1FE7                     	;# 
  1945  1FE8                     	;# 
  1946  1FE8                     	;# 
  1947  1FE9                     	;# 
  1948  1FEA                     	;# 
  1949  1FEB                     	;# 
  1950  1FED                     	;# 
  1951  1FEE                     	;# 
  1952  1FEF                     	;# 
  1953  0000                     	;# 
  1954  0001                     	;# 
  1955  0002                     	;# 
  1956  0003                     	;# 
  1957  0004                     	;# 
  1958  0005                     	;# 
  1959  0006                     	;# 
  1960  0007                     	;# 
  1961  0008                     	;# 
  1962  0009                     	;# 
  1963  000A                     	;# 
  1964  000B                     	;# 
  1965  000C                     	;# 
  1966  000D                     	;# 
  1967  000E                     	;# 
  1968  0012                     	;# 
  1969  0013                     	;# 
  1970  0014                     	;# 
  1971  0018                     	;# 
  1972  0019                     	;# 
  1973  001A                     	;# 
  1974  008C                     	;# 
  1975  008C                     	;# 
  1976  008D                     	;# 
  1977  008E                     	;# 
  1978  008E                     	;# 
  1979  008F                     	;# 
  1980  0090                     	;# 
  1981  0090                     	;# 
  1982  0091                     	;# 
  1983  0092                     	;# 
  1984  0092                     	;# 
  1985  0093                     	;# 
  1986  0094                     	;# 
  1987  0094                     	;# 
  1988  0095                     	;# 
  1989  0096                     	;# 
  1990  0096                     	;# 
  1991  0097                     	;# 
  1992  0098                     	;# 
  1993  0099                     	;# 
  1994  009A                     	;# 
  1995  009B                     	;# 
  1996  009B                     	;# 
  1997  009C                     	;# 
  1998  009D                     	;# 
  1999  009D                     	;# 
  2000  009E                     	;# 
  2001  009F                     	;# 
  2002  010C                     	;# 
  2003  010C                     	;# 
  2004  010D                     	;# 
  2005  010E                     	;# 
  2006  010F                     	;# 
  2007  010F                     	;# 
  2008  0110                     	;# 
  2009  0111                     	;# 
  2010  0112                     	;# 
  2011  0113                     	;# 
  2012  0114                     	;# 
  2013  0115                     	;# 
  2014  0116                     	;# 
  2015  0117                     	;# 
  2016  0118                     	;# 
  2017  0119                     	;# 
  2018  0119                     	;# 
  2019  0119                     	;# 
  2020  011A                     	;# 
  2021  011A                     	;# 
  2022  011A                     	;# 
  2023  011B                     	;# 
  2024  011B                     	;# 
  2025  011B                     	;# 
  2026  011B                     	;# 
  2027  011B                     	;# 
  2028  011C                     	;# 
  2029  011C                     	;# 
  2030  011C                     	;# 
  2031  011D                     	;# 
  2032  011D                     	;# 
  2033  011D                     	;# 
  2034  011E                     	;# 
  2035  011E                     	;# 
  2036  011E                     	;# 
  2037  011F                     	;# 
  2038  011F                     	;# 
  2039  011F                     	;# 
  2040  011F                     	;# 
  2041  011F                     	;# 
  2042  018C                     	;# 
  2043  018D                     	;# 
  2044  018E                     	;# 
  2045  018F                     	;# 
  2046  0190                     	;# 
  2047  0191                     	;# 
  2048  0192                     	;# 
  2049  0196                     	;# 
  2050  0197                     	;# 
  2051  0198                     	;# 
  2052  0199                     	;# 
  2053  019A                     	;# 
  2054  019B                     	;# 
  2055  019C                     	;# 
  2056  020C                     	;# 
  2057  020D                     	;# 
  2058  020E                     	;# 
  2059  020E                     	;# 
  2060  020F                     	;# 
  2061  020F                     	;# 
  2062  0210                     	;# 
  2063  0210                     	;# 
  2064  0211                     	;# 
  2065  0211                     	;# 
  2066  0212                     	;# 
  2067  0213                     	;# 
  2068  0214                     	;# 
  2069  0214                     	;# 
  2070  0215                     	;# 
  2071  0215                     	;# 
  2072  0216                     	;# 
  2073  0216                     	;# 
  2074  0217                     	;# 
  2075  0217                     	;# 
  2076  0218                     	;# 
  2077  0219                     	;# 
  2078  021A                     	;# 
  2079  021A                     	;# 
  2080  021B                     	;# 
  2081  021B                     	;# 
  2082  021C                     	;# 
  2083  021C                     	;# 
  2084  021D                     	;# 
  2085  021D                     	;# 
  2086  021E                     	;# 
  2087  021F                     	;# 
  2088  028C                     	;# 
  2089  028C                     	;# 
  2090  028D                     	;# 
  2091  028D                     	;# 
  2092  028E                     	;# 
  2093  028F                     	;# 
  2094  0290                     	;# 
  2095  0291                     	;# 
  2096  0292                     	;# 
  2097  0292                     	;# 
  2098  0293                     	;# 
  2099  0293                     	;# 
  2100  0294                     	;# 
  2101  0295                     	;# 
  2102  0296                     	;# 
  2103  0297                     	;# 
  2104  0298                     	;# 
  2105  0298                     	;# 
  2106  0299                     	;# 
  2107  0299                     	;# 
  2108  029A                     	;# 
  2109  029B                     	;# 
  2110  029C                     	;# 
  2111  029D                     	;# 
  2112  029F                     	;# 
  2113  030C                     	;# 
  2114  030C                     	;# 
  2115  030D                     	;# 
  2116  030E                     	;# 
  2117  030F                     	;# 
  2118  0310                     	;# 
  2119  0310                     	;# 
  2120  0311                     	;# 
  2121  0312                     	;# 
  2122  0313                     	;# 
  2123  0314                     	;# 
  2124  0314                     	;# 
  2125  0315                     	;# 
  2126  0316                     	;# 
  2127  0317                     	;# 
  2128  0318                     	;# 
  2129  0318                     	;# 
  2130  0319                     	;# 
  2131  031A                     	;# 
  2132  031B                     	;# 
  2133  038C                     	;# 
  2134  038C                     	;# 
  2135  038D                     	;# 
  2136  038E                     	;# 
  2137  0390                     	;# 
  2138  0390                     	;# 
  2139  0391                     	;# 
  2140  0392                     	;# 
  2141  048C                     	;# 
  2142  048C                     	;# 
  2143  048D                     	;# 
  2144  048E                     	;# 
  2145  048F                     	;# 
  2146  048F                     	;# 
  2147  0490                     	;# 
  2148  0491                     	;# 
  2149  0492                     	;# 
  2150  0492                     	;# 
  2151  0493                     	;# 
  2152  0494                     	;# 
  2153  0495                     	;# 
  2154  0495                     	;# 
  2155  0496                     	;# 
  2156  0497                     	;# 
  2157  0498                     	;# 
  2158  0499                     	;# 
  2159  049A                     	;# 
  2160  049B                     	;# 
  2161  049C                     	;# 
  2162  049D                     	;# 
  2163  058C                     	;# 
  2164  058C                     	;# 
  2165  058D                     	;# 
  2166  058E                     	;# 
  2167  058F                     	;# 
  2168  058F                     	;# 
  2169  0590                     	;# 
  2170  0591                     	;# 
  2171  0592                     	;# 
  2172  0593                     	;# 
  2173  059C                     	;# 
  2174  059C                     	;# 
  2175  059D                     	;# 
  2176  059D                     	;# 
  2177  059E                     	;# 
  2178  059F                     	;# 
  2179  060C                     	;# 
  2180  060C                     	;# 
  2181  060D                     	;# 
  2182  060D                     	;# 
  2183  060E                     	;# 
  2184  060F                     	;# 
  2185  0610                     	;# 
  2186  0611                     	;# 
  2187  0612                     	;# 
  2188  0613                     	;# 
  2189  0614                     	;# 
  2190  0616                     	;# 
  2191  0616                     	;# 
  2192  0617                     	;# 
  2193  0617                     	;# 
  2194  0618                     	;# 
  2195  0619                     	;# 
  2196  061A                     	;# 
  2197  061B                     	;# 
  2198  061C                     	;# 
  2199  061D                     	;# 
  2200  061E                     	;# 
  2201  070C                     	;# 
  2202  070D                     	;# 
  2203  070E                     	;# 
  2204  070F                     	;# 
  2205  0710                     	;# 
  2206  0711                     	;# 
  2207  0712                     	;# 
  2208  0713                     	;# 
  2209  0714                     	;# 
  2210  0716                     	;# 
  2211  0717                     	;# 
  2212  0718                     	;# 
  2213  0719                     	;# 
  2214  071A                     	;# 
  2215  071B                     	;# 
  2216  071C                     	;# 
  2217  071D                     	;# 
  2218  071E                     	;# 
  2219  0796                     	;# 
  2220  0797                     	;# 
  2221  0798                     	;# 
  2222  0799                     	;# 
  2223  079A                     	;# 
  2224  079B                     	;# 
  2225  079C                     	;# 
  2226  079D                     	;# 
  2227  080C                     	;# 
  2228  080D                     	;# 
  2229  080E                     	;# 
  2230  080F                     	;# 
  2231  0810                     	;# 
  2232  0811                     	;# 
  2233  0812                     	;# 
  2234  0813                     	;# 
  2235  0814                     	;# 
  2236  081A                     	;# 
  2237  081A                     	;# 
  2238  081B                     	;# 
  2239  081C                     	;# 
  2240  081C                     	;# 
  2241  081D                     	;# 
  2242  081E                     	;# 
  2243  081F                     	;# 
  2244  088C                     	;# 
  2245  088D                     	;# 
  2246  088E                     	;# 
  2247  088F                     	;# 
  2248  0890                     	;# 
  2249  0891                     	;# 
  2250  0892                     	;# 
  2251  0893                     	;# 
  2252  0895                     	;# 
  2253  0896                     	;# 
  2254  0897                     	;# 
  2255  0898                     	;# 
  2256  0899                     	;# 
  2257  089A                     	;# 
  2258  089B                     	;# 
  2259  090C                     	;# 
  2260  090E                     	;# 
  2261  090F                     	;# 
  2262  091F                     	;# 
  2263  098F                     	;# 
  2264  098F                     	;# 
  2265  0990                     	;# 
  2266  0991                     	;# 
  2267  0992                     	;# 
  2268  0993                     	;# 
  2269  0994                     	;# 
  2270  0995                     	;# 
  2271  0996                     	;# 
  2272  0997                     	;# 
  2273  1E0F                     	;# 
  2274  1E10                     	;# 
  2275  1E11                     	;# 
  2276  1E12                     	;# 
  2277  1E13                     	;# 
  2278  1E14                     	;# 
  2279  1E15                     	;# 
  2280  1E16                     	;# 
  2281  1E17                     	;# 
  2282  1E18                     	;# 
  2283  1E19                     	;# 
  2284  1E1A                     	;# 
  2285  1E1B                     	;# 
  2286  1E1C                     	;# 
  2287  1E1D                     	;# 
  2288  1E1E                     	;# 
  2289  1E1F                     	;# 
  2290  1E20                     	;# 
  2291  1E21                     	;# 
  2292  1E22                     	;# 
  2293  1E23                     	;# 
  2294  1E24                     	;# 
  2295  1E25                     	;# 
  2296  1E26                     	;# 
  2297  1E27                     	;# 
  2298  1E28                     	;# 
  2299  1E29                     	;# 
  2300  1E2A                     	;# 
  2301  1E2B                     	;# 
  2302  1E2C                     	;# 
  2303  1E2D                     	;# 
  2304  1E2E                     	;# 
  2305  1E2F                     	;# 
  2306  1E30                     	;# 
  2307  1E31                     	;# 
  2308  1E32                     	;# 
  2309  1E33                     	;# 
  2310  1E34                     	;# 
  2311  1E35                     	;# 
  2312  1E36                     	;# 
  2313  1E37                     	;# 
  2314  1E8F                     	;# 
  2315  1E90                     	;# 
  2316  1E91                     	;# 
  2317  1E92                     	;# 
  2318  1E93                     	;# 
  2319  1E94                     	;# 
  2320  1E95                     	;# 
  2321  1E96                     	;# 
  2322  1E97                     	;# 
  2323  1E9C                     	;# 
  2324  1E9D                     	;# 
  2325  1E9E                     	;# 
  2326  1EA1                     	;# 
  2327  1EA2                     	;# 
  2328  1EA3                     	;# 
  2329  1EA4                     	;# 
  2330  1EA9                     	;# 
  2331  1EAA                     	;# 
  2332  1EB1                     	;# 
  2333  1EB2                     	;# 
  2334  1EB8                     	;# 
  2335  1EB9                     	;# 
  2336  1EBA                     	;# 
  2337  1EBB                     	;# 
  2338  1EBC                     	;# 
  2339  1EBD                     	;# 
  2340  1EBE                     	;# 
  2341  1EC3                     	;# 
  2342  1EC5                     	;# 
  2343  1EC6                     	;# 
  2344  1EC7                     	;# 
  2345  1EC8                     	;# 
  2346  1EC9                     	;# 
  2347  1ECA                     	;# 
  2348  1ECB                     	;# 
  2349  1ECB                     	;# 
  2350  1ECB                     	;# 
  2351  1ECC                     	;# 
  2352  1ECC                     	;# 
  2353  1ECC                     	;# 
  2354  1F10                     	;# 
  2355  1F11                     	;# 
  2356  1F12                     	;# 
  2357  1F14                     	;# 
  2358  1F15                     	;# 
  2359  1F1C                     	;# 
  2360  1F1D                     	;# 
  2361  1F1E                     	;# 
  2362  1F1F                     	;# 
  2363  1F20                     	;# 
  2364  1F21                     	;# 
  2365  1F22                     	;# 
  2366  1F23                     	;# 
  2367  1F24                     	;# 
  2368  1F25                     	;# 
  2369  1F26                     	;# 
  2370  1F27                     	;# 
  2371  1F38                     	;# 
  2372  1F39                     	;# 
  2373  1F3A                     	;# 
  2374  1F3B                     	;# 
  2375  1F3C                     	;# 
  2376  1F3D                     	;# 
  2377  1F3E                     	;# 
  2378  1F3F                     	;# 
  2379  1F43                     	;# 
  2380  1F44                     	;# 
  2381  1F45                     	;# 
  2382  1F46                     	;# 
  2383  1F47                     	;# 
  2384  1F48                     	;# 
  2385  1F49                     	;# 
  2386  1F4A                     	;# 
  2387  1F4E                     	;# 
  2388  1F4F                     	;# 
  2389  1F50                     	;# 
  2390  1F51                     	;# 
  2391  1F52                     	;# 
  2392  1F53                     	;# 
  2393  1F54                     	;# 
  2394  1F55                     	;# 
  2395  1FE4                     	;# 
  2396  1FE5                     	;# 
  2397  1FE6                     	;# 
  2398  1FE7                     	;# 
  2399  1FE8                     	;# 
  2400  1FE8                     	;# 
  2401  1FE9                     	;# 
  2402  1FEA                     	;# 
  2403  1FEB                     	;# 
  2404  1FED                     	;# 
  2405  1FEE                     	;# 
  2406  1FEF                     	;# 
  2407  0000                     	;# 
  2408  0001                     	;# 
  2409  0002                     	;# 
  2410  0003                     	;# 
  2411  0004                     	;# 
  2412  0005                     	;# 
  2413  0006                     	;# 
  2414  0007                     	;# 
  2415  0008                     	;# 
  2416  0009                     	;# 
  2417  000A                     	;# 
  2418  000B                     	;# 
  2419  000C                     	;# 
  2420  000D                     	;# 
  2421  000E                     	;# 
  2422  0012                     	;# 
  2423  0013                     	;# 
  2424  0014                     	;# 
  2425  0018                     	;# 
  2426  0019                     	;# 
  2427  001A                     	;# 
  2428  008C                     	;# 
  2429  008C                     	;# 
  2430  008D                     	;# 
  2431  008E                     	;# 
  2432  008E                     	;# 
  2433  008F                     	;# 
  2434  0090                     	;# 
  2435  0090                     	;# 
  2436  0091                     	;# 
  2437  0092                     	;# 
  2438  0092                     	;# 
  2439  0093                     	;# 
  2440  0094                     	;# 
  2441  0094                     	;# 
  2442  0095                     	;# 
  2443  0096                     	;# 
  2444  0096                     	;# 
  2445  0097                     	;# 
  2446  0098                     	;# 
  2447  0099                     	;# 
  2448  009A                     	;# 
  2449  009B                     	;# 
  2450  009B                     	;# 
  2451  009C                     	;# 
  2452  009D                     	;# 
  2453  009D                     	;# 
  2454  009E                     	;# 
  2455  009F                     	;# 
  2456  010C                     	;# 
  2457  010C                     	;# 
  2458  010D                     	;# 
  2459  010E                     	;# 
  2460  010F                     	;# 
  2461  010F                     	;# 
  2462  0110                     	;# 
  2463  0111                     	;# 
  2464  0112                     	;# 
  2465  0113                     	;# 
  2466  0114                     	;# 
  2467  0115                     	;# 
  2468  0116                     	;# 
  2469  0117                     	;# 
  2470  0118                     	;# 
  2471  0119                     	;# 
  2472  0119                     	;# 
  2473  0119                     	;# 
  2474  011A                     	;# 
  2475  011A                     	;# 
  2476  011A                     	;# 
  2477  011B                     	;# 
  2478  011B                     	;# 
  2479  011B                     	;# 
  2480  011B                     	;# 
  2481  011B                     	;# 
  2482  011C                     	;# 
  2483  011C                     	;# 
  2484  011C                     	;# 
  2485  011D                     	;# 
  2486  011D                     	;# 
  2487  011D                     	;# 
  2488  011E                     	;# 
  2489  011E                     	;# 
  2490  011E                     	;# 
  2491  011F                     	;# 
  2492  011F                     	;# 
  2493  011F                     	;# 
  2494  011F                     	;# 
  2495  011F                     	;# 
  2496  018C                     	;# 
  2497  018D                     	;# 
  2498  018E                     	;# 
  2499  018F                     	;# 
  2500  0190                     	;# 
  2501  0191                     	;# 
  2502  0192                     	;# 
  2503  0196                     	;# 
  2504  0197                     	;# 
  2505  0198                     	;# 
  2506  0199                     	;# 
  2507  019A                     	;# 
  2508  019B                     	;# 
  2509  019C                     	;# 
  2510  020C                     	;# 
  2511  020D                     	;# 
  2512  020E                     	;# 
  2513  020E                     	;# 
  2514  020F                     	;# 
  2515  020F                     	;# 
  2516  0210                     	;# 
  2517  0210                     	;# 
  2518  0211                     	;# 
  2519  0211                     	;# 
  2520  0212                     	;# 
  2521  0213                     	;# 
  2522  0214                     	;# 
  2523  0214                     	;# 
  2524  0215                     	;# 
  2525  0215                     	;# 
  2526  0216                     	;# 
  2527  0216                     	;# 
  2528  0217                     	;# 
  2529  0217                     	;# 
  2530  0218                     	;# 
  2531  0219                     	;# 
  2532  021A                     	;# 
  2533  021A                     	;# 
  2534  021B                     	;# 
  2535  021B                     	;# 
  2536  021C                     	;# 
  2537  021C                     	;# 
  2538  021D                     	;# 
  2539  021D                     	;# 
  2540  021E                     	;# 
  2541  021F                     	;# 
  2542  028C                     	;# 
  2543  028C                     	;# 
  2544  028D                     	;# 
  2545  028D                     	;# 
  2546  028E                     	;# 
  2547  028F                     	;# 
  2548  0290                     	;# 
  2549  0291                     	;# 
  2550  0292                     	;# 
  2551  0292                     	;# 
  2552  0293                     	;# 
  2553  0293                     	;# 
  2554  0294                     	;# 
  2555  0295                     	;# 
  2556  0296                     	;# 
  2557  0297                     	;# 
  2558  0298                     	;# 
  2559  0298                     	;# 
  2560  0299                     	;# 
  2561  0299                     	;# 
  2562  029A                     	;# 
  2563  029B                     	;# 
  2564  029C                     	;# 
  2565  029D                     	;# 
  2566  029F                     	;# 
  2567  030C                     	;# 
  2568  030C                     	;# 
  2569  030D                     	;# 
  2570  030E                     	;# 
  2571  030F                     	;# 
  2572  0310                     	;# 
  2573  0310                     	;# 
  2574  0311                     	;# 
  2575  0312                     	;# 
  2576  0313                     	;# 
  2577  0314                     	;# 
  2578  0314                     	;# 
  2579  0315                     	;# 
  2580  0316                     	;# 
  2581  0317                     	;# 
  2582  0318                     	;# 
  2583  0318                     	;# 
  2584  0319                     	;# 
  2585  031A                     	;# 
  2586  031B                     	;# 
  2587  038C                     	;# 
  2588  038C                     	;# 
  2589  038D                     	;# 
  2590  038E                     	;# 
  2591  0390                     	;# 
  2592  0390                     	;# 
  2593  0391                     	;# 
  2594  0392                     	;# 
  2595  048C                     	;# 
  2596  048C                     	;# 
  2597  048D                     	;# 
  2598  048E                     	;# 
  2599  048F                     	;# 
  2600  048F                     	;# 
  2601  0490                     	;# 
  2602  0491                     	;# 
  2603  0492                     	;# 
  2604  0492                     	;# 
  2605  0493                     	;# 
  2606  0494                     	;# 
  2607  0495                     	;# 
  2608  0495                     	;# 
  2609  0496                     	;# 
  2610  0497                     	;# 
  2611  0498                     	;# 
  2612  0499                     	;# 
  2613  049A                     	;# 
  2614  049B                     	;# 
  2615  049C                     	;# 
  2616  049D                     	;# 
  2617  058C                     	;# 
  2618  058C                     	;# 
  2619  058D                     	;# 
  2620  058E                     	;# 
  2621  058F                     	;# 
  2622  058F                     	;# 
  2623  0590                     	;# 
  2624  0591                     	;# 
  2625  0592                     	;# 
  2626  0593                     	;# 
  2627  059C                     	;# 
  2628  059C                     	;# 
  2629  059D                     	;# 
  2630  059D                     	;# 
  2631  059E                     	;# 
  2632  059F                     	;# 
  2633  060C                     	;# 
  2634  060C                     	;# 
  2635  060D                     	;# 
  2636  060D                     	;# 
  2637  060E                     	;# 
  2638  060F                     	;# 
  2639  0610                     	;# 
  2640  0611                     	;# 
  2641  0612                     	;# 
  2642  0613                     	;# 
  2643  0614                     	;# 
  2644  0616                     	;# 
  2645  0616                     	;# 
  2646  0617                     	;# 
  2647  0617                     	;# 
  2648  0618                     	;# 
  2649  0619                     	;# 
  2650  061A                     	;# 
  2651  061B                     	;# 
  2652  061C                     	;# 
  2653  061D                     	;# 
  2654  061E                     	;# 
  2655  070C                     	;# 
  2656  070D                     	;# 
  2657  070E                     	;# 
  2658  070F                     	;# 
  2659  0710                     	;# 
  2660  0711                     	;# 
  2661  0712                     	;# 
  2662  0713                     	;# 
  2663  0714                     	;# 
  2664  0716                     	;# 
  2665  0717                     	;# 
  2666  0718                     	;# 
  2667  0719                     	;# 
  2668  071A                     	;# 
  2669  071B                     	;# 
  2670  071C                     	;# 
  2671  071D                     	;# 
  2672  071E                     	;# 
  2673  0796                     	;# 
  2674  0797                     	;# 
  2675  0798                     	;# 
  2676  0799                     	;# 
  2677  079A                     	;# 
  2678  079B                     	;# 
  2679  079C                     	;# 
  2680  079D                     	;# 
  2681  080C                     	;# 
  2682  080D                     	;# 
  2683  080E                     	;# 
  2684  080F                     	;# 
  2685  0810                     	;# 
  2686  0811                     	;# 
  2687  0812                     	;# 
  2688  0813                     	;# 
  2689  0814                     	;# 
  2690  081A                     	;# 
  2691  081A                     	;# 
  2692  081B                     	;# 
  2693  081C                     	;# 
  2694  081C                     	;# 
  2695  081D                     	;# 
  2696  081E                     	;# 
  2697  081F                     	;# 
  2698  088C                     	;# 
  2699  088D                     	;# 
  2700  088E                     	;# 
  2701  088F                     	;# 
  2702  0890                     	;# 
  2703  0891                     	;# 
  2704  0892                     	;# 
  2705  0893                     	;# 
  2706  0895                     	;# 
  2707  0896                     	;# 
  2708  0897                     	;# 
  2709  0898                     	;# 
  2710  0899                     	;# 
  2711  089A                     	;# 
  2712  089B                     	;# 
  2713  090C                     	;# 
  2714  090E                     	;# 
  2715  090F                     	;# 
  2716  091F                     	;# 
  2717  098F                     	;# 
  2718  098F                     	;# 
  2719  0990                     	;# 
  2720  0991                     	;# 
  2721  0992                     	;# 
  2722  0993                     	;# 
  2723  0994                     	;# 
  2724  0995                     	;# 
  2725  0996                     	;# 
  2726  0997                     	;# 
  2727  1E0F                     	;# 
  2728  1E10                     	;# 
  2729  1E11                     	;# 
  2730  1E12                     	;# 
  2731  1E13                     	;# 
  2732  1E14                     	;# 
  2733  1E15                     	;# 
  2734  1E16                     	;# 
  2735  1E17                     	;# 
  2736  1E18                     	;# 
  2737  1E19                     	;# 
  2738  1E1A                     	;# 
  2739  1E1B                     	;# 
  2740  1E1C                     	;# 
  2741  1E1D                     	;# 
  2742  1E1E                     	;# 
  2743  1E1F                     	;# 
  2744  1E20                     	;# 
  2745  1E21                     	;# 
  2746  1E22                     	;# 
  2747  1E23                     	;# 
  2748  1E24                     	;# 
  2749  1E25                     	;# 
  2750  1E26                     	;# 
  2751  1E27                     	;# 
  2752  1E28                     	;# 
  2753  1E29                     	;# 
  2754  1E2A                     	;# 
  2755  1E2B                     	;# 
  2756  1E2C                     	;# 
  2757  1E2D                     	;# 
  2758  1E2E                     	;# 
  2759  1E2F                     	;# 
  2760  1E30                     	;# 
  2761  1E31                     	;# 
  2762  1E32                     	;# 
  2763  1E33                     	;# 
  2764  1E34                     	;# 
  2765  1E35                     	;# 
  2766  1E36                     	;# 
  2767  1E37                     	;# 
  2768  1E8F                     	;# 
  2769  1E90                     	;# 
  2770  1E91                     	;# 
  2771  1E92                     	;# 
  2772  1E93                     	;# 
  2773  1E94                     	;# 
  2774  1E95                     	;# 
  2775  1E96                     	;# 
  2776  1E97                     	;# 
  2777  1E9C                     	;# 
  2778  1E9D                     	;# 
  2779  1E9E                     	;# 
  2780  1EA1                     	;# 
  2781  1EA2                     	;# 
  2782  1EA3                     	;# 
  2783  1EA4                     	;# 
  2784  1EA9                     	;# 
  2785  1EAA                     	;# 
  2786  1EB1                     	;# 
  2787  1EB2                     	;# 
  2788  1EB8                     	;# 
  2789  1EB9                     	;# 
  2790  1EBA                     	;# 
  2791  1EBB                     	;# 
  2792  1EBC                     	;# 
  2793  1EBD                     	;# 
  2794  1EBE                     	;# 
  2795  1EC3                     	;# 
  2796  1EC5                     	;# 
  2797  1EC6                     	;# 
  2798  1EC7                     	;# 
  2799  1EC8                     	;# 
  2800  1EC9                     	;# 
  2801  1ECA                     	;# 
  2802  1ECB                     	;# 
  2803  1ECB                     	;# 
  2804  1ECB                     	;# 
  2805  1ECC                     	;# 
  2806  1ECC                     	;# 
  2807  1ECC                     	;# 
  2808  1F10                     	;# 
  2809  1F11                     	;# 
  2810  1F12                     	;# 
  2811  1F14                     	;# 
  2812  1F15                     	;# 
  2813  1F1C                     	;# 
  2814  1F1D                     	;# 
  2815  1F1E                     	;# 
  2816  1F1F                     	;# 
  2817  1F20                     	;# 
  2818  1F21                     	;# 
  2819  1F22                     	;# 
  2820  1F23                     	;# 
  2821  1F24                     	;# 
  2822  1F25                     	;# 
  2823  1F26                     	;# 
  2824  1F27                     	;# 
  2825  1F38                     	;# 
  2826  1F39                     	;# 
  2827  1F3A                     	;# 
  2828  1F3B                     	;# 
  2829  1F3C                     	;# 
  2830  1F3D                     	;# 
  2831  1F3E                     	;# 
  2832  1F3F                     	;# 
  2833  1F43                     	;# 
  2834  1F44                     	;# 
  2835  1F45                     	;# 
  2836  1F46                     	;# 
  2837  1F47                     	;# 
  2838  1F48                     	;# 
  2839  1F49                     	;# 
  2840  1F4A                     	;# 
  2841  1F4E                     	;# 
  2842  1F4F                     	;# 
  2843  1F50                     	;# 
  2844  1F51                     	;# 
  2845  1F52                     	;# 
  2846  1F53                     	;# 
  2847  1F54                     	;# 
  2848  1F55                     	;# 
  2849  1FE4                     	;# 
  2850  1FE5                     	;# 
  2851  1FE6                     	;# 
  2852  1FE7                     	;# 
  2853  1FE8                     	;# 
  2854  1FE8                     	;# 
  2855  1FE9                     	;# 
  2856  1FEA                     	;# 
  2857  1FEB                     	;# 
  2858  1FED                     	;# 
  2859  1FEE                     	;# 
  2860  1FEF                     	;# 
  2861  0000                     	;# 
  2862  0001                     	;# 
  2863  0002                     	;# 
  2864  0003                     	;# 
  2865  0004                     	;# 
  2866  0005                     	;# 
  2867  0006                     	;# 
  2868  0007                     	;# 
  2869  0008                     	;# 
  2870  0009                     	;# 
  2871  000A                     	;# 
  2872  000B                     	;# 
  2873  000C                     	;# 
  2874  000D                     	;# 
  2875  000E                     	;# 
  2876  0012                     	;# 
  2877  0013                     	;# 
  2878  0014                     	;# 
  2879  0018                     	;# 
  2880  0019                     	;# 
  2881  001A                     	;# 
  2882  008C                     	;# 
  2883  008C                     	;# 
  2884  008D                     	;# 
  2885  008E                     	;# 
  2886  008E                     	;# 
  2887  008F                     	;# 
  2888  0090                     	;# 
  2889  0090                     	;# 
  2890  0091                     	;# 
  2891  0092                     	;# 
  2892  0092                     	;# 
  2893  0093                     	;# 
  2894  0094                     	;# 
  2895  0094                     	;# 
  2896  0095                     	;# 
  2897  0096                     	;# 
  2898  0096                     	;# 
  2899  0097                     	;# 
  2900  0098                     	;# 
  2901  0099                     	;# 
  2902  009A                     	;# 
  2903  009B                     	;# 
  2904  009B                     	;# 
  2905  009C                     	;# 
  2906  009D                     	;# 
  2907  009D                     	;# 
  2908  009E                     	;# 
  2909  009F                     	;# 
  2910  010C                     	;# 
  2911  010C                     	;# 
  2912  010D                     	;# 
  2913  010E                     	;# 
  2914  010F                     	;# 
  2915  010F                     	;# 
  2916  0110                     	;# 
  2917  0111                     	;# 
  2918  0112                     	;# 
  2919  0113                     	;# 
  2920  0114                     	;# 
  2921  0115                     	;# 
  2922  0116                     	;# 
  2923  0117                     	;# 
  2924  0118                     	;# 
  2925  0119                     	;# 
  2926  0119                     	;# 
  2927  0119                     	;# 
  2928  011A                     	;# 
  2929  011A                     	;# 
  2930  011A                     	;# 
  2931  011B                     	;# 
  2932  011B                     	;# 
  2933  011B                     	;# 
  2934  011B                     	;# 
  2935  011B                     	;# 
  2936  011C                     	;# 
  2937  011C                     	;# 
  2938  011C                     	;# 
  2939  011D                     	;# 
  2940  011D                     	;# 
  2941  011D                     	;# 
  2942  011E                     	;# 
  2943  011E                     	;# 
  2944  011E                     	;# 
  2945  011F                     	;# 
  2946  011F                     	;# 
  2947  011F                     	;# 
  2948  011F                     	;# 
  2949  011F                     	;# 
  2950  018C                     	;# 
  2951  018D                     	;# 
  2952  018E                     	;# 
  2953  018F                     	;# 
  2954  0190                     	;# 
  2955  0191                     	;# 
  2956  0192                     	;# 
  2957  0196                     	;# 
  2958  0197                     	;# 
  2959  0198                     	;# 
  2960  0199                     	;# 
  2961  019A                     	;# 
  2962  019B                     	;# 
  2963  019C                     	;# 
  2964  020C                     	;# 
  2965  020D                     	;# 
  2966  020E                     	;# 
  2967  020E                     	;# 
  2968  020F                     	;# 
  2969  020F                     	;# 
  2970  0210                     	;# 
  2971  0210                     	;# 
  2972  0211                     	;# 
  2973  0211                     	;# 
  2974  0212                     	;# 
  2975  0213                     	;# 
  2976  0214                     	;# 
  2977  0214                     	;# 
  2978  0215                     	;# 
  2979  0215                     	;# 
  2980  0216                     	;# 
  2981  0216                     	;# 
  2982  0217                     	;# 
  2983  0217                     	;# 
  2984  0218                     	;# 
  2985  0219                     	;# 
  2986  021A                     	;# 
  2987  021A                     	;# 
  2988  021B                     	;# 
  2989  021B                     	;# 
  2990  021C                     	;# 
  2991  021C                     	;# 
  2992  021D                     	;# 
  2993  021D                     	;# 
  2994  021E                     	;# 
  2995  021F                     	;# 
  2996  028C                     	;# 
  2997  028C                     	;# 
  2998  028D                     	;# 
  2999  028D                     	;# 
  3000  028E                     	;# 
  3001  028F                     	;# 
  3002  0290                     	;# 
  3003  0291                     	;# 
  3004  0292                     	;# 
  3005  0292                     	;# 
  3006  0293                     	;# 
  3007  0293                     	;# 
  3008  0294                     	;# 
  3009  0295                     	;# 
  3010  0296                     	;# 
  3011  0297                     	;# 
  3012  0298                     	;# 
  3013  0298                     	;# 
  3014  0299                     	;# 
  3015  0299                     	;# 
  3016  029A                     	;# 
  3017  029B                     	;# 
  3018  029C                     	;# 
  3019  029D                     	;# 
  3020  029F                     	;# 
  3021  030C                     	;# 
  3022  030C                     	;# 
  3023  030D                     	;# 
  3024  030E                     	;# 
  3025  030F                     	;# 
  3026  0310                     	;# 
  3027  0310                     	;# 
  3028  0311                     	;# 
  3029  0312                     	;# 
  3030  0313                     	;# 
  3031  0314                     	;# 
  3032  0314                     	;# 
  3033  0315                     	;# 
  3034  0316                     	;# 
  3035  0317                     	;# 
  3036  0318                     	;# 
  3037  0318                     	;# 
  3038  0319                     	;# 
  3039  031A                     	;# 
  3040  031B                     	;# 
  3041  038C                     	;# 
  3042  038C                     	;# 
  3043  038D                     	;# 
  3044  038E                     	;# 
  3045  0390                     	;# 
  3046  0390                     	;# 
  3047  0391                     	;# 
  3048  0392                     	;# 
  3049  048C                     	;# 
  3050  048C                     	;# 
  3051  048D                     	;# 
  3052  048E                     	;# 
  3053  048F                     	;# 
  3054  048F                     	;# 
  3055  0490                     	;# 
  3056  0491                     	;# 
  3057  0492                     	;# 
  3058  0492                     	;# 
  3059  0493                     	;# 
  3060  0494                     	;# 
  3061  0495                     	;# 
  3062  0495                     	;# 
  3063  0496                     	;# 
  3064  0497                     	;# 
  3065  0498                     	;# 
  3066  0499                     	;# 
  3067  049A                     	;# 
  3068  049B                     	;# 
  3069  049C                     	;# 
  3070  049D                     	;# 
  3071  058C                     	;# 
  3072  058C                     	;# 
  3073  058D                     	;# 
  3074  058E                     	;# 
  3075  058F                     	;# 
  3076  058F                     	;# 
  3077  0590                     	;# 
  3078  0591                     	;# 
  3079  0592                     	;# 
  3080  0593                     	;# 
  3081  059C                     	;# 
  3082  059C                     	;# 
  3083  059D                     	;# 
  3084  059D                     	;# 
  3085  059E                     	;# 
  3086  059F                     	;# 
  3087  060C                     	;# 
  3088  060C                     	;# 
  3089  060D                     	;# 
  3090  060D                     	;# 
  3091  060E                     	;# 
  3092  060F                     	;# 
  3093  0610                     	;# 
  3094  0611                     	;# 
  3095  0612                     	;# 
  3096  0613                     	;# 
  3097  0614                     	;# 
  3098  0616                     	;# 
  3099  0616                     	;# 
  3100  0617                     	;# 
  3101  0617                     	;# 
  3102  0618                     	;# 
  3103  0619                     	;# 
  3104  061A                     	;# 
  3105  061B                     	;# 
  3106  061C                     	;# 
  3107  061D                     	;# 
  3108  061E                     	;# 
  3109  070C                     	;# 
  3110  070D                     	;# 
  3111  070E                     	;# 
  3112  070F                     	;# 
  3113  0710                     	;# 
  3114  0711                     	;# 
  3115  0712                     	;# 
  3116  0713                     	;# 
  3117  0714                     	;# 
  3118  0716                     	;# 
  3119  0717                     	;# 
  3120  0718                     	;# 
  3121  0719                     	;# 
  3122  071A                     	;# 
  3123  071B                     	;# 
  3124  071C                     	;# 
  3125  071D                     	;# 
  3126  071E                     	;# 
  3127  0796                     	;# 
  3128  0797                     	;# 
  3129  0798                     	;# 
  3130  0799                     	;# 
  3131  079A                     	;# 
  3132  079B                     	;# 
  3133  079C                     	;# 
  3134  079D                     	;# 
  3135  080C                     	;# 
  3136  080D                     	;# 
  3137  080E                     	;# 
  3138  080F                     	;# 
  3139  0810                     	;# 
  3140  0811                     	;# 
  3141  0812                     	;# 
  3142  0813                     	;# 
  3143  0814                     	;# 
  3144  081A                     	;# 
  3145  081A                     	;# 
  3146  081B                     	;# 
  3147  081C                     	;# 
  3148  081C                     	;# 
  3149  081D                     	;# 
  3150  081E                     	;# 
  3151  081F                     	;# 
  3152  088C                     	;# 
  3153  088D                     	;# 
  3154  088E                     	;# 
  3155  088F                     	;# 
  3156  0890                     	;# 
  3157  0891                     	;# 
  3158  0892                     	;# 
  3159  0893                     	;# 
  3160  0895                     	;# 
  3161  0896                     	;# 
  3162  0897                     	;# 
  3163  0898                     	;# 
  3164  0899                     	;# 
  3165  089A                     	;# 
  3166  089B                     	;# 
  3167  090C                     	;# 
  3168  090E                     	;# 
  3169  090F                     	;# 
  3170  091F                     	;# 
  3171  098F                     	;# 
  3172  098F                     	;# 
  3173  0990                     	;# 
  3174  0991                     	;# 
  3175  0992                     	;# 
  3176  0993                     	;# 
  3177  0994                     	;# 
  3178  0995                     	;# 
  3179  0996                     	;# 
  3180  0997                     	;# 
  3181  1E0F                     	;# 
  3182  1E10                     	;# 
  3183  1E11                     	;# 
  3184  1E12                     	;# 
  3185  1E13                     	;# 
  3186  1E14                     	;# 
  3187  1E15                     	;# 
  3188  1E16                     	;# 
  3189  1E17                     	;# 
  3190  1E18                     	;# 
  3191  1E19                     	;# 
  3192  1E1A                     	;# 
  3193  1E1B                     	;# 
  3194  1E1C                     	;# 
  3195  1E1D                     	;# 
  3196  1E1E                     	;# 
  3197  1E1F                     	;# 
  3198  1E20                     	;# 
  3199  1E21                     	;# 
  3200  1E22                     	;# 
  3201  1E23                     	;# 
  3202  1E24                     	;# 
  3203  1E25                     	;# 
  3204  1E26                     	;# 
  3205  1E27                     	;# 
  3206  1E28                     	;# 
  3207  1E29                     	;# 
  3208  1E2A                     	;# 
  3209  1E2B                     	;# 
  3210  1E2C                     	;# 
  3211  1E2D                     	;# 
  3212  1E2E                     	;# 
  3213  1E2F                     	;# 
  3214  1E30                     	;# 
  3215  1E31                     	;# 
  3216  1E32                     	;# 
  3217  1E33                     	;# 
  3218  1E34                     	;# 
  3219  1E35                     	;# 
  3220  1E36                     	;# 
  3221  1E37                     	;# 
  3222  1E8F                     	;# 
  3223  1E90                     	;# 
  3224  1E91                     	;# 
  3225  1E92                     	;# 
  3226  1E93                     	;# 
  3227  1E94                     	;# 
  3228  1E95                     	;# 
  3229  1E96                     	;# 
  3230  1E97                     	;# 
  3231  1E9C                     	;# 
  3232  1E9D                     	;# 
  3233  1E9E                     	;# 
  3234  1EA1                     	;# 
  3235  1EA2                     	;# 
  3236  1EA3                     	;# 
  3237  1EA4                     	;# 
  3238  1EA9                     	;# 
  3239  1EAA                     	;# 
  3240  1EB1                     	;# 
  3241  1EB2                     	;# 
  3242  1EB8                     	;# 
  3243  1EB9                     	;# 
  3244  1EBA                     	;# 
  3245  1EBB                     	;# 
  3246  1EBC                     	;# 
  3247  1EBD                     	;# 
  3248  1EBE                     	;# 
  3249  1EC3                     	;# 
  3250  1EC5                     	;# 
  3251  1EC6                     	;# 
  3252  1EC7                     	;# 
  3253  1EC8                     	;# 
  3254  1EC9                     	;# 
  3255  1ECA                     	;# 
  3256  1ECB                     	;# 
  3257  1ECB                     	;# 
  3258  1ECB                     	;# 
  3259  1ECC                     	;# 
  3260  1ECC                     	;# 
  3261  1ECC                     	;# 
  3262  1F10                     	;# 
  3263  1F11                     	;# 
  3264  1F12                     	;# 
  3265  1F14                     	;# 
  3266  1F15                     	;# 
  3267  1F1C                     	;# 
  3268  1F1D                     	;# 
  3269  1F1E                     	;# 
  3270  1F1F                     	;# 
  3271  1F20                     	;# 
  3272  1F21                     	;# 
  3273  1F22                     	;# 
  3274  1F23                     	;# 
  3275  1F24                     	;# 
  3276  1F25                     	;# 
  3277  1F26                     	;# 
  3278  1F27                     	;# 
  3279  1F38                     	;# 
  3280  1F39                     	;# 
  3281  1F3A                     	;# 
  3282  1F3B                     	;# 
  3283  1F3C                     	;# 
  3284  1F3D                     	;# 
  3285  1F3E                     	;# 
  3286  1F3F                     	;# 
  3287  1F43                     	;# 
  3288  1F44                     	;# 
  3289  1F45                     	;# 
  3290  1F46                     	;# 
  3291  1F47                     	;# 
  3292  1F48                     	;# 
  3293  1F49                     	;# 
  3294  1F4A                     	;# 
  3295  1F4E                     	;# 
  3296  1F4F                     	;# 
  3297  1F50                     	;# 
  3298  1F51                     	;# 
  3299  1F52                     	;# 
  3300  1F53                     	;# 
  3301  1F54                     	;# 
  3302  1F55                     	;# 
  3303  1FE4                     	;# 
  3304  1FE5                     	;# 
  3305  1FE6                     	;# 
  3306  1FE7                     	;# 
  3307  1FE8                     	;# 
  3308  1FE8                     	;# 
  3309  1FE9                     	;# 
  3310  1FEA                     	;# 
  3311  1FEB                     	;# 
  3312  1FED                     	;# 
  3313  1FEE                     	;# 
  3314  1FEF                     	;# 
  3315  0000                     	;# 
  3316  0001                     	;# 
  3317  0002                     	;# 
  3318  0003                     	;# 
  3319  0004                     	;# 
  3320  0005                     	;# 
  3321  0006                     	;# 
  3322  0007                     	;# 
  3323  0008                     	;# 
  3324  0009                     	;# 
  3325  000A                     	;# 
  3326  000B                     	;# 
  3327  000C                     	;# 
  3328  000D                     	;# 
  3329  000E                     	;# 
  3330  0012                     	;# 
  3331  0013                     	;# 
  3332  0014                     	;# 
  3333  0018                     	;# 
  3334  0019                     	;# 
  3335  001A                     	;# 
  3336  008C                     	;# 
  3337  008C                     	;# 
  3338  008D                     	;# 
  3339  008E                     	;# 
  3340  008E                     	;# 
  3341  008F                     	;# 
  3342  0090                     	;# 
  3343  0090                     	;# 
  3344  0091                     	;# 
  3345  0092                     	;# 
  3346  0092                     	;# 
  3347  0093                     	;# 
  3348  0094                     	;# 
  3349  0094                     	;# 
  3350  0095                     	;# 
  3351  0096                     	;# 
  3352  0096                     	;# 
  3353  0097                     	;# 
  3354  0098                     	;# 
  3355  0099                     	;# 
  3356  009A                     	;# 
  3357  009B                     	;# 
  3358  009B                     	;# 
  3359  009C                     	;# 
  3360  009D                     	;# 
  3361  009D                     	;# 
  3362  009E                     	;# 
  3363  009F                     	;# 
  3364  010C                     	;# 
  3365  010C                     	;# 
  3366  010D                     	;# 
  3367  010E                     	;# 
  3368  010F                     	;# 
  3369  010F                     	;# 
  3370  0110                     	;# 
  3371  0111                     	;# 
  3372  0112                     	;# 
  3373  0113                     	;# 
  3374  0114                     	;# 
  3375  0115                     	;# 
  3376  0116                     	;# 
  3377  0117                     	;# 
  3378  0118                     	;# 
  3379  0119                     	;# 
  3380  0119                     	;# 
  3381  0119                     	;# 
  3382  011A                     	;# 
  3383  011A                     	;# 
  3384  011A                     	;# 
  3385  011B                     	;# 
  3386  011B                     	;# 
  3387  011B                     	;# 
  3388  011B                     	;# 
  3389  011B                     	;# 
  3390  011C                     	;# 
  3391  011C                     	;# 
  3392  011C                     	;# 
  3393  011D                     	;# 
  3394  011D                     	;# 
  3395  011D                     	;# 
  3396  011E                     	;# 
  3397  011E                     	;# 
  3398  011E                     	;# 
  3399  011F                     	;# 
  3400  011F                     	;# 
  3401  011F                     	;# 
  3402  011F                     	;# 
  3403  011F                     	;# 
  3404  018C                     	;# 
  3405  018D                     	;# 
  3406  018E                     	;# 
  3407  018F                     	;# 
  3408  0190                     	;# 
  3409  0191                     	;# 
  3410  0192                     	;# 
  3411  0196                     	;# 
  3412  0197                     	;# 
  3413  0198                     	;# 
  3414  0199                     	;# 
  3415  019A                     	;# 
  3416  019B                     	;# 
  3417  019C                     	;# 
  3418  020C                     	;# 
  3419  020D                     	;# 
  3420  020E                     	;# 
  3421  020E                     	;# 
  3422  020F                     	;# 
  3423  020F                     	;# 
  3424  0210                     	;# 
  3425  0210                     	;# 
  3426  0211                     	;# 
  3427  0211                     	;# 
  3428  0212                     	;# 
  3429  0213                     	;# 
  3430  0214                     	;# 
  3431  0214                     	;# 
  3432  0215                     	;# 
  3433  0215                     	;# 
  3434  0216                     	;# 
  3435  0216                     	;# 
  3436  0217                     	;# 
  3437  0217                     	;# 
  3438  0218                     	;# 
  3439  0219                     	;# 
  3440  021A                     	;# 
  3441  021A                     	;# 
  3442  021B                     	;# 
  3443  021B                     	;# 
  3444  021C                     	;# 
  3445  021C                     	;# 
  3446  021D                     	;# 
  3447  021D                     	;# 
  3448  021E                     	;# 
  3449  021F                     	;# 
  3450  028C                     	;# 
  3451  028C                     	;# 
  3452  028D                     	;# 
  3453  028D                     	;# 
  3454  028E                     	;# 
  3455  028F                     	;# 
  3456  0290                     	;# 
  3457  0291                     	;# 
  3458  0292                     	;# 
  3459  0292                     	;# 
  3460  0293                     	;# 
  3461  0293                     	;# 
  3462  0294                     	;# 
  3463  0295                     	;# 
  3464  0296                     	;# 
  3465  0297                     	;# 
  3466  0298                     	;# 
  3467  0298                     	;# 
  3468  0299                     	;# 
  3469  0299                     	;# 
  3470  029A                     	;# 
  3471  029B                     	;# 
  3472  029C                     	;# 
  3473  029D                     	;# 
  3474  029F                     	;# 
  3475  030C                     	;# 
  3476  030C                     	;# 
  3477  030D                     	;# 
  3478  030E                     	;# 
  3479  030F                     	;# 
  3480  0310                     	;# 
  3481  0310                     	;# 
  3482  0311                     	;# 
  3483  0312                     	;# 
  3484  0313                     	;# 
  3485  0314                     	;# 
  3486  0314                     	;# 
  3487  0315                     	;# 
  3488  0316                     	;# 
  3489  0317                     	;# 
  3490  0318                     	;# 
  3491  0318                     	;# 
  3492  0319                     	;# 
  3493  031A                     	;# 
  3494  031B                     	;# 
  3495  038C                     	;# 
  3496  038C                     	;# 
  3497  038D                     	;# 
  3498  038E                     	;# 
  3499  0390                     	;# 
  3500  0390                     	;# 
  3501  0391                     	;# 
  3502  0392                     	;# 
  3503  048C                     	;# 
  3504  048C                     	;# 
  3505  048D                     	;# 
  3506  048E                     	;# 
  3507  048F                     	;# 
  3508  048F                     	;# 
  3509  0490                     	;# 
  3510  0491                     	;# 
  3511  0492                     	;# 
  3512  0492                     	;# 
  3513  0493                     	;# 
  3514  0494                     	;# 
  3515  0495                     	;# 
  3516  0495                     	;# 
  3517  0496                     	;# 
  3518  0497                     	;# 
  3519  0498                     	;# 
  3520  0499                     	;# 
  3521  049A                     	;# 
  3522  049B                     	;# 
  3523  049C                     	;# 
  3524  049D                     	;# 
  3525  058C                     	;# 
  3526  058C                     	;# 
  3527  058D                     	;# 
  3528  058E                     	;# 
  3529  058F                     	;# 
  3530  058F                     	;# 
  3531  0590                     	;# 
  3532  0591                     	;# 
  3533  0592                     	;# 
  3534  0593                     	;# 
  3535  059C                     	;# 
  3536  059C                     	;# 
  3537  059D                     	;# 
  3538  059D                     	;# 
  3539  059E                     	;# 
  3540  059F                     	;# 
  3541  060C                     	;# 
  3542  060C                     	;# 
  3543  060D                     	;# 
  3544  060D                     	;# 
  3545  060E                     	;# 
  3546  060F                     	;# 
  3547  0610                     	;# 
  3548  0611                     	;# 
  3549  0612                     	;# 
  3550  0613                     	;# 
  3551  0614                     	;# 
  3552  0616                     	;# 
  3553  0616                     	;# 
  3554  0617                     	;# 
  3555  0617                     	;# 
  3556  0618                     	;# 
  3557  0619                     	;# 
  3558  061A                     	;# 
  3559  061B                     	;# 
  3560  061C                     	;# 
  3561  061D                     	;# 
  3562  061E                     	;# 
  3563  070C                     	;# 
  3564  070D                     	;# 
  3565  070E                     	;# 
  3566  070F                     	;# 
  3567  0710                     	;# 
  3568  0711                     	;# 
  3569  0712                     	;# 
  3570  0713                     	;# 
  3571  0714                     	;# 
  3572  0716                     	;# 
  3573  0717                     	;# 
  3574  0718                     	;# 
  3575  0719                     	;# 
  3576  071A                     	;# 
  3577  071B                     	;# 
  3578  071C                     	;# 
  3579  071D                     	;# 
  3580  071E                     	;# 
  3581  0796                     	;# 
  3582  0797                     	;# 
  3583  0798                     	;# 
  3584  0799                     	;# 
  3585  079A                     	;# 
  3586  079B                     	;# 
  3587  079C                     	;# 
  3588  079D                     	;# 
  3589  080C                     	;# 
  3590  080D                     	;# 
  3591  080E                     	;# 
  3592  080F                     	;# 
  3593  0810                     	;# 
  3594  0811                     	;# 
  3595  0812                     	;# 
  3596  0813                     	;# 
  3597  0814                     	;# 
  3598  081A                     	;# 
  3599  081A                     	;# 
  3600  081B                     	;# 
  3601  081C                     	;# 
  3602  081C                     	;# 
  3603  081D                     	;# 
  3604  081E                     	;# 
  3605  081F                     	;# 
  3606  088C                     	;# 
  3607  088D                     	;# 
  3608  088E                     	;# 
  3609  088F                     	;# 
  3610  0890                     	;# 
  3611  0891                     	;# 
  3612  0892                     	;# 
  3613  0893                     	;# 
  3614  0895                     	;# 
  3615  0896                     	;# 
  3616  0897                     	;# 
  3617  0898                     	;# 
  3618  0899                     	;# 
  3619  089A                     	;# 
  3620  089B                     	;# 
  3621  090C                     	;# 
  3622  090E                     	;# 
  3623  090F                     	;# 
  3624  091F                     	;# 
  3625  098F                     	;# 
  3626  098F                     	;# 
  3627  0990                     	;# 
  3628  0991                     	;# 
  3629  0992                     	;# 
  3630  0993                     	;# 
  3631  0994                     	;# 
  3632  0995                     	;# 
  3633  0996                     	;# 
  3634  0997                     	;# 
  3635  1E0F                     	;# 
  3636  1E10                     	;# 
  3637  1E11                     	;# 
  3638  1E12                     	;# 
  3639  1E13                     	;# 
  3640  1E14                     	;# 
  3641  1E15                     	;# 
  3642  1E16                     	;# 
  3643  1E17                     	;# 
  3644  1E18                     	;# 
  3645  1E19                     	;# 
  3646  1E1A                     	;# 
  3647  1E1B                     	;# 
  3648  1E1C                     	;# 
  3649  1E1D                     	;# 
  3650  1E1E                     	;# 
  3651  1E1F                     	;# 
  3652  1E20                     	;# 
  3653  1E21                     	;# 
  3654  1E22                     	;# 
  3655  1E23                     	;# 
  3656  1E24                     	;# 
  3657  1E25                     	;# 
  3658  1E26                     	;# 
  3659  1E27                     	;# 
  3660  1E28                     	;# 
  3661  1E29                     	;# 
  3662  1E2A                     	;# 
  3663  1E2B                     	;# 
  3664  1E2C                     	;# 
  3665  1E2D                     	;# 
  3666  1E2E                     	;# 
  3667  1E2F                     	;# 
  3668  1E30                     	;# 
  3669  1E31                     	;# 
  3670  1E32                     	;# 
  3671  1E33                     	;# 
  3672  1E34                     	;# 
  3673  1E35                     	;# 
  3674  1E36                     	;# 
  3675  1E37                     	;# 
  3676  1E8F                     	;# 
  3677  1E90                     	;# 
  3678  1E91                     	;# 
  3679  1E92                     	;# 
  3680  1E93                     	;# 
  3681  1E94                     	;# 
  3682  1E95                     	;# 
  3683  1E96                     	;# 
  3684  1E97                     	;# 
  3685  1E9C                     	;# 
  3686  1E9D                     	;# 
  3687  1E9E                     	;# 
  3688  1EA1                     	;# 
  3689  1EA2                     	;# 
  3690  1EA3                     	;# 
  3691  1EA4                     	;# 
  3692  1EA9                     	;# 
  3693  1EAA                     	;# 
  3694  1EB1                     	;# 
  3695  1EB2                     	;# 
  3696  1EB8                     	;# 
  3697  1EB9                     	;# 
  3698  1EBA                     	;# 
  3699  1EBB                     	;# 
  3700  1EBC                     	;# 
  3701  1EBD                     	;# 
  3702  1EBE                     	;# 
  3703  1EC3                     	;# 
  3704  1EC5                     	;# 
  3705  1EC6                     	;# 
  3706  1EC7                     	;# 
  3707  1EC8                     	;# 
  3708  1EC9                     	;# 
  3709  1ECA                     	;# 
  3710  1ECB                     	;# 
  3711  1ECB                     	;# 
  3712  1ECB                     	;# 
  3713  1ECC                     	;# 
  3714  1ECC                     	;# 
  3715  1ECC                     	;# 
  3716  1F10                     	;# 
  3717  1F11                     	;# 
  3718  1F12                     	;# 
  3719  1F14                     	;# 
  3720  1F15                     	;# 
  3721  1F1C                     	;# 
  3722  1F1D                     	;# 
  3723  1F1E                     	;# 
  3724  1F1F                     	;# 
  3725  1F20                     	;# 
  3726  1F21                     	;# 
  3727  1F22                     	;# 
  3728  1F23                     	;# 
  3729  1F24                     	;# 
  3730  1F25                     	;# 
  3731  1F26                     	;# 
  3732  1F27                     	;# 
  3733  1F38                     	;# 
  3734  1F39                     	;# 
  3735  1F3A                     	;# 
  3736  1F3B                     	;# 
  3737  1F3C                     	;# 
  3738  1F3D                     	;# 
  3739  1F3E                     	;# 
  3740  1F3F                     	;# 
  3741  1F43                     	;# 
  3742  1F44                     	;# 
  3743  1F45                     	;# 
  3744  1F46                     	;# 
  3745  1F47                     	;# 
  3746  1F48                     	;# 
  3747  1F49                     	;# 
  3748  1F4A                     	;# 
  3749  1F4E                     	;# 
  3750  1F4F                     	;# 
  3751  1F50                     	;# 
  3752  1F51                     	;# 
  3753  1F52                     	;# 
  3754  1F53                     	;# 
  3755  1F54                     	;# 
  3756  1F55                     	;# 
  3757  1FE4                     	;# 
  3758  1FE5                     	;# 
  3759  1FE6                     	;# 
  3760  1FE7                     	;# 
  3761  1FE8                     	;# 
  3762  1FE8                     	;# 
  3763  1FE9                     	;# 
  3764  1FEA                     	;# 
  3765  1FEB                     	;# 
  3766  1FED                     	;# 
  3767  1FEE                     	;# 
  3768  1FEF                     	;# 
  3769  0000                     	;# 
  3770  0001                     	;# 
  3771  0002                     	;# 
  3772  0003                     	;# 
  3773  0004                     	;# 
  3774  0005                     	;# 
  3775  0006                     	;# 
  3776  0007                     	;# 
  3777  0008                     	;# 
  3778  0009                     	;# 
  3779  000A                     	;# 
  3780  000B                     	;# 
  3781  000C                     	;# 
  3782  000D                     	;# 
  3783  000E                     	;# 
  3784  0012                     	;# 
  3785  0013                     	;# 
  3786  0014                     	;# 
  3787  0018                     	;# 
  3788  0019                     	;# 
  3789  001A                     	;# 
  3790  008C                     	;# 
  3791  008C                     	;# 
  3792  008D                     	;# 
  3793  008E                     	;# 
  3794  008E                     	;# 
  3795  008F                     	;# 
  3796  0090                     	;# 
  3797  0090                     	;# 
  3798  0091                     	;# 
  3799  0092                     	;# 
  3800  0092                     	;# 
  3801  0093                     	;# 
  3802  0094                     	;# 
  3803  0094                     	;# 
  3804  0095                     	;# 
  3805  0096                     	;# 
  3806  0096                     	;# 
  3807  0097                     	;# 
  3808  0098                     	;# 
  3809  0099                     	;# 
  3810  009A                     	;# 
  3811  009B                     	;# 
  3812  009B                     	;# 
  3813  009C                     	;# 
  3814  009D                     	;# 
  3815  009D                     	;# 
  3816  009E                     	;# 
  3817  009F                     	;# 
  3818  010C                     	;# 
  3819  010C                     	;# 
  3820  010D                     	;# 
  3821  010E                     	;# 
  3822  010F                     	;# 
  3823  010F                     	;# 
  3824  0110                     	;# 
  3825  0111                     	;# 
  3826  0112                     	;# 
  3827  0113                     	;# 
  3828  0114                     	;# 
  3829  0115                     	;# 
  3830  0116                     	;# 
  3831  0117                     	;# 
  3832  0118                     	;# 
  3833  0119                     	;# 
  3834  0119                     	;# 
  3835  0119                     	;# 
  3836  011A                     	;# 
  3837  011A                     	;# 
  3838  011A                     	;# 
  3839  011B                     	;# 
  3840  011B                     	;# 
  3841  011B                     	;# 
  3842  011B                     	;# 
  3843  011B                     	;# 
  3844  011C                     	;# 
  3845  011C                     	;# 
  3846  011C                     	;# 
  3847  011D                     	;# 
  3848  011D                     	;# 
  3849  011D                     	;# 
  3850  011E                     	;# 
  3851  011E                     	;# 
  3852  011E                     	;# 
  3853  011F                     	;# 
  3854  011F                     	;# 
  3855  011F                     	;# 
  3856  011F                     	;# 
  3857  011F                     	;# 
  3858  018C                     	;# 
  3859  018D                     	;# 
  3860  018E                     	;# 
  3861  018F                     	;# 
  3862  0190                     	;# 
  3863  0191                     	;# 
  3864  0192                     	;# 
  3865  0196                     	;# 
  3866  0197                     	;# 
  3867  0198                     	;# 
  3868  0199                     	;# 
  3869  019A                     	;# 
  3870  019B                     	;# 
  3871  019C                     	;# 
  3872  020C                     	;# 
  3873  020D                     	;# 
  3874  020E                     	;# 
  3875  020E                     	;# 
  3876  020F                     	;# 
  3877  020F                     	;# 
  3878  0210                     	;# 
  3879  0210                     	;# 
  3880  0211                     	;# 
  3881  0211                     	;# 
  3882  0212                     	;# 
  3883  0213                     	;# 
  3884  0214                     	;# 
  3885  0214                     	;# 
  3886  0215                     	;# 
  3887  0215                     	;# 
  3888  0216                     	;# 
  3889  0216                     	;# 
  3890  0217                     	;# 
  3891  0217                     	;# 
  3892  0218                     	;# 
  3893  0219                     	;# 
  3894  021A                     	;# 
  3895  021A                     	;# 
  3896  021B                     	;# 
  3897  021B                     	;# 
  3898  021C                     	;# 
  3899  021C                     	;# 
  3900  021D                     	;# 
  3901  021D                     	;# 
  3902  021E                     	;# 
  3903  021F                     	;# 
  3904  028C                     	;# 
  3905  028C                     	;# 
  3906  028D                     	;# 
  3907  028D                     	;# 
  3908  028E                     	;# 
  3909  028F                     	;# 
  3910  0290                     	;# 
  3911  0291                     	;# 
  3912  0292                     	;# 
  3913  0292                     	;# 
  3914  0293                     	;# 
  3915  0293                     	;# 
  3916  0294                     	;# 
  3917  0295                     	;# 
  3918  0296                     	;# 
  3919  0297                     	;# 
  3920  0298                     	;# 
  3921  0298                     	;# 
  3922  0299                     	;# 
  3923  0299                     	;# 
  3924  029A                     	;# 
  3925  029B                     	;# 
  3926  029C                     	;# 
  3927  029D                     	;# 
  3928  029F                     	;# 
  3929  030C                     	;# 
  3930  030C                     	;# 
  3931  030D                     	;# 
  3932  030E                     	;# 
  3933  030F                     	;# 
  3934  0310                     	;# 
  3935  0310                     	;# 
  3936  0311                     	;# 
  3937  0312                     	;# 
  3938  0313                     	;# 
  3939  0314                     	;# 
  3940  0314                     	;# 
  3941  0315                     	;# 
  3942  0316                     	;# 
  3943  0317                     	;# 
  3944  0318                     	;# 
  3945  0318                     	;# 
  3946  0319                     	;# 
  3947  031A                     	;# 
  3948  031B                     	;# 
  3949  038C                     	;# 
  3950  038C                     	;# 
  3951  038D                     	;# 
  3952  038E                     	;# 
  3953  0390                     	;# 
  3954  0390                     	;# 
  3955  0391                     	;# 
  3956  0392                     	;# 
  3957  048C                     	;# 
  3958  048C                     	;# 
  3959  048D                     	;# 
  3960  048E                     	;# 
  3961  048F                     	;# 
  3962  048F                     	;# 
  3963  0490                     	;# 
  3964  0491                     	;# 
  3965  0492                     	;# 
  3966  0492                     	;# 
  3967  0493                     	;# 
  3968  0494                     	;# 
  3969  0495                     	;# 
  3970  0495                     	;# 
  3971  0496                     	;# 
  3972  0497                     	;# 
  3973  0498                     	;# 
  3974  0499                     	;# 
  3975  049A                     	;# 
  3976  049B                     	;# 
  3977  049C                     	;# 
  3978  049D                     	;# 
  3979  058C                     	;# 
  3980  058C                     	;# 
  3981  058D                     	;# 
  3982  058E                     	;# 
  3983  058F                     	;# 
  3984  058F                     	;# 
  3985  0590                     	;# 
  3986  0591                     	;# 
  3987  0592                     	;# 
  3988  0593                     	;# 
  3989  059C                     	;# 
  3990  059C                     	;# 
  3991  059D                     	;# 
  3992  059D                     	;# 
  3993  059E                     	;# 
  3994  059F                     	;# 
  3995  060C                     	;# 
  3996  060C                     	;# 
  3997  060D                     	;# 
  3998  060D                     	;# 
  3999  060E                     	;# 
  4000  060F                     	;# 
  4001  0610                     	;# 
  4002  0611                     	;# 
  4003  0612                     	;# 
  4004  0613                     	;# 
  4005  0614                     	;# 
  4006  0616                     	;# 
  4007  0616                     	;# 
  4008  0617                     	;# 
  4009  0617                     	;# 
  4010  0618                     	;# 
  4011  0619                     	;# 
  4012  061A                     	;# 
  4013  061B                     	;# 
  4014  061C                     	;# 
  4015  061D                     	;# 
  4016  061E                     	;# 
  4017  070C                     	;# 
  4018  070D                     	;# 
  4019  070E                     	;# 
  4020  070F                     	;# 
  4021  0710                     	;# 
  4022  0711                     	;# 
  4023  0712                     	;# 
  4024  0713                     	;# 
  4025  0714                     	;# 
  4026  0716                     	;# 
  4027  0717                     	;# 
  4028  0718                     	;# 
  4029  0719                     	;# 
  4030  071A                     	;# 
  4031  071B                     	;# 
  4032  071C                     	;# 
  4033  071D                     	;# 
  4034  071E                     	;# 
  4035  0796                     	;# 
  4036  0797                     	;# 
  4037  0798                     	;# 
  4038  0799                     	;# 
  4039  079A                     	;# 
  4040  079B                     	;# 
  4041  079C                     	;# 
  4042  079D                     	;# 
  4043  080C                     	;# 
  4044  080D                     	;# 
  4045  080E                     	;# 
  4046  080F                     	;# 
  4047  0810                     	;# 
  4048  0811                     	;# 
  4049  0812                     	;# 
  4050  0813                     	;# 
  4051  0814                     	;# 
  4052  081A                     	;# 
  4053  081A                     	;# 
  4054  081B                     	;# 
  4055  081C                     	;# 
  4056  081C                     	;# 
  4057  081D                     	;# 
  4058  081E                     	;# 
  4059  081F                     	;# 
  4060  088C                     	;# 
  4061  088D                     	;# 
  4062  088E                     	;# 
  4063  088F                     	;# 
  4064  0890                     	;# 
  4065  0891                     	;# 
  4066  0892                     	;# 
  4067  0893                     	;# 
  4068  0895                     	;# 
  4069  0896                     	;# 
  4070  0897                     	;# 
  4071  0898                     	;# 
  4072  0899                     	;# 
  4073  089A                     	;# 
  4074  089B                     	;# 
  4075  090C                     	;# 
  4076  090E                     	;# 
  4077  090F                     	;# 
  4078  091F                     	;# 
  4079  098F                     	;# 
  4080  098F                     	;# 
  4081  0990                     	;# 
  4082  0991                     	;# 
  4083  0992                     	;# 
  4084  0993                     	;# 
  4085  0994                     	;# 
  4086  0995                     	;# 
  4087  0996                     	;# 
  4088  0997                     	;# 
  4089  1E0F                     	;# 
  4090  1E10                     	;# 
  4091  1E11                     	;# 
  4092  1E12                     	;# 
  4093  1E13                     	;# 
  4094  1E14                     	;# 
  4095  1E15                     	;# 
  4096  1E16                     	;# 
  4097  1E17                     	;# 
  4098  1E18                     	;# 
  4099  1E19                     	;# 
  4100  1E1A                     	;# 
  4101  1E1B                     	;# 
  4102  1E1C                     	;# 
  4103  1E1D                     	;# 
  4104  1E1E                     	;# 
  4105  1E1F                     	;# 
  4106  1E20                     	;# 
  4107  1E21                     	;# 
  4108  1E22                     	;# 
  4109  1E23                     	;# 
  4110  1E24                     	;# 
  4111  1E25                     	;# 
  4112  1E26                     	;# 
  4113  1E27                     	;# 
  4114  1E28                     	;# 
  4115  1E29                     	;# 
  4116  1E2A                     	;# 
  4117  1E2B                     	;# 
  4118  1E2C                     	;# 
  4119  1E2D                     	;# 
  4120  1E2E                     	;# 
  4121  1E2F                     	;# 
  4122  1E30                     	;# 
  4123  1E31                     	;# 
  4124  1E32                     	;# 
  4125  1E33                     	;# 
  4126  1E34                     	;# 
  4127  1E35                     	;# 
  4128  1E36                     	;# 
  4129  1E37                     	;# 
  4130  1E8F                     	;# 
  4131  1E90                     	;# 
  4132  1E91                     	;# 
  4133  1E92                     	;# 
  4134  1E93                     	;# 
  4135  1E94                     	;# 
  4136  1E95                     	;# 
  4137  1E96                     	;# 
  4138  1E97                     	;# 
  4139  1E9C                     	;# 
  4140  1E9D                     	;# 
  4141  1E9E                     	;# 
  4142  1EA1                     	;# 
  4143  1EA2                     	;# 
  4144  1EA3                     	;# 
  4145  1EA4                     	;# 
  4146  1EA9                     	;# 
  4147  1EAA                     	;# 
  4148  1EB1                     	;# 
  4149  1EB2                     	;# 
  4150  1EB8                     	;# 
  4151  1EB9                     	;# 
  4152  1EBA                     	;# 
  4153  1EBB                     	;# 
  4154  1EBC                     	;# 
  4155  1EBD                     	;# 
  4156  1EBE                     	;# 
  4157  1EC3                     	;# 
  4158  1EC5                     	;# 
  4159  1EC6                     	;# 
  4160  1EC7                     	;# 
  4161  1EC8                     	;# 
  4162  1EC9                     	;# 
  4163  1ECA                     	;# 
  4164  1ECB                     	;# 
  4165  1ECB                     	;# 
  4166  1ECB                     	;# 
  4167  1ECC                     	;# 
  4168  1ECC                     	;# 
  4169  1ECC                     	;# 
  4170  1F10                     	;# 
  4171  1F11                     	;# 
  4172  1F12                     	;# 
  4173  1F14                     	;# 
  4174  1F15                     	;# 
  4175  1F1C                     	;# 
  4176  1F1D                     	;# 
  4177  1F1E                     	;# 
  4178  1F1F                     	;# 
  4179  1F20                     	;# 
  4180  1F21                     	;# 
  4181  1F22                     	;# 
  4182  1F23                     	;# 
  4183  1F24                     	;# 
  4184  1F25                     	;# 
  4185  1F26                     	;# 
  4186  1F27                     	;# 
  4187  1F38                     	;# 
  4188  1F39                     	;# 
  4189  1F3A                     	;# 
  4190  1F3B                     	;# 
  4191  1F3C                     	;# 
  4192  1F3D                     	;# 
  4193  1F3E                     	;# 
  4194  1F3F                     	;# 
  4195  1F43                     	;# 
  4196  1F44                     	;# 
  4197  1F45                     	;# 
  4198  1F46                     	;# 
  4199  1F47                     	;# 
  4200  1F48                     	;# 
  4201  1F49                     	;# 
  4202  1F4A                     	;# 
  4203  1F4E                     	;# 
  4204  1F4F                     	;# 
  4205  1F50                     	;# 
  4206  1F51                     	;# 
  4207  1F52                     	;# 
  4208  1F53                     	;# 
  4209  1F54                     	;# 
  4210  1F55                     	;# 
  4211  1FE4                     	;# 
  4212  1FE5                     	;# 
  4213  1FE6                     	;# 
  4214  1FE7                     	;# 
  4215  1FE8                     	;# 
  4216  1FE8                     	;# 
  4217  1FE9                     	;# 
  4218  1FEA                     	;# 
  4219  1FEB                     	;# 
  4220  1FED                     	;# 
  4221  1FEE                     	;# 
  4222  1FEF                     	;# 
  4223  0000                     	;# 
  4224  0001                     	;# 
  4225  0002                     	;# 
  4226  0003                     	;# 
  4227  0004                     	;# 
  4228  0005                     	;# 
  4229  0006                     	;# 
  4230  0007                     	;# 
  4231  0008                     	;# 
  4232  0009                     	;# 
  4233  000A                     	;# 
  4234  000B                     	;# 
  4235  000C                     	;# 
  4236  000D                     	;# 
  4237  000E                     	;# 
  4238  0012                     	;# 
  4239  0013                     	;# 
  4240  0014                     	;# 
  4241  0018                     	;# 
  4242  0019                     	;# 
  4243  001A                     	;# 
  4244  008C                     	;# 
  4245  008C                     	;# 
  4246  008D                     	;# 
  4247  008E                     	;# 
  4248  008E                     	;# 
  4249  008F                     	;# 
  4250  0090                     	;# 
  4251  0090                     	;# 
  4252  0091                     	;# 
  4253  0092                     	;# 
  4254  0092                     	;# 
  4255  0093                     	;# 
  4256  0094                     	;# 
  4257  0094                     	;# 
  4258  0095                     	;# 
  4259  0096                     	;# 
  4260  0096                     	;# 
  4261  0097                     	;# 
  4262  0098                     	;# 
  4263  0099                     	;# 
  4264  009A                     	;# 
  4265  009B                     	;# 
  4266  009B                     	;# 
  4267  009C                     	;# 
  4268  009D                     	;# 
  4269  009D                     	;# 
  4270  009E                     	;# 
  4271  009F                     	;# 
  4272  010C                     	;# 
  4273  010C                     	;# 
  4274  010D                     	;# 
  4275  010E                     	;# 
  4276  010F                     	;# 
  4277  010F                     	;# 
  4278  0110                     	;# 
  4279  0111                     	;# 
  4280  0112                     	;# 
  4281  0113                     	;# 
  4282  0114                     	;# 
  4283  0115                     	;# 
  4284  0116                     	;# 
  4285  0117                     	;# 
  4286  0118                     	;# 
  4287  0119                     	;# 
  4288  0119                     	;# 
  4289  0119                     	;# 
  4290  011A                     	;# 
  4291  011A                     	;# 
  4292  011A                     	;# 
  4293  011B                     	;# 
  4294  011B                     	;# 
  4295  011B                     	;# 
  4296  011B                     	;# 
  4297  011B                     	;# 
  4298  011C                     	;# 
  4299  011C                     	;# 
  4300  011C                     	;# 
  4301  011D                     	;# 
  4302  011D                     	;# 
  4303  011D                     	;# 
  4304  011E                     	;# 
  4305  011E                     	;# 
  4306  011E                     	;# 
  4307  011F                     	;# 
  4308  011F                     	;# 
  4309  011F                     	;# 
  4310  011F                     	;# 
  4311  011F                     	;# 
  4312  018C                     	;# 
  4313  018D                     	;# 
  4314  018E                     	;# 
  4315  018F                     	;# 
  4316  0190                     	;# 
  4317  0191                     	;# 
  4318  0192                     	;# 
  4319  0196                     	;# 
  4320  0197                     	;# 
  4321  0198                     	;# 
  4322  0199                     	;# 
  4323  019A                     	;# 
  4324  019B                     	;# 
  4325  019C                     	;# 
  4326  020C                     	;# 
  4327  020D                     	;# 
  4328  020E                     	;# 
  4329  020E                     	;# 
  4330  020F                     	;# 
  4331  020F                     	;# 
  4332  0210                     	;# 
  4333  0210                     	;# 
  4334  0211                     	;# 
  4335  0211                     	;# 
  4336  0212                     	;# 
  4337  0213                     	;# 
  4338  0214                     	;# 
  4339  0214                     	;# 
  4340  0215                     	;# 
  4341  0215                     	;# 
  4342  0216                     	;# 
  4343  0216                     	;# 
  4344  0217                     	;# 
  4345  0217                     	;# 
  4346  0218                     	;# 
  4347  0219                     	;# 
  4348  021A                     	;# 
  4349  021A                     	;# 
  4350  021B                     	;# 
  4351  021B                     	;# 
  4352  021C                     	;# 
  4353  021C                     	;# 
  4354  021D                     	;# 
  4355  021D                     	;# 
  4356  021E                     	;# 
  4357  021F                     	;# 
  4358  028C                     	;# 
  4359  028C                     	;# 
  4360  028D                     	;# 
  4361  028D                     	;# 
  4362  028E                     	;# 
  4363  028F                     	;# 
  4364  0290                     	;# 
  4365  0291                     	;# 
  4366  0292                     	;# 
  4367  0292                     	;# 
  4368  0293                     	;# 
  4369  0293                     	;# 
  4370  0294                     	;# 
  4371  0295                     	;# 
  4372  0296                     	;# 
  4373  0297                     	;# 
  4374  0298                     	;# 
  4375  0298                     	;# 
  4376  0299                     	;# 
  4377  0299                     	;# 
  4378  029A                     	;# 
  4379  029B                     	;# 
  4380  029C                     	;# 
  4381  029D                     	;# 
  4382  029F                     	;# 
  4383  030C                     	;# 
  4384  030C                     	;# 
  4385  030D                     	;# 
  4386  030E                     	;# 
  4387  030F                     	;# 
  4388  0310                     	;# 
  4389  0310                     	;# 
  4390  0311                     	;# 
  4391  0312                     	;# 
  4392  0313                     	;# 
  4393  0314                     	;# 
  4394  0314                     	;# 
  4395  0315                     	;# 
  4396  0316                     	;# 
  4397  0317                     	;# 
  4398  0318                     	;# 
  4399  0318                     	;# 
  4400  0319                     	;# 
  4401  031A                     	;# 
  4402  031B                     	;# 
  4403  038C                     	;# 
  4404  038C                     	;# 
  4405  038D                     	;# 
  4406  038E                     	;# 
  4407  0390                     	;# 
  4408  0390                     	;# 
  4409  0391                     	;# 
  4410  0392                     	;# 
  4411  048C                     	;# 
  4412  048C                     	;# 
  4413  048D                     	;# 
  4414  048E                     	;# 
  4415  048F                     	;# 
  4416  048F                     	;# 
  4417  0490                     	;# 
  4418  0491                     	;# 
  4419  0492                     	;# 
  4420  0492                     	;# 
  4421  0493                     	;# 
  4422  0494                     	;# 
  4423  0495                     	;# 
  4424  0495                     	;# 
  4425  0496                     	;# 
  4426  0497                     	;# 
  4427  0498                     	;# 
  4428  0499                     	;# 
  4429  049A                     	;# 
  4430  049B                     	;# 
  4431  049C                     	;# 
  4432  049D                     	;# 
  4433  058C                     	;# 
  4434  058C                     	;# 
  4435  058D                     	;# 
  4436  058E                     	;# 
  4437  058F                     	;# 
  4438  058F                     	;# 
  4439  0590                     	;# 
  4440  0591                     	;# 
  4441  0592                     	;# 
  4442  0593                     	;# 
  4443  059C                     	;# 
  4444  059C                     	;# 
  4445  059D                     	;# 
  4446  059D                     	;# 
  4447  059E                     	;# 
  4448  059F                     	;# 
  4449  060C                     	;# 
  4450  060C                     	;# 
  4451  060D                     	;# 
  4452  060D                     	;# 
  4453  060E                     	;# 
  4454  060F                     	;# 
  4455  0610                     	;# 
  4456  0611                     	;# 
  4457  0612                     	;# 
  4458  0613                     	;# 
  4459  0614                     	;# 
  4460  0616                     	;# 
  4461  0616                     	;# 
  4462  0617                     	;# 
  4463  0617                     	;# 
  4464  0618                     	;# 
  4465  0619                     	;# 
  4466  061A                     	;# 
  4467  061B                     	;# 
  4468  061C                     	;# 
  4469  061D                     	;# 
  4470  061E                     	;# 
  4471  070C                     	;# 
  4472  070D                     	;# 
  4473  070E                     	;# 
  4474  070F                     	;# 
  4475  0710                     	;# 
  4476  0711                     	;# 
  4477  0712                     	;# 
  4478  0713                     	;# 
  4479  0714                     	;# 
  4480  0716                     	;# 
  4481  0717                     	;# 
  4482  0718                     	;# 
  4483  0719                     	;# 
  4484  071A                     	;# 
  4485  071B                     	;# 
  4486  071C                     	;# 
  4487  071D                     	;# 
  4488  071E                     	;# 
  4489  0796                     	;# 
  4490  0797                     	;# 
  4491  0798                     	;# 
  4492  0799                     	;# 
  4493  079A                     	;# 
  4494  079B                     	;# 
  4495  079C                     	;# 
  4496  079D                     	;# 
  4497  080C                     	;# 
  4498  080D                     	;# 
  4499  080E                     	;# 
  4500  080F                     	;# 
  4501  0810                     	;# 
  4502  0811                     	;# 
  4503  0812                     	;# 
  4504  0813                     	;# 
  4505  0814                     	;# 
  4506  081A                     	;# 
  4507  081A                     	;# 
  4508  081B                     	;# 
  4509  081C                     	;# 
  4510  081C                     	;# 
  4511  081D                     	;# 
  4512  081E                     	;# 
  4513  081F                     	;# 
  4514  088C                     	;# 
  4515  088D                     	;# 
  4516  088E                     	;# 
  4517  088F                     	;# 
  4518  0890                     	;# 
  4519  0891                     	;# 
  4520  0892                     	;# 
  4521  0893                     	;# 
  4522  0895                     	;# 
  4523  0896                     	;# 
  4524  0897                     	;# 
  4525  0898                     	;# 
  4526  0899                     	;# 
  4527  089A                     	;# 
  4528  089B                     	;# 
  4529  090C                     	;# 
  4530  090E                     	;# 
  4531  090F                     	;# 
  4532  091F                     	;# 
  4533  098F                     	;# 
  4534  098F                     	;# 
  4535  0990                     	;# 
  4536  0991                     	;# 
  4537  0992                     	;# 
  4538  0993                     	;# 
  4539  0994                     	;# 
  4540  0995                     	;# 
  4541  0996                     	;# 
  4542  0997                     	;# 
  4543  1E0F                     	;# 
  4544  1E10                     	;# 
  4545  1E11                     	;# 
  4546  1E12                     	;# 
  4547  1E13                     	;# 
  4548  1E14                     	;# 
  4549  1E15                     	;# 
  4550  1E16                     	;# 
  4551  1E17                     	;# 
  4552  1E18                     	;# 
  4553  1E19                     	;# 
  4554  1E1A                     	;# 
  4555  1E1B                     	;# 
  4556  1E1C                     	;# 
  4557  1E1D                     	;# 
  4558  1E1E                     	;# 
  4559  1E1F                     	;# 
  4560  1E20                     	;# 
  4561  1E21                     	;# 
  4562  1E22                     	;# 
  4563  1E23                     	;# 
  4564  1E24                     	;# 
  4565  1E25                     	;# 
  4566  1E26                     	;# 
  4567  1E27                     	;# 
  4568  1E28                     	;# 
  4569  1E29                     	;# 
  4570  1E2A                     	;# 
  4571  1E2B                     	;# 
  4572  1E2C                     	;# 
  4573  1E2D                     	;# 
  4574  1E2E                     	;# 
  4575  1E2F                     	;# 
  4576  1E30                     	;# 
  4577  1E31                     	;# 
  4578  1E32                     	;# 
  4579  1E33                     	;# 
  4580  1E34                     	;# 
  4581  1E35                     	;# 
  4582  1E36                     	;# 
  4583  1E37                     	;# 
  4584  1E8F                     	;# 
  4585  1E90                     	;# 
  4586  1E91                     	;# 
  4587  1E92                     	;# 
  4588  1E93                     	;# 
  4589  1E94                     	;# 
  4590  1E95                     	;# 
  4591  1E96                     	;# 
  4592  1E97                     	;# 
  4593  1E9C                     	;# 
  4594  1E9D                     	;# 
  4595  1E9E                     	;# 
  4596  1EA1                     	;# 
  4597  1EA2                     	;# 
  4598  1EA3                     	;# 
  4599  1EA4                     	;# 
  4600  1EA9                     	;# 
  4601  1EAA                     	;# 
  4602  1EB1                     	;# 
  4603  1EB2                     	;# 
  4604  1EB8                     	;# 
  4605  1EB9                     	;# 
  4606  1EBA                     	;# 
  4607  1EBB                     	;# 
  4608  1EBC                     	;# 
  4609  1EBD                     	;# 
  4610  1EBE                     	;# 
  4611  1EC3                     	;# 
  4612  1EC5                     	;# 
  4613  1EC6                     	;# 
  4614  1EC7                     	;# 
  4615  1EC8                     	;# 
  4616  1EC9                     	;# 
  4617  1ECA                     	;# 
  4618  1ECB                     	;# 
  4619  1ECB                     	;# 
  4620  1ECB                     	;# 
  4621  1ECC                     	;# 
  4622  1ECC                     	;# 
  4623  1ECC                     	;# 
  4624  1F10                     	;# 
  4625  1F11                     	;# 
  4626  1F12                     	;# 
  4627  1F14                     	;# 
  4628  1F15                     	;# 
  4629  1F1C                     	;# 
  4630  1F1D                     	;# 
  4631  1F1E                     	;# 
  4632  1F1F                     	;# 
  4633  1F20                     	;# 
  4634  1F21                     	;# 
  4635  1F22                     	;# 
  4636  1F23                     	;# 
  4637  1F24                     	;# 
  4638  1F25                     	;# 
  4639  1F26                     	;# 
  4640  1F27                     	;# 
  4641  1F38                     	;# 
  4642  1F39                     	;# 
  4643  1F3A                     	;# 
  4644  1F3B                     	;# 
  4645  1F3C                     	;# 
  4646  1F3D                     	;# 
  4647  1F3E                     	;# 
  4648  1F3F                     	;# 
  4649  1F43                     	;# 
  4650  1F44                     	;# 
  4651  1F45                     	;# 
  4652  1F46                     	;# 
  4653  1F47                     	;# 
  4654  1F48                     	;# 
  4655  1F49                     	;# 
  4656  1F4A                     	;# 
  4657  1F4E                     	;# 
  4658  1F4F                     	;# 
  4659  1F50                     	;# 
  4660  1F51                     	;# 
  4661  1F52                     	;# 
  4662  1F53                     	;# 
  4663  1F54                     	;# 
  4664  1F55                     	;# 
  4665  1FE4                     	;# 
  4666  1FE5                     	;# 
  4667  1FE6                     	;# 
  4668  1FE7                     	;# 
  4669  1FE8                     	;# 
  4670  1FE8                     	;# 
  4671  1FE9                     	;# 
  4672  1FEA                     	;# 
  4673  1FEB                     	;# 
  4674  1FED                     	;# 
  4675  1FEE                     	;# 
  4676  1FEF                     	;# 
  4677  0000                     	;# 
  4678  0001                     	;# 
  4679  0002                     	;# 
  4680  0003                     	;# 
  4681  0004                     	;# 
  4682  0005                     	;# 
  4683  0006                     	;# 
  4684  0007                     	;# 
  4685  0008                     	;# 
  4686  0009                     	;# 
  4687  000A                     	;# 
  4688  000B                     	;# 
  4689  000C                     	;# 
  4690  000D                     	;# 
  4691  000E                     	;# 
  4692  0012                     	;# 
  4693  0013                     	;# 
  4694  0014                     	;# 
  4695  0018                     	;# 
  4696  0019                     	;# 
  4697  001A                     	;# 
  4698  008C                     	;# 
  4699  008C                     	;# 
  4700  008D                     	;# 
  4701  008E                     	;# 
  4702  008E                     	;# 
  4703  008F                     	;# 
  4704  0090                     	;# 
  4705  0090                     	;# 
  4706  0091                     	;# 
  4707  0092                     	;# 
  4708  0092                     	;# 
  4709  0093                     	;# 
  4710  0094                     	;# 
  4711  0094                     	;# 
  4712  0095                     	;# 
  4713  0096                     	;# 
  4714  0096                     	;# 
  4715  0097                     	;# 
  4716  0098                     	;# 
  4717  0099                     	;# 
  4718  009A                     	;# 
  4719  009B                     	;# 
  4720  009B                     	;# 
  4721  009C                     	;# 
  4722  009D                     	;# 
  4723  009D                     	;# 
  4724  009E                     	;# 
  4725  009F                     	;# 
  4726  010C                     	;# 
  4727  010C                     	;# 
  4728  010D                     	;# 
  4729  010E                     	;# 
  4730  010F                     	;# 
  4731  010F                     	;# 
  4732  0110                     	;# 
  4733  0111                     	;# 
  4734  0112                     	;# 
  4735  0113                     	;# 
  4736  0114                     	;# 
  4737  0115                     	;# 
  4738  0116                     	;# 
  4739  0117                     	;# 
  4740  0118                     	;# 
  4741  0119                     	;# 
  4742  0119                     	;# 
  4743  0119                     	;# 
  4744  011A                     	;# 
  4745  011A                     	;# 
  4746  011A                     	;# 
  4747  011B                     	;# 
  4748  011B                     	;# 
  4749  011B                     	;# 
  4750  011B                     	;# 
  4751  011B                     	;# 
  4752  011C                     	;# 
  4753  011C                     	;# 
  4754  011C                     	;# 
  4755  011D                     	;# 
  4756  011D                     	;# 
  4757  011D                     	;# 
  4758  011E                     	;# 
  4759  011E                     	;# 
  4760  011E                     	;# 
  4761  011F                     	;# 
  4762  011F                     	;# 
  4763  011F                     	;# 
  4764  011F                     	;# 
  4765  011F                     	;# 
  4766  018C                     	;# 
  4767  018D                     	;# 
  4768  018E                     	;# 
  4769  018F                     	;# 
  4770  0190                     	;# 
  4771  0191                     	;# 
  4772  0192                     	;# 
  4773  0196                     	;# 
  4774  0197                     	;# 
  4775  0198                     	;# 
  4776  0199                     	;# 
  4777  019A                     	;# 
  4778  019B                     	;# 
  4779  019C                     	;# 
  4780  020C                     	;# 
  4781  020D                     	;# 
  4782  020E                     	;# 
  4783  020E                     	;# 
  4784  020F                     	;# 
  4785  020F                     	;# 
  4786  0210                     	;# 
  4787  0210                     	;# 
  4788  0211                     	;# 
  4789  0211                     	;# 
  4790  0212                     	;# 
  4791  0213                     	;# 
  4792  0214                     	;# 
  4793  0214                     	;# 
  4794  0215                     	;# 
  4795  0215                     	;# 
  4796  0216                     	;# 
  4797  0216                     	;# 
  4798  0217                     	;# 
  4799  0217                     	;# 
  4800  0218                     	;# 
  4801  0219                     	;# 
  4802  021A                     	;# 
  4803  021A                     	;# 
  4804  021B                     	;# 
  4805  021B                     	;# 
  4806  021C                     	;# 
  4807  021C                     	;# 
  4808  021D                     	;# 
  4809  021D                     	;# 
  4810  021E                     	;# 
  4811  021F                     	;# 
  4812  028C                     	;# 
  4813  028C                     	;# 
  4814  028D                     	;# 
  4815  028D                     	;# 
  4816  028E                     	;# 
  4817  028F                     	;# 
  4818  0290                     	;# 
  4819  0291                     	;# 
  4820  0292                     	;# 
  4821  0292                     	;# 
  4822  0293                     	;# 
  4823  0293                     	;# 
  4824  0294                     	;# 
  4825  0295                     	;# 
  4826  0296                     	;# 
  4827  0297                     	;# 
  4828  0298                     	;# 
  4829  0298                     	;# 
  4830  0299                     	;# 
  4831  0299                     	;# 
  4832  029A                     	;# 
  4833  029B                     	;# 
  4834  029C                     	;# 
  4835  029D                     	;# 
  4836  029F                     	;# 
  4837  030C                     	;# 
  4838  030C                     	;# 
  4839  030D                     	;# 
  4840  030E                     	;# 
  4841  030F                     	;# 
  4842  0310                     	;# 
  4843  0310                     	;# 
  4844  0311                     	;# 
  4845  0312                     	;# 
  4846  0313                     	;# 
  4847  0314                     	;# 
  4848  0314                     	;# 
  4849  0315                     	;# 
  4850  0316                     	;# 
  4851  0317                     	;# 
  4852  0318                     	;# 
  4853  0318                     	;# 
  4854  0319                     	;# 
  4855  031A                     	;# 
  4856  031B                     	;# 
  4857  038C                     	;# 
  4858  038C                     	;# 
  4859  038D                     	;# 
  4860  038E                     	;# 
  4861  0390                     	;# 
  4862  0390                     	;# 
  4863  0391                     	;# 
  4864  0392                     	;# 
  4865  048C                     	;# 
  4866  048C                     	;# 
  4867  048D                     	;# 
  4868  048E                     	;# 
  4869  048F                     	;# 
  4870  048F                     	;# 
  4871  0490                     	;# 
  4872  0491                     	;# 
  4873  0492                     	;# 
  4874  0492                     	;# 
  4875  0493                     	;# 
  4876  0494                     	;# 
  4877  0495                     	;# 
  4878  0495                     	;# 
  4879  0496                     	;# 
  4880  0497                     	;# 
  4881  0498                     	;# 
  4882  0499                     	;# 
  4883  049A                     	;# 
  4884  049B                     	;# 
  4885  049C                     	;# 
  4886  049D                     	;# 
  4887  058C                     	;# 
  4888  058C                     	;# 
  4889  058D                     	;# 
  4890  058E                     	;# 
  4891  058F                     	;# 
  4892  058F                     	;# 
  4893  0590                     	;# 
  4894  0591                     	;# 
  4895  0592                     	;# 
  4896  0593                     	;# 
  4897  059C                     	;# 
  4898  059C                     	;# 
  4899  059D                     	;# 
  4900  059D                     	;# 
  4901  059E                     	;# 
  4902  059F                     	;# 
  4903  060C                     	;# 
  4904  060C                     	;# 
  4905  060D                     	;# 
  4906  060D                     	;# 
  4907  060E                     	;# 
  4908  060F                     	;# 
  4909  0610                     	;# 
  4910  0611                     	;# 
  4911  0612                     	;# 
  4912  0613                     	;# 
  4913  0614                     	;# 
  4914  0616                     	;# 
  4915  0616                     	;# 
  4916  0617                     	;# 
  4917  0617                     	;# 
  4918  0618                     	;# 
  4919  0619                     	;# 
  4920  061A                     	;# 
  4921  061B                     	;# 
  4922  061C                     	;# 
  4923  061D                     	;# 
  4924  061E                     	;# 
  4925  070C                     	;# 
  4926  070D                     	;# 
  4927  070E                     	;# 
  4928  070F                     	;# 
  4929  0710                     	;# 
  4930  0711                     	;# 
  4931  0712                     	;# 
  4932  0713                     	;# 
  4933  0714                     	;# 
  4934  0716                     	;# 
  4935  0717                     	;# 
  4936  0718                     	;# 
  4937  0719                     	;# 
  4938  071A                     	;# 
  4939  071B                     	;# 
  4940  071C                     	;# 
  4941  071D                     	;# 
  4942  071E                     	;# 
  4943  0796                     	;# 
  4944  0797                     	;# 
  4945  0798                     	;# 
  4946  0799                     	;# 
  4947  079A                     	;# 
  4948  079B                     	;# 
  4949  079C                     	;# 
  4950  079D                     	;# 
  4951  080C                     	;# 
  4952  080D                     	;# 
  4953  080E                     	;# 
  4954  080F                     	;# 
  4955  0810                     	;# 
  4956  0811                     	;# 
  4957  0812                     	;# 
  4958  0813                     	;# 
  4959  0814                     	;# 
  4960  081A                     	;# 
  4961  081A                     	;# 
  4962  081B                     	;# 
  4963  081C                     	;# 
  4964  081C                     	;# 
  4965  081D                     	;# 
  4966  081E                     	;# 
  4967  081F                     	;# 
  4968  088C                     	;# 
  4969  088D                     	;# 
  4970  088E                     	;# 
  4971  088F                     	;# 
  4972  0890                     	;# 
  4973  0891                     	;# 
  4974  0892                     	;# 
  4975  0893                     	;# 
  4976  0895                     	;# 
  4977  0896                     	;# 
  4978  0897                     	;# 
  4979  0898                     	;# 
  4980  0899                     	;# 
  4981  089A                     	;# 
  4982  089B                     	;# 
  4983  090C                     	;# 
  4984  090E                     	;# 
  4985  090F                     	;# 
  4986  091F                     	;# 
  4987  098F                     	;# 
  4988  098F                     	;# 
  4989  0990                     	;# 
  4990  0991                     	;# 
  4991  0992                     	;# 
  4992  0993                     	;# 
  4993  0994                     	;# 
  4994  0995                     	;# 
  4995  0996                     	;# 
  4996  0997                     	;# 
  4997  1E0F                     	;# 
  4998  1E10                     	;# 
  4999  1E11                     	;# 
  5000  1E12                     	;# 
  5001  1E13                     	;# 
  5002  1E14                     	;# 
  5003  1E15                     	;# 
  5004  1E16                     	;# 
  5005  1E17                     	;# 
  5006  1E18                     	;# 
  5007  1E19                     	;# 
  5008  1E1A                     	;# 
  5009  1E1B                     	;# 
  5010  1E1C                     	;# 
  5011  1E1D                     	;# 
  5012  1E1E                     	;# 
  5013  1E1F                     	;# 
  5014  1E20                     	;# 
  5015  1E21                     	;# 
  5016  1E22                     	;# 
  5017  1E23                     	;# 
  5018  1E24                     	;# 
  5019  1E25                     	;# 
  5020  1E26                     	;# 
  5021  1E27                     	;# 
  5022  1E28                     	;# 
  5023  1E29                     	;# 
  5024  1E2A                     	;# 
  5025  1E2B                     	;# 
  5026  1E2C                     	;# 
  5027  1E2D                     	;# 
  5028  1E2E                     	;# 
  5029  1E2F                     	;# 
  5030  1E30                     	;# 
  5031  1E31                     	;# 
  5032  1E32                     	;# 
  5033  1E33                     	;# 
  5034  1E34                     	;# 
  5035  1E35                     	;# 
  5036  1E36                     	;# 
  5037  1E37                     	;# 
  5038  1E8F                     	;# 
  5039  1E90                     	;# 
  5040  1E91                     	;# 
  5041  1E92                     	;# 
  5042  1E93                     	;# 
  5043  1E94                     	;# 
  5044  1E95                     	;# 
  5045  1E96                     	;# 
  5046  1E97                     	;# 
  5047  1E9C                     	;# 
  5048  1E9D                     	;# 
  5049  1E9E                     	;# 
  5050  1EA1                     	;# 
  5051  1EA2                     	;# 
  5052  1EA3                     	;# 
  5053  1EA4                     	;# 
  5054  1EA9                     	;# 
  5055  1EAA                     	;# 
  5056  1EB1                     	;# 
  5057  1EB2                     	;# 
  5058  1EB8                     	;# 
  5059  1EB9                     	;# 
  5060  1EBA                     	;# 
  5061  1EBB                     	;# 
  5062  1EBC                     	;# 
  5063  1EBD                     	;# 
  5064  1EBE                     	;# 
  5065  1EC3                     	;# 
  5066  1EC5                     	;# 
  5067  1EC6                     	;# 
  5068  1EC7                     	;# 
  5069  1EC8                     	;# 
  5070  1EC9                     	;# 
  5071  1ECA                     	;# 
  5072  1ECB                     	;# 
  5073  1ECB                     	;# 
  5074  1ECB                     	;# 
  5075  1ECC                     	;# 
  5076  1ECC                     	;# 
  5077  1ECC                     	;# 
  5078  1F10                     	;# 
  5079  1F11                     	;# 
  5080  1F12                     	;# 
  5081  1F14                     	;# 
  5082  1F15                     	;# 
  5083  1F1C                     	;# 
  5084  1F1D                     	;# 
  5085  1F1E                     	;# 
  5086  1F1F                     	;# 
  5087  1F20                     	;# 
  5088  1F21                     	;# 
  5089  1F22                     	;# 
  5090  1F23                     	;# 
  5091  1F24                     	;# 
  5092  1F25                     	;# 
  5093  1F26                     	;# 
  5094  1F27                     	;# 
  5095  1F38                     	;# 
  5096  1F39                     	;# 
  5097  1F3A                     	;# 
  5098  1F3B                     	;# 
  5099  1F3C                     	;# 
  5100  1F3D                     	;# 
  5101  1F3E                     	;# 
  5102  1F3F                     	;# 
  5103  1F43                     	;# 
  5104  1F44                     	;# 
  5105  1F45                     	;# 
  5106  1F46                     	;# 
  5107  1F47                     	;# 
  5108  1F48                     	;# 
  5109  1F49                     	;# 
  5110  1F4A                     	;# 
  5111  1F4E                     	;# 
  5112  1F4F                     	;# 
  5113  1F50                     	;# 
  5114  1F51                     	;# 
  5115  1F52                     	;# 
  5116  1F53                     	;# 
  5117  1F54                     	;# 
  5118  1F55                     	;# 
  5119  1FE4                     	;# 
  5120  1FE5                     	;# 
  5121  1FE6                     	;# 
  5122  1FE7                     	;# 
  5123  1FE8                     	;# 
  5124  1FE8                     	;# 
  5125  1FE9                     	;# 
  5126  1FEA                     	;# 
  5127  1FEB                     	;# 
  5128  1FED                     	;# 
  5129  1FEE                     	;# 
  5130  1FEF                     	;# 
  5131  0000                     	;# 
  5132  0001                     	;# 
  5133  0002                     	;# 
  5134  0003                     	;# 
  5135  0004                     	;# 
  5136  0005                     	;# 
  5137  0006                     	;# 
  5138  0007                     	;# 
  5139  0008                     	;# 
  5140  0009                     	;# 
  5141  000A                     	;# 
  5142  000B                     	;# 
  5143  000C                     	;# 
  5144  000D                     	;# 
  5145  000E                     	;# 
  5146  0012                     	;# 
  5147  0013                     	;# 
  5148  0014                     	;# 
  5149  0018                     	;# 
  5150  0019                     	;# 
  5151  001A                     	;# 
  5152  008C                     	;# 
  5153  008C                     	;# 
  5154  008D                     	;# 
  5155  008E                     	;# 
  5156  008E                     	;# 
  5157  008F                     	;# 
  5158  0090                     	;# 
  5159  0090                     	;# 
  5160  0091                     	;# 
  5161  0092                     	;# 
  5162  0092                     	;# 
  5163  0093                     	;# 
  5164  0094                     	;# 
  5165  0094                     	;# 
  5166  0095                     	;# 
  5167  0096                     	;# 
  5168  0096                     	;# 
  5169  0097                     	;# 
  5170  0098                     	;# 
  5171  0099                     	;# 
  5172  009A                     	;# 
  5173  009B                     	;# 
  5174  009B                     	;# 
  5175  009C                     	;# 
  5176  009D                     	;# 
  5177  009D                     	;# 
  5178  009E                     	;# 
  5179  009F                     	;# 
  5180  010C                     	;# 
  5181  010C                     	;# 
  5182  010D                     	;# 
  5183  010E                     	;# 
  5184  010F                     	;# 
  5185  010F                     	;# 
  5186  0110                     	;# 
  5187  0111                     	;# 
  5188  0112                     	;# 
  5189  0113                     	;# 
  5190  0114                     	;# 
  5191  0115                     	;# 
  5192  0116                     	;# 
  5193  0117                     	;# 
  5194  0118                     	;# 
  5195  0119                     	;# 
  5196  0119                     	;# 
  5197  0119                     	;# 
  5198  011A                     	;# 
  5199  011A                     	;# 
  5200  011A                     	;# 
  5201  011B                     	;# 
  5202  011B                     	;# 
  5203  011B                     	;# 
  5204  011B                     	;# 
  5205  011B                     	;# 
  5206  011C                     	;# 
  5207  011C                     	;# 
  5208  011C                     	;# 
  5209  011D                     	;# 
  5210  011D                     	;# 
  5211  011D                     	;# 
  5212  011E                     	;# 
  5213  011E                     	;# 
  5214  011E                     	;# 
  5215  011F                     	;# 
  5216  011F                     	;# 
  5217  011F                     	;# 
  5218  011F                     	;# 
  5219  011F                     	;# 
  5220  018C                     	;# 
  5221  018D                     	;# 
  5222  018E                     	;# 
  5223  018F                     	;# 
  5224  0190                     	;# 
  5225  0191                     	;# 
  5226  0192                     	;# 
  5227  0196                     	;# 
  5228  0197                     	;# 
  5229  0198                     	;# 
  5230  0199                     	;# 
  5231  019A                     	;# 
  5232  019B                     	;# 
  5233  019C                     	;# 
  5234  020C                     	;# 
  5235  020D                     	;# 
  5236  020E                     	;# 
  5237  020E                     	;# 
  5238  020F                     	;# 
  5239  020F                     	;# 
  5240  0210                     	;# 
  5241  0210                     	;# 
  5242  0211                     	;# 
  5243  0211                     	;# 
  5244  0212                     	;# 
  5245  0213                     	;# 
  5246  0214                     	;# 
  5247  0214                     	;# 
  5248  0215                     	;# 
  5249  0215                     	;# 
  5250  0216                     	;# 
  5251  0216                     	;# 
  5252  0217                     	;# 
  5253  0217                     	;# 
  5254  0218                     	;# 
  5255  0219                     	;# 
  5256  021A                     	;# 
  5257  021A                     	;# 
  5258  021B                     	;# 
  5259  021B                     	;# 
  5260  021C                     	;# 
  5261  021C                     	;# 
  5262  021D                     	;# 
  5263  021D                     	;# 
  5264  021E                     	;# 
  5265  021F                     	;# 
  5266  028C                     	;# 
  5267  028C                     	;# 
  5268  028D                     	;# 
  5269  028D                     	;# 
  5270  028E                     	;# 
  5271  028F                     	;# 
  5272  0290                     	;# 
  5273  0291                     	;# 
  5274  0292                     	;# 
  5275  0292                     	;# 
  5276  0293                     	;# 
  5277  0293                     	;# 
  5278  0294                     	;# 
  5279  0295                     	;# 
  5280  0296                     	;# 
  5281  0297                     	;# 
  5282  0298                     	;# 
  5283  0298                     	;# 
  5284  0299                     	;# 
  5285  0299                     	;# 
  5286  029A                     	;# 
  5287  029B                     	;# 
  5288  029C                     	;# 
  5289  029D                     	;# 
  5290  029F                     	;# 
  5291  030C                     	;# 
  5292  030C                     	;# 
  5293  030D                     	;# 
  5294  030E                     	;# 
  5295  030F                     	;# 
  5296  0310                     	;# 
  5297  0310                     	;# 
  5298  0311                     	;# 
  5299  0312                     	;# 
  5300  0313                     	;# 
  5301  0314                     	;# 
  5302  0314                     	;# 
  5303  0315                     	;# 
  5304  0316                     	;# 
  5305  0317                     	;# 
  5306  0318                     	;# 
  5307  0318                     	;# 
  5308  0319                     	;# 
  5309  031A                     	;# 
  5310  031B                     	;# 
  5311  038C                     	;# 
  5312  038C                     	;# 
  5313  038D                     	;# 
  5314  038E                     	;# 
  5315  0390                     	;# 
  5316  0390                     	;# 
  5317  0391                     	;# 
  5318  0392                     	;# 
  5319  048C                     	;# 
  5320  048C                     	;# 
  5321  048D                     	;# 
  5322  048E                     	;# 
  5323  048F                     	;# 
  5324  048F                     	;# 
  5325  0490                     	;# 
  5326  0491                     	;# 
  5327  0492                     	;# 
  5328  0492                     	;# 
  5329  0493                     	;# 
  5330  0494                     	;# 
  5331  0495                     	;# 
  5332  0495                     	;# 
  5333  0496                     	;# 
  5334  0497                     	;# 
  5335  0498                     	;# 
  5336  0499                     	;# 
  5337  049A                     	;# 
  5338  049B                     	;# 
  5339  049C                     	;# 
  5340  049D                     	;# 
  5341  058C                     	;# 
  5342  058C                     	;# 
  5343  058D                     	;# 
  5344  058E                     	;# 
  5345  058F                     	;# 
  5346  058F                     	;# 
  5347  0590                     	;# 
  5348  0591                     	;# 
  5349  0592                     	;# 
  5350  0593                     	;# 
  5351  059C                     	;# 
  5352  059C                     	;# 
  5353  059D                     	;# 
  5354  059D                     	;# 
  5355  059E                     	;# 
  5356  059F                     	;# 
  5357  060C                     	;# 
  5358  060C                     	;# 
  5359  060D                     	;# 
  5360  060D                     	;# 
  5361  060E                     	;# 
  5362  060F                     	;# 
  5363  0610                     	;# 
  5364  0611                     	;# 
  5365  0612                     	;# 
  5366  0613                     	;# 
  5367  0614                     	;# 
  5368  0616                     	;# 
  5369  0616                     	;# 
  5370  0617                     	;# 
  5371  0617                     	;# 
  5372  0618                     	;# 
  5373  0619                     	;# 
  5374  061A                     	;# 
  5375  061B                     	;# 
  5376  061C                     	;# 
  5377  061D                     	;# 
  5378  061E                     	;# 
  5379  070C                     	;# 
  5380  070D                     	;# 
  5381  070E                     	;# 
  5382  070F                     	;# 
  5383  0710                     	;# 
  5384  0711                     	;# 
  5385  0712                     	;# 
  5386  0713                     	;# 
  5387  0714                     	;# 
  5388  0716                     	;# 
  5389  0717                     	;# 
  5390  0718                     	;# 
  5391  0719                     	;# 
  5392  071A                     	;# 
  5393  071B                     	;# 
  5394  071C                     	;# 
  5395  071D                     	;# 
  5396  071E                     	;# 
  5397  0796                     	;# 
  5398  0797                     	;# 
  5399  0798                     	;# 
  5400  0799                     	;# 
  5401  079A                     	;# 
  5402  079B                     	;# 
  5403  079C                     	;# 
  5404  079D                     	;# 
  5405  080C                     	;# 
  5406  080D                     	;# 
  5407  080E                     	;# 
  5408  080F                     	;# 
  5409  0810                     	;# 
  5410  0811                     	;# 
  5411  0812                     	;# 
  5412  0813                     	;# 
  5413  0814                     	;# 
  5414  081A                     	;# 
  5415  081A                     	;# 
  5416  081B                     	;# 
  5417  081C                     	;# 
  5418  081C                     	;# 
  5419  081D                     	;# 
  5420  081E                     	;# 
  5421  081F                     	;# 
  5422  088C                     	;# 
  5423  088D                     	;# 
  5424  088E                     	;# 
  5425  088F                     	;# 
  5426  0890                     	;# 
  5427  0891                     	;# 
  5428  0892                     	;# 
  5429  0893                     	;# 
  5430  0895                     	;# 
  5431  0896                     	;# 
  5432  0897                     	;# 
  5433  0898                     	;# 
  5434  0899                     	;# 
  5435  089A                     	;# 
  5436  089B                     	;# 
  5437  090C                     	;# 
  5438  090E                     	;# 
  5439  090F                     	;# 
  5440  091F                     	;# 
  5441  098F                     	;# 
  5442  098F                     	;# 
  5443  0990                     	;# 
  5444  0991                     	;# 
  5445  0992                     	;# 
  5446  0993                     	;# 
  5447  0994                     	;# 
  5448  0995                     	;# 
  5449  0996                     	;# 
  5450  0997                     	;# 
  5451  1E0F                     	;# 
  5452  1E10                     	;# 
  5453  1E11                     	;# 
  5454  1E12                     	;# 
  5455  1E13                     	;# 
  5456  1E14                     	;# 
  5457  1E15                     	;# 
  5458  1E16                     	;# 
  5459  1E17                     	;# 
  5460  1E18                     	;# 
  5461  1E19                     	;# 
  5462  1E1A                     	;# 
  5463  1E1B                     	;# 
  5464  1E1C                     	;# 
  5465  1E1D                     	;# 
  5466  1E1E                     	;# 
  5467  1E1F                     	;# 
  5468  1E20                     	;# 
  5469  1E21                     	;# 
  5470  1E22                     	;# 
  5471  1E23                     	;# 
  5472  1E24                     	;# 
  5473  1E25                     	;# 
  5474  1E26                     	;# 
  5475  1E27                     	;# 
  5476  1E28                     	;# 
  5477  1E29                     	;# 
  5478  1E2A                     	;# 
  5479  1E2B                     	;# 
  5480  1E2C                     	;# 
  5481  1E2D                     	;# 
  5482  1E2E                     	;# 
  5483  1E2F                     	;# 
  5484  1E30                     	;# 
  5485  1E31                     	;# 
  5486  1E32                     	;# 
  5487  1E33                     	;# 
  5488  1E34                     	;# 
  5489  1E35                     	;# 
  5490  1E36                     	;# 
  5491  1E37                     	;# 
  5492  1E8F                     	;# 
  5493  1E90                     	;# 
  5494  1E91                     	;# 
  5495  1E92                     	;# 
  5496  1E93                     	;# 
  5497  1E94                     	;# 
  5498  1E95                     	;# 
  5499  1E96                     	;# 
  5500  1E97                     	;# 
  5501  1E9C                     	;# 
  5502  1E9D                     	;# 
  5503  1E9E                     	;# 
  5504  1EA1                     	;# 
  5505  1EA2                     	;# 
  5506  1EA3                     	;# 
  5507  1EA4                     	;# 
  5508  1EA9                     	;# 
  5509  1EAA                     	;# 
  5510  1EB1                     	;# 
  5511  1EB2                     	;# 
  5512  1EB8                     	;# 
  5513  1EB9                     	;# 
  5514  1EBA                     	;# 
  5515  1EBB                     	;# 
  5516  1EBC                     	;# 
  5517  1EBD                     	;# 
  5518  1EBE                     	;# 
  5519  1EC3                     	;# 
  5520  1EC5                     	;# 
  5521  1EC6                     	;# 
  5522  1EC7                     	;# 
  5523  1EC8                     	;# 
  5524  1EC9                     	;# 
  5525  1ECA                     	;# 
  5526  1ECB                     	;# 
  5527  1ECB                     	;# 
  5528  1ECB                     	;# 
  5529  1ECC                     	;# 
  5530  1ECC                     	;# 
  5531  1ECC                     	;# 
  5532  1F10                     	;# 
  5533  1F11                     	;# 
  5534  1F12                     	;# 
  5535  1F14                     	;# 
  5536  1F15                     	;# 
  5537  1F1C                     	;# 
  5538  1F1D                     	;# 
  5539  1F1E                     	;# 
  5540  1F1F                     	;# 
  5541  1F20                     	;# 
  5542  1F21                     	;# 
  5543  1F22                     	;# 
  5544  1F23                     	;# 
  5545  1F24                     	;# 
  5546  1F25                     	;# 
  5547  1F26                     	;# 
  5548  1F27                     	;# 
  5549  1F38                     	;# 
  5550  1F39                     	;# 
  5551  1F3A                     	;# 
  5552  1F3B                     	;# 
  5553  1F3C                     	;# 
  5554  1F3D                     	;# 
  5555  1F3E                     	;# 
  5556  1F3F                     	;# 
  5557  1F43                     	;# 
  5558  1F44                     	;# 
  5559  1F45                     	;# 
  5560  1F46                     	;# 
  5561  1F47                     	;# 
  5562  1F48                     	;# 
  5563  1F49                     	;# 
  5564  1F4A                     	;# 
  5565  1F4E                     	;# 
  5566  1F4F                     	;# 
  5567  1F50                     	;# 
  5568  1F51                     	;# 
  5569  1F52                     	;# 
  5570  1F53                     	;# 
  5571  1F54                     	;# 
  5572  1F55                     	;# 
  5573  1FE4                     	;# 
  5574  1FE5                     	;# 
  5575  1FE6                     	;# 
  5576  1FE7                     	;# 
  5577  1FE8                     	;# 
  5578  1FE8                     	;# 
  5579  1FE9                     	;# 
  5580  1FEA                     	;# 
  5581  1FEB                     	;# 
  5582  1FED                     	;# 
  5583  1FEE                     	;# 
  5584  1FEF                     	;# 
  5585  0000                     	;# 
  5586  0001                     	;# 
  5587  0002                     	;# 
  5588  0003                     	;# 
  5589  0004                     	;# 
  5590  0005                     	;# 
  5591  0006                     	;# 
  5592  0007                     	;# 
  5593  0008                     	;# 
  5594  0009                     	;# 
  5595  000A                     	;# 
  5596  000B                     	;# 
  5597  000C                     	;# 
  5598  000D                     	;# 
  5599  000E                     	;# 
  5600  0012                     	;# 
  5601  0013                     	;# 
  5602  0014                     	;# 
  5603  0018                     	;# 
  5604  0019                     	;# 
  5605  001A                     	;# 
  5606  008C                     	;# 
  5607  008C                     	;# 
  5608  008D                     	;# 
  5609  008E                     	;# 
  5610  008E                     	;# 
  5611  008F                     	;# 
  5612  0090                     	;# 
  5613  0090                     	;# 
  5614  0091                     	;# 
  5615  0092                     	;# 
  5616  0092                     	;# 
  5617  0093                     	;# 
  5618  0094                     	;# 
  5619  0094                     	;# 
  5620  0095                     	;# 
  5621  0096                     	;# 
  5622  0096                     	;# 
  5623  0097                     	;# 
  5624  0098                     	;# 
  5625  0099                     	;# 
  5626  009A                     	;# 
  5627  009B                     	;# 
  5628  009B                     	;# 
  5629  009C                     	;# 
  5630  009D                     	;# 
  5631  009D                     	;# 
  5632  009E                     	;# 
  5633  009F                     	;# 
  5634  010C                     	;# 
  5635  010C                     	;# 
  5636  010D                     	;# 
  5637  010E                     	;# 
  5638  010F                     	;# 
  5639  010F                     	;# 
  5640  0110                     	;# 
  5641  0111                     	;# 
  5642  0112                     	;# 
  5643  0113                     	;# 
  5644  0114                     	;# 
  5645  0115                     	;# 
  5646  0116                     	;# 
  5647  0117                     	;# 
  5648  0118                     	;# 
  5649  0119                     	;# 
  5650  0119                     	;# 
  5651  0119                     	;# 
  5652  011A                     	;# 
  5653  011A                     	;# 
  5654  011A                     	;# 
  5655  011B                     	;# 
  5656  011B                     	;# 
  5657  011B                     	;# 
  5658  011B                     	;# 
  5659  011B                     	;# 
  5660  011C                     	;# 
  5661  011C                     	;# 
  5662  011C                     	;# 
  5663  011D                     	;# 
  5664  011D                     	;# 
  5665  011D                     	;# 
  5666  011E                     	;# 
  5667  011E                     	;# 
  5668  011E                     	;# 
  5669  011F                     	;# 
  5670  011F                     	;# 
  5671  011F                     	;# 
  5672  011F                     	;# 
  5673  011F                     	;# 
  5674  018C                     	;# 
  5675  018D                     	;# 
  5676  018E                     	;# 
  5677  018F                     	;# 
  5678  0190                     	;# 
  5679  0191                     	;# 
  5680  0192                     	;# 
  5681  0196                     	;# 
  5682  0197                     	;# 
  5683  0198                     	;# 
  5684  0199                     	;# 
  5685  019A                     	;# 
  5686  019B                     	;# 
  5687  019C                     	;# 
  5688  020C                     	;# 
  5689  020D                     	;# 
  5690  020E                     	;# 
  5691  020E                     	;# 
  5692  020F                     	;# 
  5693  020F                     	;# 
  5694  0210                     	;# 
  5695  0210                     	;# 
  5696  0211                     	;# 
  5697  0211                     	;# 
  5698  0212                     	;# 
  5699  0213                     	;# 
  5700  0214                     	;# 
  5701  0214                     	;# 
  5702  0215                     	;# 
  5703  0215                     	;# 
  5704  0216                     	;# 
  5705  0216                     	;# 
  5706  0217                     	;# 
  5707  0217                     	;# 
  5708  0218                     	;# 
  5709  0219                     	;# 
  5710  021A                     	;# 
  5711  021A                     	;# 
  5712  021B                     	;# 
  5713  021B                     	;# 
  5714  021C                     	;# 
  5715  021C                     	;# 
  5716  021D                     	;# 
  5717  021D                     	;# 
  5718  021E                     	;# 
  5719  021F                     	;# 
  5720  028C                     	;# 
  5721  028C                     	;# 
  5722  028D                     	;# 
  5723  028D                     	;# 
  5724  028E                     	;# 
  5725  028F                     	;# 
  5726  0290                     	;# 
  5727  0291                     	;# 
  5728  0292                     	;# 
  5729  0292                     	;# 
  5730  0293                     	;# 
  5731  0293                     	;# 
  5732  0294                     	;# 
  5733  0295                     	;# 
  5734  0296                     	;# 
  5735  0297                     	;# 
  5736  0298                     	;# 
  5737  0298                     	;# 
  5738  0299                     	;# 
  5739  0299                     	;# 
  5740  029A                     	;# 
  5741  029B                     	;# 
  5742  029C                     	;# 
  5743  029D                     	;# 
  5744  029F                     	;# 
  5745  030C                     	;# 
  5746  030C                     	;# 
  5747  030D                     	;# 
  5748  030E                     	;# 
  5749  030F                     	;# 
  5750  0310                     	;# 
  5751  0310                     	;# 
  5752  0311                     	;# 
  5753  0312                     	;# 
  5754  0313                     	;# 
  5755  0314                     	;# 
  5756  0314                     	;# 
  5757  0315                     	;# 
  5758  0316                     	;# 
  5759  0317                     	;# 
  5760  0318                     	;# 
  5761  0318                     	;# 
  5762  0319                     	;# 
  5763  031A                     	;# 
  5764  031B                     	;# 
  5765  038C                     	;# 
  5766  038C                     	;# 
  5767  038D                     	;# 
  5768  038E                     	;# 
  5769  0390                     	;# 
  5770  0390                     	;# 
  5771  0391                     	;# 
  5772  0392                     	;# 
  5773  048C                     	;# 
  5774  048C                     	;# 
  5775  048D                     	;# 
  5776  048E                     	;# 
  5777  048F                     	;# 
  5778  048F                     	;# 
  5779  0490                     	;# 
  5780  0491                     	;# 
  5781  0492                     	;# 
  5782  0492                     	;# 
  5783  0493                     	;# 
  5784  0494                     	;# 
  5785  0495                     	;# 
  5786  0495                     	;# 
  5787  0496                     	;# 
  5788  0497                     	;# 
  5789  0498                     	;# 
  5790  0499                     	;# 
  5791  049A                     	;# 
  5792  049B                     	;# 
  5793  049C                     	;# 
  5794  049D                     	;# 
  5795  058C                     	;# 
  5796  058C                     	;# 
  5797  058D                     	;# 
  5798  058E                     	;# 
  5799  058F                     	;# 
  5800  058F                     	;# 
  5801  0590                     	;# 
  5802  0591                     	;# 
  5803  0592                     	;# 
  5804  0593                     	;# 
  5805  059C                     	;# 
  5806  059C                     	;# 
  5807  059D                     	;# 
  5808  059D                     	;# 
  5809  059E                     	;# 
  5810  059F                     	;# 
  5811  060C                     	;# 
  5812  060C                     	;# 
  5813  060D                     	;# 
  5814  060D                     	;# 
  5815  060E                     	;# 
  5816  060F                     	;# 
  5817  0610                     	;# 
  5818  0611                     	;# 
  5819  0612                     	;# 
  5820  0613                     	;# 
  5821  0614                     	;# 
  5822  0616                     	;# 
  5823  0616                     	;# 
  5824  0617                     	;# 
  5825  0617                     	;# 
  5826  0618                     	;# 
  5827  0619                     	;# 
  5828  061A                     	;# 
  5829  061B                     	;# 
  5830  061C                     	;# 
  5831  061D                     	;# 
  5832  061E                     	;# 
  5833  070C                     	;# 
  5834  070D                     	;# 
  5835  070E                     	;# 
  5836  070F                     	;# 
  5837  0710                     	;# 
  5838  0711                     	;# 
  5839  0712                     	;# 
  5840  0713                     	;# 
  5841  0714                     	;# 
  5842  0716                     	;# 
  5843  0717                     	;# 
  5844  0718                     	;# 
  5845  0719                     	;# 
  5846  071A                     	;# 
  5847  071B                     	;# 
  5848  071C                     	;# 
  5849  071D                     	;# 
  5850  071E                     	;# 
  5851  0796                     	;# 
  5852  0797                     	;# 
  5853  0798                     	;# 
  5854  0799                     	;# 
  5855  079A                     	;# 
  5856  079B                     	;# 
  5857  079C                     	;# 
  5858  079D                     	;# 
  5859  080C                     	;# 
  5860  080D                     	;# 
  5861  080E                     	;# 
  5862  080F                     	;# 
  5863  0810                     	;# 
  5864  0811                     	;# 
  5865  0812                     	;# 
  5866  0813                     	;# 
  5867  0814                     	;# 
  5868  081A                     	;# 
  5869  081A                     	;# 
  5870  081B                     	;# 
  5871  081C                     	;# 
  5872  081C                     	;# 
  5873  081D                     	;# 
  5874  081E                     	;# 
  5875  081F                     	;# 
  5876  088C                     	;# 
  5877  088D                     	;# 
  5878  088E                     	;# 
  5879  088F                     	;# 
  5880  0890                     	;# 
  5881  0891                     	;# 
  5882  0892                     	;# 
  5883  0893                     	;# 
  5884  0895                     	;# 
  5885  0896                     	;# 
  5886  0897                     	;# 
  5887  0898                     	;# 
  5888  0899                     	;# 
  5889  089A                     	;# 
  5890  089B                     	;# 
  5891  090C                     	;# 
  5892  090E                     	;# 
  5893  090F                     	;# 
  5894  091F                     	;# 
  5895  098F                     	;# 
  5896  098F                     	;# 
  5897  0990                     	;# 
  5898  0991                     	;# 
  5899  0992                     	;# 
  5900  0993                     	;# 
  5901  0994                     	;# 
  5902  0995                     	;# 
  5903  0996                     	;# 
  5904  0997                     	;# 
  5905  1E0F                     	;# 
  5906  1E10                     	;# 
  5907  1E11                     	;# 
  5908  1E12                     	;# 
  5909  1E13                     	;# 
  5910  1E14                     	;# 
  5911  1E15                     	;# 
  5912  1E16                     	;# 
  5913  1E17                     	;# 
  5914  1E18                     	;# 
  5915  1E19                     	;# 
  5916  1E1A                     	;# 
  5917  1E1B                     	;# 
  5918  1E1C                     	;# 
  5919  1E1D                     	;# 
  5920  1E1E                     	;# 
  5921  1E1F                     	;# 
  5922  1E20                     	;# 
  5923  1E21                     	;# 
  5924  1E22                     	;# 
  5925  1E23                     	;# 
  5926  1E24                     	;# 
  5927  1E25                     	;# 
  5928  1E26                     	;# 
  5929  1E27                     	;# 
  5930  1E28                     	;# 
  5931  1E29                     	;# 
  5932  1E2A                     	;# 
  5933  1E2B                     	;# 
  5934  1E2C                     	;# 
  5935  1E2D                     	;# 
  5936  1E2E                     	;# 
  5937  1E2F                     	;# 
  5938  1E30                     	;# 
  5939  1E31                     	;# 
  5940  1E32                     	;# 
  5941  1E33                     	;# 
  5942  1E34                     	;# 
  5943  1E35                     	;# 
  5944  1E36                     	;# 
  5945  1E37                     	;# 
  5946  1E8F                     	;# 
  5947  1E90                     	;# 
  5948  1E91                     	;# 
  5949  1E92                     	;# 
  5950  1E93                     	;# 
  5951  1E94                     	;# 
  5952  1E95                     	;# 
  5953  1E96                     	;# 
  5954  1E97                     	;# 
  5955  1E9C                     	;# 
  5956  1E9D                     	;# 
  5957  1E9E                     	;# 
  5958  1EA1                     	;# 
  5959  1EA2                     	;# 
  5960  1EA3                     	;# 
  5961  1EA4                     	;# 
  5962  1EA9                     	;# 
  5963  1EAA                     	;# 
  5964  1EB1                     	;# 
  5965  1EB2                     	;# 
  5966  1EB8                     	;# 
  5967  1EB9                     	;# 
  5968  1EBA                     	;# 
  5969  1EBB                     	;# 
  5970  1EBC                     	;# 
  5971  1EBD                     	;# 
  5972  1EBE                     	;# 
  5973  1EC3                     	;# 
  5974  1EC5                     	;# 
  5975  1EC6                     	;# 
  5976  1EC7                     	;# 
  5977  1EC8                     	;# 
  5978  1EC9                     	;# 
  5979  1ECA                     	;# 
  5980  1ECB                     	;# 
  5981  1ECB                     	;# 
  5982  1ECB                     	;# 
  5983  1ECC                     	;# 
  5984  1ECC                     	;# 
  5985  1ECC                     	;# 
  5986  1F10                     	;# 
  5987  1F11                     	;# 
  5988  1F12                     	;# 
  5989  1F14                     	;# 
  5990  1F15                     	;# 
  5991  1F1C                     	;# 
  5992  1F1D                     	;# 
  5993  1F1E                     	;# 
  5994  1F1F                     	;# 
  5995  1F20                     	;# 
  5996  1F21                     	;# 
  5997  1F22                     	;# 
  5998  1F23                     	;# 
  5999  1F24                     	;# 
  6000  1F25                     	;# 
  6001  1F26                     	;# 
  6002  1F27                     	;# 
  6003  1F38                     	;# 
  6004  1F39                     	;# 
  6005  1F3A                     	;# 
  6006  1F3B                     	;# 
  6007  1F3C                     	;# 
  6008  1F3D                     	;# 
  6009  1F3E                     	;# 
  6010  1F3F                     	;# 
  6011  1F43                     	;# 
  6012  1F44                     	;# 
  6013  1F45                     	;# 
  6014  1F46                     	;# 
  6015  1F47                     	;# 
  6016  1F48                     	;# 
  6017  1F49                     	;# 
  6018  1F4A                     	;# 
  6019  1F4E                     	;# 
  6020  1F4F                     	;# 
  6021  1F50                     	;# 
  6022  1F51                     	;# 
  6023  1F52                     	;# 
  6024  1F53                     	;# 
  6025  1F54                     	;# 
  6026  1F55                     	;# 
  6027  1FE4                     	;# 
  6028  1FE5                     	;# 
  6029  1FE6                     	;# 
  6030  1FE7                     	;# 
  6031  1FE8                     	;# 
  6032  1FE8                     	;# 
  6033  1FE9                     	;# 
  6034  1FEA                     	;# 
  6035  1FEB                     	;# 
  6036  1FED                     	;# 
  6037  1FEE                     	;# 
  6038  1FEF                     	;# 
  6039  0000                     	;# 
  6040  0001                     	;# 
  6041  0002                     	;# 
  6042  0003                     	;# 
  6043  0004                     	;# 
  6044  0005                     	;# 
  6045  0006                     	;# 
  6046  0007                     	;# 
  6047  0008                     	;# 
  6048  0009                     	;# 
  6049  000A                     	;# 
  6050  000B                     	;# 
  6051  000C                     	;# 
  6052  000D                     	;# 
  6053  000E                     	;# 
  6054  0012                     	;# 
  6055  0013                     	;# 
  6056  0014                     	;# 
  6057  0018                     	;# 
  6058  0019                     	;# 
  6059  001A                     	;# 
  6060  008C                     	;# 
  6061  008C                     	;# 
  6062  008D                     	;# 
  6063  008E                     	;# 
  6064  008E                     	;# 
  6065  008F                     	;# 
  6066  0090                     	;# 
  6067  0090                     	;# 
  6068  0091                     	;# 
  6069  0092                     	;# 
  6070  0092                     	;# 
  6071  0093                     	;# 
  6072  0094                     	;# 
  6073  0094                     	;# 
  6074  0095                     	;# 
  6075  0096                     	;# 
  6076  0096                     	;# 
  6077  0097                     	;# 
  6078  0098                     	;# 
  6079  0099                     	;# 
  6080  009A                     	;# 
  6081  009B                     	;# 
  6082  009B                     	;# 
  6083  009C                     	;# 
  6084  009D                     	;# 
  6085  009D                     	;# 
  6086  009E                     	;# 
  6087  009F                     	;# 
  6088  010C                     	;# 
  6089  010C                     	;# 
  6090  010D                     	;# 
  6091  010E                     	;# 
  6092  010F                     	;# 
  6093  010F                     	;# 
  6094  0110                     	;# 
  6095  0111                     	;# 
  6096  0112                     	;# 
  6097  0113                     	;# 
  6098  0114                     	;# 
  6099  0115                     	;# 
  6100  0116                     	;# 
  6101  0117                     	;# 
  6102  0118                     	;# 
  6103  0119                     	;# 
  6104  0119                     	;# 
  6105  0119                     	;# 
  6106  011A                     	;# 
  6107  011A                     	;# 
  6108  011A                     	;# 
  6109  011B                     	;# 
  6110  011B                     	;# 
  6111  011B                     	;# 
  6112  011B                     	;# 
  6113  011B                     	;# 
  6114  011C                     	;# 
  6115  011C                     	;# 
  6116  011C                     	;# 
  6117  011D                     	;# 
  6118  011D                     	;# 
  6119  011D                     	;# 
  6120  011E                     	;# 
  6121  011E                     	;# 
  6122  011E                     	;# 
  6123  011F                     	;# 
  6124  011F                     	;# 
  6125  011F                     	;# 
  6126  011F                     	;# 
  6127  011F                     	;# 
  6128  018C                     	;# 
  6129  018D                     	;# 
  6130  018E                     	;# 
  6131  018F                     	;# 
  6132  0190                     	;# 
  6133  0191                     	;# 
  6134  0192                     	;# 
  6135  0196                     	;# 
  6136  0197                     	;# 
  6137  0198                     	;# 
  6138  0199                     	;# 
  6139  019A                     	;# 
  6140  019B                     	;# 
  6141  019C                     	;# 
  6142  020C                     	;# 
  6143  020D                     	;# 
  6144  020E                     	;# 
  6145  020E                     	;# 
  6146  020F                     	;# 
  6147  020F                     	;# 
  6148  0210                     	;# 
  6149  0210                     	;# 
  6150  0211                     	;# 
  6151  0211                     	;# 
  6152  0212                     	;# 
  6153  0213                     	;# 
  6154  0214                     	;# 
  6155  0214                     	;# 
  6156  0215                     	;# 
  6157  0215                     	;# 
  6158  0216                     	;# 
  6159  0216                     	;# 
  6160  0217                     	;# 
  6161  0217                     	;# 
  6162  0218                     	;# 
  6163  0219                     	;# 
  6164  021A                     	;# 
  6165  021A                     	;# 
  6166  021B                     	;# 
  6167  021B                     	;# 
  6168  021C                     	;# 
  6169  021C                     	;# 
  6170  021D                     	;# 
  6171  021D                     	;# 
  6172  021E                     	;# 
  6173  021F                     	;# 
  6174  028C                     	;# 
  6175  028C                     	;# 
  6176  028D                     	;# 
  6177  028D                     	;# 
  6178  028E                     	;# 
  6179  028F                     	;# 
  6180  0290                     	;# 
  6181  0291                     	;# 
  6182  0292                     	;# 
  6183  0292                     	;# 
  6184  0293                     	;# 
  6185  0293                     	;# 
  6186  0294                     	;# 
  6187  0295                     	;# 
  6188  0296                     	;# 
  6189  0297                     	;# 
  6190  0298                     	;# 
  6191  0298                     	;# 
  6192  0299                     	;# 
  6193  0299                     	;# 
  6194  029A                     	;# 
  6195  029B                     	;# 
  6196  029C                     	;# 
  6197  029D                     	;# 
  6198  029F                     	;# 
  6199  030C                     	;# 
  6200  030C                     	;# 
  6201  030D                     	;# 
  6202  030E                     	;# 
  6203  030F                     	;# 
  6204  0310                     	;# 
  6205  0310                     	;# 
  6206  0311                     	;# 
  6207  0312                     	;# 
  6208  0313                     	;# 
  6209  0314                     	;# 
  6210  0314                     	;# 
  6211  0315                     	;# 
  6212  0316                     	;# 
  6213  0317                     	;# 
  6214  0318                     	;# 
  6215  0318                     	;# 
  6216  0319                     	;# 
  6217  031A                     	;# 
  6218  031B                     	;# 
  6219  038C                     	;# 
  6220  038C                     	;# 
  6221  038D                     	;# 
  6222  038E                     	;# 
  6223  0390                     	;# 
  6224  0390                     	;# 
  6225  0391                     	;# 
  6226  0392                     	;# 
  6227  048C                     	;# 
  6228  048C                     	;# 
  6229  048D                     	;# 
  6230  048E                     	;# 
  6231  048F                     	;# 
  6232  048F                     	;# 
  6233  0490                     	;# 
  6234  0491                     	;# 
  6235  0492                     	;# 
  6236  0492                     	;# 
  6237  0493                     	;# 
  6238  0494                     	;# 
  6239  0495                     	;# 
  6240  0495                     	;# 
  6241  0496                     	;# 
  6242  0497                     	;# 
  6243  0498                     	;# 
  6244  0499                     	;# 
  6245  049A                     	;# 
  6246  049B                     	;# 
  6247  049C                     	;# 
  6248  049D                     	;# 
  6249  058C                     	;# 
  6250  058C                     	;# 
  6251  058D                     	;# 
  6252  058E                     	;# 
  6253  058F                     	;# 
  6254  058F                     	;# 
  6255  0590                     	;# 
  6256  0591                     	;# 
  6257  0592                     	;# 
  6258  0593                     	;# 
  6259  059C                     	;# 
  6260  059C                     	;# 
  6261  059D                     	;# 
  6262  059D                     	;# 
  6263  059E                     	;# 
  6264  059F                     	;# 
  6265  060C                     	;# 
  6266  060C                     	;# 
  6267  060D                     	;# 
  6268  060D                     	;# 
  6269  060E                     	;# 
  6270  060F                     	;# 
  6271  0610                     	;# 
  6272  0611                     	;# 
  6273  0612                     	;# 
  6274  0613                     	;# 
  6275  0614                     	;# 
  6276  0616                     	;# 
  6277  0616                     	;# 
  6278  0617                     	;# 
  6279  0617                     	;# 
  6280  0618                     	;# 
  6281  0619                     	;# 
  6282  061A                     	;# 
  6283  061B                     	;# 
  6284  061C                     	;# 
  6285  061D                     	;# 
  6286  061E                     	;# 
  6287  070C                     	;# 
  6288  070D                     	;# 
  6289  070E                     	;# 
  6290  070F                     	;# 
  6291  0710                     	;# 
  6292  0711                     	;# 
  6293  0712                     	;# 
  6294  0713                     	;# 
  6295  0714                     	;# 
  6296  0716                     	;# 
  6297  0717                     	;# 
  6298  0718                     	;# 
  6299  0719                     	;# 
  6300  071A                     	;# 
  6301  071B                     	;# 
  6302  071C                     	;# 
  6303  071D                     	;# 
  6304  071E                     	;# 
  6305  0796                     	;# 
  6306  0797                     	;# 
  6307  0798                     	;# 
  6308  0799                     	;# 
  6309  079A                     	;# 
  6310  079B                     	;# 
  6311  079C                     	;# 
  6312  079D                     	;# 
  6313  080C                     	;# 
  6314  080D                     	;# 
  6315  080E                     	;# 
  6316  080F                     	;# 
  6317  0810                     	;# 
  6318  0811                     	;# 
  6319  0812                     	;# 
  6320  0813                     	;# 
  6321  0814                     	;# 
  6322  081A                     	;# 
  6323  081A                     	;# 
  6324  081B                     	;# 
  6325  081C                     	;# 
  6326  081C                     	;# 
  6327  081D                     	;# 
  6328  081E                     	;# 
  6329  081F                     	;# 
  6330  088C                     	;# 
  6331  088D                     	;# 
  6332  088E                     	;# 
  6333  088F                     	;# 
  6334  0890                     	;# 
  6335  0891                     	;# 
  6336  0892                     	;# 
  6337  0893                     	;# 
  6338  0895                     	;# 
  6339  0896                     	;# 
  6340  0897                     	;# 
  6341  0898                     	;# 
  6342  0899                     	;# 
  6343  089A                     	;# 
  6344  089B                     	;# 
  6345  090C                     	;# 
  6346  090E                     	;# 
  6347  090F                     	;# 
  6348  091F                     	;# 
  6349  098F                     	;# 
  6350  098F                     	;# 
  6351  0990                     	;# 
  6352  0991                     	;# 
  6353  0992                     	;# 
  6354  0993                     	;# 
  6355  0994                     	;# 
  6356  0995                     	;# 
  6357  0996                     	;# 
  6358  0997                     	;# 
  6359  1E0F                     	;# 
  6360  1E10                     	;# 
  6361  1E11                     	;# 
  6362  1E12                     	;# 
  6363  1E13                     	;# 
  6364  1E14                     	;# 
  6365  1E15                     	;# 
  6366  1E16                     	;# 
  6367  1E17                     	;# 
  6368  1E18                     	;# 
  6369  1E19                     	;# 
  6370  1E1A                     	;# 
  6371  1E1B                     	;# 
  6372  1E1C                     	;# 
  6373  1E1D                     	;# 
  6374  1E1E                     	;# 
  6375  1E1F                     	;# 
  6376  1E20                     	;# 
  6377  1E21                     	;# 
  6378  1E22                     	;# 
  6379  1E23                     	;# 
  6380  1E24                     	;# 
  6381  1E25                     	;# 
  6382  1E26                     	;# 
  6383  1E27                     	;# 
  6384  1E28                     	;# 
  6385  1E29                     	;# 
  6386  1E2A                     	;# 
  6387  1E2B                     	;# 
  6388  1E2C                     	;# 
  6389  1E2D                     	;# 
  6390  1E2E                     	;# 
  6391  1E2F                     	;# 
  6392  1E30                     	;# 
  6393  1E31                     	;# 
  6394  1E32                     	;# 
  6395  1E33                     	;# 
  6396  1E34                     	;# 
  6397  1E35                     	;# 
  6398  1E36                     	;# 
  6399  1E37                     	;# 
  6400  1E8F                     	;# 
  6401  1E90                     	;# 
  6402  1E91                     	;# 
  6403  1E92                     	;# 
  6404  1E93                     	;# 
  6405  1E94                     	;# 
  6406  1E95                     	;# 
  6407  1E96                     	;# 
  6408  1E97                     	;# 
  6409  1E9C                     	;# 
  6410  1E9D                     	;# 
  6411  1E9E                     	;# 
  6412  1EA1                     	;# 
  6413  1EA2                     	;# 
  6414  1EA3                     	;# 
  6415  1EA4                     	;# 
  6416  1EA9                     	;# 
  6417  1EAA                     	;# 
  6418  1EB1                     	;# 
  6419  1EB2                     	;# 
  6420  1EB8                     	;# 
  6421  1EB9                     	;# 
  6422  1EBA                     	;# 
  6423  1EBB                     	;# 
  6424  1EBC                     	;# 
  6425  1EBD                     	;# 
  6426  1EBE                     	;# 
  6427  1EC3                     	;# 
  6428  1EC5                     	;# 
  6429  1EC6                     	;# 
  6430  1EC7                     	;# 
  6431  1EC8                     	;# 
  6432  1EC9                     	;# 
  6433  1ECA                     	;# 
  6434  1ECB                     	;# 
  6435  1ECB                     	;# 
  6436  1ECB                     	;# 
  6437  1ECC                     	;# 
  6438  1ECC                     	;# 
  6439  1ECC                     	;# 
  6440  1F10                     	;# 
  6441  1F11                     	;# 
  6442  1F12                     	;# 
  6443  1F14                     	;# 
  6444  1F15                     	;# 
  6445  1F1C                     	;# 
  6446  1F1D                     	;# 
  6447  1F1E                     	;# 
  6448  1F1F                     	;# 
  6449  1F20                     	;# 
  6450  1F21                     	;# 
  6451  1F22                     	;# 
  6452  1F23                     	;# 
  6453  1F24                     	;# 
  6454  1F25                     	;# 
  6455  1F26                     	;# 
  6456  1F27                     	;# 
  6457  1F38                     	;# 
  6458  1F39                     	;# 
  6459  1F3A                     	;# 
  6460  1F3B                     	;# 
  6461  1F3C                     	;# 
  6462  1F3D                     	;# 
  6463  1F3E                     	;# 
  6464  1F3F                     	;# 
  6465  1F43                     	;# 
  6466  1F44                     	;# 
  6467  1F45                     	;# 
  6468  1F46                     	;# 
  6469  1F47                     	;# 
  6470  1F48                     	;# 
  6471  1F49                     	;# 
  6472  1F4A                     	;# 
  6473  1F4E                     	;# 
  6474  1F4F                     	;# 
  6475  1F50                     	;# 
  6476  1F51                     	;# 
  6477  1F52                     	;# 
  6478  1F53                     	;# 
  6479  1F54                     	;# 
  6480  1F55                     	;# 
  6481  1FE4                     	;# 
  6482  1FE5                     	;# 
  6483  1FE6                     	;# 
  6484  1FE7                     	;# 
  6485  1FE8                     	;# 
  6486  1FE8                     	;# 
  6487  1FE9                     	;# 
  6488  1FEA                     	;# 
  6489  1FEB                     	;# 
  6490  1FED                     	;# 
  6491  1FEE                     	;# 
  6492  1FEF                     	;# 
  6493  0000                     	;# 
  6494  0001                     	;# 
  6495  0002                     	;# 
  6496  0003                     	;# 
  6497  0004                     	;# 
  6498  0005                     	;# 
  6499  0006                     	;# 
  6500  0007                     	;# 
  6501  0008                     	;# 
  6502  0009                     	;# 
  6503  000A                     	;# 
  6504  000B                     	;# 
  6505  000C                     	;# 
  6506  000D                     	;# 
  6507  000E                     	;# 
  6508  0012                     	;# 
  6509  0013                     	;# 
  6510  0014                     	;# 
  6511  0018                     	;# 
  6512  0019                     	;# 
  6513  001A                     	;# 
  6514  008C                     	;# 
  6515  008C                     	;# 
  6516  008D                     	;# 
  6517  008E                     	;# 
  6518  008E                     	;# 
  6519  008F                     	;# 
  6520  0090                     	;# 
  6521  0090                     	;# 
  6522  0091                     	;# 
  6523  0092                     	;# 
  6524  0092                     	;# 
  6525  0093                     	;# 
  6526  0094                     	;# 
  6527  0094                     	;# 
  6528  0095                     	;# 
  6529  0096                     	;# 
  6530  0096                     	;# 
  6531  0097                     	;# 
  6532  0098                     	;# 
  6533  0099                     	;# 
  6534  009A                     	;# 
  6535  009B                     	;# 
  6536  009B                     	;# 
  6537  009C                     	;# 
  6538  009D                     	;# 
  6539  009D                     	;# 
  6540  009E                     	;# 
  6541  009F                     	;# 
  6542  010C                     	;# 
  6543  010C                     	;# 
  6544  010D                     	;# 
  6545  010E                     	;# 
  6546  010F                     	;# 
  6547  010F                     	;# 
  6548  0110                     	;# 
  6549  0111                     	;# 
  6550  0112                     	;# 
  6551  0113                     	;# 
  6552  0114                     	;# 
  6553  0115                     	;# 
  6554  0116                     	;# 
  6555  0117                     	;# 
  6556  0118                     	;# 
  6557  0119                     	;# 
  6558  0119                     	;# 
  6559  0119                     	;# 
  6560  011A                     	;# 
  6561  011A                     	;# 
  6562  011A                     	;# 
  6563  011B                     	;# 
  6564  011B                     	;# 
  6565  011B                     	;# 
  6566  011B                     	;# 
  6567  011B                     	;# 
  6568  011C                     	;# 
  6569  011C                     	;# 
  6570  011C                     	;# 
  6571  011D                     	;# 
  6572  011D                     	;# 
  6573  011D                     	;# 
  6574  011E                     	;# 
  6575  011E                     	;# 
  6576  011E                     	;# 
  6577  011F                     	;# 
  6578  011F                     	;# 
  6579  011F                     	;# 
  6580  011F                     	;# 
  6581  011F                     	;# 
  6582  018C                     	;# 
  6583  018D                     	;# 
  6584  018E                     	;# 
  6585  018F                     	;# 
  6586  0190                     	;# 
  6587  0191                     	;# 
  6588  0192                     	;# 
  6589  0196                     	;# 
  6590  0197                     	;# 
  6591  0198                     	;# 
  6592  0199                     	;# 
  6593  019A                     	;# 
  6594  019B                     	;# 
  6595  019C                     	;# 
  6596  020C                     	;# 
  6597  020D                     	;# 
  6598  020E                     	;# 
  6599  020E                     	;# 
  6600  020F                     	;# 
  6601  020F                     	;# 
  6602  0210                     	;# 
  6603  0210                     	;# 
  6604  0211                     	;# 
  6605  0211                     	;# 
  6606  0212                     	;# 
  6607  0213                     	;# 
  6608  0214                     	;# 
  6609  0214                     	;# 
  6610  0215                     	;# 
  6611  0215                     	;# 
  6612  0216                     	;# 
  6613  0216                     	;# 
  6614  0217                     	;# 
  6615  0217                     	;# 
  6616  0218                     	;# 
  6617  0219                     	;# 
  6618  021A                     	;# 
  6619  021A                     	;# 
  6620  021B                     	;# 
  6621  021B                     	;# 
  6622  021C                     	;# 
  6623  021C                     	;# 
  6624  021D                     	;# 
  6625  021D                     	;# 
  6626  021E                     	;# 
  6627  021F                     	;# 
  6628  028C                     	;# 
  6629  028C                     	;# 
  6630  028D                     	;# 
  6631  028D                     	;# 
  6632  028E                     	;# 
  6633  028F                     	;# 
  6634  0290                     	;# 
  6635  0291                     	;# 
  6636  0292                     	;# 
  6637  0292                     	;# 
  6638  0293                     	;# 
  6639  0293                     	;# 
  6640  0294                     	;# 
  6641  0295                     	;# 
  6642  0296                     	;# 
  6643  0297                     	;# 
  6644  0298                     	;# 
  6645  0298                     	;# 
  6646  0299                     	;# 
  6647  0299                     	;# 
  6648  029A                     	;# 
  6649  029B                     	;# 
  6650  029C                     	;# 
  6651  029D                     	;# 
  6652  029F                     	;# 
  6653  030C                     	;# 
  6654  030C                     	;# 
  6655  030D                     	;# 
  6656  030E                     	;# 
  6657  030F                     	;# 
  6658  0310                     	;# 
  6659  0310                     	;# 
  6660  0311                     	;# 
  6661  0312                     	;# 
  6662  0313                     	;# 
  6663  0314                     	;# 
  6664  0314                     	;# 
  6665  0315                     	;# 
  6666  0316                     	;# 
  6667  0317                     	;# 
  6668  0318                     	;# 
  6669  0318                     	;# 
  6670  0319                     	;# 
  6671  031A                     	;# 
  6672  031B                     	;# 
  6673  038C                     	;# 
  6674  038C                     	;# 
  6675  038D                     	;# 
  6676  038E                     	;# 
  6677  0390                     	;# 
  6678  0390                     	;# 
  6679  0391                     	;# 
  6680  0392                     	;# 
  6681  048C                     	;# 
  6682  048C                     	;# 
  6683  048D                     	;# 
  6684  048E                     	;# 
  6685  048F                     	;# 
  6686  048F                     	;# 
  6687  0490                     	;# 
  6688  0491                     	;# 
  6689  0492                     	;# 
  6690  0492                     	;# 
  6691  0493                     	;# 
  6692  0494                     	;# 
  6693  0495                     	;# 
  6694  0495                     	;# 
  6695  0496                     	;# 
  6696  0497                     	;# 
  6697  0498                     	;# 
  6698  0499                     	;# 
  6699  049A                     	;# 
  6700  049B                     	;# 
  6701  049C                     	;# 
  6702  049D                     	;# 
  6703  058C                     	;# 
  6704  058C                     	;# 
  6705  058D                     	;# 
  6706  058E                     	;# 
  6707  058F                     	;# 
  6708  058F                     	;# 
  6709  0590                     	;# 
  6710  0591                     	;# 
  6711  0592                     	;# 
  6712  0593                     	;# 
  6713  059C                     	;# 
  6714  059C                     	;# 
  6715  059D                     	;# 
  6716  059D                     	;# 
  6717  059E                     	;# 
  6718  059F                     	;# 
  6719  060C                     	;# 
  6720  060C                     	;# 
  6721  060D                     	;# 
  6722  060D                     	;# 
  6723  060E                     	;# 
  6724  060F                     	;# 
  6725  0610                     	;# 
  6726  0611                     	;# 
  6727  0612                     	;# 
  6728  0613                     	;# 
  6729  0614                     	;# 
  6730  0616                     	;# 
  6731  0616                     	;# 
  6732  0617                     	;# 
  6733  0617                     	;# 
  6734  0618                     	;# 
  6735  0619                     	;# 
  6736  061A                     	;# 
  6737  061B                     	;# 
  6738  061C                     	;# 
  6739  061D                     	;# 
  6740  061E                     	;# 
  6741  070C                     	;# 
  6742  070D                     	;# 
  6743  070E                     	;# 
  6744  070F                     	;# 
  6745  0710                     	;# 
  6746  0711                     	;# 
  6747  0712                     	;# 
  6748  0713                     	;# 
  6749  0714                     	;# 
  6750  0716                     	;# 
  6751  0717                     	;# 
  6752  0718                     	;# 
  6753  0719                     	;# 
  6754  071A                     	;# 
  6755  071B                     	;# 
  6756  071C                     	;# 
  6757  071D                     	;# 
  6758  071E                     	;# 
  6759  0796                     	;# 
  6760  0797                     	;# 
  6761  0798                     	;# 
  6762  0799                     	;# 
  6763  079A                     	;# 
  6764  079B                     	;# 
  6765  079C                     	;# 
  6766  079D                     	;# 
  6767  080C                     	;# 
  6768  080D                     	;# 
  6769  080E                     	;# 
  6770  080F                     	;# 
  6771  0810                     	;# 
  6772  0811                     	;# 
  6773  0812                     	;# 
  6774  0813                     	;# 
  6775  0814                     	;# 
  6776  081A                     	;# 
  6777  081A                     	;# 
  6778  081B                     	;# 
  6779  081C                     	;# 
  6780  081C                     	;# 
  6781  081D                     	;# 
  6782  081E                     	;# 
  6783  081F                     	;# 
  6784  088C                     	;# 
  6785  088D                     	;# 
  6786  088E                     	;# 
  6787  088F                     	;# 
  6788  0890                     	;# 
  6789  0891                     	;# 
  6790  0892                     	;# 
  6791  0893                     	;# 
  6792  0895                     	;# 
  6793  0896                     	;# 
  6794  0897                     	;# 
  6795  0898                     	;# 
  6796  0899                     	;# 
  6797  089A                     	;# 
  6798  089B                     	;# 
  6799  090C                     	;# 
  6800  090E                     	;# 
  6801  090F                     	;# 
  6802  091F                     	;# 
  6803  098F                     	;# 
  6804  098F                     	;# 
  6805  0990                     	;# 
  6806  0991                     	;# 
  6807  0992                     	;# 
  6808  0993                     	;# 
  6809  0994                     	;# 
  6810  0995                     	;# 
  6811  0996                     	;# 
  6812  0997                     	;# 
  6813  1E0F                     	;# 
  6814  1E10                     	;# 
  6815  1E11                     	;# 
  6816  1E12                     	;# 
  6817  1E13                     	;# 
  6818  1E14                     	;# 
  6819  1E15                     	;# 
  6820  1E16                     	;# 
  6821  1E17                     	;# 
  6822  1E18                     	;# 
  6823  1E19                     	;# 
  6824  1E1A                     	;# 
  6825  1E1B                     	;# 
  6826  1E1C                     	;# 
  6827  1E1D                     	;# 
  6828  1E1E                     	;# 
  6829  1E1F                     	;# 
  6830  1E20                     	;# 
  6831  1E21                     	;# 
  6832  1E22                     	;# 
  6833  1E23                     	;# 
  6834  1E24                     	;# 
  6835  1E25                     	;# 
  6836  1E26                     	;# 
  6837  1E27                     	;# 
  6838  1E28                     	;# 
  6839  1E29                     	;# 
  6840  1E2A                     	;# 
  6841  1E2B                     	;# 
  6842  1E2C                     	;# 
  6843  1E2D                     	;# 
  6844  1E2E                     	;# 
  6845  1E2F                     	;# 
  6846  1E30                     	;# 
  6847  1E31                     	;# 
  6848  1E32                     	;# 
  6849  1E33                     	;# 
  6850  1E34                     	;# 
  6851  1E35                     	;# 
  6852  1E36                     	;# 
  6853  1E37                     	;# 
  6854  1E8F                     	;# 
  6855  1E90                     	;# 
  6856  1E91                     	;# 
  6857  1E92                     	;# 
  6858  1E93                     	;# 
  6859  1E94                     	;# 
  6860  1E95                     	;# 
  6861  1E96                     	;# 
  6862  1E97                     	;# 
  6863  1E9C                     	;# 
  6864  1E9D                     	;# 
  6865  1E9E                     	;# 
  6866  1EA1                     	;# 
  6867  1EA2                     	;# 
  6868  1EA3                     	;# 
  6869  1EA4                     	;# 
  6870  1EA9                     	;# 
  6871  1EAA                     	;# 
  6872  1EB1                     	;# 
  6873  1EB2                     	;# 
  6874  1EB8                     	;# 
  6875  1EB9                     	;# 
  6876  1EBA                     	;# 
  6877  1EBB                     	;# 
  6878  1EBC                     	;# 
  6879  1EBD                     	;# 
  6880  1EBE                     	;# 
  6881  1EC3                     	;# 
  6882  1EC5                     	;# 
  6883  1EC6                     	;# 
  6884  1EC7                     	;# 
  6885  1EC8                     	;# 
  6886  1EC9                     	;# 
  6887  1ECA                     	;# 
  6888  1ECB                     	;# 
  6889  1ECB                     	;# 
  6890  1ECB                     	;# 
  6891  1ECC                     	;# 
  6892  1ECC                     	;# 
  6893  1ECC                     	;# 
  6894  1F10                     	;# 
  6895  1F11                     	;# 
  6896  1F12                     	;# 
  6897  1F14                     	;# 
  6898  1F15                     	;# 
  6899  1F1C                     	;# 
  6900  1F1D                     	;# 
  6901  1F1E                     	;# 
  6902  1F1F                     	;# 
  6903  1F20                     	;# 
  6904  1F21                     	;# 
  6905  1F22                     	;# 
  6906  1F23                     	;# 
  6907  1F24                     	;# 
  6908  1F25                     	;# 
  6909  1F26                     	;# 
  6910  1F27                     	;# 
  6911  1F38                     	;# 
  6912  1F39                     	;# 
  6913  1F3A                     	;# 
  6914  1F3B                     	;# 
  6915  1F3C                     	;# 
  6916  1F3D                     	;# 
  6917  1F3E                     	;# 
  6918  1F3F                     	;# 
  6919  1F43                     	;# 
  6920  1F44                     	;# 
  6921  1F45                     	;# 
  6922  1F46                     	;# 
  6923  1F47                     	;# 
  6924  1F48                     	;# 
  6925  1F49                     	;# 
  6926  1F4A                     	;# 
  6927  1F4E                     	;# 
  6928  1F4F                     	;# 
  6929  1F50                     	;# 
  6930  1F51                     	;# 
  6931  1F52                     	;# 
  6932  1F53                     	;# 
  6933  1F54                     	;# 
  6934  1F55                     	;# 
  6935  1FE4                     	;# 
  6936  1FE5                     	;# 
  6937  1FE6                     	;# 
  6938  1FE7                     	;# 
  6939  1FE8                     	;# 
  6940  1FE8                     	;# 
  6941  1FE9                     	;# 
  6942  1FEA                     	;# 
  6943  1FEB                     	;# 
  6944  1FED                     	;# 
  6945  1FEE                     	;# 
  6946  1FEF                     	;_inputArray
  6947                           
  6948                           	psect	idataBANK1
  6949  1703                     __pidataBANK1:	
  6950                           
  6951                           ;initializer for _delay
  6952  1703  340A               	retlw	10
  6953  1704  3400               	retlw	0
  6954                           
  6955                           ;initializer for _threshold
  6956  1705  3490               	retlw	144
  6957  1706  3406               	retlw	6
  6958                           
  6959                           ;initializer for _address
  6960  1707  3401               	retlw	1
  6961  1708  3400               	retlw	0
  6962                           
  6963                           	psect	stringtext1
  6964  1000                     __pstringtext1:	
  6965  1000                     TM1650_setDigit@charTable:	
  6966  1000  3400               	retlw	0
  6967  1001  3482               	retlw	130
  6968  1002  3421               	retlw	33
  6969  1003  3400               	retlw	0
  6970  1004  3400               	retlw	0
  6971  1005  3400               	retlw	0
  6972  1006  3400               	retlw	0
  6973  1007  3402               	retlw	2
  6974  1008  3439               	retlw	57
  6975  1009  340F               	retlw	15
  6976  100A  3400               	retlw	0
  6977  100B  3400               	retlw	0
  6978  100C  3400               	retlw	0
  6979  100D  3440               	retlw	64
  6980  100E  3480               	retlw	128
  6981  100F  3400               	retlw	0
  6982  1010  343F               	retlw	63
  6983  1011  3406               	retlw	6
  6984  1012  345B               	retlw	91
  6985  1013  344F               	retlw	79
  6986  1014  3466               	retlw	102
  6987  1015  346D               	retlw	109
  6988  1016  347D               	retlw	125
  6989  1017  3407               	retlw	7
  6990  1018  347F               	retlw	127
  6991  1019  346F               	retlw	111
  6992  101A  3400               	retlw	0
  6993  101B  3400               	retlw	0
  6994  101C  3400               	retlw	0
  6995  101D  3448               	retlw	72
  6996  101E  3400               	retlw	0
  6997  101F  3453               	retlw	83
  6998  1020  3400               	retlw	0
  6999  1021  3477               	retlw	119
  7000  1022  347C               	retlw	124
  7001  1023  3439               	retlw	57
  7002  1024  345E               	retlw	94
  7003  1025  3479               	retlw	121
  7004  1026  3471               	retlw	113
  7005  1027  346F               	retlw	111
  7006  1028  3476               	retlw	118
  7007  1029  3406               	retlw	6
  7008  102A  341E               	retlw	30
  7009  102B  3400               	retlw	0
  7010  102C  3438               	retlw	56
  7011  102D  3400               	retlw	0
  7012  102E  3454               	retlw	84
  7013  102F  343F               	retlw	63
  7014  1030  3473               	retlw	115
  7015  1031  3467               	retlw	103
  7016  1032  3450               	retlw	80
  7017  1033  346D               	retlw	109
  7018  1034  3478               	retlw	120
  7019  1035  343E               	retlw	62
  7020  1036  3400               	retlw	0
  7021  1037  3400               	retlw	0
  7022  1038  3400               	retlw	0
  7023  1039  346E               	retlw	110
  7024  103A  3400               	retlw	0
  7025  103B  3439               	retlw	57
  7026  103C  3400               	retlw	0
  7027  103D  340F               	retlw	15
  7028  103E  3400               	retlw	0
  7029  103F  3408               	retlw	8
  7030  1040  3463               	retlw	99
  7031  1041  345F               	retlw	95
  7032  1042  347C               	retlw	124
  7033  1043  3458               	retlw	88
  7034  1044  345E               	retlw	94
  7035  1045  347B               	retlw	123
  7036  1046  3471               	retlw	113
  7037  1047  346F               	retlw	111
  7038  1048  3474               	retlw	116
  7039  1049  3402               	retlw	2
  7040  104A  341E               	retlw	30
  7041  104B  3400               	retlw	0
  7042  104C  3406               	retlw	6
  7043  104D  3400               	retlw	0
  7044  104E  3454               	retlw	84
  7045  104F  345C               	retlw	92
  7046  1050  3473               	retlw	115
  7047  1051  3467               	retlw	103
  7048  1052  3450               	retlw	80
  7049  1053  346D               	retlw	109
  7050  1054  3478               	retlw	120
  7051  1055  341C               	retlw	28
  7052  1056  3400               	retlw	0
  7053  1057  3400               	retlw	0
  7054  1058  3400               	retlw	0
  7055  1059  346E               	retlw	110
  7056  105A  3400               	retlw	0
  7057  105B  3439               	retlw	57
  7058  105C  3430               	retlw	48
  7059  105D  340F               	retlw	15
  7060  105E  3400               	retlw	0
  7061  105F  3400               	retlw	0
  7062  1060                     __end_ofTM1650_setDigit@charTable:	
  7063                           
  7064                           	psect	nvBANK1
  7065  00EB                     __pnvBANK1:	
  7066  00EB                     _TMR0_InterruptHandler:	
  7067  00EB                     	ds	2
  7068  00ED                     _ADCC_ADTI_InterruptHandler:	
  7069  00ED                     	ds	2
  7070  00EF                     _eusart1TxBufferRemaining:	
  7071  00EF                     	ds	1
  7072                           
  7073                           	psect	nvBANK2
  7074  0154                     __pnvBANK2:	
  7075  0154                     _EUSART1_ErrorHandler:	
  7076  0154                     	ds	2
  7077  0156                     _EUSART1_OverrunErrorHandler:	
  7078  0156                     	ds	2
  7079  0158                     _EUSART1_FramingErrorHandler:	
  7080  0158                     	ds	2
  7081  015A                     _EUSART1_RxDefaultInterruptHandler:	
  7082  015A                     	ds	2
  7083  015C                     _EUSART1_TxDefaultInterruptHandler:	
  7084  015C                     	ds	2
  7085  0014                     _TRISC	set	20
  7086  0013                     _TRISB	set	19
  7087  0012                     _TRISA	set	18
  7088  001A                     _LATC	set	26
  7089  0019                     _LATB	set	25
  7090  0018                     _LATA	set	24
  7091  000B                     _INTCONbits	set	11
  7092  000C                     _PORTA	set	12
  7093  000E                     _PORTC	set	14
  7094  009C                     _TRISB4	set	156
  7095  00A4                     _TRISC4	set	164
  7096  00A3                     _TRISC3	set	163
  7097  00A6                     _TRISC6	set	166
  7098  00A7                     _TRISC7	set	167
  7099  0090                     _ADERRL	set	144
  7100  0091                     _ADERRH	set	145
  7101  009B                     _ADPREVL	set	155
  7102  009C                     _ADPREVH	set	156
  7103  0094                     _ADFLTRL	set	148
  7104  0095                     _ADFLTRH	set	149
  7105  0096                     _ADACCL	set	150
  7106  0097                     _ADACCH	set	151
  7107  0099                     _ADCNT	set	153
  7108  009D                     _ADRESL	set	157
  7109  009E                     _ADRESH	set	158
  7110  009F                     _ADPCH	set	159
  7111  009A                     _ADRPT	set	154
  7112  0098                     _ADACCU	set	152
  7113  0093                     _ADSTPTH	set	147
  7114  0092                     _ADSTPTL	set	146
  7115  008F                     _ADUTHH	set	143
  7116  008E                     _ADUTHL	set	142
  7117  008D                     _ADLTHH	set	141
  7118  008C                     _ADLTHL	set	140
  7119  011B                     _SP1BRG	set	283
  7120  011F                     _BAUD1CONbits	set	287
  7121  0112                     _ADCON1bits	set	274
  7122  0115                     _ADSTATbits	set	277
  7123  0113                     _ADCON2bits	set	275
  7124  0114                     _ADCON3bits	set	276
  7125  0111                     _ADCON0bits	set	273
  7126  0111                     _ADCON0	set	273
  7127  0118                     _ADCLK	set	280
  7128  0117                     _ADACT	set	279
  7129  0116                     _ADREF	set	278
  7130  0115                     _ADSTAT	set	277
  7131  0114                     _ADCON3	set	276
  7132  0113                     _ADCON2	set	275
  7133  0112                     _ADCON1	set	274
  7134  0110                     _ADPREH	set	272
  7135  010F                     _ADPREL	set	271
  7136  010E                     _ADCAP	set	270
  7137  010D                     _ADACQH	set	269
  7138  010C                     _ADACQL	set	268
  7139  0119                     _RC1REG	set	281
  7140  011D                     _RC1STAbits	set	285
  7141  011A                     _TX1REG	set	282
  7142  011E                     _TX1STAbits	set	286
  7143  011C                     _SP1BRGH	set	284
  7144  011B                     _SP1BRGL	set	283
  7145  011E                     _TX1STA	set	286
  7146  011D                     _RC1STA	set	285
  7147  011F                     _BAUD1CON	set	287
  7148  018C                     _SSP1BUF	set	396
  7149  0191                     _SSP1CON2bits	set	401
  7150  0190                     _SSP1CON1bits	set	400
  7151  018D                     _SSP1ADD	set	397
  7152  0192                     _SSP1CON3	set	402
  7153  0190                     _SSP1CON1	set	400
  7154  018F                     _SSP1STAT	set	399
  7155  028E                     _T2CONbits	set	654
  7156  0290                     _T2CLKCON	set	656
  7157  0318                     _CCPR4	set	792
  7158  0314                     _CCPR3	set	788
  7159  0310                     _CCPR2	set	784
  7160  030C                     _CCPR1	set	780
  7161  031A                     _CCP4CONbits	set	794
  7162  0316                     _CCP3CONbits	set	790
  7163  0312                     _CCP2CONbits	set	786
  7164  030E                     _CCP1CONbits	set	782
  7165  059E                     _T0CON0bits	set	1438
  7166  059E                     _T0CON0	set	1438
  7167  059C                     _TMR0L	set	1436
  7168  059D                     _TMR0H	set	1437
  7169  059F                     _T0CON1	set	1439
  7170  070D                     _PIR1bits	set	1805
  7171  0717                     _PIE1bits	set	1815
  7172  070F                     _PIR3bits	set	1807
  7173  070C                     _PIR0bits	set	1804
  7174  0716                     _PIE0bits	set	1814
  7175  0719                     _PIE3bits	set	1817
  7176  079D                     _PMD7	set	1949
  7177  079C                     _PMD6	set	1948
  7178  079B                     _PMD5	set	1947
  7179  079A                     _PMD4	set	1946
  7180  0799                     _PMD3	set	1945
  7181  0798                     _PMD2	set	1944
  7182  0797                     _PMD1	set	1943
  7183  0796                     _PMD0	set	1942
  7184  0892                     _OSCTUNE	set	2194
  7185  0893                     _OSCFRQ	set	2195
  7186  0891                     _OSCEN	set	2193
  7187  088F                     _OSCCON3	set	2191
  7188  088D                     _OSCCON1	set	2189
  7189  1ECB                     _RX1PPS	set	7883
  7190  1ECB                     _RX1DTPPS	set	7883
  7191  1EC6                     _SSP1DATPPS	set	7878
  7192  1EC5                     _SSP1CLKPPS	set	7877
  7193  1F24                     _RC4PPS	set	7972
  7194  1F23                     _RC3PPS	set	7971
  7195  1F26                     _RC6PPS	set	7974
  7196  1F27                     _RC7PPS	set	7975
  7197  1F15                     _RA5PPS	set	7957
  7198  1F1E                     _RB6PPS	set	7966
  7199  1F14                     _RA4PPS	set	7956
  7200  1F51                     _SLRCONC	set	8017
  7201  1F46                     _SLRCONB	set	8006
  7202  1F3B                     _SLRCONA	set	7995
  7203  1F50                     _ODCONC	set	8016
  7204  1F45                     _ODCONB	set	8005
  7205  1F3A                     _ODCONA	set	7994
  7206  1F4F                     _WPUC	set	8015
  7207  1F39                     _WPUA	set	7993
  7208  1F44                     _WPUB	set	8004
  7209  1F38                     _ANSELA	set	7992
  7210  1F43                     _ANSELB	set	8003
  7211  1F4E                     _ANSELC	set	8014
  7212                           
  7213                           ; #config settings
  7214  0000                     
  7215                           	psect	cinit
  7216  003B                     start_initialization:	
  7217  003B                     __initialization:		;BIGRAM
  7218                           
  7219                           ; Initialize objects allocated to BANK1
  7220  003B  3003               	movlw	low __pidataBANK1
  7221  003C  0084               	movwf	4
  7222  003D  3097               	movlw	(high __pidataBANK1)| (0+128)
  7223  003E  0085               	movwf	5
  7224  003F  0141               	movlb	1	; select bank1
  7225  0040  0012               	moviw fsr0++
  7226  0041  00E5               	movwf	__pdataBANK1& (0+127)
  7227  0042  0012               	moviw fsr0++
  7228  0043  00E6               	movwf	(__pdataBANK1+1)& (0+127)
  7229  0044  0012               	moviw fsr0++
  7230  0045  00E7               	movwf	(__pdataBANK1+2)& (0+127)
  7231  0046  0012               	moviw fsr0++
  7232  0047  00E8               	movwf	(__pdataBANK1+3)& (0+127)
  7233  0048  0012               	moviw fsr0++
  7234  0049  00E9               	movwf	(__pdataBANK1+4)& (0+127)
  7235  004A  0012               	moviw fsr0++
  7236  004B  00EA               	movwf	(__pdataBANK1+5)& (0+127)
  7237                           
  7238                           ; Clear objects allocated to BIGRAM
  7239  004C  30EE               	movlw	low (0+9198)
  7240  004D  0084               	movwf	4
  7241  004E  3023               	movlw	high (0+9198)
  7242  004F  0085               	movwf	5
  7243  0050  3002               	movlw	2
  7244  0051  00FE               	movwf	btemp
  7245  0052  3004               	movlw	4
  7246  0053  00FF               	movwf	btemp+1
  7247  0054  3197  2792  3180   	fcall	clear_ram0
  7248                           
  7249                           ; Clear objects allocated to COMMON
  7250  0057  01F0               	clrf	__pbssCOMMON& (0+127)
  7251  0058  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  7252  0059  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  7253  005A  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  7254  005B  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  7255  005C  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  7256                           
  7257                           ; Clear objects allocated to BANK1
  7258  005D  30A0               	movlw	low __pbssBANK1
  7259  005E  0084               	movwf	4
  7260  005F  3000               	movlw	high __pbssBANK1
  7261  0060  0085               	movwf	5
  7262  0061  303B               	movlw	59
  7263  0062  00FE               	movwf	btemp
  7264  0063  3000               	movlw	0
  7265  0064  00FF               	movwf	btemp+1
  7266  0065  3197  2792  3180   	fcall	clear_ram0
  7267                           
  7268                           ; Clear objects allocated to BANK2
  7269  0068  3020               	movlw	low __pbssBANK2
  7270  0069  0084               	movwf	4
  7271  006A  3001               	movlw	high __pbssBANK2
  7272  006B  0085               	movwf	5
  7273  006C  3034               	movlw	52
  7274  006D  00FE               	movwf	btemp
  7275  006E  3000               	movlw	0
  7276  006F  00FF               	movwf	btemp+1
  7277  0070  3197  2792         	fcall	clear_ram0
  7278  0072                     end_of_initialization:	
  7279                           ;End of C runtime variable initialization code
  7280                           
  7281  0072                     __end_of__initialization:	
  7282  0072  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7283  0073  0140               	movlb	0
  7284  0074  318C  2C5F         	ljmp	_main	;jump to C main() function
  7285                           
  7286                           	psect	bssCOMMON
  7287  0070                     __pbssCOMMON:	
  7288  0070                     _eusart1RxTail:	
  7289  0070                     	ds	1
  7290  0071                     _eusart1RxHead:	
  7291  0071                     	ds	1
  7292  0072                     _eusart1TxTail:	
  7293  0072                     	ds	1
  7294  0073                     _eusart1TxHead:	
  7295  0073                     	ds	1
  7296  0074                     I2C1_ISR@i2c_address:	
  7297  0074                     	ds	2
  7298                           
  7299                           	psect	bssBANK1
  7300  00A0                     __pbssBANK1:	
  7301  00A0                     _eusart1RxStatusBuffer:	
  7302  00A0                     	ds	8
  7303  00A8                     _i2c1_object:	
  7304  00A8                     	ds	5
  7305  00AD                     _thresholdCount:	
  7306  00AD                     	ds	2
  7307  00AF                     _lastRun:	
  7308  00AF                     	ds	2
  7309  00B1                     _bpm:	
  7310  00B1                     	ds	2
  7311  00B3                     _lastBeat:	
  7312  00B3                     	ds	2
  7313  00B5                     buttons@lastTime:	
  7314  00B5                     	ds	2
  7315  00B7                     _currentTime:	
  7316  00B7                     	ds	2
  7317  00B9                     _lastTime:	
  7318  00B9                     	ds	2
  7319  00BB                     _lastActiveTime:	
  7320  00BB                     	ds	2
  7321  00BD                     _pointer:	
  7322  00BD                     	ds	2
  7323  00BF                     _counter:	
  7324  00BF                     	ds	2
  7325  00C1                     _p_i2c1_trb_current:	
  7326  00C1                     	ds	2
  7327  00C3                     _lastDetected:	
  7328  00C3                     	ds	1
  7329  00C4                     _thresholdExceeded:	
  7330  00C4                     	ds	1
  7331  00C5                     _detected:	
  7332  00C5                     	ds	1
  7333  00C6                     _displayState:	
  7334  00C6                     	ds	1
  7335  00C7                     _menu:	
  7336  00C7                     	ds	1
  7337  00C8                     _enter:	
  7338  00C8                     	ds	1
  7339  00C9                     _down:	
  7340  00C9                     	ds	1
  7341  00CA                     _up:	
  7342  00CA                     	ds	1
  7343  00CB                     I2C1_ISR@i2c_10bit_address_restart:	
  7344  00CB                     	ds	1
  7345  00CC                     I2C1_ISR@i2c_bytes_left:	
  7346  00CC                     	ds	1
  7347  00CD                     I2C1_ISR@pi2c_buf_ptr:	
  7348  00CD                     	ds	1
  7349  00CE                     _p_i2c1_current:	
  7350  00CE                     	ds	1
  7351  00CF                     _i2c1_trb_count:	
  7352  00CF                     	ds	1
  7353  00D0                     _i2c1_state:	
  7354  00D0                     	ds	1
  7355  00D1                     _eusart1RxLastError:	
  7356  00D1                     	ds	1
  7357  00D2                     _eusart1RxCount:	
  7358  00D2                     	ds	1
  7359  00D3                     I2C1_MasterWrite@trBlock:	
  7360  00D3                     	ds	4
  7361  00D7                     _i2c1_tr_queue:	
  7362  00D7                     	ds	4
  7363                           
  7364                           	psect	dataBANK1
  7365  00E5                     __pdataBANK1:	
  7366  00E5                     _delay:	
  7367  00E5                     	ds	2
  7368  00E7                     _threshold:	
  7369  00E7                     	ds	2
  7370  00E9                     _address:	
  7371  00E9                     	ds	2
  7372                           
  7373                           	psect	bssBANK2
  7374  0120                     __pbssBANK2:	
  7375  0120                     _eusart1RxBuffer:	
  7376  0120                     	ds	8
  7377  0128                     _eusart1TxBuffer:	
  7378  0128                     	ds	8
  7379  0130                     _buttons:	
  7380  0130                     	ds	32
  7381  0150                     I2C1_MasterRead@trBlock:	
  7382  0150                     	ds	4
  7383                           
  7384                           	psect	clrtext
  7385  1792                     clear_ram0:	
  7386                           ;	Called with FSR0 containing the base address, and
  7387                           ;	btemp/btemp+1 has the size to clear
  7388                           
  7389  1792  0064               	clrwdt	;clear the watchdog before getting into this loop
  7390  1793                     clrloop0:	
  7391  1793  0180               	clrf	0	;clear RAM location pointed to by FSR
  7392  1794  3101               	addfsr 0,1
  7393  1795  3001               	movlw	1
  7394  1796  02FE               	subwf	126,f
  7395  1797  3000               	movlw	0
  7396  1798  3BFF               	subwfb	127,f
  7397  1799  087F               	movf	127,w
  7398  179A  047E               	iorwf	126,w
  7399  179B  1903               	btfsc	3,2
  7400  179C  3400               	retlw	0	;all done for this memory range, return
  7401  179D  2F93               	goto	clrloop0	;have we reached the end yet?
  7402                           
  7403                           	psect	cstackBANK1
  7404  00DB                     __pcstackBANK1:	
  7405  00DB                     ?_LED_setColor:	
  7406  00DB                     LED_setColor@red:	
  7407                           ; 1 bytes @ 0x0
  7408                           
  7409                           
  7410                           ; 2 bytes @ 0x0
  7411  00DB                     	ds	2
  7412  00DD                     LED_setColor@green:	
  7413                           
  7414                           ; 2 bytes @ 0x2
  7415  00DD                     	ds	2
  7416  00DF                     LED_setColor@blue:	
  7417                           
  7418                           ; 2 bytes @ 0x4
  7419  00DF                     	ds	2
  7420  00E1                     LED_setColor@white:	
  7421                           
  7422                           ; 2 bytes @ 0x6
  7423  00E1                     	ds	2
  7424  00E3                     main@time:	
  7425                           
  7426                           ; 2 bytes @ 0x8
  7427  00E3                     	ds	2
  7428                           
  7429                           	psect	cstackCOMMON
  7430  0076                     __pcstackCOMMON:	
  7431  0076                     ?_EUSART1_Receive_ISR:	
  7432  0076                     ?_EUSART1_Transmit_ISR:	
  7433                           ; 1 bytes @ 0x0
  7434                           
  7435  0076                     ??_EUSART1_Transmit_ISR:	
  7436                           ; 1 bytes @ 0x0
  7437                           
  7438  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  7439                           ; 1 bytes @ 0x0
  7440                           
  7441  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  7442                           ; 1 bytes @ 0x0
  7443                           
  7444  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7445                           ; 1 bytes @ 0x0
  7446                           
  7447  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7448                           ; 1 bytes @ 0x0
  7449                           
  7450  0076                     ?_EUSART1_DefaultErrorHandler:	
  7451                           ; 1 bytes @ 0x0
  7452                           
  7453  0076                     ?_EUSART1_RxDataHandler:	
  7454                           ; 1 bytes @ 0x0
  7455                           
  7456  0076                     ??_EUSART1_RxDataHandler:	
  7457                           ; 1 bytes @ 0x0
  7458                           
  7459  0076                     ?_TMR0_ISR:	
  7460                           ; 1 bytes @ 0x0
  7461                           
  7462  0076                     ??_TMR0_ISR:	
  7463                           ; 1 bytes @ 0x0
  7464                           
  7465  0076                     ?_I2C1_BusCollisionISR:	
  7466                           ; 1 bytes @ 0x0
  7467                           
  7468  0076                     ??_I2C1_BusCollisionISR:	
  7469                           ; 1 bytes @ 0x0
  7470                           
  7471  0076                     ?_I2C1_ISR:	
  7472                           ; 1 bytes @ 0x0
  7473                           
  7474  0076                     ?_ADCC_ThresholdISR:	
  7475                           ; 1 bytes @ 0x0
  7476                           
  7477  0076                     ??_ADCC_ThresholdISR:	
  7478                           ; 1 bytes @ 0x0
  7479                           
  7480  0076                     ?_PMD_Initialize:	
  7481                           ; 1 bytes @ 0x0
  7482                           
  7483  0076                     ?_PIN_MANAGER_Initialize:	
  7484                           ; 1 bytes @ 0x0
  7485                           
  7486  0076                     ?_OSCILLATOR_Initialize:	
  7487                           ; 1 bytes @ 0x0
  7488                           
  7489  0076                     ?_I2C1_Initialize:	
  7490                           ; 1 bytes @ 0x0
  7491                           
  7492  0076                     ?_ADCC_Initialize:	
  7493                           ; 1 bytes @ 0x0
  7494                           
  7495  0076                     ?_TMR0_Initialize:	
  7496                           ; 1 bytes @ 0x0
  7497                           
  7498  0076                     ?_I2C1_Stop:	
  7499                           ; 1 bytes @ 0x0
  7500                           
  7501  0076                     ??_I2C1_Stop:	
  7502                           ; 1 bytes @ 0x0
  7503                           
  7504  0076                     ?_I2C1_FunctionComplete:	
  7505                           ; 1 bytes @ 0x0
  7506                           
  7507  0076                     ??_I2C1_FunctionComplete:	
  7508                           ; 1 bytes @ 0x0
  7509                           
  7510  0076                     ?_ADCC_DefaultInterruptHandler:	
  7511                           ; 1 bytes @ 0x0
  7512                           
  7513  0076                     ??_ADCC_DefaultInterruptHandler:	
  7514                           ; 1 bytes @ 0x0
  7515                           
  7516  0076                     ?_TM1650_init:	
  7517                           ; 1 bytes @ 0x0
  7518                           
  7519  0076                     ?_CLOCK_init:	
  7520                           ; 1 bytes @ 0x0
  7521                           
  7522  0076                     ?_BUTTONS_init:	
  7523                           ; 1 bytes @ 0x0
  7524                           
  7525  0076                     ?_CONTROLLER_init:	
  7526                           ; 1 bytes @ 0x0
  7527                           
  7528  0076                     ?_UART_init:	
  7529                           ; 1 bytes @ 0x0
  7530                           
  7531  0076                     ?_LED_init:	
  7532                           ; 1 bytes @ 0x0
  7533                           
  7534  0076                     ?_BEAT_init:	
  7535                           ; 1 bytes @ 0x0
  7536                           
  7537  0076                     ?_BUTTONS_task:	
  7538                           ; 1 bytes @ 0x0
  7539                           
  7540  0076                     ?_CONTROLLER_task:	
  7541                           ; 1 bytes @ 0x0
  7542                           
  7543  0076                     ?_BEAT_task:	
  7544                           ; 1 bytes @ 0x0
  7545                           
  7546  0076                     ?_BEAT_detected:	
  7547                           ; 1 bytes @ 0x0
  7548                           
  7549  0076                     ?_TM1650_enable:	
  7550                           ; 1 bytes @ 0x0
  7551                           
  7552  0076                     ?_TMR0_DefaultInterruptHandler:	
  7553                           ; 1 bytes @ 0x0
  7554                           
  7555  0076                     ??_TMR0_DefaultInterruptHandler:	
  7556                           ; 1 bytes @ 0x0
  7557                           
  7558  0076                     ?_EUSART1_Initialize:	
  7559                           ; 1 bytes @ 0x0
  7560                           
  7561  0076                     ?_INTERRUPT_InterruptManager:	
  7562                           ; 1 bytes @ 0x0
  7563                           
  7564  0076                     ?_SYSTEM_Initialize:	
  7565                           ; 1 bytes @ 0x0
  7566                           
  7567  0076                     ?_I2C1_WaitForLastPacketToComplete:	
  7568                           ; 1 bytes @ 0x0
  7569                           
  7570  0076                     ?_ADCC_StartConversion:	
  7571                           ; 1 bytes @ 0x0
  7572                           
  7573  0076                     ?_main:	
  7574                           ; 1 bytes @ 0x0
  7575                           
  7576  0076                     ?_TM1650_isEnabled:	
  7577                           ; 1 bytes @ 0x0
  7578                           
  7579  0076                     ?_CLOCK_timerCallback:	
  7580                           ; 1 bytes @ 0x0
  7581                           
  7582  0076                     ??_CLOCK_timerCallback:	
  7583                           ; 1 bytes @ 0x0
  7584                           
  7585  0076                     ?_BUTTONS_isClicked:	
  7586                           ; 1 bytes @ 0x0
  7587                           
  7588  0076                     ?_BUTTONS_isHeld:	
  7589                           ; 1 bytes @ 0x0
  7590                           
  7591  0076                     ?_address_inc:	
  7592                           ; 1 bytes @ 0x0
  7593                           
  7594  0076                     ?_address_dec:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597  0076                     ?_adcThresholdHandler:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600  0076                     ??_adcThresholdHandler:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603                           
  7604                           ; 1 bytes @ 0x0
  7605  0076                     	ds	1
  7606  0077                     ??_EUSART1_Receive_ISR:	
  7607  0077                     ??_EUSART1_DefaultErrorHandler:	
  7608                           ; 1 bytes @ 0x1
  7609                           
  7610  0077                     I2C1_Stop@completion_code:	
  7611                           ; 1 bytes @ 0x1
  7612                           
  7613                           
  7614                           ; 1 bytes @ 0x1
  7615  0077                     	ds	1
  7616  0078                     ??_I2C1_ISR:	
  7617                           
  7618                           ; 1 bytes @ 0x2
  7619  0078                     	ds	4
  7620  007C                     ??_INTERRUPT_InterruptManager:	
  7621                           
  7622                           	psect	cstackBANK0
  7623  0020                     __pcstackBANK0:	
  7624                           ; 1 bytes @ 0x6
  7625                           
  7626  0020                     ?_EUSART1_SetRxInterruptHandler:	
  7627  0020                     ?_EUSART1_SetTxInterruptHandler:	
  7628                           ; 1 bytes @ 0x0
  7629                           
  7630  0020                     ?_EUSART1_SetFramingErrorHandler:	
  7631                           ; 1 bytes @ 0x0
  7632                           
  7633  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  7634                           ; 1 bytes @ 0x0
  7635                           
  7636  0020                     ?_EUSART1_SetErrorHandler:	
  7637                           ; 1 bytes @ 0x0
  7638                           
  7639  0020                     ??_PMD_Initialize:	
  7640                           ; 1 bytes @ 0x0
  7641                           
  7642  0020                     ??_PIN_MANAGER_Initialize:	
  7643                           ; 1 bytes @ 0x0
  7644                           
  7645  0020                     ??_OSCILLATOR_Initialize:	
  7646                           ; 1 bytes @ 0x0
  7647                           
  7648  0020                     ??_I2C1_Initialize:	
  7649                           ; 1 bytes @ 0x0
  7650                           
  7651  0020                     ?_I2C1_MasterWriteTRBBuild:	
  7652                           ; 1 bytes @ 0x0
  7653                           
  7654  0020                     ?_I2C1_MasterTRBInsert:	
  7655                           ; 1 bytes @ 0x0
  7656                           
  7657  0020                     ?_ADCC_SetADTIInterruptHandler:	
  7658                           ; 1 bytes @ 0x0
  7659                           
  7660  0020                     ??_UART_init:	
  7661                           ; 1 bytes @ 0x0
  7662                           
  7663  0020                     ??_LED_init:	
  7664                           ; 1 bytes @ 0x0
  7665                           
  7666  0020                     ??_BEAT_detected:	
  7667                           ; 1 bytes @ 0x0
  7668                           
  7669  0020                     ?_TMR0_SetInterruptHandler:	
  7670                           ; 1 bytes @ 0x0
  7671                           
  7672  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  7673                           ; 1 bytes @ 0x0
  7674                           
  7675  0020                     ??_ADCC_StartConversion:	
  7676                           ; 1 bytes @ 0x0
  7677                           
  7678  0020                     ?_ADCC_SetUpperThreshold:	
  7679                           ; 1 bytes @ 0x0
  7680                           
  7681  0020                     ??_TM1650_isEnabled:	
  7682                           ; 1 bytes @ 0x0
  7683                           
  7684  0020                     ?_init:	
  7685                           ; 1 bytes @ 0x0
  7686                           
  7687  0020                     ??_BUTTONS_isClicked:	
  7688                           ; 1 bytes @ 0x0
  7689                           
  7690  0020                     ??_BUTTONS_isHeld:	
  7691                           ; 1 bytes @ 0x0
  7692                           
  7693  0020                     ?_CLOCK_getTime:	
  7694                           ; 1 bytes @ 0x0
  7695                           
  7696  0020                     ?__Umul8_16:	
  7697                           ; 2 bytes @ 0x0
  7698                           
  7699  0020                     ?___lwdiv:	
  7700                           ; 2 bytes @ 0x0
  7701                           
  7702  0020                     ?___xxtofl:	
  7703                           ; 2 bytes @ 0x0
  7704                           
  7705  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  7706                           ; 4 bytes @ 0x0
  7707                           
  7708  0020                     ADCC_StartConversion@channel:	
  7709                           ; 1 bytes @ 0x0
  7710                           
  7711  0020                     BUTTONS_isClicked@button:	
  7712                           ; 1 bytes @ 0x0
  7713                           
  7714  0020                     BUTTONS_isHeld@button:	
  7715                           ; 1 bytes @ 0x0
  7716                           
  7717  0020                     __Umul8_16@multiplicand:	
  7718                           ; 1 bytes @ 0x0
  7719                           
  7720  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7721                           ; 1 bytes @ 0x0
  7722                           
  7723  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7724                           ; 2 bytes @ 0x0
  7725                           
  7726  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  7727                           ; 2 bytes @ 0x0
  7728                           
  7729  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7730                           ; 2 bytes @ 0x0
  7731                           
  7732  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7733                           ; 2 bytes @ 0x0
  7734                           
  7735  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  7736                           ; 2 bytes @ 0x0
  7737                           
  7738  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  7739                           ; 2 bytes @ 0x0
  7740                           
  7741  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  7742                           ; 2 bytes @ 0x0
  7743                           
  7744  0020                     init@port:	
  7745                           ; 2 bytes @ 0x0
  7746                           
  7747  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7748                           ; 2 bytes @ 0x0
  7749                           
  7750  0020                     ___lwdiv@divisor:	
  7751                           ; 2 bytes @ 0x0
  7752                           
  7753  0020                     ___xxtofl@val:	
  7754                           ; 2 bytes @ 0x0
  7755                           
  7756                           
  7757                           ; 4 bytes @ 0x0
  7758  0020                     	ds	1
  7759  0021                     I2C1_MasterWriteTRBBuild@length:	
  7760                           
  7761                           ; 1 bytes @ 0x1
  7762  0021                     	ds	1
  7763  0022                     ??_EUSART1_SetRxInterruptHandler:	
  7764  0022                     ??_EUSART1_SetTxInterruptHandler:	
  7765                           ; 1 bytes @ 0x2
  7766                           
  7767  0022                     ??_EUSART1_SetFramingErrorHandler:	
  7768                           ; 1 bytes @ 0x2
  7769                           
  7770  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  7771                           ; 1 bytes @ 0x2
  7772                           
  7773  0022                     ??_EUSART1_SetErrorHandler:	
  7774                           ; 1 bytes @ 0x2
  7775                           
  7776  0022                     ??_ADCC_Initialize:	
  7777                           ; 1 bytes @ 0x2
  7778                           
  7779  0022                     ??_TMR0_Initialize:	
  7780                           ; 1 bytes @ 0x2
  7781                           
  7782  0022                     ??_ADCC_SetADTIInterruptHandler:	
  7783                           ; 1 bytes @ 0x2
  7784                           
  7785  0022                     ??_CLOCK_init:	
  7786                           ; 1 bytes @ 0x2
  7787                           
  7788  0022                     ??_BEAT_init:	
  7789                           ; 1 bytes @ 0x2
  7790                           
  7791  0022                     ??_BUTTONS_task:	
  7792                           ; 1 bytes @ 0x2
  7793                           
  7794  0022                     ??_CLOCK_getTime:	
  7795                           ; 1 bytes @ 0x2
  7796                           
  7797  0022                     ??_TMR0_SetInterruptHandler:	
  7798                           ; 1 bytes @ 0x2
  7799                           
  7800  0022                     ??__Umul8_16:	
  7801                           ; 1 bytes @ 0x2
  7802                           
  7803  0022                     ??_EUSART1_Initialize:	
  7804                           ; 1 bytes @ 0x2
  7805                           
  7806  0022                     ??_ADCC_SetUpperThreshold:	
  7807                           ; 1 bytes @ 0x2
  7808                           
  7809  0022                     I2C1_MasterTRBInsert@pflag:	
  7810                           ; 1 bytes @ 0x2
  7811                           
  7812  0022                     init@pin:	
  7813                           ; 1 bytes @ 0x2
  7814                           
  7815  0022                     I2C1_MasterWriteTRBBuild@address:	
  7816                           ; 1 bytes @ 0x2
  7817                           
  7818  0022                     ___lwdiv@dividend:	
  7819                           ; 2 bytes @ 0x2
  7820                           
  7821                           
  7822                           ; 2 bytes @ 0x2
  7823  0022                     	ds	1
  7824  0023                     ??_I2C1_MasterTRBInsert:	
  7825  0023                     ??_SYSTEM_Initialize:	
  7826                           ; 1 bytes @ 0x3
  7827                           
  7828  0023                     ??_init:	
  7829                           ; 1 bytes @ 0x3
  7830                           
  7831                           
  7832                           ; 1 bytes @ 0x3
  7833  0023                     	ds	1
  7834  0024                     ??_I2C1_MasterWriteTRBBuild:	
  7835  0024                     ??___lwdiv:	
  7836                           ; 1 bytes @ 0x4
  7837                           
  7838  0024                     ??___xxtofl:	
  7839                           ; 1 bytes @ 0x4
  7840                           
  7841  0024                     I2C1_MasterTRBInsert@count:	
  7842                           ; 1 bytes @ 0x4
  7843                           
  7844  0024                     init@btn:	
  7845                           ; 1 bytes @ 0x4
  7846                           
  7847  0024                     __Umul8_16@product:	
  7848                           ; 1 bytes @ 0x4
  7849                           
  7850                           
  7851                           ; 2 bytes @ 0x4
  7852  0024                     	ds	1
  7853  0025                     ??_BUTTONS_init:	
  7854  0025                     BUTTONS_task@i:	
  7855                           ; 1 bytes @ 0x5
  7856                           
  7857  0025                     ___lwdiv@counter:	
  7858                           ; 1 bytes @ 0x5
  7859                           
  7860                           
  7861                           ; 1 bytes @ 0x5
  7862  0025                     	ds	1
  7863  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  7864  0026                     BUTTONS_task@time:	
  7865                           ; 1 bytes @ 0x6
  7866                           
  7867  0026                     ___lwdiv@quotient:	
  7868                           ; 2 bytes @ 0x6
  7869                           
  7870  0026                     __Umul8_16@word_mpld:	
  7871                           ; 2 bytes @ 0x6
  7872                           
  7873                           
  7874                           ; 2 bytes @ 0x6
  7875  0026                     	ds	1
  7876  0027                     ?_I2C1_MasterWrite:	
  7877  0027                     I2C1_MasterWrite@length:	
  7878                           ; 1 bytes @ 0x7
  7879                           
  7880                           
  7881                           ; 1 bytes @ 0x7
  7882  0027                     	ds	1
  7883  0028                     ??_BEAT_task:	
  7884  0028                     ?___lwmod:	
  7885                           ; 1 bytes @ 0x8
  7886                           
  7887  0028                     BUTTONS_task@btn:	
  7888                           ; 2 bytes @ 0x8
  7889                           
  7890  0028                     ___xxtofl@sign:	
  7891                           ; 1 bytes @ 0x8
  7892                           
  7893  0028                     __Umul8_16@multiplier:	
  7894                           ; 1 bytes @ 0x8
  7895                           
  7896  0028                     I2C1_MasterWrite@address:	
  7897                           ; 1 bytes @ 0x8
  7898                           
  7899  0028                     ___lwmod@divisor:	
  7900                           ; 2 bytes @ 0x8
  7901                           
  7902                           
  7903                           ; 2 bytes @ 0x8
  7904  0028                     	ds	1
  7905  0029                     ___xxtofl@exp:	
  7906                           
  7907                           ; 1 bytes @ 0x9
  7908  0029                     	ds	1
  7909  002A                     I2C1_MasterWrite@pflag:	
  7910  002A                     BEAT_task@offset:	
  7911                           ; 1 bytes @ 0xA
  7912                           
  7913  002A                     ___lwmod@dividend:	
  7914                           ; 2 bytes @ 0xA
  7915                           
  7916  002A                     ___xxtofl@arg:	
  7917                           ; 2 bytes @ 0xA
  7918                           
  7919                           
  7920                           ; 4 bytes @ 0xA
  7921  002A                     	ds	1
  7922  002B                     ??_I2C1_MasterWrite:	
  7923                           
  7924                           ; 1 bytes @ 0xB
  7925  002B                     	ds	1
  7926  002C                     ??___lwmod:	
  7927                           
  7928                           ; 1 bytes @ 0xC
  7929  002C                     	ds	1
  7930  002D                     I2C1_MasterWrite@pdata:	
  7931  002D                     ___lwmod@counter:	
  7932                           ; 1 bytes @ 0xD
  7933                           
  7934                           
  7935                           ; 1 bytes @ 0xD
  7936  002D                     	ds	1
  7937  002E                     ?_writeData:	
  7938  002E                     ?___fldiv:	
  7939                           ; 1 bytes @ 0xE
  7940                           
  7941  002E                     writeData@data:	
  7942                           ; 4 bytes @ 0xE
  7943                           
  7944  002E                     ___fldiv@a:	
  7945                           ; 1 bytes @ 0xE
  7946                           
  7947                           
  7948                           ; 4 bytes @ 0xE
  7949  002E                     	ds	1
  7950  002F                     ??_writeData:	
  7951                           
  7952                           ; 1 bytes @ 0xF
  7953  002F                     	ds	3
  7954  0032                     writeData@address:	
  7955  0032                     ___fldiv@b:	
  7956                           ; 1 bytes @ 0x12
  7957                           
  7958                           
  7959                           ; 4 bytes @ 0x12
  7960  0032                     	ds	1
  7961  0033                     writeData@dataToSend:	
  7962                           
  7963                           ; 1 bytes @ 0x13
  7964  0033                     	ds	1
  7965  0034                     writeData@status:	
  7966                           
  7967                           ; 1 bytes @ 0x14
  7968  0034                     	ds	1
  7969  0035                     ??_TM1650_enable:	
  7970  0035                     ?_TM1650_setDigit:	
  7971                           ; 1 bytes @ 0x15
  7972                           
  7973  0035                     TM1650_setDigit@num:	
  7974                           ; 1 bytes @ 0x15
  7975                           
  7976  0035                     TM1650_enable@enable:	
  7977                           ; 1 bytes @ 0x15
  7978                           
  7979                           
  7980                           ; 1 bytes @ 0x15
  7981  0035                     	ds	1
  7982  0036                     ??_TM1650_init:	
  7983  0036                     ??___fldiv:	
  7984                           ; 1 bytes @ 0x16
  7985                           
  7986  0036                     TM1650_setDigit@dp:	
  7987                           ; 1 bytes @ 0x16
  7988                           
  7989                           
  7990                           ; 1 bytes @ 0x16
  7991  0036                     	ds	1
  7992  0037                     ??_TM1650_setDigit:	
  7993                           
  7994                           ; 1 bytes @ 0x17
  7995  0037                     	ds	1
  7996  0038                     TM1650_setDigit@digit:	
  7997                           
  7998                           ; 1 bytes @ 0x18
  7999  0038                     	ds	1
  8000  0039                     TM1650_setDigit@character:	
  8001                           
  8002                           ; 1 bytes @ 0x19
  8003  0039                     	ds	1
  8004  003A                     ?_TM1650_fastPrintNum:	
  8005  003A                     TM1650_fastPrintNum@inputNumber:	
  8006                           ; 1 bytes @ 0x1A
  8007                           
  8008                           
  8009                           ; 2 bytes @ 0x1A
  8010  003A                     	ds	1
  8011  003B                     ___fldiv@rem:	
  8012                           
  8013                           ; 4 bytes @ 0x1B
  8014  003B                     	ds	1
  8015  003C                     ??_TM1650_fastPrintNum:	
  8016                           
  8017                           ; 1 bytes @ 0x1C
  8018  003C                     	ds	1
  8019  003D                     ??_CONTROLLER_init:	
  8020  003D                     ??_CONTROLLER_task:	
  8021                           ; 1 bytes @ 0x1D
  8022                           
  8023  003D                     ??_address_inc:	
  8024                           ; 1 bytes @ 0x1D
  8025                           
  8026  003D                     ??_address_dec:	
  8027                           ; 1 bytes @ 0x1D
  8028                           
  8029                           
  8030                           ; 1 bytes @ 0x1D
  8031  003D                     	ds	2
  8032  003F                     CONTROLLER_task@active:	
  8033  003F                     ___fldiv@sign:	
  8034                           ; 1 bytes @ 0x1F
  8035                           
  8036                           
  8037                           ; 1 bytes @ 0x1F
  8038  003F                     	ds	1
  8039  0040                     ___fldiv@new_exp:	
  8040                           
  8041                           ; 2 bytes @ 0x20
  8042  0040                     	ds	2
  8043  0042                     ___fldiv@grs:	
  8044                           
  8045                           ; 4 bytes @ 0x22
  8046  0042                     	ds	4
  8047  0046                     ___fldiv@bexp:	
  8048                           
  8049                           ; 1 bytes @ 0x26
  8050  0046                     	ds	1
  8051  0047                     ___fldiv@aexp:	
  8052                           
  8053                           ; 1 bytes @ 0x27
  8054  0047                     	ds	1
  8055  0048                     ?___flmul:	
  8056  0048                     ___flmul@b:	
  8057                           ; 4 bytes @ 0x28
  8058                           
  8059                           
  8060                           ; 4 bytes @ 0x28
  8061  0048                     	ds	4
  8062  004C                     ___flmul@a:	
  8063                           
  8064                           ; 4 bytes @ 0x2C
  8065  004C                     	ds	4
  8066  0050                     ??___flmul:	
  8067                           
  8068                           ; 1 bytes @ 0x30
  8069  0050                     	ds	5
  8070  0055                     ___flmul@sign:	
  8071                           
  8072                           ; 1 bytes @ 0x35
  8073  0055                     	ds	1
  8074  0056                     ___flmul@aexp:	
  8075                           
  8076                           ; 1 bytes @ 0x36
  8077  0056                     	ds	1
  8078  0057                     ___flmul@grs:	
  8079                           
  8080                           ; 4 bytes @ 0x37
  8081  0057                     	ds	4
  8082  005B                     ___flmul@bexp:	
  8083                           
  8084                           ; 1 bytes @ 0x3B
  8085  005B                     	ds	1
  8086  005C                     ___flmul@prod:	
  8087                           
  8088                           ; 4 bytes @ 0x3C
  8089  005C                     	ds	4
  8090  0060                     ___flmul@temp:	
  8091                           
  8092                           ; 2 bytes @ 0x40
  8093  0060                     	ds	2
  8094  0062                     ?___fltol:	
  8095  0062                     ___fltol@f1:	
  8096                           ; 4 bytes @ 0x42
  8097                           
  8098                           
  8099                           ; 4 bytes @ 0x42
  8100  0062                     	ds	4
  8101  0066                     ??___fltol:	
  8102                           
  8103                           ; 1 bytes @ 0x46
  8104  0066                     	ds	5
  8105  006B                     ___fltol@sign1:	
  8106                           
  8107                           ; 1 bytes @ 0x4B
  8108  006B                     	ds	1
  8109  006C                     ___fltol@exp1:	
  8110                           
  8111                           ; 1 bytes @ 0x4C
  8112  006C                     	ds	1
  8113  006D                     ??_LED_setColor:	
  8114  006D                     ??_main:	
  8115                           ; 1 bytes @ 0x4D
  8116                           
  8117                           
  8118                           ; 1 bytes @ 0x4D
  8119  006D                     	ds	2
  8120                           
  8121                           	psect	maintext
  8122  0C5F                     __pmaintext:	
  8123 ;;
  8124 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8125 ;;
  8126 ;; *************** function _main *****************
  8127 ;; Defined at:
  8128 ;;		line 59 in file "main.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;		None
  8131 ;; Auto vars:     Size  Location     Type
  8132 ;;  time            2    8[BANK1 ] unsigned short 
  8133 ;; Return value:  Size  Location     Type
  8134 ;;                  1    wreg      void 
  8135 ;; Registers used:
  8136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8137 ;; Tracked objects:
  8138 ;;		On entry : B3F/0
  8139 ;;		On exit  : 0/0
  8140 ;;		Unchanged: 0/0
  8141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8143 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8144 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8145 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8146 ;;Total ram usage:        4 bytes
  8147 ;; Hardware stack levels required when called:   12
  8148 ;; This function calls:
  8149 ;;		_BEAT_detected
  8150 ;;		_BEAT_init
  8151 ;;		_BEAT_task
  8152 ;;		_BUTTONS_init
  8153 ;;		_BUTTONS_task
  8154 ;;		_CLOCK_getTime
  8155 ;;		_CLOCK_init
  8156 ;;		_CONTROLLER_init
  8157 ;;		_CONTROLLER_task
  8158 ;;		_LED_init
  8159 ;;		_LED_setColor
  8160 ;;		_SYSTEM_Initialize
  8161 ;;		_TM1650_fastPrintNum
  8162 ;;		_TM1650_init
  8163 ;;		_UART_init
  8164 ;; This function is called by:
  8165 ;;		Startup code after reset
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           
  8170                           ;psect for function _main
  8171  0C5F                     _main:	
  8172                           
  8173                           ;main.c: 62:     SYSTEM_Initialize();
  8174                           
  8175                           ;incstack = 0
  8176                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8177  0C5F  3188  2009  318C   	fcall	_SYSTEM_Initialize
  8178                           
  8179                           ;main.c: 63:     _delay((unsigned long)((50)*(4000000/4000.0)));
  8180  0C62  3041               	movlw	65
  8181  0C63  0140               	movlb	0	; select bank0
  8182  0C64  00ED               	movwf	??_main
  8183  0C65  30EE               	movlw	238
  8184  0C66                     u5327:	
  8185  0C66  0B89               	decfsz	9,f
  8186  0C67  2C66               	goto	u5327
  8187  0C68  0BED               	decfsz	??_main,f
  8188  0C69  2C66               	goto	u5327
  8189  0C6A  0000               	nop
  8190                           
  8191                           ;main.c: 64:     TM1650_init();
  8192  0C6B  3188  2000  318C   	fcall	_TM1650_init
  8193                           
  8194                           ;main.c: 65:     CLOCK_init();
  8195  0C6E  3197  2709  318C   	fcall	_CLOCK_init
  8196                           
  8197                           ;main.c: 66:     BUTTONS_init();
  8198  0C71  318A  22F7  318C   	fcall	_BUTTONS_init
  8199                           
  8200                           ;main.c: 67:     CONTROLLER_init();
  8201  0C74  3197  2787  318C   	fcall	_CONTROLLER_init
  8202                           
  8203                           ;main.c: 68:     UART_init();
  8204  0C77  3188  20AE  318C   	fcall	_UART_init
  8205                           
  8206                           ;main.c: 75:     (INTCONbits.GIE = 1);
  8207  0C7A  178B               	bsf	11,7	;volatile
  8208                           
  8209                           ;main.c: 78:     (INTCONbits.PEIE = 1);
  8210  0C7B  170B               	bsf	11,6	;volatile
  8211                           
  8212                           ;main.c: 86:     LED_init();
  8213  0C7C  3187  27D7  318C   	fcall	_LED_init
  8214                           
  8215                           ;main.c: 87:     BEAT_init();
  8216  0C7F  3188  201E  318C   	fcall	_BEAT_init
  8217  0C82  2C97               	goto	l5456
  8218  0C83                     l5474:	
  8219                           
  8220                           ;main.c: 118:             LED_setColor(100, 100, 100, 100);
  8221  0C83  3064               	movlw	100
  8222  0C84  0141               	movlb	1	; select bank1
  8223  0C85  00DB               	movwf	LED_setColor@red^(0+128)
  8224  0C86  3000               	movlw	0
  8225  0C87  00DC               	movwf	(LED_setColor@red^(0+128)+1)
  8226  0C88  3064               	movlw	100
  8227  0C89  00DD               	movwf	LED_setColor@green^(0+128)
  8228  0C8A  3000               	movlw	0
  8229  0C8B  00DE               	movwf	(LED_setColor@green^(0+128)+1)
  8230  0C8C  3064               	movlw	100
  8231  0C8D  00DF               	movwf	LED_setColor@blue^(0+128)
  8232  0C8E  3000               	movlw	0
  8233  0C8F  00E0               	movwf	(LED_setColor@blue^(0+128)+1)
  8234  0C90  3064               	movlw	100
  8235  0C91  00E1               	movwf	LED_setColor@white^(0+128)
  8236  0C92  3000               	movlw	0
  8237  0C93  00E2               	movwf	(LED_setColor@white^(0+128)+1)
  8238  0C94                     L1:	
  8239  0C94  3185  25CF  318C   	fcall	_LED_setColor
  8240  0C97                     l5456:	
  8241                           ;main.c: 119:         } else {
  8242                           
  8243                           
  8244                           ;main.c: 100:     {;main.c: 101:         BUTTONS_task();
  8245  0C97  318D  25B0  318C   	fcall	_BUTTONS_task
  8246                           
  8247                           ;main.c: 102:         CONTROLLER_task();
  8248  0C9A  318B  2394  318C   	fcall	_CONTROLLER_task
  8249                           
  8250                           ;main.c: 103:         TM1650_fastPrintNum(address);
  8251  0C9D  0141               	movlb	1	; select bank1
  8252  0C9E  086A               	movf	(_address+1)^(0+128),w
  8253  0C9F  0140               	movlb	0	; select bank0
  8254  0CA0  00BB               	movwf	TM1650_fastPrintNum@inputNumber+1
  8255  0CA1  0141               	movlb	1	; select bank1
  8256  0CA2  0869               	movf	_address^(0+128),w
  8257  0CA3  0140               	movlb	0	; select bank0
  8258  0CA4  00BA               	movwf	TM1650_fastPrintNum@inputNumber
  8259  0CA5  3182  22A2  318C   	fcall	_TM1650_fastPrintNum
  8260                           
  8261                           ;main.c: 106:         BEAT_task();
  8262  0CA8  318C  24DF  318C   	fcall	_BEAT_task
  8263                           
  8264                           ;main.c: 108:         time_t time = CLOCK_getTime();
  8265  0CAB  3197  2735  318C   	fcall	_CLOCK_getTime
  8266  0CAE  0140               	movlb	0	; select bank0
  8267  0CAF  0821               	movf	?_CLOCK_getTime+1,w
  8268  0CB0  0141               	movlb	1	; select bank1
  8269  0CB1  00E4               	movwf	(main@time+1)^(0+128)
  8270  0CB2  0140               	movlb	0	; select bank0
  8271  0CB3  0820               	movf	?_CLOCK_getTime,w
  8272  0CB4  0141               	movlb	1	; select bank1
  8273  0CB5  00E3               	movwf	main@time^(0+128)
  8274                           
  8275                           ;main.c: 111:         if(time - lastTime < 100){
  8276  0CB6  0839               	movf	_lastTime^(0+128),w
  8277  0CB7  0263               	subwf	main@time^(0+128),w
  8278  0CB8  0140               	movlb	0	; select bank0
  8279  0CB9  00ED               	movwf	??_main
  8280  0CBA  0141               	movlb	1	; select bank1
  8281  0CBB  083A               	movf	(_lastTime+1)^(0+128),w
  8282  0CBC  3B64               	subwfb	(main@time+1)^(0+128),w
  8283  0CBD  0140               	movlb	0	; select bank0
  8284  0CBE  00EE               	movwf	??_main+1
  8285  0CBF  3000               	movlw	0
  8286  0CC0  026E               	subwf	??_main+1,w
  8287  0CC1  3064               	movlw	100
  8288  0CC2  1903               	skipnz
  8289  0CC3  026D               	subwf	??_main,w
  8290  0CC4  1C03               	btfss	3,0
  8291  0CC5  2C97               	goto	l5456
  8292                           
  8293                           ;main.c: 115:         lastTime = time;
  8294  0CC6  0141               	movlb	1	; select bank1
  8295  0CC7  0864               	movf	(main@time+1)^(0+128),w
  8296  0CC8  00BA               	movwf	(_lastTime+1)^(0+128)
  8297  0CC9  0863               	movf	main@time^(0+128),w
  8298  0CCA  00B9               	movwf	_lastTime^(0+128)
  8299                           
  8300                           ;main.c: 117:         if(BEAT_detected()){
  8301  0CCB  3197  2711  318C   	fcall	_BEAT_detected
  8302  0CCE  3A00               	xorlw	0
  8303  0CCF  1D03               	btfss	3,2
  8304  0CD0  2C83               	goto	l5474
  8305                           
  8306                           ;main.c: 120:             LED_setColor(0, 0, 0, 0);
  8307  0CD1  3000               	movlw	0
  8308  0CD2  0141               	movlb	1	; select bank1
  8309  0CD3  00DB               	movwf	LED_setColor@red^(0+128)
  8310  0CD4  00DC               	movwf	(LED_setColor@red+1)^(0+128)
  8311  0CD5  3000               	movlw	0
  8312  0CD6  00DD               	movwf	LED_setColor@green^(0+128)
  8313  0CD7  00DE               	movwf	(LED_setColor@green+1)^(0+128)
  8314  0CD8  3000               	movlw	0
  8315  0CD9  00DF               	movwf	LED_setColor@blue^(0+128)
  8316  0CDA  00E0               	movwf	(LED_setColor@blue+1)^(0+128)
  8317  0CDB  3000               	movlw	0
  8318  0CDC  00E1               	movwf	LED_setColor@white^(0+128)
  8319  0CDD  00E2               	movwf	(LED_setColor@white+1)^(0+128)
  8320  0CDE  2C94               	goto	L1
  8321  0CDF                     __end_of_main:	
  8322                           
  8323                           	psect	text1
  8324  08AE                     __ptext1:	
  8325 ;; *************** function _UART_init *****************
  8326 ;; Defined at:
  8327 ;;		line 72 in file "lights.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;		None
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;		None
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  1    wreg      void 
  8334 ;; Registers used:
  8335 ;;		wreg, status,2
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8345 ;;Total ram usage:        0 bytes
  8346 ;; Hardware stack levels used:    1
  8347 ;; Hardware stack levels required when called:    4
  8348 ;; This function calls:
  8349 ;;		Nothing
  8350 ;; This function is called by:
  8351 ;;		_main
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           
  8356                           ;psect for function _UART_init
  8357  08AE                     _UART_init:	
  8358                           
  8359                           ;lights.c: 73:     SP1BRG = 0x03;
  8360                           
  8361                           ;incstack = 0
  8362                           ; Regs used in _UART_init: [wreg+status,2]
  8363  08AE  3000               	movlw	0
  8364  08AF  0142               	movlb	2	; select bank2
  8365  08B0  009C               	movwf	28	;volatile
  8366  08B1  3003               	movlw	3
  8367  08B2  009B               	movwf	27	;volatile
  8368                           
  8369                           ;lights.c: 75:     TX1STAbits.SYNC = 0;
  8370  08B3  121E               	bcf	30,4	;volatile
  8371                           
  8372                           ;lights.c: 76:     TX1STAbits.BRGH = 1;
  8373  08B4  151E               	bsf	30,2	;volatile
  8374                           
  8375                           ;lights.c: 77:     BAUD1CONbits.BRG16 = 1;
  8376  08B5  159F               	bsf	31,3	;volatile
  8377                           
  8378                           ;lights.c: 81:     RX1PPS = 0b00001100;
  8379  08B6  300C               	movlw	12
  8380  08B7  017D               	movlb	61	; select bank61
  8381  08B8  00CB               	movwf	75	;volatile
  8382                           
  8383                           ;lights.c: 83:     RC1STAbits.SPEN = 1;
  8384  08B9  0142               	movlb	2	; select bank2
  8385  08BA  179D               	bsf	29,7	;volatile
  8386                           
  8387                           ;lights.c: 86:     RC1STAbits.RX9 = 0;
  8388  08BB  131D               	bcf	29,6	;volatile
  8389                           
  8390                           ;lights.c: 87:     RC1STAbits.CREN = 1;
  8391  08BC  161D               	bsf	29,4	;volatile
  8392                           
  8393                           ;lights.c: 88:     TX1STAbits.TXEN = 0;
  8394  08BD  129E               	bcf	30,5	;volatile
  8395                           
  8396                           ;lights.c: 90:     TRISB4 = 1;
  8397  08BE  0140               	movlb	0	; select bank0
  8398  08BF  1613               	bsf	19,4	;volatile
  8399                           
  8400                           ;lights.c: 91:     ANSELB = 0x00;
  8401  08C0  017E               	movlb	62	; select bank62
  8402  08C1  01C3               	clrf	67	;volatile
  8403                           
  8404                           ;lights.c: 93:     pointer = 0;
  8405  08C2  0141               	movlb	1	; select bank1
  8406  08C3  01BD               	clrf	_pointer^(0+128)
  8407  08C4  01BE               	clrf	(_pointer+1)^(0+128)
  8408                           
  8409                           ;lights.c: 94:     PIE3bits.RC1IE = 1;
  8410  08C5  014E               	movlb	14	; select bank14
  8411  08C6  1699               	bsf	25,5	;volatile
  8412  08C7  0008               	return
  8413  08C8                     __end_of_UART_init:	
  8414                           
  8415                           	psect	text2
  8416  0800                     __ptext2:	
  8417 ;; *************** function _TM1650_init *****************
  8418 ;; Defined at:
  8419 ;;		line 19 in file "tm1650.c"
  8420 ;; Parameters:    Size  Location     Type
  8421 ;;		None
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;		None
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      void 
  8426 ;; Registers used:
  8427 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8437 ;;Total ram usage:        0 bytes
  8438 ;; Hardware stack levels used:    1
  8439 ;; Hardware stack levels required when called:    9
  8440 ;; This function calls:
  8441 ;;		_SYSTEM_Initialize
  8442 ;;		_TM1650_enable
  8443 ;; This function is called by:
  8444 ;;		_main
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           
  8449                           ;psect for function _TM1650_init
  8450  0800                     _TM1650_init:	
  8451                           
  8452                           ;tm1650.c: 21:     SYSTEM_Initialize();
  8453                           
  8454                           ;incstack = 0
  8455                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8456  0800  3188  2009  3188   	fcall	_SYSTEM_Initialize
  8457                           
  8458                           ;tm1650.c: 27:     (INTCONbits.GIE = 1);
  8459  0803  178B               	bsf	11,7	;volatile
  8460                           
  8461                           ;tm1650.c: 30:     (INTCONbits.PEIE = 1);
  8462  0804  170B               	bsf	11,6	;volatile
  8463                           
  8464                           ;tm1650.c: 32:     TM1650_enable(1);
  8465  0805  3001               	movlw	1
  8466  0806  3188  2065         	fcall	_TM1650_enable
  8467  0808  0008               	return
  8468  0809                     __end_of_TM1650_init:	
  8469                           
  8470                           	psect	text3
  8471  0809                     __ptext3:	
  8472 ;; *************** function _SYSTEM_Initialize *****************
  8473 ;; Defined at:
  8474 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;		None
  8477 ;; Auto vars:     Size  Location     Type
  8478 ;;		None
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  1    wreg      void 
  8481 ;; Registers used:
  8482 ;;		wreg, status,2, status,0, pclath, cstack
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8492 ;;Total ram usage:        0 bytes
  8493 ;; Hardware stack levels used:    1
  8494 ;; Hardware stack levels required when called:    6
  8495 ;; This function calls:
  8496 ;;		_ADCC_Initialize
  8497 ;;		_EUSART1_Initialize
  8498 ;;		_I2C1_Initialize
  8499 ;;		_OSCILLATOR_Initialize
  8500 ;;		_PIN_MANAGER_Initialize
  8501 ;;		_PMD_Initialize
  8502 ;;		_TMR0_Initialize
  8503 ;; This function is called by:
  8504 ;;		_main
  8505 ;;		_TM1650_init
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           
  8510                           ;psect for function _SYSTEM_Initialize
  8511  0809                     _SYSTEM_Initialize:	
  8512                           
  8513                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8514                           
  8515                           ;incstack = 0
  8516                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8517  0809  3197  277D  3188   	fcall	_PMD_Initialize
  8518                           
  8519                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8520  080C  318A  221E  3188   	fcall	_PIN_MANAGER_Initialize
  8521                           
  8522                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8523  080F  3197  2774  3188   	fcall	_OSCILLATOR_Initialize
  8524                           
  8525                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  8526  0812  3188  20C8  3188   	fcall	_I2C1_Initialize
  8527                           
  8528                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  8529  0815  3189  21A1  3188   	fcall	_ADCC_Initialize
  8530                           
  8531                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  8532  0818  3197  27EC  3188   	fcall	_TMR0_Initialize
  8533                           
  8534                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  8535  081B  318A  22B2         	fcall	_EUSART1_Initialize
  8536  081D  0008               	return
  8537  081E                     __end_of_SYSTEM_Initialize:	
  8538                           
  8539                           	psect	text4
  8540  17EC                     __ptext4:	
  8541 ;; *************** function _TMR0_Initialize *****************
  8542 ;; Defined at:
  8543 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  8544 ;; Parameters:    Size  Location     Type
  8545 ;;		None
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;		None
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  1    wreg      void 
  8550 ;; Registers used:
  8551 ;;		wreg, status,2, status,0, pclath, cstack
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8561 ;;Total ram usage:        0 bytes
  8562 ;; Hardware stack levels used:    1
  8563 ;; Hardware stack levels required when called:    5
  8564 ;; This function calls:
  8565 ;;		_TMR0_SetInterruptHandler
  8566 ;; This function is called by:
  8567 ;;		_SYSTEM_Initialize
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           
  8572                           ;psect for function _TMR0_Initialize
  8573  17EC                     _TMR0_Initialize:	
  8574                           
  8575                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
  8576                           
  8577                           ;incstack = 0
  8578                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8579  17EC  3045               	movlw	69
  8580  17ED  014B               	movlb	11	; select bank11
  8581  17EE  009F               	movwf	31	;volatile
  8582                           
  8583                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  8584  17EF  30F9               	movlw	249
  8585  17F0  009D               	movwf	29	;volatile
  8586                           
  8587                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  8588  17F1  019C               	clrf	28	;volatile
  8589                           
  8590                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  8591  17F2  014E               	movlb	14	; select bank14
  8592  17F3  128C               	bcf	12,5	;volatile
  8593                           
  8594                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  8595  17F4  1696               	bsf	22,5	;volatile
  8596                           
  8597                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8598  17F5  30FF               	movlw	low _TMR0_DefaultInterruptHandler
  8599  17F6  0140               	movlb	0	; select bank0
  8600  17F7  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8601  17F8  3007               	movlw	high _TMR0_DefaultInterruptHandler
  8602  17F9  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8603  17FA  3197  273E         	fcall	_TMR0_SetInterruptHandler
  8604                           
  8605                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  8606  17FC  3080               	movlw	128
  8607  17FD  014B               	movlb	11	; select bank11
  8608  17FE  009E               	movwf	30	;volatile
  8609  17FF  0008               	return
  8610  1800                     __end_of_TMR0_Initialize:	
  8611                           
  8612                           	psect	text5
  8613  177D                     __ptext5:	
  8614 ;; *************** function _PMD_Initialize *****************
  8615 ;; Defined at:
  8616 ;;		line 75 in file "mcc_generated_files/mcc.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;		None
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;		None
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  1    wreg      void 
  8623 ;; Registers used:
  8624 ;;		status,2
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8634 ;;Total ram usage:        0 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; Hardware stack levels required when called:    4
  8637 ;; This function calls:
  8638 ;;		Nothing
  8639 ;; This function is called by:
  8640 ;;		_SYSTEM_Initialize
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           
  8645                           ;psect for function _PMD_Initialize
  8646  177D                     _PMD_Initialize:	
  8647                           
  8648                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  8649                           
  8650                           ;incstack = 0
  8651                           ; Regs used in _PMD_Initialize: [status,2]
  8652  177D  014F               	movlb	15	; select bank15
  8653  177E  0196               	clrf	22	;volatile
  8654                           
  8655                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  8656  177F  0197               	clrf	23	;volatile
  8657                           
  8658                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  8659  1780  0198               	clrf	24	;volatile
  8660                           
  8661                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  8662  1781  0199               	clrf	25	;volatile
  8663                           
  8664                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  8665  1782  019A               	clrf	26	;volatile
  8666                           
  8667                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  8668  1783  019B               	clrf	27	;volatile
  8669                           
  8670                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  8671  1784  019C               	clrf	28	;volatile
  8672                           
  8673                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  8674  1785  019D               	clrf	29	;volatile
  8675  1786  0008               	return
  8676  1787                     __end_of_PMD_Initialize:	
  8677                           
  8678                           	psect	text6
  8679  0A1E                     __ptext6:	
  8680 ;; *************** function _PIN_MANAGER_Initialize *****************
  8681 ;; Defined at:
  8682 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;		None
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;		None
  8687 ;; Return value:  Size  Location     Type
  8688 ;;                  1    wreg      void 
  8689 ;; Registers used:
  8690 ;;		wreg, status,2
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8700 ;;Total ram usage:        0 bytes
  8701 ;; Hardware stack levels used:    1
  8702 ;; Hardware stack levels required when called:    4
  8703 ;; This function calls:
  8704 ;;		Nothing
  8705 ;; This function is called by:
  8706 ;;		_SYSTEM_Initialize
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           
  8711                           ;psect for function _PIN_MANAGER_Initialize
  8712  0A1E                     _PIN_MANAGER_Initialize:	
  8713                           
  8714                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8715                           
  8716                           ;incstack = 0
  8717                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8718  0A1E  0140               	movlb	0	; select bank0
  8719  0A1F  0198               	clrf	24	;volatile
  8720                           
  8721                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8722  0A20  0199               	clrf	25	;volatile
  8723                           
  8724                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8725  0A21  019A               	clrf	26	;volatile
  8726                           
  8727                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  8728  0A22  303F               	movlw	63
  8729  0A23  0092               	movwf	18	;volatile
  8730                           
  8731                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x90;
  8732  0A24  3090               	movlw	144
  8733  0A25  0093               	movwf	19	;volatile
  8734                           
  8735                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  8736  0A26  30FF               	movlw	255
  8737  0A27  0094               	movwf	20	;volatile
  8738                           
  8739                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  8740  0A28  30F8               	movlw	248
  8741  0A29  017E               	movlb	62	; select bank62
  8742  0A2A  00CE               	movwf	78	;volatile
  8743                           
  8744                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  8745  0A2B  30E0               	movlw	224
  8746  0A2C  00C3               	movwf	67	;volatile
  8747                           
  8748                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  8749  0A2D  3003               	movlw	3
  8750  0A2E  00B8               	movwf	56	;volatile
  8751                           
  8752                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8753  0A2F  01C4               	clrf	68	;volatile
  8754                           
  8755                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  8756  0A30  3004               	movlw	4
  8757  0A31  00B9               	movwf	57	;volatile
  8758                           
  8759                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  8760  0A32  3007               	movlw	7
  8761  0A33  00CF               	movwf	79	;volatile
  8762                           
  8763                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8764  0A34  01BA               	clrf	58	;volatile
  8765                           
  8766                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8767  0A35  01C5               	clrf	69	;volatile
  8768                           
  8769                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8770  0A36  01D0               	clrf	80	;volatile
  8771                           
  8772                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  8773  0A37  3037               	movlw	55
  8774  0A38  00BB               	movwf	59	;volatile
  8775                           
  8776                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  8777  0A39  30F0               	movlw	240
  8778  0A3A  00C6               	movwf	70	;volatile
  8779                           
  8780                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  8781  0A3B  30FF               	movlw	255
  8782  0A3C  00D1               	movwf	81	;volatile
  8783                           
  8784                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  8785  0A3D  3005               	movlw	5
  8786  0A3E  017D               	movlb	61	; select bank61
  8787  0A3F  00C5               	movwf	69	;volatile
  8788                           
  8789                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  8790  0A40  3014               	movlw	20
  8791  0A41  017E               	movlb	62	; select bank62
  8792  0A42  0094               	movwf	20	;volatile
  8793                           
  8794                           ;mcc_generated_files/pin_manager.c: 108:     RB6PPS = 0x0F;
  8795  0A43  300F               	movlw	15
  8796  0A44  009E               	movwf	30	;volatile
  8797                           
  8798                           ;mcc_generated_files/pin_manager.c: 109:     RA5PPS = 0x13;
  8799  0A45  3013               	movlw	19
  8800  0A46  0095               	movwf	21	;volatile
  8801                           
  8802                           ;mcc_generated_files/pin_manager.c: 110:     SSP1DATPPS = 0x04;
  8803  0A47  3004               	movlw	4
  8804  0A48  017D               	movlb	61	; select bank61
  8805  0A49  00C6               	movwf	70	;volatile
  8806                           
  8807                           ;mcc_generated_files/pin_manager.c: 111:     RX1DTPPS = 0x0C;
  8808  0A4A  300C               	movlw	12
  8809  0A4B  00CB               	movwf	75	;volatile
  8810  0A4C  0008               	return
  8811  0A4D                     __end_of_PIN_MANAGER_Initialize:	
  8812                           
  8813                           	psect	text7
  8814  1774                     __ptext7:	
  8815 ;; *************** function _OSCILLATOR_Initialize *****************
  8816 ;; Defined at:
  8817 ;;		line 61 in file "mcc_generated_files/mcc.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;		None
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;		None
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  1    wreg      void 
  8824 ;; Registers used:
  8825 ;;		wreg, status,2
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8835 ;;Total ram usage:        0 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; Hardware stack levels required when called:    4
  8838 ;; This function calls:
  8839 ;;		Nothing
  8840 ;; This function is called by:
  8841 ;;		_SYSTEM_Initialize
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           
  8846                           ;psect for function _OSCILLATOR_Initialize
  8847  1774                     _OSCILLATOR_Initialize:	
  8848                           
  8849                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  8850                           
  8851                           ;incstack = 0
  8852                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8853  1774  3060               	movlw	96
  8854  1775  0151               	movlb	17	; select bank17
  8855  1776  008D               	movwf	13	;volatile
  8856                           
  8857                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  8858  1777  018F               	clrf	15	;volatile
  8859                           
  8860                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  8861  1778  0191               	clrf	17	;volatile
  8862                           
  8863                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
  8864  1779  3006               	movlw	6
  8865  177A  0093               	movwf	19	;volatile
  8866                           
  8867                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  8868  177B  0192               	clrf	18	;volatile
  8869  177C  0008               	return
  8870  177D                     __end_of_OSCILLATOR_Initialize:	
  8871                           
  8872                           	psect	text8
  8873  08C8                     __ptext8:	
  8874 ;; *************** function _I2C1_Initialize *****************
  8875 ;; Defined at:
  8876 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;		None
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;		None
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		wreg, status,2
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8892 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8893 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8894 ;;Total ram usage:        1 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    4
  8897 ;; This function calls:
  8898 ;;		Nothing
  8899 ;; This function is called by:
  8900 ;;		_SYSTEM_Initialize
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904                           
  8905                           ;psect for function _I2C1_Initialize
  8906  08C8                     _I2C1_Initialize:	
  8907                           
  8908                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  8909                           
  8910                           ;incstack = 0
  8911                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  8912  08C8  30D7               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  8913  08C9  0140               	movlb	0	; select bank0
  8914  08CA  00A0               	movwf	??_I2C1_Initialize
  8915  08CB  0820               	movf	??_I2C1_Initialize,w
  8916  08CC  0141               	movlb	1	; select bank1
  8917  08CD  00A9               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
  8918                           
  8919                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  8920  08CE  30D7               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  8921  08CF  0140               	movlb	0	; select bank0
  8922  08D0  00A0               	movwf	??_I2C1_Initialize
  8923  08D1  0820               	movf	??_I2C1_Initialize,w
  8924  08D2  0141               	movlb	1	; select bank1
  8925  08D3  00A8               	movwf	_i2c1_object^(0+128)
  8926                           
  8927                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  8928  08D4  14AA               	bsf	(_i2c1_object^(0+128)+2),1
  8929                           
  8930                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  8931  08D5  102A               	bcf	(_i2c1_object^(0+128)+2),0
  8932                           
  8933                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  8934  08D6  01AC               	clrf	(_i2c1_object^(0+128)+4)
  8935                           
  8936                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  8937  08D7  0143               	movlb	3	; select bank3
  8938  08D8  018F               	clrf	15	;volatile
  8939                           
  8940                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  8941  08D9  3028               	movlw	40
  8942  08DA  0090               	movwf	16	;volatile
  8943                           
  8944                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  8945  08DB  0192               	clrf	18	;volatile
  8946                           
  8947                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x18;
  8948  08DC  3018               	movlw	24
  8949  08DD  008D               	movwf	13	;volatile
  8950                           
  8951                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  8952  08DE  014E               	movlb	14	; select bank14
  8953  08DF  100F               	bcf	15,0	;volatile
  8954                           
  8955                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  8956  08E0  108F               	bcf	15,1	;volatile
  8957                           
  8958                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  8959  08E1  1419               	bsf	25,0	;volatile
  8960                           
  8961                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  8962  08E2  1499               	bsf	25,1	;volatile
  8963  08E3  0008               	return
  8964  08E4                     __end_of_I2C1_Initialize:	
  8965                           
  8966                           	psect	text9
  8967  0AB2                     __ptext9:	
  8968 ;; *************** function _EUSART1_Initialize *****************
  8969 ;; Defined at:
  8970 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;		None
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;		None
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  1    wreg      void 
  8977 ;; Registers used:
  8978 ;;		wreg, status,2, status,0, pclath, cstack
  8979 ;; Tracked objects:
  8980 ;;		On entry : 0/0
  8981 ;;		On exit  : 0/0
  8982 ;;		Unchanged: 0/0
  8983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8986 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8987 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8988 ;;Total ram usage:        1 bytes
  8989 ;; Hardware stack levels used:    1
  8990 ;; Hardware stack levels required when called:    5
  8991 ;; This function calls:
  8992 ;;		_EUSART1_SetErrorHandler
  8993 ;;		_EUSART1_SetFramingErrorHandler
  8994 ;;		_EUSART1_SetOverrunErrorHandler
  8995 ;;		_EUSART1_SetRxInterruptHandler
  8996 ;;		_EUSART1_SetTxInterruptHandler
  8997 ;; This function is called by:
  8998 ;;		_SYSTEM_Initialize
  8999 ;; This function uses a non-reentrant model
  9000 ;;
  9001                           
  9002                           
  9003                           ;psect for function _EUSART1_Initialize
  9004  0AB2                     _EUSART1_Initialize:	
  9005                           
  9006                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  9007                           
  9008                           ;incstack = 0
  9009                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9010  0AB2  014E               	movlb	14	; select bank14
  9011  0AB3  1299               	bcf	25,5	;volatile
  9012                           
  9013                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  9014  0AB4  304D               	movlw	low _EUSART1_Receive_ISR
  9015  0AB5  0140               	movlb	0	; select bank0
  9016  0AB6  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  9017  0AB7  300A               	movlw	high _EUSART1_Receive_ISR
  9018  0AB8  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  9019  0AB9  3197  2762  318A   	fcall	_EUSART1_SetRxInterruptHandler
  9020                           
  9021                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  9022  0ABC  014E               	movlb	14	; select bank14
  9023  0ABD  1219               	bcf	25,4	;volatile
  9024                           
  9025                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  9026  0ABE  30E4               	movlw	low _EUSART1_Transmit_ISR
  9027  0ABF  0140               	movlb	0	; select bank0
  9028  0AC0  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  9029  0AC1  3008               	movlw	high _EUSART1_Transmit_ISR
  9030  0AC2  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  9031  0AC3  3197  276B  318A   	fcall	_EUSART1_SetTxInterruptHandler
  9032                           
  9033                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  9034  0AC6  3008               	movlw	8
  9035  0AC7  0142               	movlb	2	; select bank2
  9036  0AC8  009F               	movwf	31	;volatile
  9037                           
  9038                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x90;
  9039  0AC9  3090               	movlw	144
  9040  0ACA  009D               	movwf	29	;volatile
  9041                           
  9042                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x04;
  9043  0ACB  3004               	movlw	4
  9044  0ACC  009E               	movwf	30	;volatile
  9045                           
  9046                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x1F;
  9047  0ACD  301F               	movlw	31
  9048  0ACE  009B               	movwf	27	;volatile
  9049                           
  9050                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  9051  0ACF  019C               	clrf	28	;volatile
  9052                           
  9053                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  9054  0AD0  3003               	movlw	low _EUSART1_DefaultFramingErrorHandler
  9055  0AD1  0140               	movlb	0	; select bank0
  9056  0AD2  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  9057  0AD3  3000               	movlw	high _EUSART1_DefaultFramingErrorHandler
  9058  0AD4  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  9059  0AD5  3197  2750  318A   	fcall	_EUSART1_SetFramingErrorHandler
  9060                           
  9061                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  9062  0AD8  30F4               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  9063  0AD9  0140               	movlb	0	; select bank0
  9064  0ADA  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  9065  0ADB  3016               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  9066  0ADC  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  9067  0ADD  3197  2759  318A   	fcall	_EUSART1_SetOverrunErrorHandler
  9068                           
  9069                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  9070  0AE0  30E7               	movlw	low _EUSART1_DefaultErrorHandler
  9071  0AE1  0140               	movlb	0	; select bank0
  9072  0AE2  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  9073  0AE3  3016               	movlw	high _EUSART1_DefaultErrorHandler
  9074  0AE4  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  9075  0AE5  3197  2747         	fcall	_EUSART1_SetErrorHandler
  9076                           
  9077                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  9078  0AE7  0141               	movlb	1	; select bank1
  9079  0AE8  01D1               	clrf	_eusart1RxLastError^(0+128)	;volatile
  9080                           
  9081                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  9082  0AE9  01F3               	clrf	_eusart1TxHead	;volatile
  9083                           
  9084                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  9085  0AEA  01F2               	clrf	_eusart1TxTail	;volatile
  9086                           
  9087                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  9088  0AEB  3008               	movlw	8
  9089  0AEC  0140               	movlb	0	; select bank0
  9090  0AED  00A2               	movwf	??_EUSART1_Initialize
  9091  0AEE  0822               	movf	??_EUSART1_Initialize,w
  9092  0AEF  0141               	movlb	1	; select bank1
  9093  0AF0  00EF               	movwf	_eusart1TxBufferRemaining^(0+128)	;volatile
  9094                           
  9095                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  9096  0AF1  01F1               	clrf	_eusart1RxHead	;volatile
  9097                           
  9098                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  9099  0AF2  01F0               	clrf	_eusart1RxTail	;volatile
  9100                           
  9101                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  9102  0AF3  01D2               	clrf	_eusart1RxCount^(0+128)	;volatile
  9103                           
  9104                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  9105  0AF4  014E               	movlb	14	; select bank14
  9106  0AF5  1699               	bsf	25,5	;volatile
  9107  0AF6  0008               	return
  9108  0AF7                     __end_of_EUSART1_Initialize:	
  9109                           
  9110                           	psect	text10
  9111  176B                     __ptext10:	
  9112 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  9113 ;; Defined at:
  9114 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9117 ;;		 -> EUSART1_Transmit_ISR(1), 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;		None
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  1    wreg      void 
  9122 ;; Registers used:
  9123 ;;		wreg
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9132 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9133 ;;Total ram usage:        2 bytes
  9134 ;; Hardware stack levels used:    1
  9135 ;; Hardware stack levels required when called:    4
  9136 ;; This function calls:
  9137 ;;		Nothing
  9138 ;; This function is called by:
  9139 ;;		_EUSART1_Initialize
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           
  9143                           
  9144                           ;psect for function _EUSART1_SetTxInterruptHandler
  9145  176B                     _EUSART1_SetTxInterruptHandler:	
  9146                           
  9147                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9148                           
  9149                           ;incstack = 0
  9150                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  9151  176B  0140               	movlb	0	; select bank0
  9152  176C  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  9153  176D  0142               	movlb	2	; select bank2
  9154  176E  00DD               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
  9155  176F  0140               	movlb	0	; select bank0
  9156  1770  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  9157  1771  0142               	movlb	2	; select bank2
  9158  1772  00DC               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
  9159  1773  0008               	return
  9160  1774                     __end_of_EUSART1_SetTxInterruptHandler:	
  9161                           
  9162                           	psect	text11
  9163  1762                     __ptext11:	
  9164 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  9165 ;; Defined at:
  9166 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9169 ;;		 -> EUSART1_Receive_ISR(1), 
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;		None
  9172 ;; Return value:  Size  Location     Type
  9173 ;;                  1    wreg      void 
  9174 ;; Registers used:
  9175 ;;		wreg
  9176 ;; Tracked objects:
  9177 ;;		On entry : 0/0
  9178 ;;		On exit  : 0/0
  9179 ;;		Unchanged: 0/0
  9180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9181 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9184 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9185 ;;Total ram usage:        2 bytes
  9186 ;; Hardware stack levels used:    1
  9187 ;; Hardware stack levels required when called:    4
  9188 ;; This function calls:
  9189 ;;		Nothing
  9190 ;; This function is called by:
  9191 ;;		_EUSART1_Initialize
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           
  9196                           ;psect for function _EUSART1_SetRxInterruptHandler
  9197  1762                     _EUSART1_SetRxInterruptHandler:	
  9198                           
  9199                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9200                           
  9201                           ;incstack = 0
  9202                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  9203  1762  0140               	movlb	0	; select bank0
  9204  1763  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  9205  1764  0142               	movlb	2	; select bank2
  9206  1765  00DB               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
  9207  1766  0140               	movlb	0	; select bank0
  9208  1767  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  9209  1768  0142               	movlb	2	; select bank2
  9210  1769  00DA               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
  9211  176A  0008               	return
  9212  176B                     __end_of_EUSART1_SetRxInterruptHandler:	
  9213                           
  9214                           	psect	text12
  9215  1759                     __ptext12:	
  9216 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9217 ;; Defined at:
  9218 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9221 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9222 ;; Auto vars:     Size  Location     Type
  9223 ;;		None
  9224 ;; Return value:  Size  Location     Type
  9225 ;;                  1    wreg      void 
  9226 ;; Registers used:
  9227 ;;		wreg
  9228 ;; Tracked objects:
  9229 ;;		On entry : 0/0
  9230 ;;		On exit  : 0/0
  9231 ;;		Unchanged: 0/0
  9232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9236 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9237 ;;Total ram usage:        2 bytes
  9238 ;; Hardware stack levels used:    1
  9239 ;; Hardware stack levels required when called:    4
  9240 ;; This function calls:
  9241 ;;		Nothing
  9242 ;; This function is called by:
  9243 ;;		_EUSART1_Initialize
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           
  9248                           ;psect for function _EUSART1_SetOverrunErrorHandler
  9249  1759                     _EUSART1_SetOverrunErrorHandler:	
  9250                           
  9251                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_OverrunErrorHandler = interruptHandler;
  9252                           
  9253                           ;incstack = 0
  9254                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9255  1759  0140               	movlb	0	; select bank0
  9256  175A  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9257  175B  0142               	movlb	2	; select bank2
  9258  175C  00D7               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
  9259  175D  0140               	movlb	0	; select bank0
  9260  175E  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9261  175F  0142               	movlb	2	; select bank2
  9262  1760  00D6               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
  9263  1761  0008               	return
  9264  1762                     __end_of_EUSART1_SetOverrunErrorHandler:	
  9265                           
  9266                           	psect	text13
  9267  1750                     __ptext13:	
  9268 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9269 ;; Defined at:
  9270 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9273 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;		None
  9276 ;; Return value:  Size  Location     Type
  9277 ;;                  1    wreg      void 
  9278 ;; Registers used:
  9279 ;;		wreg
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9285 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9288 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9289 ;;Total ram usage:        2 bytes
  9290 ;; Hardware stack levels used:    1
  9291 ;; Hardware stack levels required when called:    4
  9292 ;; This function calls:
  9293 ;;		Nothing
  9294 ;; This function is called by:
  9295 ;;		_EUSART1_Initialize
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           
  9300                           ;psect for function _EUSART1_SetFramingErrorHandler
  9301  1750                     _EUSART1_SetFramingErrorHandler:	
  9302                           
  9303                           ;mcc_generated_files/eusart1.c: 262:     EUSART1_FramingErrorHandler = interruptHandler;
  9304                           
  9305                           ;incstack = 0
  9306                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9307  1750  0140               	movlb	0	; select bank0
  9308  1751  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9309  1752  0142               	movlb	2	; select bank2
  9310  1753  00D9               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
  9311  1754  0140               	movlb	0	; select bank0
  9312  1755  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9313  1756  0142               	movlb	2	; select bank2
  9314  1757  00D8               	movwf	_EUSART1_FramingErrorHandler^(0+256)
  9315  1758  0008               	return
  9316  1759                     __end_of_EUSART1_SetFramingErrorHandler:	
  9317                           
  9318                           	psect	text14
  9319  1747                     __ptext14:	
  9320 ;; *************** function _EUSART1_SetErrorHandler *****************
  9321 ;; Defined at:
  9322 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9325 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;		None
  9328 ;; Return value:  Size  Location     Type
  9329 ;;                  1    wreg      void 
  9330 ;; Registers used:
  9331 ;;		wreg
  9332 ;; Tracked objects:
  9333 ;;		On entry : 0/0
  9334 ;;		On exit  : 0/0
  9335 ;;		Unchanged: 0/0
  9336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9337 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9340 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9341 ;;Total ram usage:        2 bytes
  9342 ;; Hardware stack levels used:    1
  9343 ;; Hardware stack levels required when called:    4
  9344 ;; This function calls:
  9345 ;;		Nothing
  9346 ;; This function is called by:
  9347 ;;		_EUSART1_Initialize
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351                           
  9352                           ;psect for function _EUSART1_SetErrorHandler
  9353  1747                     _EUSART1_SetErrorHandler:	
  9354                           
  9355                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_ErrorHandler = interruptHandler;
  9356                           
  9357                           ;incstack = 0
  9358                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9359  1747  0140               	movlb	0	; select bank0
  9360  1748  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9361  1749  0142               	movlb	2	; select bank2
  9362  174A  00D5               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
  9363  174B  0140               	movlb	0	; select bank0
  9364  174C  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9365  174D  0142               	movlb	2	; select bank2
  9366  174E  00D4               	movwf	_EUSART1_ErrorHandler^(0+256)
  9367  174F  0008               	return
  9368  1750                     __end_of_EUSART1_SetErrorHandler:	
  9369                           
  9370                           	psect	text15
  9371  09A1                     __ptext15:	
  9372 ;; *************** function _ADCC_Initialize *****************
  9373 ;; Defined at:
  9374 ;;		line 64 in file "mcc_generated_files/adcc.c"
  9375 ;; Parameters:    Size  Location     Type
  9376 ;;		None
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;		None
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  1    wreg      void 
  9381 ;; Registers used:
  9382 ;;		wreg, status,2, status,0, pclath, cstack
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9392 ;;Total ram usage:        0 bytes
  9393 ;; Hardware stack levels used:    1
  9394 ;; Hardware stack levels required when called:    5
  9395 ;; This function calls:
  9396 ;;		_ADCC_SetADTIInterruptHandler
  9397 ;; This function is called by:
  9398 ;;		_SYSTEM_Initialize
  9399 ;; This function uses a non-reentrant model
  9400 ;;
  9401                           
  9402                           
  9403                           ;psect for function _ADCC_Initialize
  9404  09A1                     _ADCC_Initialize:	
  9405                           
  9406                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  9407                           
  9408                           ;incstack = 0
  9409                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9410  09A1  0141               	movlb	1	; select bank1
  9411  09A2  018C               	clrf	12	;volatile
  9412                           
  9413                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  9414  09A3  018D               	clrf	13	;volatile
  9415                           
  9416                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  9417  09A4  018E               	clrf	14	;volatile
  9418                           
  9419                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  9420  09A5  018F               	clrf	15	;volatile
  9421                           
  9422                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  9423  09A6  0192               	clrf	18	;volatile
  9424                           
  9425                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  9426  09A7  0193               	clrf	19	;volatile
  9427                           
  9428                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
  9429  09A8  0198               	clrf	24	;volatile
  9430                           
  9431                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
  9432  09A9  019A               	clrf	26	;volatile
  9433                           
  9434                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
  9435  09AA  019F               	clrf	31	;volatile
  9436                           
  9437                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
  9438  09AB  0142               	movlb	2	; select bank2
  9439  09AC  018C               	clrf	12	;volatile
  9440                           
  9441                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
  9442  09AD  018D               	clrf	13	;volatile
  9443                           
  9444                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
  9445  09AE  018E               	clrf	14	;volatile
  9446                           
  9447                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
  9448  09AF  018F               	clrf	15	;volatile
  9449                           
  9450                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
  9451  09B0  0190               	clrf	16	;volatile
  9452                           
  9453                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
  9454  09B1  0192               	clrf	18	;volatile
  9455                           
  9456                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
  9457  09B2  3054               	movlw	84
  9458  09B3  0093               	movwf	19	;volatile
  9459                           
  9460                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
  9461  09B4  3056               	movlw	86
  9462  09B5  0094               	movwf	20	;volatile
  9463                           
  9464                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
  9465  09B6  0195               	clrf	21	;volatile
  9466                           
  9467                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
  9468  09B7  0196               	clrf	22	;volatile
  9469                           
  9470                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
  9471  09B8  0197               	clrf	23	;volatile
  9472                           
  9473                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
  9474  09B9  0198               	clrf	24	;volatile
  9475                           
  9476                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
  9477  09BA  30D4               	movlw	212
  9478  09BB  0091               	movwf	17	;volatile
  9479                           
  9480                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
  9481  09BC  014E               	movlb	14	; select bank14
  9482  09BD  108D               	bcf	13,1	;volatile
  9483                           
  9484                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
  9485  09BE  1497               	bsf	23,1	;volatile
  9486                           
  9487                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  9488  09BF  3002               	movlw	low _ADCC_DefaultInterruptHandler
  9489  09C0  0140               	movlb	0	; select bank0
  9490  09C1  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
  9491  09C2  3000               	movlw	high _ADCC_DefaultInterruptHandler
  9492  09C3  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
  9493  09C4  3197  271A         	fcall	_ADCC_SetADTIInterruptHandler
  9494  09C6  0008               	return
  9495  09C7                     __end_of_ADCC_Initialize:	
  9496                           
  9497                           	psect	text16
  9498  05CF                     __ptext16:	
  9499 ;; *************** function _LED_setColor *****************
  9500 ;; Defined at:
  9501 ;;		line 50 in file "lights.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;  red             2    0[BANK1 ] unsigned int 
  9504 ;;  green           2    2[BANK1 ] unsigned int 
  9505 ;;  blue            2    4[BANK1 ] unsigned int 
  9506 ;;  white           2    6[BANK1 ] unsigned int 
  9507 ;; Auto vars:     Size  Location     Type
  9508 ;;		None
  9509 ;; Return value:  Size  Location     Type
  9510 ;;                  1    wreg      void 
  9511 ;; Registers used:
  9512 ;;		wreg, status,2, status,0, pclath, cstack
  9513 ;; Tracked objects:
  9514 ;;		On entry : 0/0
  9515 ;;		On exit  : 0/0
  9516 ;;		Unchanged: 0/0
  9517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9518 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9521 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9522 ;;Total ram usage:        8 bytes
  9523 ;; Hardware stack levels used:    1
  9524 ;; Hardware stack levels required when called:    6
  9525 ;; This function calls:
  9526 ;;		___fldiv
  9527 ;;		___flmul
  9528 ;;		___fltol
  9529 ;;		___xxtofl
  9530 ;; This function is called by:
  9531 ;;		_main
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           
  9536                           ;psect for function _LED_setColor
  9537  05CF                     _LED_setColor:	
  9538                           
  9539                           ;lights.c: 51:     if(red < 256 && green < 256 && blue < 256 && white < 256){
  9540                           
  9541                           ;incstack = 0
  9542                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
  9543  05CF  3001               	movlw	1
  9544  05D0  0141               	movlb	1	; select bank1
  9545  05D1  025C               	subwf	(LED_setColor@red+1)^(0+128),w
  9546  05D2  3000               	movlw	0
  9547  05D3  1903               	skipnz
  9548  05D4  025B               	subwf	LED_setColor@red^(0+128),w
  9549  05D5  1803               	skipnc
  9550  05D6  2F11               	goto	l5398
  9551  05D7  3001               	movlw	1
  9552  05D8  025E               	subwf	(LED_setColor@green+1)^(0+128),w
  9553  05D9  3000               	movlw	0
  9554  05DA  1903               	skipnz
  9555  05DB  025D               	subwf	LED_setColor@green^(0+128),w
  9556  05DC  1803               	skipnc
  9557  05DD  2F11               	goto	l5398
  9558  05DE  3001               	movlw	1
  9559  05DF  0260               	subwf	(LED_setColor@blue+1)^(0+128),w
  9560  05E0  3000               	movlw	0
  9561  05E1  1903               	skipnz
  9562  05E2  025F               	subwf	LED_setColor@blue^(0+128),w
  9563  05E3  1803               	skipnc
  9564  05E4  2F11               	goto	l5398
  9565  05E5  3001               	movlw	1
  9566  05E6  0262               	subwf	(LED_setColor@white+1)^(0+128),w
  9567  05E7  3000               	movlw	0
  9568  05E8  1903               	skipnz
  9569  05E9  0261               	subwf	LED_setColor@white^(0+128),w
  9570  05EA  1803               	skipnc
  9571  05EB  2F11               	goto	l5398
  9572                           
  9573                           ;lights.c: 52:         red = ((float)red / 2048) * (4000000 / (122 * 32));
  9574  05EC  085B               	movf	LED_setColor@red^(0+128),w
  9575  05ED  0140               	movlb	0	; select bank0
  9576  05EE  00A0               	movwf	___xxtofl@val
  9577  05EF  0141               	movlb	1	; select bank1
  9578  05F0  085C               	movf	(LED_setColor@red+1)^(0+128),w
  9579  05F1  0140               	movlb	0	; select bank0
  9580  05F2  00A1               	movwf	___xxtofl@val+1
  9581  05F3  01A2               	clrf	___xxtofl@val+2
  9582  05F4  01A3               	clrf	___xxtofl@val+3
  9583  05F5  3000               	movlw	0
  9584  05F6  3187  2741  3185   	fcall	___xxtofl
  9585  05F9  0140               	movlb	0	; select bank0
  9586  05FA  0823               	movf	?___xxtofl+3,w
  9587  05FB  00B5               	movwf	___fldiv@b+3
  9588  05FC  0822               	movf	?___xxtofl+2,w
  9589  05FD  00B4               	movwf	___fldiv@b+2
  9590  05FE  0821               	movf	?___xxtofl+1,w
  9591  05FF  00B3               	movwf	___fldiv@b+1
  9592  0600  0820               	movf	?___xxtofl,w
  9593  0601  00B2               	movwf	___fldiv@b
  9594  0602  3045               	movlw	69
  9595  0603  00B1               	movwf	___fldiv@a+3
  9596  0604  3000               	movlw	0
  9597  0605  00B0               	movwf	___fldiv@a+2
  9598  0606  3000               	movlw	0
  9599  0607  00AF               	movwf	___fldiv@a+1
  9600  0608  3000               	movlw	0
  9601  0609  00AE               	movwf	___fldiv@a
  9602  060A  3184  2455  3185   	fcall	___fldiv
  9603  060D  0140               	movlb	0	; select bank0
  9604  060E  0831               	movf	?___fldiv+3,w
  9605  060F  00CF               	movwf	___flmul@a+3
  9606  0610  0830               	movf	?___fldiv+2,w
  9607  0611  00CE               	movwf	___flmul@a+2
  9608  0612  082F               	movf	?___fldiv+1,w
  9609  0613  00CD               	movwf	___flmul@a+1
  9610  0614  082E               	movf	?___fldiv,w
  9611  0615  00CC               	movwf	___flmul@a
  9612  0616  3044               	movlw	68
  9613  0617  00CB               	movwf	___flmul@b+3
  9614  0618  3080               	movlw	128
  9615  0619  00CA               	movwf	___flmul@b+2
  9616  061A  3000               	movlw	0
  9617  061B  00C9               	movwf	___flmul@b+1
  9618  061C  3000               	movlw	0
  9619  061D  00C8               	movwf	___flmul@b
  9620  061E  3180  2076  3185   	fcall	___flmul
  9621  0621  0140               	movlb	0	; select bank0
  9622  0622  084B               	movf	?___flmul+3,w
  9623  0623  00E5               	movwf	___fltol@f1+3
  9624  0624  084A               	movf	?___flmul+2,w
  9625  0625  00E4               	movwf	___fltol@f1+2
  9626  0626  0849               	movf	?___flmul+1,w
  9627  0627  00E3               	movwf	___fltol@f1+1
  9628  0628  0848               	movf	?___flmul,w
  9629  0629  00E2               	movwf	___fltol@f1
  9630  062A  318B  23F9  3185   	fcall	___fltol
  9631  062D  0140               	movlb	0	; select bank0
  9632  062E  0863               	movf	?___fltol+1,w
  9633  062F  0141               	movlb	1	; select bank1
  9634  0630  00DC               	movwf	(LED_setColor@red+1)^(0+128)
  9635  0631  0140               	movlb	0	; select bank0
  9636  0632  0862               	movf	?___fltol,w
  9637  0633  0141               	movlb	1	; select bank1
  9638  0634  00DB               	movwf	LED_setColor@red^(0+128)
  9639                           
  9640                           ;lights.c: 53:         green = ((float)green / 2048) * (4000000 / (122 * 32));
  9641  0635  085D               	movf	LED_setColor@green^(0+128),w
  9642  0636  0140               	movlb	0	; select bank0
  9643  0637  00A0               	movwf	___xxtofl@val
  9644  0638  0141               	movlb	1	; select bank1
  9645  0639  085E               	movf	(LED_setColor@green+1)^(0+128),w
  9646  063A  0140               	movlb	0	; select bank0
  9647  063B  00A1               	movwf	___xxtofl@val+1
  9648  063C  01A2               	clrf	___xxtofl@val+2
  9649  063D  01A3               	clrf	___xxtofl@val+3
  9650  063E  3000               	movlw	0
  9651  063F  3187  2741  3185   	fcall	___xxtofl
  9652  0642  0140               	movlb	0	; select bank0
  9653  0643  0823               	movf	?___xxtofl+3,w
  9654  0644  00B5               	movwf	___fldiv@b+3
  9655  0645  0822               	movf	?___xxtofl+2,w
  9656  0646  00B4               	movwf	___fldiv@b+2
  9657  0647  0821               	movf	?___xxtofl+1,w
  9658  0648  00B3               	movwf	___fldiv@b+1
  9659  0649  0820               	movf	?___xxtofl,w
  9660  064A  00B2               	movwf	___fldiv@b
  9661  064B  3045               	movlw	69
  9662  064C  00B1               	movwf	___fldiv@a+3
  9663  064D  3000               	movlw	0
  9664  064E  00B0               	movwf	___fldiv@a+2
  9665  064F  3000               	movlw	0
  9666  0650  00AF               	movwf	___fldiv@a+1
  9667  0651  3000               	movlw	0
  9668  0652  00AE               	movwf	___fldiv@a
  9669  0653  3184  2455  3185   	fcall	___fldiv
  9670  0656  0140               	movlb	0	; select bank0
  9671  0657  0831               	movf	?___fldiv+3,w
  9672  0658  00CF               	movwf	___flmul@a+3
  9673  0659  0830               	movf	?___fldiv+2,w
  9674  065A  00CE               	movwf	___flmul@a+2
  9675  065B  082F               	movf	?___fldiv+1,w
  9676  065C  00CD               	movwf	___flmul@a+1
  9677  065D  082E               	movf	?___fldiv,w
  9678  065E  00CC               	movwf	___flmul@a
  9679  065F  3044               	movlw	68
  9680  0660  00CB               	movwf	___flmul@b+3
  9681  0661  3080               	movlw	128
  9682  0662  00CA               	movwf	___flmul@b+2
  9683  0663  3000               	movlw	0
  9684  0664  00C9               	movwf	___flmul@b+1
  9685  0665  3000               	movlw	0
  9686  0666  00C8               	movwf	___flmul@b
  9687  0667  3180  2076  3185   	fcall	___flmul
  9688  066A  0140               	movlb	0	; select bank0
  9689  066B  084B               	movf	?___flmul+3,w
  9690  066C  00E5               	movwf	___fltol@f1+3
  9691  066D  084A               	movf	?___flmul+2,w
  9692  066E  00E4               	movwf	___fltol@f1+2
  9693  066F  0849               	movf	?___flmul+1,w
  9694  0670  00E3               	movwf	___fltol@f1+1
  9695  0671  0848               	movf	?___flmul,w
  9696  0672  00E2               	movwf	___fltol@f1
  9697  0673  318B  23F9  3185   	fcall	___fltol
  9698  0676  0140               	movlb	0	; select bank0
  9699  0677  0863               	movf	?___fltol+1,w
  9700  0678  0141               	movlb	1	; select bank1
  9701  0679  00DE               	movwf	(LED_setColor@green+1)^(0+128)
  9702  067A  0140               	movlb	0	; select bank0
  9703  067B  0862               	movf	?___fltol,w
  9704  067C  0141               	movlb	1	; select bank1
  9705  067D  00DD               	movwf	LED_setColor@green^(0+128)
  9706                           
  9707                           ;lights.c: 54:         blue = ((float)blue / 2048) * (4000000 / (122 * 32));
  9708  067E  085F               	movf	LED_setColor@blue^(0+128),w
  9709  067F  0140               	movlb	0	; select bank0
  9710  0680  00A0               	movwf	___xxtofl@val
  9711  0681  0141               	movlb	1	; select bank1
  9712  0682  0860               	movf	(LED_setColor@blue+1)^(0+128),w
  9713  0683  0140               	movlb	0	; select bank0
  9714  0684  00A1               	movwf	___xxtofl@val+1
  9715  0685  01A2               	clrf	___xxtofl@val+2
  9716  0686  01A3               	clrf	___xxtofl@val+3
  9717  0687  3000               	movlw	0
  9718  0688  3187  2741  3185   	fcall	___xxtofl
  9719  068B  0140               	movlb	0	; select bank0
  9720  068C  0823               	movf	?___xxtofl+3,w
  9721  068D  00B5               	movwf	___fldiv@b+3
  9722  068E  0822               	movf	?___xxtofl+2,w
  9723  068F  00B4               	movwf	___fldiv@b+2
  9724  0690  0821               	movf	?___xxtofl+1,w
  9725  0691  00B3               	movwf	___fldiv@b+1
  9726  0692  0820               	movf	?___xxtofl,w
  9727  0693  00B2               	movwf	___fldiv@b
  9728  0694  3045               	movlw	69
  9729  0695  00B1               	movwf	___fldiv@a+3
  9730  0696  3000               	movlw	0
  9731  0697  00B0               	movwf	___fldiv@a+2
  9732  0698  3000               	movlw	0
  9733  0699  00AF               	movwf	___fldiv@a+1
  9734  069A  3000               	movlw	0
  9735  069B  00AE               	movwf	___fldiv@a
  9736  069C  3184  2455  3185   	fcall	___fldiv
  9737  069F  0140               	movlb	0	; select bank0
  9738  06A0  0831               	movf	?___fldiv+3,w
  9739  06A1  00CF               	movwf	___flmul@a+3
  9740  06A2  0830               	movf	?___fldiv+2,w
  9741  06A3  00CE               	movwf	___flmul@a+2
  9742  06A4  082F               	movf	?___fldiv+1,w
  9743  06A5  00CD               	movwf	___flmul@a+1
  9744  06A6  082E               	movf	?___fldiv,w
  9745  06A7  00CC               	movwf	___flmul@a
  9746  06A8  3044               	movlw	68
  9747  06A9  00CB               	movwf	___flmul@b+3
  9748  06AA  3080               	movlw	128
  9749  06AB  00CA               	movwf	___flmul@b+2
  9750  06AC  3000               	movlw	0
  9751  06AD  00C9               	movwf	___flmul@b+1
  9752  06AE  3000               	movlw	0
  9753  06AF  00C8               	movwf	___flmul@b
  9754  06B0  3180  2076  3185   	fcall	___flmul
  9755  06B3  0140               	movlb	0	; select bank0
  9756  06B4  084B               	movf	?___flmul+3,w
  9757  06B5  00E5               	movwf	___fltol@f1+3
  9758  06B6  084A               	movf	?___flmul+2,w
  9759  06B7  00E4               	movwf	___fltol@f1+2
  9760  06B8  0849               	movf	?___flmul+1,w
  9761  06B9  00E3               	movwf	___fltol@f1+1
  9762  06BA  0848               	movf	?___flmul,w
  9763  06BB  00E2               	movwf	___fltol@f1
  9764  06BC  318B  23F9  3185   	fcall	___fltol
  9765  06BF  0140               	movlb	0	; select bank0
  9766  06C0  0863               	movf	?___fltol+1,w
  9767  06C1  0141               	movlb	1	; select bank1
  9768  06C2  00E0               	movwf	(LED_setColor@blue+1)^(0+128)
  9769  06C3  0140               	movlb	0	; select bank0
  9770  06C4  0862               	movf	?___fltol,w
  9771  06C5  0141               	movlb	1	; select bank1
  9772  06C6  00DF               	movwf	LED_setColor@blue^(0+128)
  9773                           
  9774                           ;lights.c: 55:         white = ((float)white / 2048) * (4000000 / (122 * 32));
  9775  06C7  0861               	movf	LED_setColor@white^(0+128),w
  9776  06C8  0140               	movlb	0	; select bank0
  9777  06C9  00A0               	movwf	___xxtofl@val
  9778  06CA  0141               	movlb	1	; select bank1
  9779  06CB  0862               	movf	(LED_setColor@white+1)^(0+128),w
  9780  06CC  0140               	movlb	0	; select bank0
  9781  06CD  00A1               	movwf	___xxtofl@val+1
  9782  06CE  01A2               	clrf	___xxtofl@val+2
  9783  06CF  01A3               	clrf	___xxtofl@val+3
  9784  06D0  3000               	movlw	0
  9785  06D1  3187  2741  3185   	fcall	___xxtofl
  9786  06D4  0140               	movlb	0	; select bank0
  9787  06D5  0823               	movf	?___xxtofl+3,w
  9788  06D6  00B5               	movwf	___fldiv@b+3
  9789  06D7  0822               	movf	?___xxtofl+2,w
  9790  06D8  00B4               	movwf	___fldiv@b+2
  9791  06D9  0821               	movf	?___xxtofl+1,w
  9792  06DA  00B3               	movwf	___fldiv@b+1
  9793  06DB  0820               	movf	?___xxtofl,w
  9794  06DC  00B2               	movwf	___fldiv@b
  9795  06DD  3045               	movlw	69
  9796  06DE  00B1               	movwf	___fldiv@a+3
  9797  06DF  3000               	movlw	0
  9798  06E0  00B0               	movwf	___fldiv@a+2
  9799  06E1  3000               	movlw	0
  9800  06E2  00AF               	movwf	___fldiv@a+1
  9801  06E3  3000               	movlw	0
  9802  06E4  00AE               	movwf	___fldiv@a
  9803  06E5  3184  2455  3185   	fcall	___fldiv
  9804  06E8  0140               	movlb	0	; select bank0
  9805  06E9  0831               	movf	?___fldiv+3,w
  9806  06EA  00CF               	movwf	___flmul@a+3
  9807  06EB  0830               	movf	?___fldiv+2,w
  9808  06EC  00CE               	movwf	___flmul@a+2
  9809  06ED  082F               	movf	?___fldiv+1,w
  9810  06EE  00CD               	movwf	___flmul@a+1
  9811  06EF  082E               	movf	?___fldiv,w
  9812  06F0  00CC               	movwf	___flmul@a
  9813  06F1  3044               	movlw	68
  9814  06F2  00CB               	movwf	___flmul@b+3
  9815  06F3  3080               	movlw	128
  9816  06F4  00CA               	movwf	___flmul@b+2
  9817  06F5  3000               	movlw	0
  9818  06F6  00C9               	movwf	___flmul@b+1
  9819  06F7  3000               	movlw	0
  9820  06F8  00C8               	movwf	___flmul@b
  9821  06F9  3180  2076  3185   	fcall	___flmul
  9822  06FC  0140               	movlb	0	; select bank0
  9823  06FD  084B               	movf	?___flmul+3,w
  9824  06FE  00E5               	movwf	___fltol@f1+3
  9825  06FF  084A               	movf	?___flmul+2,w
  9826  0700  00E4               	movwf	___fltol@f1+2
  9827  0701  0849               	movf	?___flmul+1,w
  9828  0702  00E3               	movwf	___fltol@f1+1
  9829  0703  0848               	movf	?___flmul,w
  9830  0704  00E2               	movwf	___fltol@f1
  9831  0705  318B  23F9  3185   	fcall	___fltol
  9832  0708  0140               	movlb	0	; select bank0
  9833  0709  0863               	movf	?___fltol+1,w
  9834  070A  0141               	movlb	1	; select bank1
  9835  070B  00E2               	movwf	(LED_setColor@white+1)^(0+128)
  9836  070C  0140               	movlb	0	; select bank0
  9837  070D  0862               	movf	?___fltol,w
  9838  070E  0141               	movlb	1	; select bank1
  9839  070F  00E1               	movwf	LED_setColor@white^(0+128)
  9840                           
  9841                           ;lights.c: 56:     } else {
  9842  0710  2F21               	goto	l820
  9843  0711                     l5398:	
  9844                           
  9845                           ;lights.c: 57:         red = ((float)255 / 2048) * (4000000 / (122 * 32));
  9846  0711  307F               	movlw	127
  9847  0712  00DB               	movwf	LED_setColor@red^(0+128)
  9848  0713  3000               	movlw	0
  9849  0714  00DC               	movwf	(LED_setColor@red^(0+128)+1)
  9850                           
  9851                           ;lights.c: 58:         green = ((float)255 / 2048) * (4000000 / (122 * 32));
  9852  0715  307F               	movlw	127
  9853  0716  00DD               	movwf	LED_setColor@green^(0+128)
  9854  0717  3000               	movlw	0
  9855  0718  00DE               	movwf	(LED_setColor@green^(0+128)+1)
  9856                           
  9857                           ;lights.c: 59:         blue = ((float)255 / 2048) * (4000000 / (122 * 32));
  9858  0719  307F               	movlw	127
  9859  071A  00DF               	movwf	LED_setColor@blue^(0+128)
  9860  071B  3000               	movlw	0
  9861  071C  00E0               	movwf	(LED_setColor@blue^(0+128)+1)
  9862                           
  9863                           ;lights.c: 60:         white = ((float)255 / 2048) * (4000000 / (122 * 32));
  9864  071D  307F               	movlw	127
  9865  071E  00E1               	movwf	LED_setColor@white^(0+128)
  9866  071F  3000               	movlw	0
  9867  0720  00E2               	movwf	(LED_setColor@white^(0+128)+1)
  9868  0721                     l820:	
  9869                           ;lights.c: 61:     }
  9870                           
  9871                           
  9872                           ;lights.c: 63:     CCPR1 = red;
  9873  0721  085C               	movf	(LED_setColor@red+1)^(0+128),w
  9874  0722  0146               	movlb	6	; select bank6
  9875  0723  008D               	movwf	13	;volatile
  9876  0724  0141               	movlb	1	; select bank1
  9877  0725  085B               	movf	LED_setColor@red^(0+128),w
  9878  0726  0146               	movlb	6	; select bank6
  9879  0727  008C               	movwf	12	;volatile
  9880                           
  9881                           ;lights.c: 64:     CCPR2 = green;
  9882  0728  0141               	movlb	1	; select bank1
  9883  0729  085E               	movf	(LED_setColor@green+1)^(0+128),w
  9884  072A  0146               	movlb	6	; select bank6
  9885  072B  0091               	movwf	17	;volatile
  9886  072C  0141               	movlb	1	; select bank1
  9887  072D  085D               	movf	LED_setColor@green^(0+128),w
  9888  072E  0146               	movlb	6	; select bank6
  9889  072F  0090               	movwf	16	;volatile
  9890                           
  9891                           ;lights.c: 65:     CCPR3 = blue;
  9892  0730  0141               	movlb	1	; select bank1
  9893  0731  0860               	movf	(LED_setColor@blue+1)^(0+128),w
  9894  0732  0146               	movlb	6	; select bank6
  9895  0733  0095               	movwf	21	;volatile
  9896  0734  0141               	movlb	1	; select bank1
  9897  0735  085F               	movf	LED_setColor@blue^(0+128),w
  9898  0736  0146               	movlb	6	; select bank6
  9899  0737  0094               	movwf	20	;volatile
  9900                           
  9901                           ;lights.c: 66:     CCPR4 = white;
  9902  0738  0141               	movlb	1	; select bank1
  9903  0739  0862               	movf	(LED_setColor@white+1)^(0+128),w
  9904  073A  0146               	movlb	6	; select bank6
  9905  073B  0099               	movwf	25	;volatile
  9906  073C  0141               	movlb	1	; select bank1
  9907  073D  0861               	movf	LED_setColor@white^(0+128),w
  9908  073E  0146               	movlb	6	; select bank6
  9909  073F  0098               	movwf	24	;volatile
  9910  0740  0008               	return
  9911  0741                     __end_of_LED_setColor:	
  9912                           
  9913                           	psect	text17
  9914  0741                     __ptext17:	
  9915 ;; *************** function ___xxtofl *****************
  9916 ;; Defined at:
  9917 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;  sign            1    wreg     unsigned char 
  9920 ;;  val             4    0[BANK0 ] long 
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;  sign            1    8[BANK0 ] unsigned char 
  9923 ;;  arg             4   10[BANK0 ] unsigned long 
  9924 ;;  exp             1    9[BANK0 ] unsigned char 
  9925 ;; Return value:  Size  Location     Type
  9926 ;;                  4    0[BANK0 ] unsigned char 
  9927 ;; Registers used:
  9928 ;;		wreg, status,2, status,0
  9929 ;; Tracked objects:
  9930 ;;		On entry : 0/0
  9931 ;;		On exit  : 0/0
  9932 ;;		Unchanged: 0/0
  9933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9934 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9935 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9936 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9937 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9938 ;;Total ram usage:       14 bytes
  9939 ;; Hardware stack levels used:    1
  9940 ;; Hardware stack levels required when called:    4
  9941 ;; This function calls:
  9942 ;;		Nothing
  9943 ;; This function is called by:
  9944 ;;		_LED_setColor
  9945 ;; This function uses a non-reentrant model
  9946 ;;
  9947                           
  9948                           
  9949                           ;psect for function ___xxtofl
  9950  0741                     ___xxtofl:	
  9951                           
  9952                           ;incstack = 0
  9953                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9954                           ;___xxtofl@sign stored from wreg
  9955  0741  0140               	movlb	0	; select bank0
  9956  0742  00A8               	movwf	___xxtofl@sign
  9957  0743  0828               	movf	___xxtofl@sign,w
  9958  0744  1D03               	btfss	3,2
  9959  0745  1FA3               	btfss	___xxtofl@val+3,7
  9960  0746  2F57               	goto	l3820
  9961  0747  0920               	comf	___xxtofl@val,w
  9962  0748  00AA               	movwf	___xxtofl@arg
  9963  0749  0921               	comf	___xxtofl@val+1,w
  9964  074A  00AB               	movwf	___xxtofl@arg+1
  9965  074B  0922               	comf	___xxtofl@val+2,w
  9966  074C  00AC               	movwf	___xxtofl@arg+2
  9967  074D  0923               	comf	___xxtofl@val+3,w
  9968  074E  00AD               	movwf	___xxtofl@arg+3
  9969  074F  0AAA               	incf	___xxtofl@arg,f
  9970  0750  1903               	skipnz
  9971  0751  0AAB               	incf	___xxtofl@arg+1,f
  9972  0752  1903               	skipnz
  9973  0753  0AAC               	incf	___xxtofl@arg+2,f
  9974  0754  1903               	skipnz
  9975  0755  0AAD               	incf	___xxtofl@arg+3,f
  9976  0756  2F5F               	goto	l1629
  9977  0757                     l3820:	
  9978  0757  0823               	movf	___xxtofl@val+3,w
  9979  0758  00AD               	movwf	___xxtofl@arg+3
  9980  0759  0822               	movf	___xxtofl@val+2,w
  9981  075A  00AC               	movwf	___xxtofl@arg+2
  9982  075B  0821               	movf	___xxtofl@val+1,w
  9983  075C  00AB               	movwf	___xxtofl@arg+1
  9984  075D  0820               	movf	___xxtofl@val,w
  9985  075E  00AA               	movwf	___xxtofl@arg
  9986  075F                     l1629:	
  9987  075F  0823               	movf	___xxtofl@val+3,w
  9988  0760  0422               	iorwf	___xxtofl@val+2,w
  9989  0761  0421               	iorwf	___xxtofl@val+1,w
  9990  0762  0420               	iorwf	___xxtofl@val,w
  9991  0763  1D03               	skipz
  9992  0764  2F6E               	goto	l3826
  9993  0765  3000               	movlw	0
  9994  0766  00A3               	movwf	?___xxtofl+3
  9995  0767  3000               	movlw	0
  9996  0768  00A2               	movwf	?___xxtofl+2
  9997  0769  3000               	movlw	0
  9998  076A  00A1               	movwf	?___xxtofl+1
  9999  076B  3000               	movlw	0
 10000  076C  00A0               	movwf	?___xxtofl
 10001  076D  0008               	return
 10002  076E                     l3826:	
 10003  076E  3096               	movlw	150
 10004  076F  00A4               	movwf	??___xxtofl
 10005  0770  0824               	movf	??___xxtofl,w
 10006  0771  00A9               	movwf	___xxtofl@exp
 10007  0772                     l3830:	
 10008  0772  30FE               	movlw	254
 10009  0773  052D               	andwf	___xxtofl@arg+3,w
 10010  0774  1903               	btfsc	3,2
 10011  0775  2F95               	goto	l1635
 10012  0776  3001               	movlw	1
 10013  0777  00A4               	movwf	??___xxtofl
 10014  0778  0824               	movf	??___xxtofl,w
 10015  0779  07A9               	addwf	___xxtofl@exp,f
 10016  077A  3001               	movlw	1
 10017  077B                     u3065:	
 10018  077B  36AD               	lsrf	___xxtofl@arg+3,f
 10019  077C  0CAC               	rrf	___xxtofl@arg+2,f
 10020  077D  0CAB               	rrf	___xxtofl@arg+1,f
 10021  077E  0CAA               	rrf	___xxtofl@arg,f
 10022  077F  0B89               	decfsz	9,f
 10023  0780  2F7B               	goto	u3065
 10024  0781  2F72               	goto	l3830
 10025  0782                     l3832:	
 10026  0782  3001               	movlw	1
 10027  0783  00A4               	movwf	??___xxtofl
 10028  0784  0824               	movf	??___xxtofl,w
 10029  0785  07A9               	addwf	___xxtofl@exp,f
 10030  0786  3001               	movlw	1
 10031  0787  07AA               	addwf	___xxtofl@arg,f
 10032  0788  3000               	movlw	0
 10033  0789  3DAB               	addwfc	___xxtofl@arg+1,f
 10034  078A  3000               	movlw	0
 10035  078B  3DAC               	addwfc	___xxtofl@arg+2,f
 10036  078C  3000               	movlw	0
 10037  078D  3DAD               	addwfc	___xxtofl@arg+3,f
 10038  078E  3001               	movlw	1
 10039  078F                     u3085:	
 10040  078F  36AD               	lsrf	___xxtofl@arg+3,f
 10041  0790  0CAC               	rrf	___xxtofl@arg+2,f
 10042  0791  0CAB               	rrf	___xxtofl@arg+1,f
 10043  0792  0CAA               	rrf	___xxtofl@arg,f
 10044  0793  0B89               	decfsz	9,f
 10045  0794  2F8F               	goto	u3085
 10046  0795                     l1635:	
 10047  0795  30FF               	movlw	255
 10048  0796  052D               	andwf	___xxtofl@arg+3,w
 10049  0797  1903               	btfsc	3,2
 10050  0798  2FA7               	goto	l3840
 10051  0799  2F82               	goto	l3832
 10052  079A                     l3842:	
 10053  079A  3002               	movlw	2
 10054  079B  0229               	subwf	___xxtofl@exp,w
 10055  079C  1C03               	btfss	3,0
 10056  079D  2FA9               	goto	l1642
 10057  079E  3001               	movlw	1
 10058  079F  02A9               	subwf	___xxtofl@exp,f
 10059  07A0  3001               	movlw	1
 10060  07A1                     u3105:	
 10061  07A1  35AA               	lslf	___xxtofl@arg,f
 10062  07A2  0DAB               	rlf	___xxtofl@arg+1,f
 10063  07A3  0DAC               	rlf	___xxtofl@arg+2,f
 10064  07A4  0DAD               	rlf	___xxtofl@arg+3,f
 10065  07A5  0B89               	decfsz	9,f
 10066  07A6  2FA1               	goto	u3105
 10067  07A7                     l3840:	
 10068  07A7  1FAC               	btfss	___xxtofl@arg+2,7
 10069  07A8  2F9A               	goto	l3842
 10070  07A9                     l1642:	
 10071  07A9  1829               	btfsc	___xxtofl@exp,0
 10072  07AA  2FB3               	goto	l1643
 10073  07AB  30FF               	movlw	255
 10074  07AC  05AA               	andwf	___xxtofl@arg,f
 10075  07AD  30FF               	movlw	255
 10076  07AE  05AB               	andwf	___xxtofl@arg+1,f
 10077  07AF  307F               	movlw	127
 10078  07B0  05AC               	andwf	___xxtofl@arg+2,f
 10079  07B1  30FF               	movlw	255
 10080  07B2  05AD               	andwf	___xxtofl@arg+3,f
 10081  07B3                     l1643:	
 10082  07B3  1003               	clrc
 10083  07B4  0CA9               	rrf	___xxtofl@exp,f
 10084  07B5  0829               	movf	___xxtofl@exp,w
 10085  07B6  00A4               	movwf	??___xxtofl
 10086  07B7  01A5               	clrf	??___xxtofl+1
 10087  07B8  01A6               	clrf	??___xxtofl+2
 10088  07B9  01A7               	clrf	??___xxtofl+3
 10089  07BA  3018               	movlw	24
 10090  07BB                     u3145:	
 10091  07BB  35A4               	lslf	??___xxtofl,f
 10092  07BC  0DA5               	rlf	??___xxtofl+1,f
 10093  07BD  0DA6               	rlf	??___xxtofl+2,f
 10094  07BE  0DA7               	rlf	??___xxtofl+3,f
 10095  07BF  0B89               	decfsz	9,f
 10096  07C0  2FBB               	goto	u3145
 10097  07C1  0824               	movf	??___xxtofl,w
 10098  07C2  04AA               	iorwf	___xxtofl@arg,f
 10099  07C3  0825               	movf	??___xxtofl+1,w
 10100  07C4  04AB               	iorwf	___xxtofl@arg+1,f
 10101  07C5  0826               	movf	??___xxtofl+2,w
 10102  07C6  04AC               	iorwf	___xxtofl@arg+2,f
 10103  07C7  0827               	movf	??___xxtofl+3,w
 10104  07C8  04AD               	iorwf	___xxtofl@arg+3,f
 10105  07C9  0828               	movf	___xxtofl@sign,w
 10106  07CA  1D03               	btfss	3,2
 10107  07CB  1FA3               	btfss	___xxtofl@val+3,7
 10108  07CC  2FCE               	goto	l3854
 10109  07CD  17AD               	bsf	___xxtofl@arg+3,7
 10110  07CE                     l3854:	
 10111  07CE  082D               	movf	___xxtofl@arg+3,w
 10112  07CF  00A3               	movwf	?___xxtofl+3
 10113  07D0  082C               	movf	___xxtofl@arg+2,w
 10114  07D1  00A2               	movwf	?___xxtofl+2
 10115  07D2  082B               	movf	___xxtofl@arg+1,w
 10116  07D3  00A1               	movwf	?___xxtofl+1
 10117  07D4  082A               	movf	___xxtofl@arg,w
 10118  07D5  00A0               	movwf	?___xxtofl
 10119  07D6  0008               	return
 10120  07D7                     __end_of___xxtofl:	
 10121                           
 10122                           	psect	text18
 10123  0BF9                     __ptext18:	
 10124 ;; *************** function ___fltol *****************
 10125 ;; Defined at:
 10126 ;;		line 43 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
 10127 ;; Parameters:    Size  Location     Type
 10128 ;;  f1              4   66[BANK0 ] unsigned char 
 10129 ;; Auto vars:     Size  Location     Type
 10130 ;;  exp1            1   76[BANK0 ] unsigned char 
 10131 ;;  sign1           1   75[BANK0 ] unsigned char 
 10132 ;; Return value:  Size  Location     Type
 10133 ;;                  4   66[BANK0 ] long 
 10134 ;; Registers used:
 10135 ;;		wreg, status,2, status,0
 10136 ;; Tracked objects:
 10137 ;;		On entry : 0/0
 10138 ;;		On exit  : 0/0
 10139 ;;		Unchanged: 0/0
 10140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10141 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10143 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10144 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10145 ;;Total ram usage:       11 bytes
 10146 ;; Hardware stack levels used:    1
 10147 ;; Hardware stack levels required when called:    4
 10148 ;; This function calls:
 10149 ;;		Nothing
 10150 ;; This function is called by:
 10151 ;;		_LED_setColor
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155                           
 10156                           ;psect for function ___fltol
 10157  0BF9                     ___fltol:	
 10158                           
 10159                           ;incstack = 0
 10160                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10161  0BF9  1003               	clrc
 10162  0BFA  0140               	movlb	0	; select bank0
 10163  0BFB  0D64               	rlf	___fltol@f1+2,w
 10164  0BFC  0D65               	rlf	___fltol@f1+3,w
 10165  0BFD  00E6               	movwf	??___fltol
 10166  0BFE  0866               	movf	??___fltol,w
 10167  0BFF  00EC               	movwf	___fltol@exp1
 10168  0C00  086C               	movf	___fltol@exp1,w
 10169  0C01  1D03               	btfss	3,2
 10170  0C02  2C0C               	goto	l3504
 10171  0C03                     l3500:	
 10172  0C03  3000               	movlw	0
 10173  0C04  00E5               	movwf	?___fltol+3
 10174  0C05  3000               	movlw	0
 10175  0C06  00E4               	movwf	?___fltol+2
 10176  0C07  3000               	movlw	0
 10177  0C08  00E3               	movwf	?___fltol+1
 10178  0C09  3000               	movlw	0
 10179  0C0A  00E2               	movwf	?___fltol
 10180  0C0B  0008               	return
 10181  0C0C                     l3504:	
 10182  0C0C  0862               	movf	___fltol@f1,w
 10183  0C0D  00E6               	movwf	??___fltol
 10184  0C0E  0863               	movf	___fltol@f1+1,w
 10185  0C0F  00E7               	movwf	??___fltol+1
 10186  0C10  0864               	movf	___fltol@f1+2,w
 10187  0C11  00E8               	movwf	??___fltol+2
 10188  0C12  0865               	movf	___fltol@f1+3,w
 10189  0C13  00E9               	movwf	??___fltol+3
 10190  0C14  301F               	movlw	31
 10191  0C15                     u2395:	
 10192  0C15  36E9               	lsrf	??___fltol+3,f
 10193  0C16  0CE8               	rrf	??___fltol+2,f
 10194  0C17  0CE7               	rrf	??___fltol+1,f
 10195  0C18  0CE6               	rrf	??___fltol,f
 10196  0C19  0B89               	decfsz	9,f
 10197  0C1A  2C15               	goto	u2395
 10198  0C1B  0866               	movf	??___fltol,w
 10199  0C1C  00EA               	movwf	??___fltol+4
 10200  0C1D  086A               	movf	??___fltol+4,w
 10201  0C1E  00EB               	movwf	___fltol@sign1
 10202  0C1F  17E4               	bsf	___fltol@f1+2,7
 10203  0C20  30FF               	movlw	255
 10204  0C21  05E2               	andwf	___fltol@f1,f
 10205  0C22  30FF               	movlw	255
 10206  0C23  05E3               	andwf	___fltol@f1+1,f
 10207  0C24  30FF               	movlw	255
 10208  0C25  05E4               	andwf	___fltol@f1+2,f
 10209  0C26  3000               	movlw	0
 10210  0C27  05E5               	andwf	___fltol@f1+3,f
 10211  0C28  3096               	movlw	150
 10212  0C29  02EC               	subwf	___fltol@exp1,f
 10213  0C2A  1FEC               	btfss	___fltol@exp1,7
 10214  0C2B  2C3F               	goto	l3522
 10215  0C2C  086C               	movf	___fltol@exp1,w
 10216  0C2D  3A80               	xorlw	128
 10217  0C2E  3E97               	addlw	151
 10218  0C2F  1C03               	btfss	3,0
 10219  0C30  2C03               	goto	l3500
 10220  0C31                     l3520:	
 10221  0C31  3001               	movlw	1
 10222  0C32                     u2425:	
 10223  0C32  36E5               	lsrf	___fltol@f1+3,f
 10224  0C33  0CE4               	rrf	___fltol@f1+2,f
 10225  0C34  0CE3               	rrf	___fltol@f1+1,f
 10226  0C35  0CE2               	rrf	___fltol@f1,f
 10227  0C36  0B89               	decfsz	9,f
 10228  0C37  2C32               	goto	u2425
 10229  0C38  3001               	movlw	1
 10230  0C39  00E6               	movwf	??___fltol
 10231  0C3A  0866               	movf	??___fltol,w
 10232  0C3B  07EC               	addwf	___fltol@exp1,f
 10233  0C3C  1903               	btfsc	3,2
 10234  0C3D  2C50               	goto	l3530
 10235  0C3E  2C31               	goto	l3520
 10236  0C3F                     l3522:	
 10237  0C3F  3020               	movlw	32
 10238  0C40  026C               	subwf	___fltol@exp1,w
 10239  0C41  1803               	btfsc	3,0
 10240  0C42  2C03               	goto	l3500
 10241  0C43                     l1395:	
 10242  0C43  086C               	movf	___fltol@exp1,w
 10243  0C44  1903               	btfsc	3,2
 10244  0C45  2C50               	goto	l3530
 10245  0C46  3001               	movlw	1
 10246  0C47                     u2455:	
 10247  0C47  35E2               	lslf	___fltol@f1,f
 10248  0C48  0DE3               	rlf	___fltol@f1+1,f
 10249  0C49  0DE4               	rlf	___fltol@f1+2,f
 10250  0C4A  0DE5               	rlf	___fltol@f1+3,f
 10251  0C4B  0B89               	decfsz	9,f
 10252  0C4C  2C47               	goto	u2455
 10253  0C4D  3001               	movlw	1
 10254  0C4E  02EC               	subwf	___fltol@exp1,f
 10255  0C4F  2C43               	goto	l1395
 10256  0C50                     l3530:	
 10257  0C50  086B               	movf	___fltol@sign1,w
 10258  0C51  1903               	btfsc	3,2
 10259  0C52  0008               	return
 10260  0C53  09E2               	comf	___fltol@f1,f
 10261  0C54  09E3               	comf	___fltol@f1+1,f
 10262  0C55  09E4               	comf	___fltol@f1+2,f
 10263  0C56  09E5               	comf	___fltol@f1+3,f
 10264  0C57  0AE2               	incf	___fltol@f1,f
 10265  0C58  1903               	skipnz
 10266  0C59  0AE3               	incf	___fltol@f1+1,f
 10267  0C5A  1903               	skipnz
 10268  0C5B  0AE4               	incf	___fltol@f1+2,f
 10269  0C5C  1903               	skipnz
 10270  0C5D  0AE5               	incf	___fltol@f1+3,f
 10271  0C5E  0008               	return
 10272  0C5F                     __end_of___fltol:	
 10273                           
 10274                           	psect	text19
 10275  0076                     __ptext19:	
 10276 ;; *************** function ___flmul *****************
 10277 ;; Defined at:
 10278 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;  b               4   40[BANK0 ] long 
 10281 ;;  a               4   44[BANK0 ] long 
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;  prod            4   60[BANK0 ] struct .
 10284 ;;  grs             4   55[BANK0 ] unsigned long 
 10285 ;;  temp            2   64[BANK0 ] struct .
 10286 ;;  bexp            1   59[BANK0 ] unsigned char 
 10287 ;;  aexp            1   54[BANK0 ] unsigned char 
 10288 ;;  sign            1   53[BANK0 ] unsigned char 
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  4   40[BANK0 ] unsigned char 
 10291 ;; Registers used:
 10292 ;;		wreg, status,2, status,0, pclath, cstack
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/0
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10298 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10299 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10300 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10301 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10302 ;;Total ram usage:       26 bytes
 10303 ;; Hardware stack levels used:    1
 10304 ;; Hardware stack levels required when called:    5
 10305 ;; This function calls:
 10306 ;;		__Umul8_16
 10307 ;; This function is called by:
 10308 ;;		_LED_setColor
 10309 ;; This function uses a non-reentrant model
 10310 ;;
 10311                           
 10312                           
 10313                           ;psect for function ___flmul
 10314  0076                     ___flmul:	
 10315                           
 10316                           ;incstack = 0
 10317                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10318  0076  0140               	movlb	0	; select bank0
 10319  0077  084B               	movf	___flmul@b+3,w
 10320  0078  3980               	andlw	128
 10321  0079  00D0               	movwf	??___flmul
 10322  007A  0850               	movf	??___flmul,w
 10323  007B  00D5               	movwf	___flmul@sign
 10324  007C  354B               	lslf	___flmul@b+3,w
 10325  007D  00D0               	movwf	??___flmul
 10326  007E  0850               	movf	??___flmul,w
 10327  007F  00DB               	movwf	___flmul@bexp
 10328  0080  1BCA               	btfsc	___flmul@b+2,7
 10329  0081  145B               	bsf	___flmul@bexp,0
 10330  0082  085B               	movf	___flmul@bexp,w
 10331  0083  1903               	btfsc	3,2
 10332  0084  2892               	goto	l4854
 10333  0085  0A5B               	incf	___flmul@bexp,w
 10334  0086  1D03               	btfss	3,2
 10335  0087  2890               	goto	l4852
 10336  0088  3000               	movlw	0
 10337  0089  00CB               	movwf	___flmul@b+3
 10338  008A  3000               	movlw	0
 10339  008B  00CA               	movwf	___flmul@b+2
 10340  008C  3000               	movlw	0
 10341  008D  00C9               	movwf	___flmul@b+1
 10342  008E  3000               	movlw	0
 10343  008F  00C8               	movwf	___flmul@b
 10344  0090                     l4852:	
 10345  0090  17CA               	bsf	___flmul@b+2,7
 10346  0091  289A               	goto	l4856
 10347  0092                     l4854:	
 10348  0092  3000               	movlw	0
 10349  0093  00CB               	movwf	___flmul@b+3
 10350  0094  3000               	movlw	0
 10351  0095  00CA               	movwf	___flmul@b+2
 10352  0096  3000               	movlw	0
 10353  0097  00C9               	movwf	___flmul@b+1
 10354  0098  3000               	movlw	0
 10355  0099  00C8               	movwf	___flmul@b
 10356  009A                     l4856:	
 10357  009A  084F               	movf	___flmul@a+3,w
 10358  009B  3980               	andlw	128
 10359  009C  00D0               	movwf	??___flmul
 10360  009D  0850               	movf	??___flmul,w
 10361  009E  06D5               	xorwf	___flmul@sign,f
 10362  009F  354F               	lslf	___flmul@a+3,w
 10363  00A0  00D0               	movwf	??___flmul
 10364  00A1  0850               	movf	??___flmul,w
 10365  00A2  00D6               	movwf	___flmul@aexp
 10366  00A3  1BCE               	btfsc	___flmul@a+2,7
 10367  00A4  1456               	bsf	___flmul@aexp,0
 10368  00A5  0856               	movf	___flmul@aexp,w
 10369  00A6  1903               	btfsc	3,2
 10370  00A7  28B5               	goto	l4872
 10371  00A8  0A56               	incf	___flmul@aexp,w
 10372  00A9  1D03               	btfss	3,2
 10373  00AA  28B3               	goto	l4870
 10374  00AB  3000               	movlw	0
 10375  00AC  00CF               	movwf	___flmul@a+3
 10376  00AD  3000               	movlw	0
 10377  00AE  00CE               	movwf	___flmul@a+2
 10378  00AF  3000               	movlw	0
 10379  00B0  00CD               	movwf	___flmul@a+1
 10380  00B1  3000               	movlw	0
 10381  00B2  00CC               	movwf	___flmul@a
 10382  00B3                     l4870:	
 10383  00B3  17CE               	bsf	___flmul@a+2,7
 10384  00B4  28BD               	goto	l4874
 10385  00B5                     l4872:	
 10386  00B5  3000               	movlw	0
 10387  00B6  00CF               	movwf	___flmul@a+3
 10388  00B7  3000               	movlw	0
 10389  00B8  00CE               	movwf	___flmul@a+2
 10390  00B9  3000               	movlw	0
 10391  00BA  00CD               	movwf	___flmul@a+1
 10392  00BB  3000               	movlw	0
 10393  00BC  00CC               	movwf	___flmul@a
 10394  00BD                     l4874:	
 10395  00BD  0856               	movf	___flmul@aexp,w
 10396  00BE  1D03               	btfss	3,2
 10397  00BF  085B               	movf	___flmul@bexp,w
 10398  00C0  1D03               	btfss	3,2
 10399  00C1  28CB               	goto	l4882
 10400  00C2  3000               	movlw	0
 10401  00C3  00CB               	movwf	?___flmul+3
 10402  00C4  3000               	movlw	0
 10403  00C5  00CA               	movwf	?___flmul+2
 10404  00C6  3000               	movlw	0
 10405  00C7  00C9               	movwf	?___flmul+1
 10406  00C8  3000               	movlw	0
 10407  00C9  00C8               	movwf	?___flmul
 10408  00CA  0008               	return
 10409  00CB                     l4882:	
 10410  00CB  0848               	movf	___flmul@b,w
 10411  00CC  00D0               	movwf	??___flmul
 10412  00CD  0850               	movf	??___flmul,w
 10413  00CE  00A0               	movwf	__Umul8_16@multiplicand
 10414  00CF  084E               	movf	___flmul@a+2,w
 10415  00D0  3189  2160  3180   	fcall	__Umul8_16
 10416  00D3  0140               	movlb	0	; select bank0
 10417  00D4  0821               	movf	?__Umul8_16+1,w
 10418  00D5  00E1               	movwf	___flmul@temp+1
 10419  00D6  0820               	movf	?__Umul8_16,w
 10420  00D7  00E0               	movwf	___flmul@temp
 10421  00D8  0860               	movf	___flmul@temp,w
 10422  00D9  00D0               	movwf	??___flmul
 10423  00DA  01D1               	clrf	??___flmul+1
 10424  00DB  01D2               	clrf	??___flmul+2
 10425  00DC  01D3               	clrf	??___flmul+3
 10426  00DD  0853               	movf	??___flmul+3,w
 10427  00DE  00DA               	movwf	___flmul@grs+3
 10428  00DF  0852               	movf	??___flmul+2,w
 10429  00E0  00D9               	movwf	___flmul@grs+2
 10430  00E1  0851               	movf	??___flmul+1,w
 10431  00E2  00D8               	movwf	___flmul@grs+1
 10432  00E3  0850               	movf	??___flmul,w
 10433  00E4  00D7               	movwf	___flmul@grs
 10434  00E5  0861               	movf	___flmul@temp+1,w
 10435  00E6  00D0               	movwf	??___flmul
 10436  00E7  01D1               	clrf	??___flmul+1
 10437  00E8  01D2               	clrf	??___flmul+2
 10438  00E9  01D3               	clrf	??___flmul+3
 10439  00EA  0853               	movf	??___flmul+3,w
 10440  00EB  00DF               	movwf	___flmul@prod+3
 10441  00EC  0852               	movf	??___flmul+2,w
 10442  00ED  00DE               	movwf	___flmul@prod+2
 10443  00EE  0851               	movf	??___flmul+1,w
 10444  00EF  00DD               	movwf	___flmul@prod+1
 10445  00F0  0850               	movf	??___flmul,w
 10446  00F1  00DC               	movwf	___flmul@prod
 10447  00F2  0849               	movf	___flmul@b+1,w
 10448  00F3  00D0               	movwf	??___flmul
 10449  00F4  0850               	movf	??___flmul,w
 10450  00F5  00A0               	movwf	__Umul8_16@multiplicand
 10451  00F6  084D               	movf	___flmul@a+1,w
 10452  00F7  3189  2160  3180   	fcall	__Umul8_16
 10453  00FA  0140               	movlb	0	; select bank0
 10454  00FB  0821               	movf	?__Umul8_16+1,w
 10455  00FC  00E1               	movwf	___flmul@temp+1
 10456  00FD  0820               	movf	?__Umul8_16,w
 10457  00FE  00E0               	movwf	___flmul@temp
 10458  00FF  0860               	movf	___flmul@temp,w
 10459  0100  00D0               	movwf	??___flmul
 10460  0101  01D1               	clrf	??___flmul+1
 10461  0102  01D2               	clrf	??___flmul+2
 10462  0103  01D3               	clrf	??___flmul+3
 10463  0104  0850               	movf	??___flmul,w
 10464  0105  07D7               	addwf	___flmul@grs,f
 10465  0106  0851               	movf	??___flmul+1,w
 10466  0107  3DD8               	addwfc	___flmul@grs+1,f
 10467  0108  0852               	movf	??___flmul+2,w
 10468  0109  3DD9               	addwfc	___flmul@grs+2,f
 10469  010A  0853               	movf	??___flmul+3,w
 10470  010B  3DDA               	addwfc	___flmul@grs+3,f
 10471  010C  0861               	movf	___flmul@temp+1,w
 10472  010D  00D0               	movwf	??___flmul
 10473  010E  01D1               	clrf	??___flmul+1
 10474  010F  01D2               	clrf	??___flmul+2
 10475  0110  01D3               	clrf	??___flmul+3
 10476  0111  0850               	movf	??___flmul,w
 10477  0112  07DC               	addwf	___flmul@prod,f
 10478  0113  0851               	movf	??___flmul+1,w
 10479  0114  3DDD               	addwfc	___flmul@prod+1,f
 10480  0115  0852               	movf	??___flmul+2,w
 10481  0116  3DDE               	addwfc	___flmul@prod+2,f
 10482  0117  0853               	movf	??___flmul+3,w
 10483  0118  3DDF               	addwfc	___flmul@prod+3,f
 10484  0119  084A               	movf	___flmul@b+2,w
 10485  011A  00D0               	movwf	??___flmul
 10486  011B  0850               	movf	??___flmul,w
 10487  011C  00A0               	movwf	__Umul8_16@multiplicand
 10488  011D  084C               	movf	___flmul@a,w
 10489  011E  3189  2160  3180   	fcall	__Umul8_16
 10490  0121  0140               	movlb	0	; select bank0
 10491  0122  0821               	movf	?__Umul8_16+1,w
 10492  0123  00E1               	movwf	___flmul@temp+1
 10493  0124  0820               	movf	?__Umul8_16,w
 10494  0125  00E0               	movwf	___flmul@temp
 10495  0126  0860               	movf	___flmul@temp,w
 10496  0127  00D0               	movwf	??___flmul
 10497  0128  01D1               	clrf	??___flmul+1
 10498  0129  01D2               	clrf	??___flmul+2
 10499  012A  01D3               	clrf	??___flmul+3
 10500  012B  0850               	movf	??___flmul,w
 10501  012C  07D7               	addwf	___flmul@grs,f
 10502  012D  0851               	movf	??___flmul+1,w
 10503  012E  3DD8               	addwfc	___flmul@grs+1,f
 10504  012F  0852               	movf	??___flmul+2,w
 10505  0130  3DD9               	addwfc	___flmul@grs+2,f
 10506  0131  0853               	movf	??___flmul+3,w
 10507  0132  3DDA               	addwfc	___flmul@grs+3,f
 10508  0133  0861               	movf	___flmul@temp+1,w
 10509  0134  00D0               	movwf	??___flmul
 10510  0135  01D1               	clrf	??___flmul+1
 10511  0136  01D2               	clrf	??___flmul+2
 10512  0137  01D3               	clrf	??___flmul+3
 10513  0138  0850               	movf	??___flmul,w
 10514  0139  07DC               	addwf	___flmul@prod,f
 10515  013A  0851               	movf	??___flmul+1,w
 10516  013B  3DDD               	addwfc	___flmul@prod+1,f
 10517  013C  0852               	movf	??___flmul+2,w
 10518  013D  3DDE               	addwfc	___flmul@prod+2,f
 10519  013E  0853               	movf	??___flmul+3,w
 10520  013F  3DDF               	addwfc	___flmul@prod+3,f
 10521  0140  3008               	movlw	8
 10522  0141                     u4425:	
 10523  0141  35D7               	lslf	___flmul@grs,f
 10524  0142  0DD8               	rlf	___flmul@grs+1,f
 10525  0143  0DD9               	rlf	___flmul@grs+2,f
 10526  0144  0DDA               	rlf	___flmul@grs+3,f
 10527  0145  0B89               	decfsz	9,f
 10528  0146  2941               	goto	u4425
 10529  0147  0849               	movf	___flmul@b+1,w
 10530  0148  00D0               	movwf	??___flmul
 10531  0149  0850               	movf	??___flmul,w
 10532  014A  00A0               	movwf	__Umul8_16@multiplicand
 10533  014B  084C               	movf	___flmul@a,w
 10534  014C  3189  2160  3180   	fcall	__Umul8_16
 10535  014F  0140               	movlb	0	; select bank0
 10536  0150  0821               	movf	?__Umul8_16+1,w
 10537  0151  00E1               	movwf	___flmul@temp+1
 10538  0152  0820               	movf	?__Umul8_16,w
 10539  0153  00E0               	movwf	___flmul@temp
 10540  0154  0860               	movf	___flmul@temp,w
 10541  0155  07D7               	addwf	___flmul@grs,f
 10542  0156  0861               	movf	___flmul@temp+1,w
 10543  0157  3DD8               	addwfc	___flmul@grs+1,f
 10544  0158  3000               	movlw	0
 10545  0159  3DD9               	addwfc	___flmul@grs+2,f
 10546  015A  3DDA               	addwfc	___flmul@grs+3,f
 10547  015B  0848               	movf	___flmul@b,w
 10548  015C  00D0               	movwf	??___flmul
 10549  015D  0850               	movf	??___flmul,w
 10550  015E  00A0               	movwf	__Umul8_16@multiplicand
 10551  015F  084D               	movf	___flmul@a+1,w
 10552  0160  3189  2160  3180   	fcall	__Umul8_16
 10553  0163  0140               	movlb	0	; select bank0
 10554  0164  0821               	movf	?__Umul8_16+1,w
 10555  0165  00E1               	movwf	___flmul@temp+1
 10556  0166  0820               	movf	?__Umul8_16,w
 10557  0167  00E0               	movwf	___flmul@temp
 10558  0168  0860               	movf	___flmul@temp,w
 10559  0169  07D7               	addwf	___flmul@grs,f
 10560  016A  0861               	movf	___flmul@temp+1,w
 10561  016B  3DD8               	addwfc	___flmul@grs+1,f
 10562  016C  3000               	movlw	0
 10563  016D  3DD9               	addwfc	___flmul@grs+2,f
 10564  016E  3DDA               	addwfc	___flmul@grs+3,f
 10565  016F  3008               	movlw	8
 10566  0170                     u4435:	
 10567  0170  35D7               	lslf	___flmul@grs,f
 10568  0171  0DD8               	rlf	___flmul@grs+1,f
 10569  0172  0DD9               	rlf	___flmul@grs+2,f
 10570  0173  0DDA               	rlf	___flmul@grs+3,f
 10571  0174  0B89               	decfsz	9,f
 10572  0175  2970               	goto	u4435
 10573  0176  0848               	movf	___flmul@b,w
 10574  0177  00D0               	movwf	??___flmul
 10575  0178  0850               	movf	??___flmul,w
 10576  0179  00A0               	movwf	__Umul8_16@multiplicand
 10577  017A  084C               	movf	___flmul@a,w
 10578  017B  3189  2160  3180   	fcall	__Umul8_16
 10579  017E  0140               	movlb	0	; select bank0
 10580  017F  0821               	movf	?__Umul8_16+1,w
 10581  0180  00E1               	movwf	___flmul@temp+1
 10582  0181  0820               	movf	?__Umul8_16,w
 10583  0182  00E0               	movwf	___flmul@temp
 10584  0183  0860               	movf	___flmul@temp,w
 10585  0184  07D7               	addwf	___flmul@grs,f
 10586  0185  0861               	movf	___flmul@temp+1,w
 10587  0186  3DD8               	addwfc	___flmul@grs+1,f
 10588  0187  3000               	movlw	0
 10589  0188  3DD9               	addwfc	___flmul@grs+2,f
 10590  0189  3DDA               	addwfc	___flmul@grs+3,f
 10591  018A  0849               	movf	___flmul@b+1,w
 10592  018B  00D0               	movwf	??___flmul
 10593  018C  0850               	movf	??___flmul,w
 10594  018D  00A0               	movwf	__Umul8_16@multiplicand
 10595  018E  084E               	movf	___flmul@a+2,w
 10596  018F  3189  2160  3180   	fcall	__Umul8_16
 10597  0192  0140               	movlb	0	; select bank0
 10598  0193  0821               	movf	?__Umul8_16+1,w
 10599  0194  00E1               	movwf	___flmul@temp+1
 10600  0195  0820               	movf	?__Umul8_16,w
 10601  0196  00E0               	movwf	___flmul@temp
 10602  0197  0860               	movf	___flmul@temp,w
 10603  0198  07DC               	addwf	___flmul@prod,f
 10604  0199  0861               	movf	___flmul@temp+1,w
 10605  019A  3DDD               	addwfc	___flmul@prod+1,f
 10606  019B  3000               	movlw	0
 10607  019C  3DDE               	addwfc	___flmul@prod+2,f
 10608  019D  3DDF               	addwfc	___flmul@prod+3,f
 10609  019E  084A               	movf	___flmul@b+2,w
 10610  019F  00D0               	movwf	??___flmul
 10611  01A0  0850               	movf	??___flmul,w
 10612  01A1  00A0               	movwf	__Umul8_16@multiplicand
 10613  01A2  084D               	movf	___flmul@a+1,w
 10614  01A3  3189  2160  3180   	fcall	__Umul8_16
 10615  01A6  0140               	movlb	0	; select bank0
 10616  01A7  0821               	movf	?__Umul8_16+1,w
 10617  01A8  00E1               	movwf	___flmul@temp+1
 10618  01A9  0820               	movf	?__Umul8_16,w
 10619  01AA  00E0               	movwf	___flmul@temp
 10620  01AB  0860               	movf	___flmul@temp,w
 10621  01AC  07DC               	addwf	___flmul@prod,f
 10622  01AD  0861               	movf	___flmul@temp+1,w
 10623  01AE  3DDD               	addwfc	___flmul@prod+1,f
 10624  01AF  3000               	movlw	0
 10625  01B0  3DDE               	addwfc	___flmul@prod+2,f
 10626  01B1  3DDF               	addwfc	___flmul@prod+3,f
 10627  01B2  084A               	movf	___flmul@b+2,w
 10628  01B3  00D0               	movwf	??___flmul
 10629  01B4  0850               	movf	??___flmul,w
 10630  01B5  00A0               	movwf	__Umul8_16@multiplicand
 10631  01B6  084E               	movf	___flmul@a+2,w
 10632  01B7  3189  2160  3180   	fcall	__Umul8_16
 10633  01BA  0140               	movlb	0	; select bank0
 10634  01BB  0821               	movf	?__Umul8_16+1,w
 10635  01BC  00E1               	movwf	___flmul@temp+1
 10636  01BD  0820               	movf	?__Umul8_16,w
 10637  01BE  00E0               	movwf	___flmul@temp
 10638  01BF  0860               	movf	___flmul@temp,w
 10639  01C0  00D0               	movwf	??___flmul
 10640  01C1  0861               	movf	___flmul@temp+1,w
 10641  01C2  00D1               	movwf	??___flmul+1
 10642  01C3  01D2               	clrf	??___flmul+2
 10643  01C4  01D3               	clrf	??___flmul+3
 10644  01C5  3008               	movlw	8
 10645  01C6                     u4445:	
 10646  01C6  35D0               	lslf	??___flmul,f
 10647  01C7  0DD1               	rlf	??___flmul+1,f
 10648  01C8  0DD2               	rlf	??___flmul+2,f
 10649  01C9  0DD3               	rlf	??___flmul+3,f
 10650  01CA  0B89               	decfsz	9,f
 10651  01CB  29C6               	goto	u4445
 10652  01CC  0850               	movf	??___flmul,w
 10653  01CD  07DC               	addwf	___flmul@prod,f
 10654  01CE  0851               	movf	??___flmul+1,w
 10655  01CF  3DDD               	addwfc	___flmul@prod+1,f
 10656  01D0  0852               	movf	??___flmul+2,w
 10657  01D1  3DDE               	addwfc	___flmul@prod+2,f
 10658  01D2  0853               	movf	??___flmul+3,w
 10659  01D3  3DDF               	addwfc	___flmul@prod+3,f
 10660  01D4  0857               	movf	___flmul@grs,w
 10661  01D5  00D0               	movwf	??___flmul
 10662  01D6  0858               	movf	___flmul@grs+1,w
 10663  01D7  00D1               	movwf	??___flmul+1
 10664  01D8  0859               	movf	___flmul@grs+2,w
 10665  01D9  00D2               	movwf	??___flmul+2
 10666  01DA  085A               	movf	___flmul@grs+3,w
 10667  01DB  00D3               	movwf	??___flmul+3
 10668  01DC  3018               	movlw	24
 10669  01DD                     u4455:	
 10670  01DD  36D3               	lsrf	??___flmul+3,f
 10671  01DE  0CD2               	rrf	??___flmul+2,f
 10672  01DF  0CD1               	rrf	??___flmul+1,f
 10673  01E0  0CD0               	rrf	??___flmul,f
 10674  01E1  0B89               	decfsz	9,f
 10675  01E2  29DD               	goto	u4455
 10676  01E3  0850               	movf	??___flmul,w
 10677  01E4  07DC               	addwf	___flmul@prod,f
 10678  01E5  0851               	movf	??___flmul+1,w
 10679  01E6  3DDD               	addwfc	___flmul@prod+1,f
 10680  01E7  0852               	movf	??___flmul+2,w
 10681  01E8  3DDE               	addwfc	___flmul@prod+2,f
 10682  01E9  0853               	movf	??___flmul+3,w
 10683  01EA  3DDF               	addwfc	___flmul@prod+3,f
 10684  01EB  3008               	movlw	8
 10685  01EC                     u4465:	
 10686  01EC  35D7               	lslf	___flmul@grs,f
 10687  01ED  0DD8               	rlf	___flmul@grs+1,f
 10688  01EE  0DD9               	rlf	___flmul@grs+2,f
 10689  01EF  0DDA               	rlf	___flmul@grs+3,f
 10690  01F0  0B89               	decfsz	9,f
 10691  01F1  29EC               	goto	u4465
 10692  01F2  085B               	movf	___flmul@bexp,w
 10693  01F3  0756               	addwf	___flmul@aexp,w
 10694  01F4  00D0               	movwf	??___flmul
 10695  01F5  01D1               	clrf	??___flmul+1
 10696  01F6  0DD1               	rlf	??___flmul+1,f
 10697  01F7  0850               	movf	??___flmul,w
 10698  01F8  3E82               	addlw	130
 10699  01F9  00E0               	movwf	___flmul@temp
 10700  01FA  30FF               	movlw	255
 10701  01FB  3D51               	addwfc	??___flmul+1,w
 10702  01FC  00E1               	movwf	___flmul@temp+1
 10703  01FD                     l4934:	
 10704  01FD  1BDE               	btfsc	___flmul@prod+2,7
 10705  01FE  2A14               	goto	l4936
 10706  01FF  3001               	movlw	1
 10707  0200                     u4475:	
 10708  0200  35DC               	lslf	___flmul@prod,f
 10709  0201  0DDD               	rlf	___flmul@prod+1,f
 10710  0202  0DDE               	rlf	___flmul@prod+2,f
 10711  0203  0DDF               	rlf	___flmul@prod+3,f
 10712  0204  0B89               	decfsz	9,f
 10713  0205  2A00               	goto	u4475
 10714  0206  1BDA               	btfsc	___flmul@grs+3,7
 10715  0207  145C               	bsf	___flmul@prod,0
 10716  0208  3001               	movlw	1
 10717  0209                     u4495:	
 10718  0209  35D7               	lslf	___flmul@grs,f
 10719  020A  0DD8               	rlf	___flmul@grs+1,f
 10720  020B  0DD9               	rlf	___flmul@grs+2,f
 10721  020C  0DDA               	rlf	___flmul@grs+3,f
 10722  020D  0B89               	decfsz	9,f
 10723  020E  2A09               	goto	u4495
 10724  020F  30FF               	movlw	255
 10725  0210  07E0               	addwf	___flmul@temp,f
 10726  0211  30FF               	movlw	255
 10727  0212  3DE1               	addwfc	___flmul@temp+1,f
 10728  0213  29FD               	goto	l4934
 10729  0214                     l4936:	
 10730  0214  01D6               	clrf	___flmul@aexp
 10731  0215  1FDA               	btfss	___flmul@grs+3,7
 10732  0216  2A2D               	goto	l4946
 10733  0217  30FF               	movlw	255
 10734  0218  0557               	andwf	___flmul@grs,w
 10735  0219  00D0               	movwf	??___flmul
 10736  021A  30FF               	movlw	255
 10737  021B  0558               	andwf	___flmul@grs+1,w
 10738  021C  00D1               	movwf	??___flmul+1
 10739  021D  30FF               	movlw	255
 10740  021E  0559               	andwf	___flmul@grs+2,w
 10741  021F  00D2               	movwf	??___flmul+2
 10742  0220  307F               	movlw	127
 10743  0221  055A               	andwf	___flmul@grs+3,w
 10744  0222  00D3               	movwf	??___flmul+3
 10745  0223  0853               	movf	??___flmul+3,w
 10746  0224  0452               	iorwf	??___flmul+2,w
 10747  0225  0451               	iorwf	??___flmul+1,w
 10748  0226  0450               	iorwf	??___flmul,w
 10749  0227  1903               	skipnz
 10750  0228  185C               	btfsc	___flmul@prod,0
 10751  0229  2A2B               	goto	l4942
 10752  022A  2A2D               	goto	l4946
 10753  022B                     l4942:	
 10754  022B  01D6               	clrf	___flmul@aexp
 10755  022C  0AD6               	incf	___flmul@aexp,f
 10756  022D                     l4946:	
 10757  022D  0856               	movf	___flmul@aexp,w
 10758  022E  1903               	btfsc	3,2
 10759  022F  2A56               	goto	l4956
 10760  0230  3001               	movlw	1
 10761  0231  07DC               	addwf	___flmul@prod,f
 10762  0232  3000               	movlw	0
 10763  0233  3DDD               	addwfc	___flmul@prod+1,f
 10764  0234  3000               	movlw	0
 10765  0235  3DDE               	addwfc	___flmul@prod+2,f
 10766  0236  3000               	movlw	0
 10767  0237  3DDF               	addwfc	___flmul@prod+3,f
 10768  0238  1C5F               	btfss	___flmul@prod+3,0
 10769  0239  2A56               	goto	l4956
 10770  023A  085C               	movf	___flmul@prod,w
 10771  023B  00D0               	movwf	??___flmul
 10772  023C  085D               	movf	___flmul@prod+1,w
 10773  023D  00D1               	movwf	??___flmul+1
 10774  023E  085E               	movf	___flmul@prod+2,w
 10775  023F  00D2               	movwf	??___flmul+2
 10776  0240  085F               	movf	___flmul@prod+3,w
 10777  0241  00D3               	movwf	??___flmul+3
 10778  0242  3001               	movlw	1
 10779  0243  00D4               	movwf	??___flmul+4
 10780  0244                     u4565:	
 10781  0244  37D3               	asrf	??___flmul+3,f
 10782  0245  0CD2               	rrf	??___flmul+2,f
 10783  0246  0CD1               	rrf	??___flmul+1,f
 10784  0247  0CD0               	rrf	??___flmul,f
 10785  0248  0BD4               	decfsz	??___flmul+4,f
 10786  0249  2A44               	goto	u4565
 10787  024A  0853               	movf	??___flmul+3,w
 10788  024B  00DF               	movwf	___flmul@prod+3
 10789  024C  0852               	movf	??___flmul+2,w
 10790  024D  00DE               	movwf	___flmul@prod+2
 10791  024E  0851               	movf	??___flmul+1,w
 10792  024F  00DD               	movwf	___flmul@prod+1
 10793  0250  0850               	movf	??___flmul,w
 10794  0251  00DC               	movwf	___flmul@prod
 10795  0252  3001               	movlw	1
 10796  0253  07E0               	addwf	___flmul@temp,f
 10797  0254  3000               	movlw	0
 10798  0255  3DE1               	addwfc	___flmul@temp+1,f
 10799  0256                     l4956:	
 10800  0256  0861               	movf	___flmul@temp+1,w
 10801  0257  3A80               	xorlw	128
 10802  0258  00D0               	movwf	??___flmul
 10803  0259  3080               	movlw	128
 10804  025A  0250               	subwf	??___flmul,w
 10805  025B  1D03               	skipz
 10806  025C  2A5F               	goto	u4575
 10807  025D  30FF               	movlw	255
 10808  025E  0260               	subwf	___flmul@temp,w
 10809  025F                     u4575:	
 10810  025F  1C03               	skipc
 10811  0260  2A6B               	goto	l4960
 10812  0261  307F               	movlw	127
 10813  0262  0140               	movlb	0	; select bank0
 10814  0263  00DF               	movwf	___flmul@prod+3
 10815  0264  3080               	movlw	128
 10816  0265  00DE               	movwf	___flmul@prod+2
 10817  0266  3000               	movlw	0
 10818  0267  00DD               	movwf	___flmul@prod+1
 10819  0268  3000               	movlw	0
 10820  0269  00DC               	movwf	___flmul@prod
 10821  026A  2A95               	goto	l1603
 10822  026B                     l4960:	
 10823  026B  0140               	movlb	0	; select bank0
 10824  026C  0861               	movf	___flmul@temp+1,w
 10825  026D  3A80               	xorlw	128
 10826  026E  00D0               	movwf	??___flmul
 10827  026F  3080               	movlw	128
 10828  0270  0250               	subwf	??___flmul,w
 10829  0271  1D03               	skipz
 10830  0272  2A75               	goto	u4585
 10831  0273  3001               	movlw	1
 10832  0274  0260               	subwf	___flmul@temp,w
 10833  0275                     u4585:	
 10834  0275  1803               	skipnc
 10835  0276  2A82               	goto	l4966
 10836  0277  3000               	movlw	0
 10837  0278  0140               	movlb	0	; select bank0
 10838  0279  00DF               	movwf	___flmul@prod+3
 10839  027A  3000               	movlw	0
 10840  027B  00DE               	movwf	___flmul@prod+2
 10841  027C  3000               	movlw	0
 10842  027D  00DD               	movwf	___flmul@prod+1
 10843  027E  3000               	movlw	0
 10844  027F  00DC               	movwf	___flmul@prod
 10845  0280  01D5               	clrf	___flmul@sign
 10846  0281  2A95               	goto	l1603
 10847  0282                     l4966:	
 10848  0282  0140               	movlb	0	; select bank0
 10849  0283  0860               	movf	___flmul@temp,w
 10850  0284  00D0               	movwf	??___flmul
 10851  0285  0850               	movf	??___flmul,w
 10852  0286  00DB               	movwf	___flmul@bexp
 10853  0287  30FF               	movlw	255
 10854  0288  05DC               	andwf	___flmul@prod,f
 10855  0289  30FF               	movlw	255
 10856  028A  05DD               	andwf	___flmul@prod+1,f
 10857  028B  307F               	movlw	127
 10858  028C  05DE               	andwf	___flmul@prod+2,f
 10859  028D  3000               	movlw	0
 10860  028E  05DF               	andwf	___flmul@prod+3,f
 10861  028F  185B               	btfsc	___flmul@bexp,0
 10862  0290  17DE               	bsf	___flmul@prod+2,7
 10863  0291  365B               	lsrf	___flmul@bexp,w
 10864  0292  00D0               	movwf	??___flmul
 10865  0293  0850               	movf	??___flmul,w
 10866  0294  00DF               	movwf	___flmul@prod+3
 10867  0295                     l1603:	
 10868  0295  0855               	movf	___flmul@sign,w
 10869  0296  00D0               	movwf	??___flmul
 10870  0297  0850               	movf	??___flmul,w
 10871  0298  04DF               	iorwf	___flmul@prod+3,f
 10872  0299  085F               	movf	___flmul@prod+3,w
 10873  029A  00CB               	movwf	?___flmul+3
 10874  029B  085E               	movf	___flmul@prod+2,w
 10875  029C  00CA               	movwf	?___flmul+2
 10876  029D  085D               	movf	___flmul@prod+1,w
 10877  029E  00C9               	movwf	?___flmul+1
 10878  029F  085C               	movf	___flmul@prod,w
 10879  02A0  00C8               	movwf	?___flmul
 10880  02A1  0008               	return
 10881  02A2                     __end_of___flmul:	
 10882                           
 10883                           	psect	text20
 10884  0960                     __ptext20:	
 10885 ;; *************** function __Umul8_16 *****************
 10886 ;; Defined at:
 10887 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul8_16.c"
 10888 ;; Parameters:    Size  Location     Type
 10889 ;;  multiplier      1    wreg     unsigned char 
 10890 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 10891 ;; Auto vars:     Size  Location     Type
 10892 ;;  multiplier      1    8[BANK0 ] unsigned char 
 10893 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 10894 ;;  product         2    4[BANK0 ] unsigned int 
 10895 ;; Return value:  Size  Location     Type
 10896 ;;                  2    0[BANK0 ] unsigned int 
 10897 ;; Registers used:
 10898 ;;		wreg, status,2, status,0
 10899 ;; Tracked objects:
 10900 ;;		On entry : 0/0
 10901 ;;		On exit  : 0/0
 10902 ;;		Unchanged: 0/0
 10903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10904 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10905 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10906 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10907 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10908 ;;Total ram usage:        9 bytes
 10909 ;; Hardware stack levels used:    1
 10910 ;; Hardware stack levels required when called:    4
 10911 ;; This function calls:
 10912 ;;		Nothing
 10913 ;; This function is called by:
 10914 ;;		___flmul
 10915 ;; This function uses a non-reentrant model
 10916 ;;
 10917                           
 10918                           
 10919                           ;psect for function __Umul8_16
 10920  0960                     __Umul8_16:	
 10921                           
 10922                           ;incstack = 0
 10923                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10924                           ;__Umul8_16@multiplier stored from wreg
 10925  0960  0140               	movlb	0	; select bank0
 10926  0961  00A8               	movwf	__Umul8_16@multiplier
 10927  0962  01A4               	clrf	__Umul8_16@product
 10928  0963  01A5               	clrf	__Umul8_16@product+1
 10929  0964  0820               	movf	__Umul8_16@multiplicand,w
 10930  0965  00A2               	movwf	??__Umul8_16
 10931  0966  01A3               	clrf	??__Umul8_16+1
 10932  0967  0822               	movf	??__Umul8_16,w
 10933  0968  00A6               	movwf	__Umul8_16@word_mpld
 10934  0969  0823               	movf	??__Umul8_16+1,w
 10935  096A  00A7               	movwf	__Umul8_16@word_mpld+1
 10936  096B                     l4716:	
 10937  096B  1C28               	btfss	__Umul8_16@multiplier,0
 10938  096C  2971               	goto	l1648
 10939  096D  0826               	movf	__Umul8_16@word_mpld,w
 10940  096E  07A4               	addwf	__Umul8_16@product,f
 10941  096F  0827               	movf	__Umul8_16@word_mpld+1,w
 10942  0970  3DA5               	addwfc	__Umul8_16@product+1,f
 10943  0971                     l1648:	
 10944  0971  3001               	movlw	1
 10945  0972                     u4245:	
 10946  0972  35A6               	lslf	__Umul8_16@word_mpld,f
 10947  0973  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 10948  0974  0B89               	decfsz	9,f
 10949  0975  2972               	goto	u4245
 10950  0976  1003               	clrc
 10951  0977  0CA8               	rrf	__Umul8_16@multiplier,f
 10952  0978  0828               	movf	__Umul8_16@multiplier,w
 10953  0979  1D03               	btfss	3,2
 10954  097A  296B               	goto	l4716
 10955  097B  0825               	movf	__Umul8_16@product+1,w
 10956  097C  00A1               	movwf	?__Umul8_16+1
 10957  097D  0824               	movf	__Umul8_16@product,w
 10958  097E  00A0               	movwf	?__Umul8_16
 10959  097F  0008               	return
 10960  0980                     __end_of__Umul8_16:	
 10961                           
 10962                           	psect	text21
 10963  0455                     __ptext21:	
 10964 ;; *************** function ___fldiv *****************
 10965 ;; Defined at:
 10966 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
 10967 ;; Parameters:    Size  Location     Type
 10968 ;;  a               4   14[BANK0 ] unsigned int 
 10969 ;;  b               4   18[BANK0 ] unsigned int 
 10970 ;; Auto vars:     Size  Location     Type
 10971 ;;  grs             4   34[BANK0 ] unsigned long 
 10972 ;;  rem             4   27[BANK0 ] unsigned long 
 10973 ;;  new_exp         2   32[BANK0 ] int 
 10974 ;;  aexp            1   39[BANK0 ] unsigned char 
 10975 ;;  bexp            1   38[BANK0 ] unsigned char 
 10976 ;;  sign            1   31[BANK0 ] unsigned char 
 10977 ;; Return value:  Size  Location     Type
 10978 ;;                  4   14[BANK0 ] unsigned char 
 10979 ;; Registers used:
 10980 ;;		wreg, status,2, status,0
 10981 ;; Tracked objects:
 10982 ;;		On entry : 0/0
 10983 ;;		On exit  : 0/0
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10986 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10987 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10988 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10989 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10990 ;;Total ram usage:       26 bytes
 10991 ;; Hardware stack levels used:    1
 10992 ;; Hardware stack levels required when called:    4
 10993 ;; This function calls:
 10994 ;;		Nothing
 10995 ;; This function is called by:
 10996 ;;		_LED_setColor
 10997 ;; This function uses a non-reentrant model
 10998 ;;
 10999                           
 11000                           
 11001                           ;psect for function ___fldiv
 11002  0455                     ___fldiv:	
 11003                           
 11004                           ;incstack = 0
 11005                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11006  0455  0140               	movlb	0	; select bank0
 11007  0456  0835               	movf	___fldiv@b+3,w
 11008  0457  3980               	andlw	128
 11009  0458  00B6               	movwf	??___fldiv
 11010  0459  0836               	movf	??___fldiv,w
 11011  045A  00BF               	movwf	___fldiv@sign
 11012  045B  3535               	lslf	___fldiv@b+3,w
 11013  045C  00B6               	movwf	??___fldiv
 11014  045D  0836               	movf	??___fldiv,w
 11015  045E  00C6               	movwf	___fldiv@bexp
 11016  045F  1BB4               	btfsc	___fldiv@b+2,7
 11017  0460  1446               	bsf	___fldiv@bexp,0
 11018  0461  0846               	movf	___fldiv@bexp,w
 11019  0462  1903               	btfsc	3,2
 11020  0463  2C72               	goto	l3552
 11021  0464  0A46               	incf	___fldiv@bexp,w
 11022  0465  1D03               	btfss	3,2
 11023  0466  2C6F               	goto	l3548
 11024  0467  3000               	movlw	0
 11025  0468  00B5               	movwf	___fldiv@b+3
 11026  0469  3000               	movlw	0
 11027  046A  00B4               	movwf	___fldiv@b+2
 11028  046B  3000               	movlw	0
 11029  046C  00B3               	movwf	___fldiv@b+1
 11030  046D  3000               	movlw	0
 11031  046E  00B2               	movwf	___fldiv@b
 11032  046F                     l3548:	
 11033  046F  17B4               	bsf	___fldiv@b+2,7
 11034  0470  01B5               	clrf	___fldiv@b+3
 11035  0471  2C7A               	goto	l3554
 11036  0472                     l3552:	
 11037  0472  3000               	movlw	0
 11038  0473  00B5               	movwf	___fldiv@b+3
 11039  0474  3000               	movlw	0
 11040  0475  00B4               	movwf	___fldiv@b+2
 11041  0476  3000               	movlw	0
 11042  0477  00B3               	movwf	___fldiv@b+1
 11043  0478  3000               	movlw	0
 11044  0479  00B2               	movwf	___fldiv@b
 11045  047A                     l3554:	
 11046  047A  0831               	movf	___fldiv@a+3,w
 11047  047B  3980               	andlw	128
 11048  047C  00B6               	movwf	??___fldiv
 11049  047D  0836               	movf	??___fldiv,w
 11050  047E  06BF               	xorwf	___fldiv@sign,f
 11051  047F  3531               	lslf	___fldiv@a+3,w
 11052  0480  00B6               	movwf	??___fldiv
 11053  0481  0836               	movf	??___fldiv,w
 11054  0482  00C7               	movwf	___fldiv@aexp
 11055  0483  1BB0               	btfsc	___fldiv@a+2,7
 11056  0484  1447               	bsf	___fldiv@aexp,0
 11057  0485  0847               	movf	___fldiv@aexp,w
 11058  0486  1903               	btfsc	3,2
 11059  0487  2C96               	goto	l3572
 11060  0488  0A47               	incf	___fldiv@aexp,w
 11061  0489  1D03               	btfss	3,2
 11062  048A  2C93               	goto	l3568
 11063  048B  3000               	movlw	0
 11064  048C  00B1               	movwf	___fldiv@a+3
 11065  048D  3000               	movlw	0
 11066  048E  00B0               	movwf	___fldiv@a+2
 11067  048F  3000               	movlw	0
 11068  0490  00AF               	movwf	___fldiv@a+1
 11069  0491  3000               	movlw	0
 11070  0492  00AE               	movwf	___fldiv@a
 11071  0493                     l3568:	
 11072  0493  17B0               	bsf	___fldiv@a+2,7
 11073  0494  01B1               	clrf	___fldiv@a+3
 11074  0495  2C9E               	goto	l1551
 11075  0496                     l3572:	
 11076  0496  3000               	movlw	0
 11077  0497  00B1               	movwf	___fldiv@a+3
 11078  0498  3000               	movlw	0
 11079  0499  00B0               	movwf	___fldiv@a+2
 11080  049A  3000               	movlw	0
 11081  049B  00AF               	movwf	___fldiv@a+1
 11082  049C  3000               	movlw	0
 11083  049D  00AE               	movwf	___fldiv@a
 11084  049E                     l1551:	
 11085  049E  0831               	movf	___fldiv@a+3,w
 11086  049F  0430               	iorwf	___fldiv@a+2,w
 11087  04A0  042F               	iorwf	___fldiv@a+1,w
 11088  04A1  042E               	iorwf	___fldiv@a,w
 11089  04A2  1D03               	skipz
 11090  04A3  2CBD               	goto	l3582
 11091  04A4  3000               	movlw	0
 11092  04A5  00B5               	movwf	___fldiv@b+3
 11093  04A6  3000               	movlw	0
 11094  04A7  00B4               	movwf	___fldiv@b+2
 11095  04A8  3000               	movlw	0
 11096  04A9  00B3               	movwf	___fldiv@b+1
 11097  04AA  3000               	movlw	0
 11098  04AB  00B2               	movwf	___fldiv@b
 11099  04AC  3080               	movlw	128
 11100  04AD  04B4               	iorwf	___fldiv@b+2,f
 11101  04AE  307F               	movlw	127
 11102  04AF  04B5               	iorwf	___fldiv@b+3,f
 11103  04B0                     L2:	
 11104  04B0  083F               	movf	___fldiv@sign,w
 11105  04B1  00B6               	movwf	??___fldiv
 11106  04B2  0836               	movf	??___fldiv,w
 11107  04B3  04B5               	iorwf	___fldiv@b+3,f
 11108  04B4  0835               	movf	___fldiv@b+3,w
 11109  04B5  00B1               	movwf	?___fldiv+3
 11110  04B6  0834               	movf	___fldiv@b+2,w
 11111  04B7  00B0               	movwf	?___fldiv+2
 11112  04B8  0833               	movf	___fldiv@b+1,w
 11113  04B9  00AF               	movwf	?___fldiv+1
 11114  04BA  0832               	movf	___fldiv@b,w
 11115  04BB  00AE               	movwf	?___fldiv
 11116  04BC  0008               	return
 11117  04BD                     l3582:	
 11118  04BD  0846               	movf	___fldiv@bexp,w
 11119  04BE  1D03               	btfss	3,2
 11120  04BF  2CC9               	goto	l3588
 11121  04C0  3000               	movlw	0
 11122  04C1  00B1               	movwf	?___fldiv+3
 11123  04C2  3000               	movlw	0
 11124  04C3  00B0               	movwf	?___fldiv+2
 11125  04C4  3000               	movlw	0
 11126  04C5  00AF               	movwf	?___fldiv+1
 11127  04C6  3000               	movlw	0
 11128  04C7  00AE               	movwf	?___fldiv
 11129  04C8  0008               	return
 11130  04C9                     l3588:	
 11131  04C9  0846               	movf	___fldiv@bexp,w
 11132  04CA  00B6               	movwf	??___fldiv
 11133  04CB  01B7               	clrf	??___fldiv+1
 11134  04CC  0837               	movf	??___fldiv+1,w
 11135  04CD  00B9               	movwf	??___fldiv+3
 11136  04CE  0847               	movf	___fldiv@aexp,w
 11137  04CF  0236               	subwf	??___fldiv,w
 11138  04D0  00B8               	movwf	??___fldiv+2
 11139  04D1  1C03               	skipc
 11140  04D2  03B9               	decf	??___fldiv+3,f
 11141  04D3  0838               	movf	??___fldiv+2,w
 11142  04D4  3E7F               	addlw	127
 11143  04D5  00C0               	movwf	___fldiv@new_exp
 11144  04D6  3000               	movlw	0
 11145  04D7  3D39               	addwfc	??___fldiv+3,w
 11146  04D8  00C1               	movwf	___fldiv@new_exp+1
 11147  04D9  0835               	movf	___fldiv@b+3,w
 11148  04DA  00BE               	movwf	___fldiv@rem+3
 11149  04DB  0834               	movf	___fldiv@b+2,w
 11150  04DC  00BD               	movwf	___fldiv@rem+2
 11151  04DD  0833               	movf	___fldiv@b+1,w
 11152  04DE  00BC               	movwf	___fldiv@rem+1
 11153  04DF  0832               	movf	___fldiv@b,w
 11154  04E0  00BB               	movwf	___fldiv@rem
 11155  04E1  3000               	movlw	0
 11156  04E2  00B5               	movwf	___fldiv@b+3
 11157  04E3  3000               	movlw	0
 11158  04E4  00B4               	movwf	___fldiv@b+2
 11159  04E5  3000               	movlw	0
 11160  04E6  00B3               	movwf	___fldiv@b+1
 11161  04E7  3000               	movlw	0
 11162  04E8  00B2               	movwf	___fldiv@b
 11163  04E9  3000               	movlw	0
 11164  04EA  00C5               	movwf	___fldiv@grs+3
 11165  04EB  3000               	movlw	0
 11166  04EC  00C4               	movwf	___fldiv@grs+2
 11167  04ED  3000               	movlw	0
 11168  04EE  00C3               	movwf	___fldiv@grs+1
 11169  04EF  3000               	movlw	0
 11170  04F0  00C2               	movwf	___fldiv@grs
 11171  04F1  01C7               	clrf	___fldiv@aexp
 11172  04F2                     l3616:	
 11173  04F2  301A               	movlw	26
 11174  04F3  0247               	subwf	___fldiv@aexp,w
 11175  04F4  1803               	btfsc	3,0
 11176  04F5  2D2E               	goto	l3618
 11177  04F6  0847               	movf	___fldiv@aexp,w
 11178  04F7  1903               	btfsc	3,2
 11179  04F8  2D10               	goto	l3608
 11180  04F9  3001               	movlw	1
 11181  04FA                     u2575:	
 11182  04FA  35BB               	lslf	___fldiv@rem,f
 11183  04FB  0DBC               	rlf	___fldiv@rem+1,f
 11184  04FC  0DBD               	rlf	___fldiv@rem+2,f
 11185  04FD  0DBE               	rlf	___fldiv@rem+3,f
 11186  04FE  0B89               	decfsz	9,f
 11187  04FF  2CFA               	goto	u2575
 11188  0500  3001               	movlw	1
 11189  0501                     u2585:	
 11190  0501  35B2               	lslf	___fldiv@b,f
 11191  0502  0DB3               	rlf	___fldiv@b+1,f
 11192  0503  0DB4               	rlf	___fldiv@b+2,f
 11193  0504  0DB5               	rlf	___fldiv@b+3,f
 11194  0505  0B89               	decfsz	9,f
 11195  0506  2D01               	goto	u2585
 11196  0507  1BC5               	btfsc	___fldiv@grs+3,7
 11197  0508  1432               	bsf	___fldiv@b,0
 11198  0509  3001               	movlw	1
 11199  050A                     u2605:	
 11200  050A  35C2               	lslf	___fldiv@grs,f
 11201  050B  0DC3               	rlf	___fldiv@grs+1,f
 11202  050C  0DC4               	rlf	___fldiv@grs+2,f
 11203  050D  0DC5               	rlf	___fldiv@grs+3,f
 11204  050E  0B89               	decfsz	9,f
 11205  050F  2D0A               	goto	u2605
 11206  0510                     l3608:	
 11207  0510  0831               	movf	___fldiv@a+3,w
 11208  0511  023E               	subwf	___fldiv@rem+3,w
 11209  0512  1D03               	skipz
 11210  0513  2D1E               	goto	u2615
 11211  0514  0830               	movf	___fldiv@a+2,w
 11212  0515  023D               	subwf	___fldiv@rem+2,w
 11213  0516  1D03               	skipz
 11214  0517  2D1E               	goto	u2615
 11215  0518  082F               	movf	___fldiv@a+1,w
 11216  0519  023C               	subwf	___fldiv@rem+1,w
 11217  051A  1D03               	skipz
 11218  051B  2D1E               	goto	u2615
 11219  051C  082E               	movf	___fldiv@a,w
 11220  051D  023B               	subwf	___fldiv@rem,w
 11221  051E                     u2615:	
 11222  051E  1C03               	skipc
 11223  051F  2D29               	goto	l3614
 11224  0520  1745               	bsf	___fldiv@grs+3,6
 11225  0521  082E               	movf	___fldiv@a,w
 11226  0522  02BB               	subwf	___fldiv@rem,f
 11227  0523  082F               	movf	___fldiv@a+1,w
 11228  0524  3BBC               	subwfb	___fldiv@rem+1,f
 11229  0525  0830               	movf	___fldiv@a+2,w
 11230  0526  3BBD               	subwfb	___fldiv@rem+2,f
 11231  0527  0831               	movf	___fldiv@a+3,w
 11232  0528  3BBE               	subwfb	___fldiv@rem+3,f
 11233  0529                     l3614:	
 11234  0529  3001               	movlw	1
 11235  052A  00B6               	movwf	??___fldiv
 11236  052B  0836               	movf	??___fldiv,w
 11237  052C  07C7               	addwf	___fldiv@aexp,f
 11238  052D  2CF2               	goto	l3616
 11239  052E                     l3618:	
 11240  052E  083E               	movf	___fldiv@rem+3,w
 11241  052F  043D               	iorwf	___fldiv@rem+2,w
 11242  0530  043C               	iorwf	___fldiv@rem+1,w
 11243  0531  043B               	iorwf	___fldiv@rem,w
 11244  0532  1D03               	btfss	3,2
 11245  0533  1442               	bsf	___fldiv@grs,0
 11246  0534                     l3632:	
 11247  0534  1BB4               	btfsc	___fldiv@b+2,7
 11248  0535  2D4B               	goto	l3634
 11249  0536  3001               	movlw	1
 11250  0537                     u2645:	
 11251  0537  35B2               	lslf	___fldiv@b,f
 11252  0538  0DB3               	rlf	___fldiv@b+1,f
 11253  0539  0DB4               	rlf	___fldiv@b+2,f
 11254  053A  0DB5               	rlf	___fldiv@b+3,f
 11255  053B  0B89               	decfsz	9,f
 11256  053C  2D37               	goto	u2645
 11257  053D  1BC5               	btfsc	___fldiv@grs+3,7
 11258  053E  1432               	bsf	___fldiv@b,0
 11259  053F  3001               	movlw	1
 11260  0540                     u2665:	
 11261  0540  35C2               	lslf	___fldiv@grs,f
 11262  0541  0DC3               	rlf	___fldiv@grs+1,f
 11263  0542  0DC4               	rlf	___fldiv@grs+2,f
 11264  0543  0DC5               	rlf	___fldiv@grs+3,f
 11265  0544  0B89               	decfsz	9,f
 11266  0545  2D40               	goto	u2665
 11267  0546  30FF               	movlw	255
 11268  0547  07C0               	addwf	___fldiv@new_exp,f
 11269  0548  30FF               	movlw	255
 11270  0549  3DC1               	addwfc	___fldiv@new_exp+1,f
 11271  054A  2D34               	goto	l3632
 11272  054B                     l3634:	
 11273  054B  01C7               	clrf	___fldiv@aexp
 11274  054C  1FC5               	btfss	___fldiv@grs+3,7
 11275  054D  2D64               	goto	l3644
 11276  054E  30FF               	movlw	255
 11277  054F  0542               	andwf	___fldiv@grs,w
 11278  0550  00B6               	movwf	??___fldiv
 11279  0551  30FF               	movlw	255
 11280  0552  0543               	andwf	___fldiv@grs+1,w
 11281  0553  00B7               	movwf	??___fldiv+1
 11282  0554  30FF               	movlw	255
 11283  0555  0544               	andwf	___fldiv@grs+2,w
 11284  0556  00B8               	movwf	??___fldiv+2
 11285  0557  307F               	movlw	127
 11286  0558  0545               	andwf	___fldiv@grs+3,w
 11287  0559  00B9               	movwf	??___fldiv+3
 11288  055A  0839               	movf	??___fldiv+3,w
 11289  055B  0438               	iorwf	??___fldiv+2,w
 11290  055C  0437               	iorwf	??___fldiv+1,w
 11291  055D  0436               	iorwf	??___fldiv,w
 11292  055E  1903               	skipnz
 11293  055F  1832               	btfsc	___fldiv@b,0
 11294  0560  2D62               	goto	l3640
 11295  0561  2D64               	goto	l3644
 11296  0562                     l3640:	
 11297  0562  01C7               	clrf	___fldiv@aexp
 11298  0563  0AC7               	incf	___fldiv@aexp,f
 11299  0564                     l3644:	
 11300  0564  0847               	movf	___fldiv@aexp,w
 11301  0565  1903               	btfsc	3,2
 11302  0566  2D8D               	goto	l3654
 11303  0567  3001               	movlw	1
 11304  0568  07B2               	addwf	___fldiv@b,f
 11305  0569  3000               	movlw	0
 11306  056A  3DB3               	addwfc	___fldiv@b+1,f
 11307  056B  3000               	movlw	0
 11308  056C  3DB4               	addwfc	___fldiv@b+2,f
 11309  056D  3000               	movlw	0
 11310  056E  3DB5               	addwfc	___fldiv@b+3,f
 11311  056F  1C35               	btfss	___fldiv@b+3,0
 11312  0570  2D8D               	goto	l3654
 11313  0571  0832               	movf	___fldiv@b,w
 11314  0572  00B6               	movwf	??___fldiv
 11315  0573  0833               	movf	___fldiv@b+1,w
 11316  0574  00B7               	movwf	??___fldiv+1
 11317  0575  0834               	movf	___fldiv@b+2,w
 11318  0576  00B8               	movwf	??___fldiv+2
 11319  0577  0835               	movf	___fldiv@b+3,w
 11320  0578  00B9               	movwf	??___fldiv+3
 11321  0579  3001               	movlw	1
 11322  057A  00BA               	movwf	??___fldiv+4
 11323  057B                     u2735:	
 11324  057B  37B9               	asrf	??___fldiv+3,f
 11325  057C  0CB8               	rrf	??___fldiv+2,f
 11326  057D  0CB7               	rrf	??___fldiv+1,f
 11327  057E  0CB6               	rrf	??___fldiv,f
 11328  057F  0BBA               	decfsz	??___fldiv+4,f
 11329  0580  2D7B               	goto	u2735
 11330  0581  0839               	movf	??___fldiv+3,w
 11331  0582  00B5               	movwf	___fldiv@b+3
 11332  0583  0838               	movf	??___fldiv+2,w
 11333  0584  00B4               	movwf	___fldiv@b+2
 11334  0585  0837               	movf	??___fldiv+1,w
 11335  0586  00B3               	movwf	___fldiv@b+1
 11336  0587  0836               	movf	??___fldiv,w
 11337  0588  00B2               	movwf	___fldiv@b
 11338  0589  3001               	movlw	1
 11339  058A  07C0               	addwf	___fldiv@new_exp,f
 11340  058B  3000               	movlw	0
 11341  058C  3DC1               	addwfc	___fldiv@new_exp+1,f
 11342  058D                     l3654:	
 11343  058D  0841               	movf	___fldiv@new_exp+1,w
 11344  058E  3A80               	xorlw	128
 11345  058F  00B6               	movwf	??___fldiv
 11346  0590  3080               	movlw	128
 11347  0591  0236               	subwf	??___fldiv,w
 11348  0592  1D03               	skipz
 11349  0593  2D96               	goto	u2745
 11350  0594  30FF               	movlw	255
 11351  0595  0240               	subwf	___fldiv@new_exp,w
 11352  0596                     u2745:	
 11353  0596  1C03               	skipc
 11354  0597  2DA5               	goto	l1572
 11355  0598  30FF               	movlw	255
 11356  0599  0140               	movlb	0	; select bank0
 11357  059A  00C0               	movwf	___fldiv@new_exp
 11358  059B  3000               	movlw	0
 11359  059C  00C1               	movwf	___fldiv@new_exp+1
 11360  059D  3000               	movlw	0
 11361  059E  00B5               	movwf	___fldiv@b+3
 11362  059F  3000               	movlw	0
 11363  05A0  00B4               	movwf	___fldiv@b+2
 11364  05A1  3000               	movlw	0
 11365  05A2  00B3               	movwf	___fldiv@b+1
 11366  05A3  3000               	movlw	0
 11367  05A4  00B2               	movwf	___fldiv@b
 11368  05A5                     l1572:	
 11369  05A5  0140               	movlb	0	; select bank0
 11370  05A6  0841               	movf	___fldiv@new_exp+1,w
 11371  05A7  3A80               	xorlw	128
 11372  05A8  00B6               	movwf	??___fldiv
 11373  05A9  3080               	movlw	128
 11374  05AA  0236               	subwf	??___fldiv,w
 11375  05AB  1D03               	skipz
 11376  05AC  2DAF               	goto	u2755
 11377  05AD  3001               	movlw	1
 11378  05AE  0240               	subwf	___fldiv@new_exp,w
 11379  05AF                     u2755:	
 11380  05AF  1803               	skipnc
 11381  05B0  2DBD               	goto	l1573
 11382  05B1  0140               	movlb	0	; select bank0
 11383  05B2  01C0               	clrf	___fldiv@new_exp
 11384  05B3  01C1               	clrf	___fldiv@new_exp+1
 11385  05B4  3000               	movlw	0
 11386  05B5  00B5               	movwf	___fldiv@b+3
 11387  05B6  3000               	movlw	0
 11388  05B7  00B4               	movwf	___fldiv@b+2
 11389  05B8  3000               	movlw	0
 11390  05B9  00B3               	movwf	___fldiv@b+1
 11391  05BA  3000               	movlw	0
 11392  05BB  00B2               	movwf	___fldiv@b
 11393  05BC  01BF               	clrf	___fldiv@sign
 11394  05BD                     l1573:	
 11395  05BD  0140               	movlb	0	; select bank0
 11396  05BE  0840               	movf	___fldiv@new_exp,w
 11397  05BF  00B6               	movwf	??___fldiv
 11398  05C0  0836               	movf	??___fldiv,w
 11399  05C1  00C6               	movwf	___fldiv@bexp
 11400  05C2  1C46               	btfss	___fldiv@bexp,0
 11401  05C3  2DC6               	goto	l3668
 11402  05C4  17B4               	bsf	___fldiv@b+2,7
 11403  05C5  2DCA               	goto	l1575
 11404  05C6                     l3668:	
 11405  05C6  307F               	movlw	127
 11406  05C7  00B6               	movwf	??___fldiv
 11407  05C8  0836               	movf	??___fldiv,w
 11408  05C9  05B4               	andwf	___fldiv@b+2,f
 11409  05CA                     l1575:	
 11410  05CA  3646               	lsrf	___fldiv@bexp,w
 11411  05CB  00B6               	movwf	??___fldiv
 11412  05CC  0836               	movf	??___fldiv,w
 11413  05CD  00B5               	movwf	___fldiv@b+3
 11414  05CE  2CB0               	goto	L2
 11415  05CF                     __end_of___fldiv:	
 11416                           
 11417                           	psect	text22
 11418  07D7                     __ptext22:	
 11419 ;; *************** function _LED_init *****************
 11420 ;; Defined at:
 11421 ;;		line 12 in file "lights.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;		None
 11424 ;; Auto vars:     Size  Location     Type
 11425 ;;		None
 11426 ;; Return value:  Size  Location     Type
 11427 ;;                  1    wreg      void 
 11428 ;; Registers used:
 11429 ;;		wreg, status,2, status,0
 11430 ;; Tracked objects:
 11431 ;;		On entry : 0/0
 11432 ;;		On exit  : 0/0
 11433 ;;		Unchanged: 0/0
 11434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11439 ;;Total ram usage:        0 bytes
 11440 ;; Hardware stack levels used:    1
 11441 ;; Hardware stack levels required when called:    4
 11442 ;; This function calls:
 11443 ;;		Nothing
 11444 ;; This function is called by:
 11445 ;;		_main
 11446 ;; This function uses a non-reentrant model
 11447 ;;
 11448                           
 11449                           
 11450                           ;psect for function _LED_init
 11451  07D7                     _LED_init:	
 11452                           
 11453                           ;lights.c: 14:     RC7PPS = 0x09;
 11454                           
 11455                           ;incstack = 0
 11456                           ; Regs used in _LED_init: [wreg+status,2+status,0]
 11457  07D7  3009               	movlw	9
 11458  07D8  017E               	movlb	62	; select bank62
 11459  07D9  00A7               	movwf	39	;volatile
 11460                           
 11461                           ;lights.c: 16:     RC6PPS = 0x0A;
 11462  07DA  300A               	movlw	10
 11463  07DB  00A6               	movwf	38	;volatile
 11464                           
 11465                           ;lights.c: 18:     RC3PPS = 0x0B;
 11466  07DC  300B               	movlw	11
 11467  07DD  00A3               	movwf	35	;volatile
 11468                           
 11469                           ;lights.c: 20:     RC4PPS = 0x0C;
 11470  07DE  300C               	movlw	12
 11471  07DF  00A4               	movwf	36	;volatile
 11472                           
 11473                           ;lights.c: 26:     CCP1CONbits.MODE = 0b1100;
 11474  07E0  0146               	movlb	6	; select bank6
 11475  07E1  080E               	movf	14,w	;volatile
 11476  07E2  39F0               	andlw	-16
 11477  07E3  380C               	iorlw	12
 11478  07E4  008E               	movwf	14	;volatile
 11479                           
 11480                           ;lights.c: 27:     CCP1CONbits.CCP1EN = 1;
 11481  07E5  178E               	bsf	14,7	;volatile
 11482                           
 11483                           ;lights.c: 29:     CCP2CONbits.MODE = 0b1100;
 11484  07E6  0812               	movf	18,w	;volatile
 11485  07E7  39F0               	andlw	-16
 11486  07E8  380C               	iorlw	12
 11487  07E9  0092               	movwf	18	;volatile
 11488                           
 11489                           ;lights.c: 30:     CCP2CONbits.CCP2EN = 1;
 11490  07EA  1792               	bsf	18,7	;volatile
 11491                           
 11492                           ;lights.c: 32:     CCP3CONbits.MODE = 0b1100;
 11493  07EB  0816               	movf	22,w	;volatile
 11494  07EC  39F0               	andlw	-16
 11495  07ED  380C               	iorlw	12
 11496  07EE  0096               	movwf	22	;volatile
 11497                           
 11498                           ;lights.c: 33:     CCP3CONbits.CCP3EN = 1;
 11499  07EF  1796               	bsf	22,7	;volatile
 11500                           
 11501                           ;lights.c: 35:     CCP4CONbits.MODE = 0b1100;
 11502  07F0  081A               	movf	26,w	;volatile
 11503  07F1  39F0               	andlw	-16
 11504  07F2  380C               	iorlw	12
 11505  07F3  009A               	movwf	26	;volatile
 11506                           
 11507                           ;lights.c: 36:     CCP4CONbits.CCP4EN = 1;
 11508  07F4  179A               	bsf	26,7	;volatile
 11509                           
 11510                           ;lights.c: 39:     T2CLKCON = 0x01;
 11511  07F5  3001               	movlw	1
 11512  07F6  0145               	movlb	5	; select bank5
 11513  07F7  0090               	movwf	16	;volatile
 11514                           
 11515                           ;lights.c: 40:     T2CONbits.ON = 1;
 11516  07F8  178E               	bsf	14,7	;volatile
 11517                           
 11518                           ;lights.c: 42:     TRISC7 = 0;
 11519  07F9  0140               	movlb	0	; select bank0
 11520  07FA  1394               	bcf	20,7	;volatile
 11521                           
 11522                           ;lights.c: 43:     TRISC6 = 0;
 11523  07FB  1314               	bcf	20,6	;volatile
 11524                           
 11525                           ;lights.c: 44:     TRISC3 = 0;
 11526  07FC  1194               	bcf	20,3	;volatile
 11527                           
 11528                           ;lights.c: 45:     TRISC4 = 0;
 11529  07FD  1214               	bcf	20,4	;volatile
 11530  07FE  0008               	return
 11531  07FF                     __end_of_LED_init:	
 11532                           
 11533                           	psect	text23
 11534  0B94                     __ptext23:	
 11535 ;; *************** function _CONTROLLER_task *****************
 11536 ;; Defined at:
 11537 ;;		line 42 in file "controller.c"
 11538 ;; Parameters:    Size  Location     Type
 11539 ;;		None
 11540 ;; Auto vars:     Size  Location     Type
 11541 ;;  active          1   31[BANK0 ] _Bool 
 11542 ;; Return value:  Size  Location     Type
 11543 ;;                  1    wreg      void 
 11544 ;; Registers used:
 11545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11546 ;; Tracked objects:
 11547 ;;		On entry : 0/0
 11548 ;;		On exit  : 0/0
 11549 ;;		Unchanged: 0/0
 11550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11552 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11553 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11554 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11555 ;;Total ram usage:        3 bytes
 11556 ;; Hardware stack levels used:    1
 11557 ;; Hardware stack levels required when called:   11
 11558 ;; This function calls:
 11559 ;;		_BUTTONS_isClicked
 11560 ;;		_BUTTONS_isHeld
 11561 ;;		_CLOCK_getTime
 11562 ;;		_TM1650_enable
 11563 ;;		_address_dec
 11564 ;;		_address_inc
 11565 ;; This function is called by:
 11566 ;;		_main
 11567 ;; This function uses a non-reentrant model
 11568 ;;
 11569                           
 11570                           
 11571                           ;psect for function _CONTROLLER_task
 11572  0B94                     _CONTROLLER_task:	
 11573                           
 11574                           ;controller.c: 43:     _Bool active = 1;
 11575                           
 11576                           ;incstack = 0
 11577                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11578  0B94  0140               	movlb	0	; select bank0
 11579  0B95  01BF               	clrf	CONTROLLER_task@active
 11580  0B96  0ABF               	incf	CONTROLLER_task@active,f
 11581                           
 11582                           ;controller.c: 44:     if (BUTTONS_isClicked(up)) {
 11583  0B97  0141               	movlb	1	; select bank1
 11584  0B98  084A               	movf	_up^(0+128),w
 11585  0B99  3197  27D8  318B   	fcall	_BUTTONS_isClicked
 11586  0B9C  3A00               	xorlw	0
 11587  0B9D  1903               	skipnz
 11588  0B9E  2BA3               	goto	l5294
 11589  0B9F                     l5292:	
 11590                           
 11591                           ;controller.c: 45:         address_inc();
 11592  0B9F  3188  2095  318B   	fcall	_address_inc
 11593                           
 11594                           ;controller.c: 46:     } else if (BUTTONS_isClicked(down)) {
 11595  0BA2  2BC1               	goto	l5308
 11596  0BA3                     l5294:	
 11597  0BA3  0141               	movlb	1	; select bank1
 11598  0BA4  0849               	movf	_down^(0+128),w
 11599  0BA5  3197  27D8  318B   	fcall	_BUTTONS_isClicked
 11600  0BA8  3A00               	xorlw	0
 11601  0BA9  1903               	skipnz
 11602  0BAA  2BAF               	goto	l5298
 11603  0BAB                     l5296:	
 11604                           
 11605                           ;controller.c: 47:         address_dec();
 11606  0BAB  3188  207D  318B   	fcall	_address_dec
 11607                           
 11608                           ;controller.c: 48:     } else if (BUTTONS_isHeld(up)){
 11609  0BAE  2BC1               	goto	l5308
 11610  0BAF                     l5298:	
 11611  0BAF  0141               	movlb	1	; select bank1
 11612  0BB0  084A               	movf	_up^(0+128),w
 11613  0BB1  3197  27B8  318B   	fcall	_BUTTONS_isHeld
 11614  0BB4  3A00               	xorlw	0
 11615  0BB5  1D03               	btfss	3,2
 11616  0BB6  2B9F               	goto	l5292
 11617  0BB7  0141               	movlb	1	; select bank1
 11618  0BB8  0849               	movf	_down^(0+128),w
 11619  0BB9  3197  27B8  318B   	fcall	_BUTTONS_isHeld
 11620  0BBC  3A00               	xorlw	0
 11621  0BBD  1D03               	btfss	3,2
 11622  0BBE  2BAB               	goto	l5296
 11623                           
 11624                           ;controller.c: 53:         active = 0;
 11625  0BBF  0140               	movlb	0	; select bank0
 11626  0BC0  01BF               	clrf	CONTROLLER_task@active
 11627  0BC1                     l5308:	
 11628                           
 11629                           ;controller.c: 56:     if(active){
 11630  0BC1  0140               	movlb	0	; select bank0
 11631  0BC2  083F               	movf	CONTROLLER_task@active,w
 11632  0BC3  1903               	btfsc	3,2
 11633  0BC4  2BD4               	goto	l5314
 11634                           
 11635                           ;controller.c: 57:         TM1650_enable(1);
 11636  0BC5  3001               	movlw	1
 11637  0BC6  3188  2065  318B   	fcall	_TM1650_enable
 11638                           
 11639                           ;controller.c: 58:         lastActiveTime = CLOCK_getTime();
 11640  0BC9  3197  2735  318B   	fcall	_CLOCK_getTime
 11641  0BCC  0140               	movlb	0	; select bank0
 11642  0BCD  0821               	movf	?_CLOCK_getTime+1,w
 11643  0BCE  0141               	movlb	1	; select bank1
 11644  0BCF  00BC               	movwf	(_lastActiveTime+1)^(0+128)
 11645  0BD0  0140               	movlb	0	; select bank0
 11646  0BD1  0820               	movf	?_CLOCK_getTime,w
 11647  0BD2  0141               	movlb	1	; select bank1
 11648  0BD3  00BB               	movwf	_lastActiveTime^(0+128)
 11649  0BD4                     l5314:	
 11650                           
 11651                           ;controller.c: 61:     if(CLOCK_getTime() - lastActiveTime >= 5000){
 11652  0BD4  3197  2735  318B   	fcall	_CLOCK_getTime
 11653  0BD7  0141               	movlb	1	; select bank1
 11654  0BD8  083B               	movf	_lastActiveTime^(0+128),w
 11655  0BD9  0140               	movlb	0	; select bank0
 11656  0BDA  0220               	subwf	?_CLOCK_getTime,w
 11657  0BDB  00BD               	movwf	??_CONTROLLER_task
 11658  0BDC  0141               	movlb	1	; select bank1
 11659  0BDD  083C               	movf	(_lastActiveTime+1)^(0+128),w
 11660  0BDE  0140               	movlb	0	; select bank0
 11661  0BDF  3B21               	subwfb	?_CLOCK_getTime+1,w
 11662  0BE0  00BE               	movwf	??_CONTROLLER_task+1
 11663  0BE1  3013               	movlw	19
 11664  0BE2  023E               	subwf	??_CONTROLLER_task+1,w
 11665  0BE3  3088               	movlw	136
 11666  0BE4  1903               	skipnz
 11667  0BE5  023D               	subwf	??_CONTROLLER_task,w
 11668  0BE6  1C03               	skipc
 11669  0BE7  0008               	return
 11670                           
 11671                           ;controller.c: 62:         TM1650_enable(0);
 11672  0BE8  3000               	movlw	0
 11673  0BE9  3188  2065  318B   	fcall	_TM1650_enable
 11674                           
 11675                           ;controller.c: 63:         lastActiveTime = CLOCK_getTime() - 5001;
 11676  0BEC  3197  2735         	fcall	_CLOCK_getTime
 11677  0BEE  0140               	movlb	0	; select bank0
 11678  0BEF  0820               	movf	?_CLOCK_getTime,w
 11679  0BF0  3E77               	addlw	119
 11680  0BF1  0141               	movlb	1	; select bank1
 11681  0BF2  00BB               	movwf	_lastActiveTime^(0+128)
 11682  0BF3  30EC               	movlw	236
 11683  0BF4  0140               	movlb	0	; select bank0
 11684  0BF5  3D21               	addwfc	?_CLOCK_getTime+1,w
 11685  0BF6  0141               	movlb	1	; select bank1
 11686  0BF7  00BC               	movwf	(_lastActiveTime+1)^(0+128)
 11687  0BF8  0008               	return
 11688  0BF9                     __end_of_CONTROLLER_task:	
 11689                           
 11690                           	psect	text24
 11691  0895                     __ptext24:	
 11692 ;; *************** function _address_inc *****************
 11693 ;; Defined at:
 11694 ;;		line 17 in file "controller.c"
 11695 ;; Parameters:    Size  Location     Type
 11696 ;;		None
 11697 ;; Auto vars:     Size  Location     Type
 11698 ;;		None
 11699 ;; Return value:  Size  Location     Type
 11700 ;;                  1    wreg      void 
 11701 ;; Registers used:
 11702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11703 ;; Tracked objects:
 11704 ;;		On entry : 0/0
 11705 ;;		On exit  : 0/0
 11706 ;;		Unchanged: 0/0
 11707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11712 ;;Total ram usage:        0 bytes
 11713 ;; Hardware stack levels used:    1
 11714 ;; Hardware stack levels required when called:   10
 11715 ;; This function calls:
 11716 ;;		_TM1650_fastPrintNum
 11717 ;; This function is called by:
 11718 ;;		_CONTROLLER_task
 11719 ;; This function uses a non-reentrant model
 11720 ;;
 11721                           
 11722                           
 11723                           ;psect for function _address_inc
 11724  0895                     _address_inc:	
 11725                           
 11726                           ;controller.c: 19:     if(address == 512)
 11727                           
 11728                           ;incstack = 0
 11729                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11730  0895  3002               	movlw	2
 11731  0896  0141               	movlb	1	; select bank1
 11732  0897  066A               	xorwf	(_address+1)^(0+128),w
 11733  0898  0469               	iorwf	_address^(0+128),w
 11734  0899  1D03               	btfss	3,2
 11735  089A  28A0               	goto	l4824
 11736                           
 11737                           ;controller.c: 20:         address = 1;
 11738  089B  3001               	movlw	1
 11739  089C  00E9               	movwf	_address^(0+128)
 11740  089D  3000               	movlw	0
 11741  089E  00EA               	movwf	(_address^(0+128)+1)
 11742  089F  28A4               	goto	l4826
 11743  08A0                     l4824:	
 11744                           
 11745                           ;controller.c: 22:         address++;
 11746  08A0  3001               	movlw	1
 11747  08A1  07E9               	addwf	_address^(0+128),f
 11748  08A2  3000               	movlw	0
 11749  08A3  3DEA               	addwfc	(_address+1)^(0+128),f
 11750  08A4                     l4826:	
 11751                           
 11752                           ;controller.c: 25:     TM1650_fastPrintNum(address);
 11753  08A4  086A               	movf	(_address+1)^(0+128),w
 11754  08A5  0140               	movlb	0	; select bank0
 11755  08A6  00BB               	movwf	TM1650_fastPrintNum@inputNumber+1
 11756  08A7  0141               	movlb	1	; select bank1
 11757  08A8  0869               	movf	_address^(0+128),w
 11758  08A9  0140               	movlb	0	; select bank0
 11759  08AA  00BA               	movwf	TM1650_fastPrintNum@inputNumber
 11760  08AB  3182  22A2         	fcall	_TM1650_fastPrintNum
 11761  08AD  0008               	return
 11762  08AE                     __end_of_address_inc:	
 11763                           
 11764                           	psect	text25
 11765  087D                     __ptext25:	
 11766 ;; *************** function _address_dec *****************
 11767 ;; Defined at:
 11768 ;;		line 31 in file "controller.c"
 11769 ;; Parameters:    Size  Location     Type
 11770 ;;		None
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;		None
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  1    wreg      void 
 11775 ;; Registers used:
 11776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11777 ;; Tracked objects:
 11778 ;;		On entry : 0/0
 11779 ;;		On exit  : 0/0
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11786 ;;Total ram usage:        0 bytes
 11787 ;; Hardware stack levels used:    1
 11788 ;; Hardware stack levels required when called:   10
 11789 ;; This function calls:
 11790 ;;		_TM1650_fastPrintNum
 11791 ;; This function is called by:
 11792 ;;		_CONTROLLER_task
 11793 ;; This function uses a non-reentrant model
 11794 ;;
 11795                           
 11796                           
 11797                           ;psect for function _address_dec
 11798  087D                     _address_dec:	
 11799                           
 11800                           ;controller.c: 33:     if(address == 1)
 11801                           
 11802                           ;incstack = 0
 11803                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11804  087D  0141               	movlb	1	; select bank1
 11805  087E  0369               	decf	_address^(0+128),w
 11806  087F  046A               	iorwf	(_address+1)^(0+128),w
 11807  0880  1D03               	btfss	3,2
 11808  0881  2887               	goto	l4832
 11809                           
 11810                           ;controller.c: 34:         address = 512;
 11811  0882  3000               	movlw	0
 11812  0883  00E9               	movwf	_address^(0+128)
 11813  0884  3002               	movlw	2
 11814  0885  00EA               	movwf	(_address^(0+128)+1)
 11815  0886  288B               	goto	l4834
 11816  0887                     l4832:	
 11817                           
 11818                           ;controller.c: 36:         address--;
 11819  0887  3001               	movlw	1
 11820  0888  02E9               	subwf	_address^(0+128),f
 11821  0889  3000               	movlw	0
 11822  088A  3BEA               	subwfb	(_address+1)^(0+128),f
 11823  088B                     l4834:	
 11824                           
 11825                           ;controller.c: 39:     TM1650_fastPrintNum(address);
 11826  088B  086A               	movf	(_address+1)^(0+128),w
 11827  088C  0140               	movlb	0	; select bank0
 11828  088D  00BB               	movwf	TM1650_fastPrintNum@inputNumber+1
 11829  088E  0141               	movlb	1	; select bank1
 11830  088F  0869               	movf	_address^(0+128),w
 11831  0890  0140               	movlb	0	; select bank0
 11832  0891  00BA               	movwf	TM1650_fastPrintNum@inputNumber
 11833  0892  3182  22A2         	fcall	_TM1650_fastPrintNum
 11834  0894  0008               	return
 11835  0895                     __end_of_address_dec:	
 11836                           
 11837                           	psect	text26
 11838  0865                     __ptext26:	
 11839 ;; *************** function _TM1650_enable *****************
 11840 ;; Defined at:
 11841 ;;		line 104 in file "tm1650.c"
 11842 ;; Parameters:    Size  Location     Type
 11843 ;;  enable          1    wreg     _Bool 
 11844 ;; Auto vars:     Size  Location     Type
 11845 ;;  enable          1   21[BANK0 ] _Bool 
 11846 ;; Return value:  Size  Location     Type
 11847 ;;                  1    wreg      void 
 11848 ;; Registers used:
 11849 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11850 ;; Tracked objects:
 11851 ;;		On entry : 0/0
 11852 ;;		On exit  : 0/0
 11853 ;;		Unchanged: 0/0
 11854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11858 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11859 ;;Total ram usage:        1 bytes
 11860 ;; Hardware stack levels used:    1
 11861 ;; Hardware stack levels required when called:    8
 11862 ;; This function calls:
 11863 ;;		_writeData
 11864 ;; This function is called by:
 11865 ;;		_TM1650_init
 11866 ;;		_CONTROLLER_task
 11867 ;; This function uses a non-reentrant model
 11868 ;;
 11869                           
 11870                           
 11871                           ;psect for function _TM1650_enable
 11872  0865                     _TM1650_enable:	
 11873                           
 11874                           ;incstack = 0
 11875                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11876                           ;TM1650_enable@enable stored from wreg
 11877  0865  0140               	movlb	0	; select bank0
 11878  0866  00B5               	movwf	TM1650_enable@enable
 11879                           
 11880                           ;tm1650.c: 105:     if(enable){
 11881  0867  0835               	movf	TM1650_enable@enable,w
 11882  0868  1903               	btfsc	3,2
 11883  0869  2873               	goto	l4778
 11884                           
 11885                           ;tm1650.c: 106:         writeData(0x24, 0x01);
 11886  086A  01AE               	clrf	writeData@data
 11887  086B  0AAE               	incf	writeData@data,f
 11888  086C  3024               	movlw	36
 11889  086D  3189  2180         	fcall	_writeData
 11890                           
 11891                           ;tm1650.c: 107:         displayState = 1;
 11892  086F  0141               	movlb	1	; select bank1
 11893  0870  01C6               	clrf	_displayState^(0+128)
 11894  0871  0AC6               	incf	_displayState^(0+128),f
 11895                           
 11896                           ;tm1650.c: 108:     } else if(!enable){
 11897  0872  0008               	return
 11898  0873                     l4778:	
 11899  0873  0835               	movf	TM1650_enable@enable,w
 11900  0874  1D03               	btfss	3,2
 11901  0875  0008               	return
 11902                           
 11903                           ;tm1650.c: 109:         writeData(0x24, 0x00);
 11904  0876  01AE               	clrf	writeData@data
 11905  0877  3024               	movlw	36
 11906  0878  3189  2180         	fcall	_writeData
 11907                           
 11908                           ;tm1650.c: 110:         displayState = 0;
 11909  087A  0141               	movlb	1	; select bank1
 11910  087B  01C6               	clrf	_displayState^(0+128)
 11911  087C  0008               	return
 11912  087D                     __end_of_TM1650_enable:	
 11913                           
 11914                           	psect	text27
 11915  17B8                     __ptext27:	
 11916 ;; *************** function _BUTTONS_isHeld *****************
 11917 ;; Defined at:
 11918 ;;		line 92 in file "buttons.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;  button          1    wreg     PTR struct .
 11921 ;;		 -> buttons(32), NULL(0), 
 11922 ;; Auto vars:     Size  Location     Type
 11923 ;;  button          1    0[BANK0 ] PTR struct .
 11924 ;;		 -> buttons(32), NULL(0), 
 11925 ;; Return value:  Size  Location     Type
 11926 ;;                  1    wreg      _Bool 
 11927 ;; Registers used:
 11928 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11929 ;; Tracked objects:
 11930 ;;		On entry : 0/0
 11931 ;;		On exit  : 0/0
 11932 ;;		Unchanged: 0/0
 11933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11937 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11938 ;;Total ram usage:        1 bytes
 11939 ;; Hardware stack levels used:    1
 11940 ;; Hardware stack levels required when called:    4
 11941 ;; This function calls:
 11942 ;;		Nothing
 11943 ;; This function is called by:
 11944 ;;		_CONTROLLER_task
 11945 ;; This function uses a non-reentrant model
 11946 ;;
 11947                           
 11948                           
 11949                           ;psect for function _BUTTONS_isHeld
 11950  17B8                     _BUTTONS_isHeld:	
 11951                           
 11952                           ;incstack = 0
 11953                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 11954                           ;BUTTONS_isHeld@button stored from wreg
 11955  17B8  0140               	movlb	0	; select bank0
 11956  17B9  00A0               	movwf	BUTTONS_isHeld@button
 11957                           
 11958                           ;buttons.c: 93:     if (button->event == EVENT_HELD) {
 11959  17BA  0820               	movf	BUTTONS_isHeld@button,w
 11960  17BB  3E05               	addlw	5
 11961  17BC  0086               	movwf	6
 11962  17BD  3001               	movlw	1	; select bank2/3
 11963  17BE  0087               	movwf	7
 11964  17BF  3002               	movlw	2
 11965  17C0  0601               	xorwf	1,w
 11966  17C1  1D03               	btfss	3,2
 11967  17C2  2FC5               	goto	l4816
 11968                           
 11969                           ;buttons.c: 94:         return 1;
 11970  17C3  3001               	movlw	1
 11971  17C4  0008               	return
 11972  17C5                     l4816:	
 11973                           
 11974                           ;buttons.c: 96:     return 0;
 11975  17C5  3000               	movlw	0
 11976  17C6  0008               	return
 11977  17C7                     __end_of_BUTTONS_isHeld:	
 11978                           
 11979                           	psect	text28
 11980  17D8                     __ptext28:	
 11981 ;; *************** function _BUTTONS_isClicked *****************
 11982 ;; Defined at:
 11983 ;;		line 82 in file "buttons.c"
 11984 ;; Parameters:    Size  Location     Type
 11985 ;;  button          1    wreg     PTR struct .
 11986 ;;		 -> buttons(32), NULL(0), 
 11987 ;; Auto vars:     Size  Location     Type
 11988 ;;  button          1    0[BANK0 ] PTR struct .
 11989 ;;		 -> buttons(32), NULL(0), 
 11990 ;; Return value:  Size  Location     Type
 11991 ;;                  1    wreg      _Bool 
 11992 ;; Registers used:
 11993 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11994 ;; Tracked objects:
 11995 ;;		On entry : 0/0
 11996 ;;		On exit  : 0/0
 11997 ;;		Unchanged: 0/0
 11998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12003 ;;Total ram usage:        1 bytes
 12004 ;; Hardware stack levels used:    1
 12005 ;; Hardware stack levels required when called:    4
 12006 ;; This function calls:
 12007 ;;		Nothing
 12008 ;; This function is called by:
 12009 ;;		_CONTROLLER_task
 12010 ;; This function uses a non-reentrant model
 12011 ;;
 12012                           
 12013                           
 12014                           ;psect for function _BUTTONS_isClicked
 12015  17D8                     _BUTTONS_isClicked:	
 12016                           
 12017                           ;incstack = 0
 12018                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 12019                           ;BUTTONS_isClicked@button stored from wreg
 12020  17D8  0140               	movlb	0	; select bank0
 12021  17D9  00A0               	movwf	BUTTONS_isClicked@button
 12022                           
 12023                           ;buttons.c: 83:     if (button->event == EVENT_PRESSED) {
 12024  17DA  0820               	movf	BUTTONS_isClicked@button,w
 12025  17DB  3E05               	addlw	5
 12026  17DC  0086               	movwf	6
 12027  17DD  3001               	movlw	1	; select bank2/3
 12028  17DE  0087               	movwf	7
 12029  17DF  0301               	decf	1,w
 12030  17E0  1D03               	btfss	3,2
 12031  17E1  2FEA               	goto	l4806
 12032                           
 12033                           ;buttons.c: 84:         button->event = EVENT_IDLE;
 12034  17E2  0820               	movf	BUTTONS_isClicked@button,w
 12035  17E3  3E05               	addlw	5
 12036  17E4  0086               	movwf	6
 12037  17E5  3001               	movlw	1	; select bank2/3
 12038  17E6  0087               	movwf	7
 12039  17E7  0181               	clrf	1
 12040                           
 12041                           ;buttons.c: 85:         return 1;
 12042  17E8  3001               	movlw	1
 12043  17E9  0008               	return
 12044  17EA                     l4806:	
 12045                           
 12046                           ;buttons.c: 89:     return 0;
 12047  17EA  3000               	movlw	0
 12048  17EB  0008               	return
 12049  17EC                     __end_of_BUTTONS_isClicked:	
 12050                           
 12051                           	psect	text29
 12052  1787                     __ptext29:	
 12053 ;; *************** function _CONTROLLER_init *****************
 12054 ;; Defined at:
 12055 ;;		line 10 in file "controller.c"
 12056 ;; Parameters:    Size  Location     Type
 12057 ;;		None
 12058 ;; Auto vars:     Size  Location     Type
 12059 ;;		None
 12060 ;; Return value:  Size  Location     Type
 12061 ;;                  1    wreg      void 
 12062 ;; Registers used:
 12063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12064 ;; Tracked objects:
 12065 ;;		On entry : 0/0
 12066 ;;		On exit  : 0/0
 12067 ;;		Unchanged: 0/0
 12068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12073 ;;Total ram usage:        0 bytes
 12074 ;; Hardware stack levels used:    1
 12075 ;; Hardware stack levels required when called:   10
 12076 ;; This function calls:
 12077 ;;		_TM1650_fastPrintNum
 12078 ;; This function is called by:
 12079 ;;		_main
 12080 ;; This function uses a non-reentrant model
 12081 ;;
 12082                           
 12083                           
 12084                           ;psect for function _CONTROLLER_init
 12085  1787                     _CONTROLLER_init:	
 12086                           
 12087                           ;controller.c: 11:     TM1650_fastPrintNum(address);
 12088                           
 12089                           ;incstack = 0
 12090                           ; Regs used in _CONTROLLER_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12091  1787  0141               	movlb	1	; select bank1
 12092  1788  086A               	movf	(_address+1)^(0+128),w
 12093  1789  0140               	movlb	0	; select bank0
 12094  178A  00BB               	movwf	TM1650_fastPrintNum@inputNumber+1
 12095  178B  0141               	movlb	1	; select bank1
 12096  178C  0869               	movf	_address^(0+128),w
 12097  178D  0140               	movlb	0	; select bank0
 12098  178E  00BA               	movwf	TM1650_fastPrintNum@inputNumber
 12099  178F  3182  22A2         	fcall	_TM1650_fastPrintNum
 12100  1791  0008               	return
 12101  1792                     __end_of_CONTROLLER_init:	
 12102                           
 12103                           	psect	text30
 12104  02A2                     __ptext30:	
 12105 ;; *************** function _TM1650_fastPrintNum *****************
 12106 ;; Defined at:
 12107 ;;		line 71 in file "tm1650.c"
 12108 ;; Parameters:    Size  Location     Type
 12109 ;;  inputNumber     2   26[BANK0 ] unsigned short 
 12110 ;; Auto vars:     Size  Location     Type
 12111 ;;		None
 12112 ;; Return value:  Size  Location     Type
 12113 ;;                  1    wreg      void 
 12114 ;; Registers used:
 12115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12116 ;; Tracked objects:
 12117 ;;		On entry : 0/0
 12118 ;;		On exit  : 0/0
 12119 ;;		Unchanged: 0/0
 12120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12121 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12123 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12124 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12125 ;;Total ram usage:        3 bytes
 12126 ;; Hardware stack levels used:    1
 12127 ;; Hardware stack levels required when called:    9
 12128 ;; This function calls:
 12129 ;;		_TM1650_setDigit
 12130 ;;		___lwdiv
 12131 ;;		___lwmod
 12132 ;; This function is called by:
 12133 ;;		_main
 12134 ;;		_CONTROLLER_init
 12135 ;;		_address_inc
 12136 ;;		_address_dec
 12137 ;; This function uses a non-reentrant model
 12138 ;;
 12139                           
 12140                           
 12141                           ;psect for function _TM1650_fastPrintNum
 12142  02A2                     _TM1650_fastPrintNum:	
 12143                           
 12144                           ;incstack = 0
 12145                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12146  02A2  3000               	movlw	0
 12147  02A3  0140               	movlb	0	; select bank0
 12148  02A4  023B               	subwf	TM1650_fastPrintNum@inputNumber+1,w
 12149  02A5  300A               	movlw	10
 12150  02A6  1903               	skipnz
 12151  02A7  023A               	subwf	TM1650_fastPrintNum@inputNumber,w
 12152  02A8  1803               	skipnc
 12153  02A9  2AD2               	goto	l4692
 12154                           
 12155                           ;tm1650.c: 76:         TM1650_setDigit(0, ' ', 0);
 12156  02AA  3020               	movlw	32
 12157  02AB  00BC               	movwf	??_TM1650_fastPrintNum
 12158  02AC  083C               	movf	??_TM1650_fastPrintNum,w
 12159  02AD  00B5               	movwf	TM1650_setDigit@num
 12160  02AE  01B6               	clrf	TM1650_setDigit@dp
 12161  02AF  3000               	movlw	0
 12162  02B0  3189  2102  3182   	fcall	_TM1650_setDigit
 12163                           
 12164                           ;tm1650.c: 77:         TM1650_setDigit(1, ' ', 0);
 12165  02B3  3020               	movlw	32
 12166  02B4  0140               	movlb	0	; select bank0
 12167  02B5  00BC               	movwf	??_TM1650_fastPrintNum
 12168  02B6  083C               	movf	??_TM1650_fastPrintNum,w
 12169  02B7  00B5               	movwf	TM1650_setDigit@num
 12170  02B8  01B6               	clrf	TM1650_setDigit@dp
 12171  02B9  3001               	movlw	1
 12172  02BA  3189  2102  3182   	fcall	_TM1650_setDigit
 12173                           
 12174                           ;tm1650.c: 78:         TM1650_setDigit(2, ' ', 0);
 12175  02BD  3020               	movlw	32
 12176  02BE  0140               	movlb	0	; select bank0
 12177  02BF  00BC               	movwf	??_TM1650_fastPrintNum
 12178  02C0  083C               	movf	??_TM1650_fastPrintNum,w
 12179  02C1  00B5               	movwf	TM1650_setDigit@num
 12180  02C2  01B6               	clrf	TM1650_setDigit@dp
 12181  02C3  3002               	movlw	2
 12182  02C4  3189  2102  3182   	fcall	_TM1650_setDigit
 12183                           
 12184                           ;tm1650.c: 79:         TM1650_setDigit(3, inputNumber + 48, 0);
 12185  02C7  0140               	movlb	0	; select bank0
 12186  02C8  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 12187  02C9  3E30               	addlw	48
 12188  02CA  00BC               	movwf	??_TM1650_fastPrintNum
 12189  02CB  083C               	movf	??_TM1650_fastPrintNum,w
 12190  02CC  00B5               	movwf	TM1650_setDigit@num
 12191  02CD  01B6               	clrf	TM1650_setDigit@dp
 12192  02CE  3003               	movlw	3
 12193  02CF  3189  2102         	fcall	_TM1650_setDigit
 12194                           
 12195                           ;tm1650.c: 80:     } else if (10 <= inputNumber && inputNumber <= 99) {
 12196  02D1  0008               	return
 12197  02D2                     l4692:	
 12198  02D2  3000               	movlw	0
 12199  02D3  023B               	subwf	TM1650_fastPrintNum@inputNumber+1,w
 12200  02D4  300A               	movlw	10
 12201  02D5  1903               	skipnz
 12202  02D6  023A               	subwf	TM1650_fastPrintNum@inputNumber,w
 12203  02D7  1C03               	skipc
 12204  02D8  2B2D               	goto	l4698
 12205  02D9  3000               	movlw	0
 12206  02DA  023B               	subwf	TM1650_fastPrintNum@inputNumber+1,w
 12207  02DB  3064               	movlw	100
 12208  02DC  1903               	skipnz
 12209  02DD  023A               	subwf	TM1650_fastPrintNum@inputNumber,w
 12210  02DE  1803               	skipnc
 12211  02DF  2B2D               	goto	l4698
 12212                           
 12213                           ;tm1650.c: 81:         TM1650_setDigit(0, ' ', 0);
 12214  02E0  3020               	movlw	32
 12215  02E1  00BC               	movwf	??_TM1650_fastPrintNum
 12216  02E2  083C               	movf	??_TM1650_fastPrintNum,w
 12217  02E3  00B5               	movwf	TM1650_setDigit@num
 12218  02E4  01B6               	clrf	TM1650_setDigit@dp
 12219  02E5  3000               	movlw	0
 12220  02E6  3189  2102  3182   	fcall	_TM1650_setDigit
 12221                           
 12222                           ;tm1650.c: 82:         TM1650_setDigit(1, ' ', 0);
 12223  02E9  3020               	movlw	32
 12224  02EA  0140               	movlb	0	; select bank0
 12225  02EB  00BC               	movwf	??_TM1650_fastPrintNum
 12226  02EC  083C               	movf	??_TM1650_fastPrintNum,w
 12227  02ED  00B5               	movwf	TM1650_setDigit@num
 12228  02EE  01B6               	clrf	TM1650_setDigit@dp
 12229  02EF  3001               	movlw	1
 12230  02F0  3189  2102  3182   	fcall	_TM1650_setDigit
 12231                           
 12232                           ;tm1650.c: 83:         TM1650_setDigit(2, ((inputNumber / 10) % 10) + 48, 0);
 12233  02F3  300A               	movlw	10
 12234  02F4  0140               	movlb	0	; select bank0
 12235  02F5  00A8               	movwf	___lwmod@divisor
 12236  02F6  3000               	movlw	0
 12237  02F7  00A9               	movwf	___lwmod@divisor+1
 12238  02F8  300A               	movlw	10
 12239  02F9  00A0               	movwf	___lwdiv@divisor
 12240  02FA  3000               	movlw	0
 12241  02FB  00A1               	movwf	___lwdiv@divisor+1
 12242  02FC  083B               	movf	TM1650_fastPrintNum@inputNumber+1,w
 12243  02FD  00A3               	movwf	___lwdiv@dividend+1
 12244  02FE  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 12245  02FF  00A2               	movwf	___lwdiv@dividend
 12246  0300  318A  227D  3182   	fcall	___lwdiv
 12247  0303  0140               	movlb	0	; select bank0
 12248  0304  0821               	movf	?___lwdiv+1,w
 12249  0305  00AB               	movwf	___lwmod@dividend+1
 12250  0306  0820               	movf	?___lwdiv,w
 12251  0307  00AA               	movwf	___lwmod@dividend
 12252  0308  3189  21F1  3182   	fcall	___lwmod
 12253  030B  0140               	movlb	0	; select bank0
 12254  030C  0828               	movf	?___lwmod,w
 12255  030D  3E30               	addlw	48
 12256  030E  00BC               	movwf	??_TM1650_fastPrintNum
 12257  030F  083C               	movf	??_TM1650_fastPrintNum,w
 12258  0310  00B5               	movwf	TM1650_setDigit@num
 12259  0311  01B6               	clrf	TM1650_setDigit@dp
 12260  0312  3002               	movlw	2
 12261  0313  3189  2102  3182   	fcall	_TM1650_setDigit
 12262                           
 12263                           ;tm1650.c: 84:         TM1650_setDigit(3, (inputNumber % 10) + 48, 0);
 12264  0316  300A               	movlw	10
 12265  0317  0140               	movlb	0	; select bank0
 12266  0318  00A8               	movwf	___lwmod@divisor
 12267  0319  3000               	movlw	0
 12268  031A  00A9               	movwf	___lwmod@divisor+1
 12269  031B  083B               	movf	TM1650_fastPrintNum@inputNumber+1,w
 12270  031C  00AB               	movwf	___lwmod@dividend+1
 12271  031D  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 12272  031E  00AA               	movwf	___lwmod@dividend
 12273  031F  3189  21F1  3182   	fcall	___lwmod
 12274  0322  0140               	movlb	0	; select bank0
 12275  0323  0828               	movf	?___lwmod,w
 12276  0324  3E30               	addlw	48
 12277  0325  00BC               	movwf	??_TM1650_fastPrintNum
 12278  0326  083C               	movf	??_TM1650_fastPrintNum,w
 12279  0327  00B5               	movwf	TM1650_setDigit@num
 12280  0328  01B6               	clrf	TM1650_setDigit@dp
 12281  0329  3003               	movlw	3
 12282  032A  3189  2102         	fcall	_TM1650_setDigit
 12283                           
 12284                           ;tm1650.c: 85:     } else if (100 <= inputNumber && inputNumber <= 999){
 12285  032C  0008               	return
 12286  032D                     l4698:	
 12287  032D  3000               	movlw	0
 12288  032E  023B               	subwf	TM1650_fastPrintNum@inputNumber+1,w
 12289  032F  3064               	movlw	100
 12290  0330  1903               	skipnz
 12291  0331  023A               	subwf	TM1650_fastPrintNum@inputNumber,w
 12292  0332  1C03               	skipc
 12293  0333  2BA1               	goto	l4704
 12294  0334  3003               	movlw	3
 12295  0335  023B               	subwf	TM1650_fastPrintNum@inputNumber+1,w
 12296  0336  30E8               	movlw	232
 12297  0337  1903               	skipnz
 12298  0338  023A               	subwf	TM1650_fastPrintNum@inputNumber,w
 12299  0339  1803               	skipnc
 12300  033A  2BA1               	goto	l4704
 12301                           
 12302                           ;tm1650.c: 86:         TM1650_setDigit(0, ' ', 0);
 12303  033B  3020               	movlw	32
 12304  033C  00BC               	movwf	??_TM1650_fastPrintNum
 12305  033D  083C               	movf	??_TM1650_fastPrintNum,w
 12306  033E  00B5               	movwf	TM1650_setDigit@num
 12307  033F  01B6               	clrf	TM1650_setDigit@dp
 12308  0340  3000               	movlw	0
 12309  0341  3189  2102  3182   	fcall	_TM1650_setDigit
 12310                           
 12311                           ;tm1650.c: 87:         TM1650_setDigit(1, ((inputNumber / 100) % 10) + 48, 0);
 12312  0344  300A               	movlw	10
 12313  0345  0140               	movlb	0	; select bank0
 12314  0346  00A8               	movwf	___lwmod@divisor
 12315  0347  3000               	movlw	0
 12316  0348  00A9               	movwf	___lwmod@divisor+1
 12317  0349  3064               	movlw	100
 12318  034A  00A0               	movwf	___lwdiv@divisor
 12319  034B  3000               	movlw	0
 12320  034C  00A1               	movwf	___lwdiv@divisor+1
 12321  034D  083B               	movf	TM1650_fastPrintNum@inputNumber+1,w
 12322  034E  00A3               	movwf	___lwdiv@dividend+1
 12323  034F  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 12324  0350  00A2               	movwf	___lwdiv@dividend
 12325  0351  318A  227D  3182   	fcall	___lwdiv
 12326  0354  0140               	movlb	0	; select bank0
 12327  0355  0821               	movf	?___lwdiv+1,w
 12328  0356  00AB               	movwf	___lwmod@dividend+1
 12329  0357  0820               	movf	?___lwdiv,w
 12330  0358  00AA               	movwf	___lwmod@dividend
 12331  0359  3189  21F1  3182   	fcall	___lwmod
 12332  035C  0140               	movlb	0	; select bank0
 12333  035D  0828               	movf	?___lwmod,w
 12334  035E  3E30               	addlw	48
 12335  035F  00BC               	movwf	??_TM1650_fastPrintNum
 12336  0360  083C               	movf	??_TM1650_fastPrintNum,w
 12337  0361  00B5               	movwf	TM1650_setDigit@num
 12338  0362  01B6               	clrf	TM1650_setDigit@dp
 12339  0363  3001               	movlw	1
 12340  0364  3189  2102  3182   	fcall	_TM1650_setDigit
 12341                           
 12342                           ;tm1650.c: 88:         TM1650_setDigit(2, ((inputNumber / 10) % 10) + 48, 0);
 12343  0367  300A               	movlw	10
 12344  0368  0140               	movlb	0	; select bank0
 12345  0369  00A8               	movwf	___lwmod@divisor
 12346  036A  3000               	movlw	0
 12347  036B  00A9               	movwf	___lwmod@divisor+1
 12348  036C  300A               	movlw	10
 12349  036D  00A0               	movwf	___lwdiv@divisor
 12350  036E  3000               	movlw	0
 12351  036F  00A1               	movwf	___lwdiv@divisor+1
 12352  0370  083B               	movf	TM1650_fastPrintNum@inputNumber+1,w
 12353  0371  00A3               	movwf	___lwdiv@dividend+1
 12354  0372  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 12355  0373  00A2               	movwf	___lwdiv@dividend
 12356  0374  318A  227D  3182   	fcall	___lwdiv
 12357  0377  0140               	movlb	0	; select bank0
 12358  0378  0821               	movf	?___lwdiv+1,w
 12359  0379  00AB               	movwf	___lwmod@dividend+1
 12360  037A  0820               	movf	?___lwdiv,w
 12361  037B  00AA               	movwf	___lwmod@dividend
 12362  037C  3189  21F1  3182   	fcall	___lwmod
 12363  037F  0140               	movlb	0	; select bank0
 12364  0380  0828               	movf	?___lwmod,w
 12365  0381  3E30               	addlw	48
 12366  0382  00BC               	movwf	??_TM1650_fastPrintNum
 12367  0383  083C               	movf	??_TM1650_fastPrintNum,w
 12368  0384  00B5               	movwf	TM1650_setDigit@num
 12369  0385  01B6               	clrf	TM1650_setDigit@dp
 12370  0386  3002               	movlw	2
 12371  0387  3189  2102  3182   	fcall	_TM1650_setDigit
 12372                           
 12373                           ;tm1650.c: 89:         TM1650_setDigit(3, (inputNumber % 10) + 48, 0);
 12374  038A  300A               	movlw	10
 12375  038B  0140               	movlb	0	; select bank0
 12376  038C  00A8               	movwf	___lwmod@divisor
 12377  038D  3000               	movlw	0
 12378  038E  00A9               	movwf	___lwmod@divisor+1
 12379  038F  083B               	movf	TM1650_fastPrintNum@inputNumber+1,w
 12380  0390  00AB               	movwf	___lwmod@dividend+1
 12381  0391  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 12382  0392  00AA               	movwf	___lwmod@dividend
 12383  0393  3189  21F1  3182   	fcall	___lwmod
 12384  0396  0140               	movlb	0	; select bank0
 12385  0397  0828               	movf	?___lwmod,w
 12386  0398  3E30               	addlw	48
 12387  0399  00BC               	movwf	??_TM1650_fastPrintNum
 12388  039A  083C               	movf	??_TM1650_fastPrintNum,w
 12389  039B  00B5               	movwf	TM1650_setDigit@num
 12390  039C  01B6               	clrf	TM1650_setDigit@dp
 12391  039D  3003               	movlw	3
 12392  039E  3189  2102         	fcall	_TM1650_setDigit
 12393                           
 12394                           ;tm1650.c: 90:     } else if (1000 <= inputNumber && inputNumber <= 9999){
 12395  03A0  0008               	return
 12396  03A1                     l4704:	
 12397  03A1  3003               	movlw	3
 12398  03A2  023B               	subwf	TM1650_fastPrintNum@inputNumber+1,w
 12399  03A3  30E8               	movlw	232
 12400  03A4  1903               	skipnz
 12401  03A5  023A               	subwf	TM1650_fastPrintNum@inputNumber,w
 12402  03A6  1C03               	skipc
 12403  03A7  2C2E               	goto	l4710
 12404  03A8  3027               	movlw	39
 12405  03A9  023B               	subwf	TM1650_fastPrintNum@inputNumber+1,w
 12406  03AA  3010               	movlw	16
 12407  03AB  1903               	skipnz
 12408  03AC  023A               	subwf	TM1650_fastPrintNum@inputNumber,w
 12409  03AD  1803               	skipnc
 12410  03AE  2C2E               	goto	l4710
 12411                           
 12412                           ;tm1650.c: 91:         TM1650_setDigit(0, ((inputNumber / 1000) % 10) + 48, 0);
 12413  03AF  300A               	movlw	10
 12414  03B0  00A8               	movwf	___lwmod@divisor
 12415  03B1  3000               	movlw	0
 12416  03B2  00A9               	movwf	___lwmod@divisor+1
 12417  03B3  30E8               	movlw	232
 12418  03B4  00A0               	movwf	___lwdiv@divisor
 12419  03B5  3003               	movlw	3
 12420  03B6  00A1               	movwf	___lwdiv@divisor+1
 12421  03B7  083B               	movf	TM1650_fastPrintNum@inputNumber+1,w
 12422  03B8  00A3               	movwf	___lwdiv@dividend+1
 12423  03B9  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 12424  03BA  00A2               	movwf	___lwdiv@dividend
 12425  03BB  318A  227D  3182   	fcall	___lwdiv
 12426  03BE  0140               	movlb	0	; select bank0
 12427  03BF  0821               	movf	?___lwdiv+1,w
 12428  03C0  00AB               	movwf	___lwmod@dividend+1
 12429  03C1  0820               	movf	?___lwdiv,w
 12430  03C2  00AA               	movwf	___lwmod@dividend
 12431  03C3  3189  21F1  3182   	fcall	___lwmod
 12432  03C6  0140               	movlb	0	; select bank0
 12433  03C7  0828               	movf	?___lwmod,w
 12434  03C8  3E30               	addlw	48
 12435  03C9  00BC               	movwf	??_TM1650_fastPrintNum
 12436  03CA  083C               	movf	??_TM1650_fastPrintNum,w
 12437  03CB  00B5               	movwf	TM1650_setDigit@num
 12438  03CC  01B6               	clrf	TM1650_setDigit@dp
 12439  03CD  3000               	movlw	0
 12440  03CE  3189  2102  3182   	fcall	_TM1650_setDigit
 12441                           
 12442                           ;tm1650.c: 92:         TM1650_setDigit(1, ((inputNumber / 100) % 10) + 48, 0);
 12443  03D1  300A               	movlw	10
 12444  03D2  0140               	movlb	0	; select bank0
 12445  03D3  00A8               	movwf	___lwmod@divisor
 12446  03D4  3000               	movlw	0
 12447  03D5  00A9               	movwf	___lwmod@divisor+1
 12448  03D6  3064               	movlw	100
 12449  03D7  00A0               	movwf	___lwdiv@divisor
 12450  03D8  3000               	movlw	0
 12451  03D9  00A1               	movwf	___lwdiv@divisor+1
 12452  03DA  083B               	movf	TM1650_fastPrintNum@inputNumber+1,w
 12453  03DB  00A3               	movwf	___lwdiv@dividend+1
 12454  03DC  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 12455  03DD  00A2               	movwf	___lwdiv@dividend
 12456  03DE  318A  227D  3182   	fcall	___lwdiv
 12457  03E1  0140               	movlb	0	; select bank0
 12458  03E2  0821               	movf	?___lwdiv+1,w
 12459  03E3  00AB               	movwf	___lwmod@dividend+1
 12460  03E4  0820               	movf	?___lwdiv,w
 12461  03E5  00AA               	movwf	___lwmod@dividend
 12462  03E6  3189  21F1  3182   	fcall	___lwmod
 12463  03E9  0140               	movlb	0	; select bank0
 12464  03EA  0828               	movf	?___lwmod,w
 12465  03EB  3E30               	addlw	48
 12466  03EC  00BC               	movwf	??_TM1650_fastPrintNum
 12467  03ED  083C               	movf	??_TM1650_fastPrintNum,w
 12468  03EE  00B5               	movwf	TM1650_setDigit@num
 12469  03EF  01B6               	clrf	TM1650_setDigit@dp
 12470  03F0  3001               	movlw	1
 12471  03F1  3189  2102  3182   	fcall	_TM1650_setDigit
 12472                           
 12473                           ;tm1650.c: 93:         TM1650_setDigit(2, ((inputNumber / 10) % 10) + 48, 0);
 12474  03F4  300A               	movlw	10
 12475  03F5  0140               	movlb	0	; select bank0
 12476  03F6  00A8               	movwf	___lwmod@divisor
 12477  03F7  3000               	movlw	0
 12478  03F8  00A9               	movwf	___lwmod@divisor+1
 12479  03F9  300A               	movlw	10
 12480  03FA  00A0               	movwf	___lwdiv@divisor
 12481  03FB  3000               	movlw	0
 12482  03FC  00A1               	movwf	___lwdiv@divisor+1
 12483  03FD  083B               	movf	TM1650_fastPrintNum@inputNumber+1,w
 12484  03FE  00A3               	movwf	___lwdiv@dividend+1
 12485  03FF  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 12486  0400  00A2               	movwf	___lwdiv@dividend
 12487  0401  318A  227D  3182   	fcall	___lwdiv
 12488  0404  0140               	movlb	0	; select bank0
 12489  0405  0821               	movf	?___lwdiv+1,w
 12490  0406  00AB               	movwf	___lwmod@dividend+1
 12491  0407  0820               	movf	?___lwdiv,w
 12492  0408  00AA               	movwf	___lwmod@dividend
 12493  0409  3189  21F1  3182   	fcall	___lwmod
 12494  040C  0140               	movlb	0	; select bank0
 12495  040D  0828               	movf	?___lwmod,w
 12496  040E  3E30               	addlw	48
 12497  040F  00BC               	movwf	??_TM1650_fastPrintNum
 12498  0410  083C               	movf	??_TM1650_fastPrintNum,w
 12499  0411  00B5               	movwf	TM1650_setDigit@num
 12500  0412  01B6               	clrf	TM1650_setDigit@dp
 12501  0413  3002               	movlw	2
 12502  0414  3189  2102  3182   	fcall	_TM1650_setDigit
 12503                           
 12504                           ;tm1650.c: 94:         TM1650_setDigit(3, (inputNumber % 10) + 48, 0);
 12505  0417  300A               	movlw	10
 12506  0418  0140               	movlb	0	; select bank0
 12507  0419  00A8               	movwf	___lwmod@divisor
 12508  041A  3000               	movlw	0
 12509  041B  00A9               	movwf	___lwmod@divisor+1
 12510  041C  083B               	movf	TM1650_fastPrintNum@inputNumber+1,w
 12511  041D  00AB               	movwf	___lwmod@dividend+1
 12512  041E  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 12513  041F  00AA               	movwf	___lwmod@dividend
 12514  0420  3189  21F1  3182   	fcall	___lwmod
 12515  0423  0140               	movlb	0	; select bank0
 12516  0424  0828               	movf	?___lwmod,w
 12517  0425  3E30               	addlw	48
 12518  0426  00BC               	movwf	??_TM1650_fastPrintNum
 12519  0427  083C               	movf	??_TM1650_fastPrintNum,w
 12520  0428  00B5               	movwf	TM1650_setDigit@num
 12521  0429  01B6               	clrf	TM1650_setDigit@dp
 12522  042A  3003               	movlw	3
 12523  042B  3189  2102         	fcall	_TM1650_setDigit
 12524                           
 12525                           ;tm1650.c: 95:     } else {
 12526  042D  0008               	return
 12527  042E                     l4710:	
 12528                           
 12529                           ;tm1650.c: 96:         TM1650_setDigit(0, 'E', 0);
 12530  042E  3045               	movlw	69
 12531  042F  00BC               	movwf	??_TM1650_fastPrintNum
 12532  0430  083C               	movf	??_TM1650_fastPrintNum,w
 12533  0431  00B5               	movwf	TM1650_setDigit@num
 12534  0432  01B6               	clrf	TM1650_setDigit@dp
 12535  0433  3000               	movlw	0
 12536  0434  3189  2102  3182   	fcall	_TM1650_setDigit
 12537                           
 12538                           ;tm1650.c: 97:         TM1650_setDigit(1, 'r', 0);
 12539  0437  3072               	movlw	114
 12540  0438  0140               	movlb	0	; select bank0
 12541  0439  00BC               	movwf	??_TM1650_fastPrintNum
 12542  043A  083C               	movf	??_TM1650_fastPrintNum,w
 12543  043B  00B5               	movwf	TM1650_setDigit@num
 12544  043C  01B6               	clrf	TM1650_setDigit@dp
 12545  043D  3001               	movlw	1
 12546  043E  3189  2102  3182   	fcall	_TM1650_setDigit
 12547                           
 12548                           ;tm1650.c: 98:         TM1650_setDigit(2, 'r', 0);
 12549  0441  3072               	movlw	114
 12550  0442  0140               	movlb	0	; select bank0
 12551  0443  00BC               	movwf	??_TM1650_fastPrintNum
 12552  0444  083C               	movf	??_TM1650_fastPrintNum,w
 12553  0445  00B5               	movwf	TM1650_setDigit@num
 12554  0446  01B6               	clrf	TM1650_setDigit@dp
 12555  0447  3002               	movlw	2
 12556  0448  3189  2102  3182   	fcall	_TM1650_setDigit
 12557                           
 12558                           ;tm1650.c: 99:         TM1650_setDigit(3, ' ', 0);
 12559  044B  3020               	movlw	32
 12560  044C  0140               	movlb	0	; select bank0
 12561  044D  00BC               	movwf	??_TM1650_fastPrintNum
 12562  044E  083C               	movf	??_TM1650_fastPrintNum,w
 12563  044F  00B5               	movwf	TM1650_setDigit@num
 12564  0450  01B6               	clrf	TM1650_setDigit@dp
 12565  0451  3003               	movlw	3
 12566  0452  3189  2102         	fcall	_TM1650_setDigit
 12567  0454  0008               	return
 12568  0455                     __end_of_TM1650_fastPrintNum:	
 12569                           
 12570                           	psect	text31
 12571  09F1                     __ptext31:	
 12572 ;; *************** function ___lwmod *****************
 12573 ;; Defined at:
 12574 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
 12575 ;; Parameters:    Size  Location     Type
 12576 ;;  divisor         2    8[BANK0 ] unsigned int 
 12577 ;;  dividend        2   10[BANK0 ] unsigned int 
 12578 ;; Auto vars:     Size  Location     Type
 12579 ;;  counter         1   13[BANK0 ] unsigned char 
 12580 ;; Return value:  Size  Location     Type
 12581 ;;                  2    8[BANK0 ] unsigned int 
 12582 ;; Registers used:
 12583 ;;		wreg, status,2, status,0
 12584 ;; Tracked objects:
 12585 ;;		On entry : 0/0
 12586 ;;		On exit  : 0/0
 12587 ;;		Unchanged: 0/0
 12588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12589 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12590 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12591 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12592 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12593 ;;Total ram usage:        6 bytes
 12594 ;; Hardware stack levels used:    1
 12595 ;; Hardware stack levels required when called:    4
 12596 ;; This function calls:
 12597 ;;		Nothing
 12598 ;; This function is called by:
 12599 ;;		_TM1650_fastPrintNum
 12600 ;; This function uses a non-reentrant model
 12601 ;;
 12602                           
 12603                           
 12604                           ;psect for function ___lwmod
 12605  09F1                     ___lwmod:	
 12606                           
 12607                           ;incstack = 0
 12608                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12609  09F1  0140               	movlb	0	; select bank0
 12610  09F2  0828               	movf	___lwmod@divisor,w
 12611  09F3  0429               	iorwf	___lwmod@divisor+1,w
 12612  09F4  1903               	btfsc	3,2
 12613  09F5  2A19               	goto	l4548
 12614  09F6  01AD               	clrf	___lwmod@counter
 12615  09F7  0AAD               	incf	___lwmod@counter,f
 12616  09F8                     l4538:	
 12617  09F8  1BA9               	btfsc	___lwmod@divisor+1,7
 12618  09F9  2A04               	goto	l4540
 12619  09FA  3001               	movlw	1
 12620  09FB                     u4105:	
 12621  09FB  35A8               	lslf	___lwmod@divisor,f
 12622  09FC  0DA9               	rlf	___lwmod@divisor+1,f
 12623  09FD  0B89               	decfsz	9,f
 12624  09FE  29FB               	goto	u4105
 12625  09FF  3001               	movlw	1
 12626  0A00  00AC               	movwf	??___lwmod
 12627  0A01  082C               	movf	??___lwmod,w
 12628  0A02  07AD               	addwf	___lwmod@counter,f
 12629  0A03  29F8               	goto	l4538
 12630  0A04                     l4540:	
 12631  0A04  0829               	movf	___lwmod@divisor+1,w
 12632  0A05  022B               	subwf	___lwmod@dividend+1,w
 12633  0A06  1D03               	skipz
 12634  0A07  2A0A               	goto	u4125
 12635  0A08  0828               	movf	___lwmod@divisor,w
 12636  0A09  022A               	subwf	___lwmod@dividend,w
 12637  0A0A                     u4125:	
 12638  0A0A  1C03               	skipc
 12639  0A0B  2A10               	goto	l4544
 12640  0A0C  0828               	movf	___lwmod@divisor,w
 12641  0A0D  02AA               	subwf	___lwmod@dividend,f
 12642  0A0E  0829               	movf	___lwmod@divisor+1,w
 12643  0A0F  3BAB               	subwfb	___lwmod@dividend+1,f
 12644  0A10                     l4544:	
 12645  0A10  3001               	movlw	1
 12646  0A11                     u4135:	
 12647  0A11  36A9               	lsrf	___lwmod@divisor+1,f
 12648  0A12  0CA8               	rrf	___lwmod@divisor,f
 12649  0A13  0B89               	decfsz	9,f
 12650  0A14  2A11               	goto	u4135
 12651  0A15  3001               	movlw	1
 12652  0A16  02AD               	subwf	___lwmod@counter,f
 12653  0A17  1D03               	btfss	3,2
 12654  0A18  2A04               	goto	l4540
 12655  0A19                     l4548:	
 12656  0A19  082B               	movf	___lwmod@dividend+1,w
 12657  0A1A  00A9               	movwf	?___lwmod+1
 12658  0A1B  082A               	movf	___lwmod@dividend,w
 12659  0A1C  00A8               	movwf	?___lwmod
 12660  0A1D  0008               	return
 12661  0A1E                     __end_of___lwmod:	
 12662                           
 12663                           	psect	text32
 12664  0902                     __ptext32:	
 12665 ;; *************** function _TM1650_setDigit *****************
 12666 ;; Defined at:
 12667 ;;		line 37 in file "tm1650.c"
 12668 ;; Parameters:    Size  Location     Type
 12669 ;;  digit           1    wreg     unsigned char 
 12670 ;;  num             1   21[BANK0 ] unsigned char 
 12671 ;;  dp              1   22[BANK0 ] _Bool 
 12672 ;; Auto vars:     Size  Location     Type
 12673 ;;  digit           1   24[BANK0 ] unsigned char 
 12674 ;;  character       1   25[BANK0 ] unsigned char 
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  1    wreg      void 
 12677 ;; Registers used:
 12678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12679 ;; Tracked objects:
 12680 ;;		On entry : 0/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12684 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12685 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12686 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12687 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12688 ;;Total ram usage:        5 bytes
 12689 ;; Hardware stack levels used:    1
 12690 ;; Hardware stack levels required when called:    8
 12691 ;; This function calls:
 12692 ;;		_writeData
 12693 ;; This function is called by:
 12694 ;;		_TM1650_fastPrintNum
 12695 ;;		_putch
 12696 ;; This function uses a non-reentrant model
 12697 ;;
 12698                           
 12699                           
 12700                           ;psect for function _TM1650_setDigit
 12701  0902                     _TM1650_setDigit:	
 12702                           
 12703                           ;incstack = 0
 12704                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12705                           ;TM1650_setDigit@digit stored from wreg
 12706  0902  0140               	movlb	0	; select bank0
 12707  0903  00B8               	movwf	TM1650_setDigit@digit
 12708                           
 12709                           ;tm1650.c: 38:     const uint8_t charTable[] = {;tm1650.c: 47:     uint8_t character = c
      +                          harTable[num - 32];
 12710  0904  0835               	movf	TM1650_setDigit@num,w
 12711  0905  3EE0               	addlw	low ((TM1650_setDigit@charTable+65504)| (0+32768))
 12712  0906  0084               	movwf	4
 12713  0907  308F               	movlw	high ((TM1650_setDigit@charTable+65504)| (0+32768))
 12714  0908  1803               	skipnc
 12715  0909  3E01               	addlw	1
 12716  090A  0085               	movwf	5
 12717  090B  0800               	movf	0,w	;code access
 12718  090C  00B7               	movwf	??_TM1650_setDigit
 12719  090D  0837               	movf	??_TM1650_setDigit,w
 12720  090E  00B9               	movwf	TM1650_setDigit@character
 12721                           
 12722                           ;tm1650.c: 49:     if(dp){
 12723  090F  0836               	movf	TM1650_setDigit@dp,w
 12724  0910  1903               	btfsc	3,2
 12725  0911  2917               	goto	l4500
 12726                           
 12727                           ;tm1650.c: 50:         character = 0b10000000 | character;
 12728  0912  0839               	movf	TM1650_setDigit@character,w
 12729  0913  3880               	iorlw	128
 12730  0914  00B7               	movwf	??_TM1650_setDigit
 12731  0915  0837               	movf	??_TM1650_setDigit,w
 12732  0916  00B9               	movwf	TM1650_setDigit@character
 12733  0917                     l4500:	
 12734                           
 12735                           ;tm1650.c: 53:     writeData(0x34 + digit, character);
 12736  0917  0839               	movf	TM1650_setDigit@character,w
 12737  0918  00B7               	movwf	??_TM1650_setDigit
 12738  0919  0837               	movf	??_TM1650_setDigit,w
 12739  091A  00AE               	movwf	writeData@data
 12740  091B  0838               	movf	TM1650_setDigit@digit,w
 12741  091C  3E34               	addlw	52
 12742  091D  3189  2180         	fcall	_writeData
 12743  091F  0008               	return
 12744  0920                     __end_of_TM1650_setDigit:	
 12745                           
 12746                           	psect	text33
 12747  0980                     __ptext33:	
 12748 ;; *************** function _writeData *****************
 12749 ;; Defined at:
 12750 ;;		line 12 in file "tm1650.c"
 12751 ;; Parameters:    Size  Location     Type
 12752 ;;  address         1    wreg     unsigned char 
 12753 ;;  data            1   14[BANK0 ] unsigned char 
 12754 ;; Auto vars:     Size  Location     Type
 12755 ;;  address         1   18[BANK0 ] unsigned char 
 12756 ;;  status          1   20[BANK0 ] enum E10866
 12757 ;;  dataToSend      1   19[BANK0 ] unsigned char 
 12758 ;; Return value:  Size  Location     Type
 12759 ;;                  1    wreg      void 
 12760 ;; Registers used:
 12761 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12762 ;; Tracked objects:
 12763 ;;		On entry : 0/0
 12764 ;;		On exit  : 0/0
 12765 ;;		Unchanged: 0/0
 12766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12767 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12768 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12769 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12770 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12771 ;;Total ram usage:        7 bytes
 12772 ;; Hardware stack levels used:    1
 12773 ;; Hardware stack levels required when called:    7
 12774 ;; This function calls:
 12775 ;;		_I2C1_MasterWrite
 12776 ;; This function is called by:
 12777 ;;		_TM1650_setDigit
 12778 ;;		_TM1650_enable
 12779 ;;		_putch
 12780 ;; This function uses a non-reentrant model
 12781 ;;
 12782                           
 12783                           
 12784                           ;psect for function _writeData
 12785  0980                     _writeData:	
 12786                           
 12787                           ;incstack = 0
 12788                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12789                           ;writeData@address stored from wreg
 12790  0980  0140               	movlb	0	; select bank0
 12791  0981  00B2               	movwf	writeData@address
 12792                           
 12793                           ;tm1650.c: 13:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12794  0982  3002               	movlw	2
 12795  0983  00AF               	movwf	??_writeData
 12796  0984  082F               	movf	??_writeData,w
 12797  0985  00B4               	movwf	writeData@status
 12798                           
 12799                           ;tm1650.c: 14:     uint8_t dataToSend = data;
 12800  0986  082E               	movf	writeData@data,w
 12801  0987  00AF               	movwf	??_writeData
 12802  0988  082F               	movf	??_writeData,w
 12803  0989  00B3               	movwf	writeData@dataToSend
 12804                           
 12805                           ;tm1650.c: 15:     I2C1_MasterWrite(&dataToSend, 1, address, &status);
 12806  098A  01A7               	clrf	I2C1_MasterWrite@length
 12807  098B  0AA7               	incf	I2C1_MasterWrite@length,f
 12808  098C  0832               	movf	writeData@address,w
 12809  098D  00AF               	movwf	??_writeData
 12810  098E  01B0               	clrf	??_writeData+1
 12811  098F  082F               	movf	??_writeData,w
 12812  0990  00A8               	movwf	I2C1_MasterWrite@address
 12813  0991  0830               	movf	??_writeData+1,w
 12814  0992  00A9               	movwf	I2C1_MasterWrite@address+1
 12815  0993  3034               	movlw	(low (writeData@status| 0))& (0+255)
 12816  0994  00B1               	movwf	??_writeData+2
 12817  0995  0831               	movf	??_writeData+2,w
 12818  0996  00AA               	movwf	I2C1_MasterWrite@pflag
 12819  0997  3033               	movlw	(low (writeData@dataToSend| 0))& (0+255)
 12820  0998  3189  21C7  3189   	fcall	_I2C1_MasterWrite
 12821  099B                     l4480:	
 12822                           ;tm1650.c: 16:     while( status == I2C1_MESSAGE_PENDING );
 12823                           
 12824  099B  3002               	movlw	2
 12825  099C  0140               	movlb	0	; select bank0
 12826  099D  0634               	xorwf	writeData@status,w
 12827  099E  1D03               	btfss	3,2
 12828  099F  0008               	return
 12829  09A0  299B               	goto	l4480
 12830  09A1                     __end_of_writeData:	
 12831                           
 12832                           	psect	text34
 12833  09C7                     __ptext34:	
 12834 ;; *************** function _I2C1_MasterWrite *****************
 12835 ;; Defined at:
 12836 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 12837 ;; Parameters:    Size  Location     Type
 12838 ;;  pdata           1    wreg     PTR unsigned char 
 12839 ;;		 -> writeData@dataToSend(1), 
 12840 ;;  length          1    7[BANK0 ] unsigned char 
 12841 ;;  address         2    8[BANK0 ] unsigned short 
 12842 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 12843 ;;		 -> writeData@status(1), 
 12844 ;; Auto vars:     Size  Location     Type
 12845 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 12846 ;;		 -> writeData@dataToSend(1), 
 12847 ;; Return value:  Size  Location     Type
 12848 ;;                  1    wreg      void 
 12849 ;; Registers used:
 12850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12851 ;; Tracked objects:
 12852 ;;		On entry : 0/0
 12853 ;;		On exit  : 0/0
 12854 ;;		Unchanged: 0/0
 12855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12856 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12858 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12859 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12860 ;;Total ram usage:        7 bytes
 12861 ;; Hardware stack levels used:    1
 12862 ;; Hardware stack levels required when called:    6
 12863 ;; This function calls:
 12864 ;;		_I2C1_MasterTRBInsert
 12865 ;;		_I2C1_MasterWriteTRBBuild
 12866 ;; This function is called by:
 12867 ;;		_writeData
 12868 ;; This function uses a non-reentrant model
 12869 ;;
 12870                           
 12871                           
 12872                           ;psect for function _I2C1_MasterWrite
 12873  09C7                     _I2C1_MasterWrite:	
 12874                           
 12875                           ;incstack = 0
 12876                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12877                           ;I2C1_MasterWrite@pdata stored from wreg
 12878  09C7  0140               	movlb	0	; select bank0
 12879  09C8  00AD               	movwf	I2C1_MasterWrite@pdata
 12880                           
 12881                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 12882  09C9  0141               	movlb	1	; select bank1
 12883  09CA  182A               	btfsc	(_i2c1_object^(0+128)+2),0
 12884  09CB  29EA               	goto	l4474
 12885                           
 12886                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 12887  09CC  0140               	movlb	0	; select bank0
 12888  09CD  082D               	movf	I2C1_MasterWrite@pdata,w
 12889  09CE  00AB               	movwf	??_I2C1_MasterWrite
 12890  09CF  082B               	movf	??_I2C1_MasterWrite,w
 12891  09D0  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 12892  09D1  0827               	movf	I2C1_MasterWrite@length,w
 12893  09D2  00AC               	movwf	??_I2C1_MasterWrite+1
 12894  09D3  082C               	movf	??_I2C1_MasterWrite+1,w
 12895  09D4  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 12896  09D5  0829               	movf	I2C1_MasterWrite@address+1,w
 12897  09D6  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 12898  09D7  0828               	movf	I2C1_MasterWrite@address,w
 12899  09D8  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 12900  09D9  30D3               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
 12901  09DA  3189  2140  3189   	fcall	_I2C1_MasterWriteTRBBuild
 12902                           
 12903                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 12904  09DD  30D3               	movlw	low I2C1_MasterWrite@trBlock
 12905  09DE  0140               	movlb	0	; select bank0
 12906  09DF  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 12907  09E0  3000               	movlw	high I2C1_MasterWrite@trBlock
 12908  09E1  00A1               	movwf	I2C1_MasterTRBInsert@ptrb_list+1
 12909  09E2  082A               	movf	I2C1_MasterWrite@pflag,w
 12910  09E3  00AB               	movwf	??_I2C1_MasterWrite
 12911  09E4  082B               	movf	??_I2C1_MasterWrite,w
 12912  09E5  00A2               	movwf	I2C1_MasterTRBInsert@pflag
 12913  09E6  3001               	movlw	1
 12914  09E7  318B  2342         	fcall	_I2C1_MasterTRBInsert
 12915                           
 12916                           ;mcc_generated_files/i2c1.c: 613:     }
 12917  09E9  0008               	return
 12918  09EA                     l4474:	
 12919                           
 12920                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 12921  09EA  0140               	movlb	0	; select bank0
 12922  09EB  082A               	movf	I2C1_MasterWrite@pflag,w
 12923  09EC  0086               	movwf	6
 12924  09ED  0187               	clrf	7
 12925  09EE  0181               	clrf	1
 12926  09EF  0A81               	incf	1,f
 12927  09F0  0008               	return
 12928  09F1                     __end_of_I2C1_MasterWrite:	
 12929                           
 12930                           	psect	text35
 12931  0940                     __ptext35:	
 12932 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 12933 ;; Defined at:
 12934 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 12935 ;; Parameters:    Size  Location     Type
 12936 ;;  ptrb            1    wreg     PTR struct .
 12937 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 12938 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 12939 ;;		 -> writeData@dataToSend(1), 
 12940 ;;  length          1    1[BANK0 ] unsigned char 
 12941 ;;  address         2    2[BANK0 ] unsigned short 
 12942 ;; Auto vars:     Size  Location     Type
 12943 ;;  ptrb            1    6[BANK0 ] PTR struct .
 12944 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 12945 ;; Return value:  Size  Location     Type
 12946 ;;                  1    wreg      void 
 12947 ;; Registers used:
 12948 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12949 ;; Tracked objects:
 12950 ;;		On entry : 0/0
 12951 ;;		On exit  : 0/0
 12952 ;;		Unchanged: 0/0
 12953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12954 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12955 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12956 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12957 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12958 ;;Total ram usage:        7 bytes
 12959 ;; Hardware stack levels used:    1
 12960 ;; Hardware stack levels required when called:    4
 12961 ;; This function calls:
 12962 ;;		Nothing
 12963 ;; This function is called by:
 12964 ;;		_I2C1_MasterWrite
 12965 ;; This function uses a non-reentrant model
 12966 ;;
 12967                           
 12968                           
 12969                           ;psect for function _I2C1_MasterWriteTRBBuild
 12970  0940                     _I2C1_MasterWriteTRBBuild:	
 12971                           
 12972                           ;incstack = 0
 12973                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 12974                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 12975  0940  0140               	movlb	0	; select bank0
 12976  0941  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 12977                           
 12978                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 12979  0942  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 12980  0943  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 12981  0944  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 12982  0945  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 12983  0946  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 12984  0947  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 12985  0948  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 12986  0949  0086               	movwf	6
 12987  094A  0187               	clrf	7
 12988  094B  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 12989  094C  3FC0               	movwi [0]fsr1
 12990  094D  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 12991  094E  3FC1               	movwi [1]fsr1
 12992                           
 12993                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 12994  094F  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 12995  0950  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 12996  0951  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 12997  0952  3E02               	addlw	2
 12998  0953  0086               	movwf	6
 12999  0954  0187               	clrf	7
 13000  0955  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 13001  0956  0081               	movwf	1
 13002                           
 13003                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 13004  0957  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 13005  0958  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 13006  0959  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 13007  095A  3E03               	addlw	3
 13008  095B  0086               	movwf	6
 13009  095C  0187               	clrf	7
 13010  095D  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 13011  095E  0081               	movwf	1
 13012  095F  0008               	return
 13013  0960                     __end_of_I2C1_MasterWriteTRBBuild:	
 13014                           
 13015                           	psect	text36
 13016  0B42                     __ptext36:	
 13017 ;; *************** function _I2C1_MasterTRBInsert *****************
 13018 ;; Defined at:
 13019 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 13020 ;; Parameters:    Size  Location     Type
 13021 ;;  count           1    wreg     unsigned char 
 13022 ;;  ptrb_list       2    0[BANK0 ] PTR struct .
 13023 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 13024 ;;  pflag           1    2[BANK0 ] PTR enum E10866
 13025 ;;		 -> writeData@status(1), 
 13026 ;; Auto vars:     Size  Location     Type
 13027 ;;  count           1    4[BANK0 ] unsigned char 
 13028 ;; Return value:  Size  Location     Type
 13029 ;;                  1    wreg      void 
 13030 ;; Registers used:
 13031 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13032 ;; Tracked objects:
 13033 ;;		On entry : 0/0
 13034 ;;		On exit  : 0/0
 13035 ;;		Unchanged: 0/0
 13036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13037 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13038 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13039 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13040 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13041 ;;Total ram usage:        5 bytes
 13042 ;; Hardware stack levels used:    1
 13043 ;; Hardware stack levels required when called:    5
 13044 ;; This function calls:
 13045 ;;		_I2C1_WaitForLastPacketToComplete
 13046 ;; This function is called by:
 13047 ;;		_I2C1_MasterWrite
 13048 ;;		_I2C1_MasterRead
 13049 ;; This function uses a non-reentrant model
 13050 ;;
 13051                           
 13052                           
 13053                           ;psect for function _I2C1_MasterTRBInsert
 13054  0B42                     _I2C1_MasterTRBInsert:	
 13055                           
 13056                           ;incstack = 0
 13057                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13058                           ;I2C1_MasterTRBInsert@count stored from wreg
 13059  0B42  0140               	movlb	0	; select bank0
 13060  0B43  00A4               	movwf	I2C1_MasterTRBInsert@count
 13061                           
 13062                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 13063  0B44  0141               	movlb	1	; select bank1
 13064  0B45  182A               	btfsc	(_i2c1_object^(0+128)+2),0
 13065  0B46  2B81               	goto	l4462
 13066                           
 13067                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 13068  0B47  3002               	movlw	2
 13069  0B48  0140               	movlb	0	; select bank0
 13070  0B49  00A3               	movwf	??_I2C1_MasterTRBInsert
 13071  0B4A  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 13072  0B4B  0086               	movwf	6
 13073  0B4C  0187               	clrf	7
 13074  0B4D  0823               	movf	??_I2C1_MasterTRBInsert,w
 13075  0B4E  0081               	movwf	1
 13076                           
 13077                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 13078  0B4F  0141               	movlb	1	; select bank1
 13079  0B50  0A28               	incf	_i2c1_object^(0+128),w
 13080  0B51  0086               	movwf	6
 13081  0B52  0187               	clrf	7
 13082  0B53  0140               	movlb	0	; select bank0
 13083  0B54  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 13084  0B55  3FC0               	movwi [0]fsr1
 13085  0B56  0821               	movf	I2C1_MasterTRBInsert@ptrb_list+1,w
 13086  0B57  3FC1               	movwi [1]fsr1
 13087                           
 13088                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 13089  0B58  0824               	movf	I2C1_MasterTRBInsert@count,w
 13090  0B59  00A3               	movwf	??_I2C1_MasterTRBInsert
 13091  0B5A  0141               	movlb	1	; select bank1
 13092  0B5B  0828               	movf	_i2c1_object^(0+128),w
 13093  0B5C  0086               	movwf	6
 13094  0B5D  0187               	clrf	7
 13095  0B5E  0140               	movlb	0	; select bank0
 13096  0B5F  0823               	movf	??_I2C1_MasterTRBInsert,w
 13097  0B60  0081               	movwf	1
 13098                           
 13099                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 13100  0B61  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 13101  0B62  00A3               	movwf	??_I2C1_MasterTRBInsert
 13102  0B63  0141               	movlb	1	; select bank1
 13103  0B64  0828               	movf	_i2c1_object^(0+128),w
 13104  0B65  3E03               	addlw	3
 13105  0B66  0086               	movwf	6
 13106  0B67  0187               	clrf	7
 13107  0B68  0140               	movlb	0	; select bank0
 13108  0B69  0823               	movf	??_I2C1_MasterTRBInsert,w
 13109  0B6A  0081               	movwf	1
 13110                           
 13111                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 13112  0B6B  3004               	movlw	4
 13113  0B6C  00A3               	movwf	??_I2C1_MasterTRBInsert
 13114  0B6D  0823               	movf	??_I2C1_MasterTRBInsert,w
 13115  0B6E  0141               	movlb	1	; select bank1
 13116  0B6F  07A8               	addwf	_i2c1_object^(0+128),f
 13117                           
 13118                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 13119  0B70  0828               	movf	_i2c1_object^(0+128),w
 13120  0B71  3ADB               	xorlw	(low ((_i2c1_tr_queue| 0+4)))& (0+255)
 13121  0B72  1D03               	skipz
 13122  0B73  2B7A               	goto	l4458
 13123                           
 13124                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 13125  0B74  30D7               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 13126  0B75  0140               	movlb	0	; select bank0
 13127  0B76  00A3               	movwf	??_I2C1_MasterTRBInsert
 13128  0B77  0823               	movf	??_I2C1_MasterTRBInsert,w
 13129  0B78  0141               	movlb	1	; select bank1
 13130  0B79  00A8               	movwf	_i2c1_object^(0+128)
 13131  0B7A                     l4458:	
 13132                           
 13133                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 13134  0B7A  10AA               	bcf	(_i2c1_object^(0+128)+2),1
 13135                           
 13136                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 13137  0B7B  0829               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 13138  0B7C  0628               	xorwf	_i2c1_object^(0+128),w
 13139  0B7D  1D03               	skipz
 13140  0B7E  2B87               	goto	l4464
 13141                           
 13142                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 13143  0B7F  142A               	bsf	(_i2c1_object^(0+128)+2),0
 13144  0B80  2B87               	goto	l4464
 13145  0B81                     l4462:	
 13146                           
 13147                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 13148  0B81  0140               	movlb	0	; select bank0
 13149  0B82  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 13150  0B83  0086               	movwf	6
 13151  0B84  0187               	clrf	7
 13152  0B85  0181               	clrf	1
 13153  0B86  0A81               	incf	1,f
 13154  0B87                     l4464:	
 13155                           
 13156                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 13157  0B87  0140               	movlb	0	; select bank0
 13158  0B88  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 13159  0B89  0086               	movwf	6
 13160  0B8A  0187               	clrf	7
 13161  0B8B  3002               	movlw	2
 13162  0B8C  0601               	xorwf	1,w
 13163  0B8D  1D03               	btfss	3,2
 13164  0B8E  0008               	return
 13165                           
 13166                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 13167  0B8F  3196  26F8         	fcall	_I2C1_WaitForLastPacketToComplete
 13168                           
 13169                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 13170  0B91  014E               	movlb	14	; select bank14
 13171  0B92  140F               	bsf	15,0	;volatile
 13172  0B93  0008               	return
 13173  0B94                     __end_of_I2C1_MasterTRBInsert:	
 13174                           
 13175                           	psect	text37
 13176  16F8                     __ptext37:	
 13177 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 13178 ;; Defined at:
 13179 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 13180 ;; Parameters:    Size  Location     Type
 13181 ;;		None
 13182 ;; Auto vars:     Size  Location     Type
 13183 ;;		None
 13184 ;; Return value:  Size  Location     Type
 13185 ;;                  1    wreg      void 
 13186 ;; Registers used:
 13187 ;;		wreg, status,2, status,0
 13188 ;; Tracked objects:
 13189 ;;		On entry : 0/0
 13190 ;;		On exit  : 0/0
 13191 ;;		Unchanged: 0/0
 13192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13197 ;;Total ram usage:        0 bytes
 13198 ;; Hardware stack levels used:    1
 13199 ;; Hardware stack levels required when called:    4
 13200 ;; This function calls:
 13201 ;;		Nothing
 13202 ;; This function is called by:
 13203 ;;		_I2C1_MasterTRBInsert
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           
 13207                           
 13208                           ;psect for function _I2C1_WaitForLastPacketToComplete
 13209  16F8                     _I2C1_WaitForLastPacketToComplete:	
 13210  16F8                     l4444:	
 13211                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 13212                           
 13213                           ;incstack = 0
 13214                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 13215                           
 13216                           
 13217                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 13218  16F8  0141               	movlb	1	; select bank1
 13219  16F9  0850               	movf	_i2c1_state^(0+128),w
 13220  16FA  1903               	btfsc	3,2
 13221  16FB  0008               	return
 13222  16FC  2EF8               	goto	l4444
 13223  16FD                     __end_of_I2C1_WaitForLastPacketToComplete:	
 13224                           
 13225                           	psect	text38
 13226  1709                     __ptext38:	
 13227 ;; *************** function _CLOCK_init *****************
 13228 ;; Defined at:
 13229 ;;		line 20 in file "clock.c"
 13230 ;; Parameters:    Size  Location     Type
 13231 ;;		None
 13232 ;; Auto vars:     Size  Location     Type
 13233 ;;		None
 13234 ;; Return value:  Size  Location     Type
 13235 ;;                  1    wreg      void 
 13236 ;; Registers used:
 13237 ;;		wreg, status,2, status,0, pclath, cstack
 13238 ;; Tracked objects:
 13239 ;;		On entry : 0/0
 13240 ;;		On exit  : 0/0
 13241 ;;		Unchanged: 0/0
 13242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13247 ;;Total ram usage:        0 bytes
 13248 ;; Hardware stack levels used:    1
 13249 ;; Hardware stack levels required when called:    5
 13250 ;; This function calls:
 13251 ;;		_TMR0_SetInterruptHandler
 13252 ;; This function is called by:
 13253 ;;		_main
 13254 ;; This function uses a non-reentrant model
 13255 ;;
 13256                           
 13257                           
 13258                           ;psect for function _CLOCK_init
 13259  1709                     _CLOCK_init:	
 13260                           
 13261                           ;clock.c: 22:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 13262                           
 13263                           ;incstack = 0
 13264                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 13265  1709  30FD               	movlw	low _CLOCK_timerCallback
 13266  170A  0140               	movlb	0	; select bank0
 13267  170B  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 13268  170C  3016               	movlw	high _CLOCK_timerCallback
 13269  170D  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 13270  170E  3197  273E         	fcall	_TMR0_SetInterruptHandler
 13271  1710  0008               	return
 13272  1711                     __end_of_CLOCK_init:	
 13273                           
 13274                           	psect	text39
 13275  173E                     __ptext39:	
 13276 ;; *************** function _TMR0_SetInterruptHandler *****************
 13277 ;; Defined at:
 13278 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 13279 ;; Parameters:    Size  Location     Type
 13280 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13281 ;;		 -> TMR0_DefaultInterruptHandler(1), CLOCK_timerCallback(1), 
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;		None
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  1    wreg      void 
 13286 ;; Registers used:
 13287 ;;		wreg
 13288 ;; Tracked objects:
 13289 ;;		On entry : 0/0
 13290 ;;		On exit  : 0/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13293 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13296 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13297 ;;Total ram usage:        2 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; Hardware stack levels required when called:    4
 13300 ;; This function calls:
 13301 ;;		Nothing
 13302 ;; This function is called by:
 13303 ;;		_CLOCK_init
 13304 ;;		_TMR0_Initialize
 13305 ;; This function uses a non-reentrant model
 13306 ;;
 13307                           
 13308                           
 13309                           ;psect for function _TMR0_SetInterruptHandler
 13310  173E                     _TMR0_SetInterruptHandler:	
 13311                           
 13312                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 13313                           
 13314                           ;incstack = 0
 13315                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 13316  173E  0140               	movlb	0	; select bank0
 13317  173F  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 13318  1740  0141               	movlb	1	; select bank1
 13319  1741  00EC               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 13320  1742  0140               	movlb	0	; select bank0
 13321  1743  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 13322  1744  0141               	movlb	1	; select bank1
 13323  1745  00EB               	movwf	_TMR0_InterruptHandler^(0+128)
 13324  1746  0008               	return
 13325  1747                     __end_of_TMR0_SetInterruptHandler:	
 13326                           
 13327                           	psect	text40
 13328  0DB0                     __ptext40:	
 13329 ;; *************** function _BUTTONS_task *****************
 13330 ;; Defined at:
 13331 ;;		line 17 in file "buttons.c"
 13332 ;; Parameters:    Size  Location     Type
 13333 ;;		None
 13334 ;; Auto vars:     Size  Location     Type
 13335 ;;  btn             1    8[BANK0 ] PTR struct .
 13336 ;;		 -> buttons(32), 
 13337 ;;  i               1    5[BANK0 ] unsigned char 
 13338 ;;  time            2    6[BANK0 ] unsigned short 
 13339 ;; Return value:  Size  Location     Type
 13340 ;;                  1    wreg      void 
 13341 ;; Registers used:
 13342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13343 ;; Tracked objects:
 13344 ;;		On entry : 0/0
 13345 ;;		On exit  : 0/0
 13346 ;;		Unchanged: 0/0
 13347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13349 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13350 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13351 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13352 ;;Total ram usage:        7 bytes
 13353 ;; Hardware stack levels used:    1
 13354 ;; Hardware stack levels required when called:    5
 13355 ;; This function calls:
 13356 ;;		_CLOCK_getTime
 13357 ;; This function is called by:
 13358 ;;		_main
 13359 ;; This function uses a non-reentrant model
 13360 ;;
 13361                           
 13362                           
 13363                           ;psect for function _BUTTONS_task
 13364  0DB0                     _BUTTONS_task:	
 13365                           
 13366                           ;buttons.c: 18:     time_t time = CLOCK_getTime();
 13367                           
 13368                           ;incstack = 0
 13369                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13370  0DB0  3197  2735  318D   	fcall	_CLOCK_getTime
 13371  0DB3  0140               	movlb	0	; select bank0
 13372  0DB4  0821               	movf	?_CLOCK_getTime+1,w
 13373  0DB5  00A7               	movwf	BUTTONS_task@time+1
 13374  0DB6  0820               	movf	?_CLOCK_getTime,w
 13375  0DB7  00A6               	movwf	BUTTONS_task@time
 13376                           
 13377                           ;buttons.c: 21:     if (time - lastTime < 10)
 13378  0DB8  0141               	movlb	1	; select bank1
 13379  0DB9  0835               	movf	buttons@lastTime^(0+128),w
 13380  0DBA  0140               	movlb	0	; select bank0
 13381  0DBB  0226               	subwf	BUTTONS_task@time,w
 13382  0DBC  00A2               	movwf	??_BUTTONS_task
 13383  0DBD  0141               	movlb	1	; select bank1
 13384  0DBE  0836               	movf	(buttons@lastTime+1)^(0+128),w
 13385  0DBF  0140               	movlb	0	; select bank0
 13386  0DC0  3B27               	subwfb	BUTTONS_task@time+1,w
 13387  0DC1  00A3               	movwf	??_BUTTONS_task+1
 13388  0DC2  3000               	movlw	0
 13389  0DC3  0223               	subwf	??_BUTTONS_task+1,w
 13390  0DC4  300A               	movlw	10
 13391  0DC5  1903               	skipnz
 13392  0DC6  0222               	subwf	??_BUTTONS_task,w
 13393  0DC7  1C03               	btfss	3,0
 13394  0DC8  0008               	return
 13395                           
 13396                           ;buttons.c: 24:     lastTime = time;
 13397  0DC9  0827               	movf	BUTTONS_task@time+1,w
 13398  0DCA  0141               	movlb	1	; select bank1
 13399  0DCB  00B6               	movwf	(buttons@lastTime+1)^(0+128)
 13400  0DCC  0140               	movlb	0	; select bank0
 13401  0DCD  0826               	movf	BUTTONS_task@time,w
 13402  0DCE  0141               	movlb	1	; select bank1
 13403  0DCF  00B5               	movwf	buttons@lastTime^(0+128)
 13404                           
 13405                           ;buttons.c: 27:     for (uint8_t i = 0; i < 4; i++) {
 13406  0DD0  0140               	movlb	0	; select bank0
 13407  0DD1  01A5               	clrf	BUTTONS_task@i
 13408  0DD2                     l5256:	
 13409                           
 13410                           ;buttons.c: 28:         button_t* btn = buttons + i;
 13411  0DD2  0825               	movf	BUTTONS_task@i,w
 13412  0DD3  00A2               	movwf	??_BUTTONS_task
 13413  0DD4  3002               	movlw	2
 13414  0DD5                     u4825:	
 13415  0DD5  35A2               	lslf	??_BUTTONS_task,f
 13416  0DD6  3EFF               	addlw	-1
 13417  0DD7  1D03               	skipz
 13418  0DD8  2DD5               	goto	u4825
 13419  0DD9  3522               	lslf	??_BUTTONS_task,w
 13420  0DDA  3E30               	addlw	(low (_buttons| (0+256)))& (0+255)
 13421  0DDB  00A3               	movwf	??_BUTTONS_task+1
 13422  0DDC  0823               	movf	??_BUTTONS_task+1,w
 13423  0DDD  00A8               	movwf	BUTTONS_task@btn
 13424                           
 13425                           ;buttons.c: 31:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 13426  0DDE  0828               	movf	BUTTONS_task@btn,w
 13427  0DDF  0086               	movwf	6
 13428  0DE0  3001               	movlw	1	; select bank2/3
 13429  0DE1  0087               	movwf	7
 13430  0DE2  3F40               	moviw [0]fsr1
 13431  0DE3  00A2               	movwf	??_BUTTONS_task
 13432  0DE4  3F41               	moviw [1]fsr1
 13433  0DE5  00A3               	movwf	??_BUTTONS_task+1
 13434  0DE6  0822               	movf	??_BUTTONS_task,w
 13435  0DE7  0086               	movwf	6
 13436  0DE8  0823               	movf	??_BUTTONS_task+1,w
 13437  0DE9  0087               	movwf	7
 13438  0DEA  3001               	movlw	1
 13439  0DEB  00A4               	movwf	??_BUTTONS_task+2
 13440  0DEC  0828               	movf	BUTTONS_task@btn,w
 13441  0DED  3E02               	addlw	2
 13442  0DEE  0084               	movwf	4
 13443  0DEF  3001               	movlw	1	; select bank2/3
 13444  0DF0  0085               	movwf	5
 13445  0DF1  0A00               	incf	0,w
 13446  0DF2  2DF4               	goto	u4834
 13447  0DF3                     u4835:	
 13448  0DF3  35A4               	lslf	??_BUTTONS_task+2,f
 13449  0DF4                     u4834:	
 13450  0DF4  0B89               	decfsz	9,f
 13451  0DF5  2DF3               	goto	u4835
 13452  0DF6  0824               	movf	??_BUTTONS_task+2,w
 13453  0DF7  0501               	andwf	1,w
 13454  0DF8  1D03               	btfss	3,2
 13455  0DF9  2E02               	goto	l5262
 13456                           
 13457                           ;buttons.c: 32:             btn->state = STATE_PRESSED;
 13458  0DFA  0828               	movf	BUTTONS_task@btn,w
 13459  0DFB  3E03               	addlw	3
 13460  0DFC  0086               	movwf	6
 13461  0DFD  3001               	movlw	1	; select bank2/3
 13462  0DFE  0087               	movwf	7
 13463  0DFF  0181               	clrf	1
 13464  0E00  0A81               	incf	1,f
 13465                           
 13466                           ;buttons.c: 33:         } else {
 13467  0E01  2E08               	goto	l863
 13468  0E02                     l5262:	
 13469                           
 13470                           ;buttons.c: 34:             btn->state = STATE_UNPRESSED;
 13471  0E02  0828               	movf	BUTTONS_task@btn,w
 13472  0E03  3E03               	addlw	3
 13473  0E04  0086               	movwf	6
 13474  0E05  3001               	movlw	1	; select bank2/3
 13475  0E06  0087               	movwf	7
 13476  0E07  0181               	clrf	1
 13477  0E08                     l863:	
 13478                           ;buttons.c: 35:         }
 13479                           
 13480                           
 13481                           ;buttons.c: 37:         if(btn->state == STATE_PRESSED && btn->lastState == STATE_UNPRES
      +                          SED){
 13482  0E08  0828               	movf	BUTTONS_task@btn,w
 13483  0E09  3E03               	addlw	3
 13484  0E0A  0086               	movwf	6
 13485  0E0B  3001               	movlw	1	; select bank2/3
 13486  0E0C  0087               	movwf	7
 13487  0E0D  0301               	decf	1,w
 13488  0E0E  1D03               	btfss	3,2
 13489  0E0F  2E21               	goto	l864
 13490  0E10  0828               	movf	BUTTONS_task@btn,w
 13491  0E11  3E04               	addlw	4
 13492  0E12  0086               	movwf	6
 13493  0E13  3001               	movlw	1	; select bank2/3
 13494  0E14  0087               	movwf	7
 13495  0E15  0801               	movf	1,w
 13496  0E16  1D03               	btfss	3,2
 13497  0E17  2E21               	goto	l864
 13498                           
 13499                           ;buttons.c: 38:             btn->timeHeld = time;
 13500  0E18  0828               	movf	BUTTONS_task@btn,w
 13501  0E19  3E06               	addlw	6
 13502  0E1A  0086               	movwf	6
 13503  0E1B  3001               	movlw	1	; select bank2/3
 13504  0E1C  0087               	movwf	7
 13505  0E1D  0826               	movf	BUTTONS_task@time,w
 13506  0E1E  3FC0               	movwi [0]fsr1
 13507  0E1F  0827               	movf	BUTTONS_task@time+1,w
 13508  0E20  3FC1               	movwi [1]fsr1
 13509  0E21                     l864:	
 13510                           ;buttons.c: 39:         }
 13511                           
 13512                           
 13513                           ;buttons.c: 41:         if (
 13514  0E21  0828               	movf	BUTTONS_task@btn,w
 13515  0E22  3E03               	addlw	3
 13516  0E23  0086               	movwf	6
 13517  0E24  3001               	movlw	1	; select bank2/3
 13518  0E25  0087               	movwf	7
 13519  0E26  0801               	movf	1,w
 13520  0E27  1D03               	btfss	3,2
 13521  0E28  2E4A               	goto	l865
 13522  0E29  0828               	movf	BUTTONS_task@btn,w
 13523  0E2A  3E04               	addlw	4
 13524  0E2B  0086               	movwf	6
 13525  0E2C  3001               	movlw	1	; select bank2/3
 13526  0E2D  0087               	movwf	7
 13527  0E2E  0301               	decf	1,w
 13528  0E2F  1D03               	btfss	3,2
 13529  0E30  2E4A               	goto	l865
 13530  0E31  0828               	movf	BUTTONS_task@btn,w
 13531  0E32  3E06               	addlw	6
 13532  0E33  0086               	movwf	6
 13533  0E34  3001               	movlw	1	; select bank2/3
 13534  0E35  0087               	movwf	7
 13535  0E36  3F40               	moviw [0]fsr1
 13536  0E37  0226               	subwf	BUTTONS_task@time,w
 13537  0E38  00A2               	movwf	??_BUTTONS_task
 13538  0E39  3F41               	moviw [1]fsr1
 13539  0E3A  3B27               	subwfb	BUTTONS_task@time+1,w
 13540  0E3B  00A3               	movwf	??_BUTTONS_task+1
 13541  0E3C  3003               	movlw	3
 13542  0E3D  0223               	subwf	??_BUTTONS_task+1,w
 13543  0E3E  30E9               	movlw	233
 13544  0E3F  1903               	skipnz
 13545  0E40  0222               	subwf	??_BUTTONS_task,w
 13546  0E41  1803               	skipnc
 13547  0E42  2E4A               	goto	l865
 13548                           
 13549                           ;buttons.c: 44:             && (time - btn->timeHeld) <= 1000) {;buttons.c: 46:         
      +                              btn->event = EVENT_PRESSED;
 13550  0E43  0828               	movf	BUTTONS_task@btn,w
 13551  0E44  3E05               	addlw	5
 13552  0E45  0086               	movwf	6
 13553  0E46  3001               	movlw	1	; select bank2/3
 13554  0E47  0087               	movwf	7
 13555  0E48  0181               	clrf	1
 13556  0E49  0A81               	incf	1,f
 13557  0E4A                     l865:	
 13558                           ;buttons.c: 48:         }
 13559                           
 13560                           
 13561                           ;buttons.c: 49:         if (btn->state == STATE_UNPRESSED
 13562  0E4A  0828               	movf	BUTTONS_task@btn,w
 13563  0E4B  3E03               	addlw	3
 13564  0E4C  0086               	movwf	6
 13565  0E4D  3001               	movlw	1	; select bank2/3
 13566  0E4E  0087               	movwf	7
 13567  0E4F  0801               	movf	1,w
 13568  0E50  1D03               	btfss	3,2
 13569  0E51  2E72               	goto	l866
 13570  0E52  0828               	movf	BUTTONS_task@btn,w
 13571  0E53  3E04               	addlw	4
 13572  0E54  0086               	movwf	6
 13573  0E55  3001               	movlw	1	; select bank2/3
 13574  0E56  0087               	movwf	7
 13575  0E57  0301               	decf	1,w
 13576  0E58  1D03               	btfss	3,2
 13577  0E59  2E72               	goto	l866
 13578  0E5A  0828               	movf	BUTTONS_task@btn,w
 13579  0E5B  3E06               	addlw	6
 13580  0E5C  0086               	movwf	6
 13581  0E5D  3001               	movlw	1	; select bank2/3
 13582  0E5E  0087               	movwf	7
 13583  0E5F  3F40               	moviw [0]fsr1
 13584  0E60  0226               	subwf	BUTTONS_task@time,w
 13585  0E61  00A2               	movwf	??_BUTTONS_task
 13586  0E62  3F41               	moviw [1]fsr1
 13587  0E63  3B27               	subwfb	BUTTONS_task@time+1,w
 13588  0E64  00A3               	movwf	??_BUTTONS_task+1
 13589  0E65  3003               	movlw	3
 13590  0E66  0223               	subwf	??_BUTTONS_task+1,w
 13591  0E67  30E9               	movlw	233
 13592  0E68  1903               	skipnz
 13593  0E69  0222               	subwf	??_BUTTONS_task,w
 13594  0E6A  1C03               	skipc
 13595  0E6B  2E72               	goto	l866
 13596                           
 13597                           ;buttons.c: 51:             && (time - btn->timeHeld) > 1000) {;buttons.c: 53:          
      +                             btn->event = EVENT_IDLE;
 13598  0E6C  0828               	movf	BUTTONS_task@btn,w
 13599  0E6D  3E05               	addlw	5
 13600  0E6E  0086               	movwf	6
 13601  0E6F  3001               	movlw	1	; select bank2/3
 13602  0E70  0087               	movwf	7
 13603  0E71  0181               	clrf	1
 13604  0E72                     l866:	
 13605                           ;buttons.c: 55:         } if (btn->state == STATE_PRESSED && (time - btn->timeHeld) > 10
      +                          00) {
 13606                           
 13607  0E72  0828               	movf	BUTTONS_task@btn,w
 13608  0E73  3E03               	addlw	3
 13609  0E74  0086               	movwf	6
 13610  0E75  3001               	movlw	1	; select bank2/3
 13611  0E76  0087               	movwf	7
 13612  0E77  0301               	decf	1,w
 13613  0E78  1D03               	btfss	3,2
 13614  0E79  2E95               	goto	l867
 13615  0E7A  0828               	movf	BUTTONS_task@btn,w
 13616  0E7B  3E06               	addlw	6
 13617  0E7C  0086               	movwf	6
 13618  0E7D  3001               	movlw	1	; select bank2/3
 13619  0E7E  0087               	movwf	7
 13620  0E7F  3F40               	moviw [0]fsr1
 13621  0E80  0226               	subwf	BUTTONS_task@time,w
 13622  0E81  00A2               	movwf	??_BUTTONS_task
 13623  0E82  3F41               	moviw [1]fsr1
 13624  0E83  3B27               	subwfb	BUTTONS_task@time+1,w
 13625  0E84  00A3               	movwf	??_BUTTONS_task+1
 13626  0E85  3003               	movlw	3
 13627  0E86  0223               	subwf	??_BUTTONS_task+1,w
 13628  0E87  30E9               	movlw	233
 13629  0E88  1903               	skipnz
 13630  0E89  0222               	subwf	??_BUTTONS_task,w
 13631  0E8A  1C03               	skipc
 13632  0E8B  2E95               	goto	l867
 13633                           
 13634                           ;buttons.c: 56:             btn -> event = EVENT_HELD;
 13635  0E8C  3002               	movlw	2
 13636  0E8D  00A2               	movwf	??_BUTTONS_task
 13637  0E8E  0828               	movf	BUTTONS_task@btn,w
 13638  0E8F  3E05               	addlw	5
 13639  0E90  0086               	movwf	6
 13640  0E91  3001               	movlw	1	; select bank2/3
 13641  0E92  0087               	movwf	7
 13642  0E93  0822               	movf	??_BUTTONS_task,w
 13643  0E94  0081               	movwf	1
 13644  0E95                     l867:	
 13645                           ;buttons.c: 57:         }
 13646                           
 13647                           
 13648                           ;buttons.c: 59:         btn->lastState = btn->state;
 13649  0E95  0828               	movf	BUTTONS_task@btn,w
 13650  0E96  3E03               	addlw	3
 13651  0E97  0086               	movwf	6
 13652  0E98  3001               	movlw	1	; select bank2/3
 13653  0E99  0087               	movwf	7
 13654  0E9A  0801               	movf	1,w
 13655  0E9B  00A2               	movwf	??_BUTTONS_task
 13656  0E9C  0828               	movf	BUTTONS_task@btn,w
 13657  0E9D  3E04               	addlw	4
 13658  0E9E  0086               	movwf	6
 13659  0E9F  3001               	movlw	1	; select bank2/3
 13660  0EA0  0087               	movwf	7
 13661  0EA1  0822               	movf	??_BUTTONS_task,w
 13662  0EA2  0081               	movwf	1
 13663                           
 13664                           ;buttons.c: 60:     }
 13665  0EA3  3001               	movlw	1
 13666  0EA4  00A2               	movwf	??_BUTTONS_task
 13667  0EA5  0822               	movf	??_BUTTONS_task,w
 13668  0EA6  07A5               	addwf	BUTTONS_task@i,f
 13669  0EA7  3004               	movlw	4
 13670  0EA8  0225               	subwf	BUTTONS_task@i,w
 13671  0EA9  1803               	btfsc	3,0
 13672  0EAA  0008               	return
 13673  0EAB  2DD2               	goto	l5256
 13674  0EAC                     __end_of_BUTTONS_task:	
 13675                           
 13676                           	psect	text41
 13677  0AF7                     __ptext41:	
 13678 ;; *************** function _BUTTONS_init *****************
 13679 ;; Defined at:
 13680 ;;		line 70 in file "buttons.c"
 13681 ;; Parameters:    Size  Location     Type
 13682 ;;		None
 13683 ;; Auto vars:     Size  Location     Type
 13684 ;;		None
 13685 ;; Return value:  Size  Location     Type
 13686 ;;                  1    wreg      void 
 13687 ;; Registers used:
 13688 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13689 ;; Tracked objects:
 13690 ;;		On entry : 0/0
 13691 ;;		On exit  : 0/0
 13692 ;;		Unchanged: 0/0
 13693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13696 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13697 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13698 ;;Total ram usage:        1 bytes
 13699 ;; Hardware stack levels used:    1
 13700 ;; Hardware stack levels required when called:    5
 13701 ;; This function calls:
 13702 ;;		_init
 13703 ;; This function is called by:
 13704 ;;		_main
 13705 ;; This function uses a non-reentrant model
 13706 ;;
 13707                           
 13708                           
 13709                           ;psect for function _BUTTONS_init
 13710  0AF7                     _BUTTONS_init:	
 13711                           
 13712                           ;buttons.c: 71:     menu = &buttons[0];
 13713                           
 13714                           ;incstack = 0
 13715                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13716  0AF7  3030               	movlw	(low (_buttons| (0+256)))& (0+255)
 13717  0AF8  0140               	movlb	0	; select bank0
 13718  0AF9  00A5               	movwf	??_BUTTONS_init
 13719  0AFA  0825               	movf	??_BUTTONS_init,w
 13720  0AFB  0141               	movlb	1	; select bank1
 13721  0AFC  00C7               	movwf	_menu^(0+128)
 13722                           
 13723                           ;buttons.c: 72:     up = &buttons[1];
 13724  0AFD  3038               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 13725  0AFE  0140               	movlb	0	; select bank0
 13726  0AFF  00A5               	movwf	??_BUTTONS_init
 13727  0B00  0825               	movf	??_BUTTONS_init,w
 13728  0B01  0141               	movlb	1	; select bank1
 13729  0B02  00CA               	movwf	_up^(0+128)
 13730                           
 13731                           ;buttons.c: 73:     down = &buttons[2];
 13732  0B03  3040               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 13733  0B04  0140               	movlb	0	; select bank0
 13734  0B05  00A5               	movwf	??_BUTTONS_init
 13735  0B06  0825               	movf	??_BUTTONS_init,w
 13736  0B07  0141               	movlb	1	; select bank1
 13737  0B08  00C9               	movwf	_down^(0+128)
 13738                           
 13739                           ;buttons.c: 74:     enter = &buttons[3];
 13740  0B09  3048               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 13741  0B0A  0140               	movlb	0	; select bank0
 13742  0B0B  00A5               	movwf	??_BUTTONS_init
 13743  0B0C  0825               	movf	??_BUTTONS_init,w
 13744  0B0D  0141               	movlb	1	; select bank1
 13745  0B0E  00C8               	movwf	_enter^(0+128)
 13746                           
 13747                           ;buttons.c: 76:     init(menu, &PORTC, 2);
 13748  0B0F  300E               	movlw	14
 13749  0B10  0140               	movlb	0	; select bank0
 13750  0B11  00A0               	movwf	init@port
 13751  0B12  3000               	movlw	0
 13752  0B13  00A1               	movwf	init@port+1
 13753  0B14  3002               	movlw	2
 13754  0B15  00A5               	movwf	??_BUTTONS_init
 13755  0B16  0825               	movf	??_BUTTONS_init,w
 13756  0B17  00A2               	movwf	init@pin
 13757  0B18  0141               	movlb	1	; select bank1
 13758  0B19  0847               	movf	_menu^(0+128),w
 13759  0B1A  3189  2120  318A   	fcall	_init
 13760                           
 13761                           ;buttons.c: 77:     init(enter, &PORTA, 2);
 13762  0B1D  300C               	movlw	12
 13763  0B1E  0140               	movlb	0	; select bank0
 13764  0B1F  00A0               	movwf	init@port
 13765  0B20  3000               	movlw	0
 13766  0B21  00A1               	movwf	init@port+1
 13767  0B22  3002               	movlw	2
 13768  0B23  00A5               	movwf	??_BUTTONS_init
 13769  0B24  0825               	movf	??_BUTTONS_init,w
 13770  0B25  00A2               	movwf	init@pin
 13771  0B26  0141               	movlb	1	; select bank1
 13772  0B27  0848               	movf	_enter^(0+128),w
 13773  0B28  3189  2120  318A   	fcall	_init
 13774                           
 13775                           ;buttons.c: 78:     init(down, &PORTC, 0);
 13776  0B2B  300E               	movlw	14
 13777  0B2C  0140               	movlb	0	; select bank0
 13778  0B2D  00A0               	movwf	init@port
 13779  0B2E  3000               	movlw	0
 13780  0B2F  00A1               	movwf	init@port+1
 13781  0B30  01A2               	clrf	init@pin
 13782  0B31  0141               	movlb	1	; select bank1
 13783  0B32  0849               	movf	_down^(0+128),w
 13784  0B33  3189  2120  318A   	fcall	_init
 13785                           
 13786                           ;buttons.c: 79:     init(up, &PORTC, 1);
 13787  0B36  300E               	movlw	14
 13788  0B37  0140               	movlb	0	; select bank0
 13789  0B38  00A0               	movwf	init@port
 13790  0B39  3000               	movlw	0
 13791  0B3A  00A1               	movwf	init@port+1
 13792  0B3B  01A2               	clrf	init@pin
 13793  0B3C  0AA2               	incf	init@pin,f
 13794  0B3D  0141               	movlb	1	; select bank1
 13795  0B3E  084A               	movf	_up^(0+128),w
 13796  0B3F  3189  2120         	fcall	_init
 13797  0B41  0008               	return
 13798  0B42                     __end_of_BUTTONS_init:	
 13799                           
 13800                           	psect	text42
 13801  0920                     __ptext42:	
 13802 ;; *************** function _init *****************
 13803 ;; Defined at:
 13804 ;;		line 63 in file "buttons.c"
 13805 ;; Parameters:    Size  Location     Type
 13806 ;;  btn             1    wreg     PTR struct .
 13807 ;;		 -> buttons(32), NULL(0), 
 13808 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 13809 ;;		 -> PORTA(1), PORTC(1), 
 13810 ;;  pin             1    2[BANK0 ] unsigned char 
 13811 ;; Auto vars:     Size  Location     Type
 13812 ;;  btn             1    4[BANK0 ] PTR struct .
 13813 ;;		 -> buttons(32), NULL(0), 
 13814 ;; Return value:  Size  Location     Type
 13815 ;;                  1    wreg      void 
 13816 ;; Registers used:
 13817 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13818 ;; Tracked objects:
 13819 ;;		On entry : 0/0
 13820 ;;		On exit  : 0/0
 13821 ;;		Unchanged: 0/0
 13822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13823 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13824 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13825 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13826 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13827 ;;Total ram usage:        5 bytes
 13828 ;; Hardware stack levels used:    1
 13829 ;; Hardware stack levels required when called:    4
 13830 ;; This function calls:
 13831 ;;		Nothing
 13832 ;; This function is called by:
 13833 ;;		_BUTTONS_init
 13834 ;; This function uses a non-reentrant model
 13835 ;;
 13836                           
 13837                           
 13838                           ;psect for function _init
 13839  0920                     _init:	
 13840                           
 13841                           ;incstack = 0
 13842                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 13843                           ;init@btn stored from wreg
 13844  0920  0140               	movlb	0	; select bank0
 13845  0921  00A4               	movwf	init@btn
 13846                           
 13847                           ;buttons.c: 64:     btn->port = port;
 13848  0922  0824               	movf	init@btn,w
 13849  0923  0086               	movwf	6
 13850  0924  3001               	movlw	1	; select bank2/3
 13851  0925  0087               	movwf	7
 13852  0926  0820               	movf	init@port,w
 13853  0927  3FC0               	movwi [0]fsr1
 13854  0928  0821               	movf	init@port+1,w
 13855  0929  3FC1               	movwi [1]fsr1
 13856                           
 13857                           ;buttons.c: 65:     btn->pin = pin;
 13858  092A  0822               	movf	init@pin,w
 13859  092B  00A3               	movwf	??_init
 13860  092C  0824               	movf	init@btn,w
 13861  092D  3E02               	addlw	2
 13862  092E  0086               	movwf	6
 13863  092F  3001               	movlw	1	; select bank2/3
 13864  0930  0087               	movwf	7
 13865  0931  0823               	movf	??_init,w
 13866  0932  0081               	movwf	1
 13867                           
 13868                           ;buttons.c: 66:     btn->state = STATE_UNPRESSED;
 13869  0933  0824               	movf	init@btn,w
 13870  0934  3E03               	addlw	3
 13871  0935  0086               	movwf	6
 13872  0936  3001               	movlw	1	; select bank2/3
 13873  0937  0087               	movwf	7
 13874  0938  0181               	clrf	1
 13875                           
 13876                           ;buttons.c: 67:     btn->event = EVENT_IDLE;
 13877  0939  0824               	movf	init@btn,w
 13878  093A  3E05               	addlw	5
 13879  093B  0086               	movwf	6
 13880  093C  3001               	movlw	1	; select bank2/3
 13881  093D  0087               	movwf	7
 13882  093E  0181               	clrf	1
 13883  093F  0008               	return
 13884  0940                     __end_of_init:	
 13885                           
 13886                           	psect	text43
 13887  0CDF                     __ptext43:	
 13888 ;; *************** function _BEAT_task *****************
 13889 ;; Defined at:
 13890 ;;		line 67 in file "beat.c"
 13891 ;; Parameters:    Size  Location     Type
 13892 ;;		None
 13893 ;; Auto vars:     Size  Location     Type
 13894 ;;  offset          2   10[BANK0 ] unsigned short 
 13895 ;; Return value:  Size  Location     Type
 13896 ;;                  1    wreg      void 
 13897 ;; Registers used:
 13898 ;;		wreg, status,2, status,0, pclath, cstack
 13899 ;; Tracked objects:
 13900 ;;		On entry : 0/0
 13901 ;;		On exit  : 0/0
 13902 ;;		Unchanged: 0/0
 13903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13906 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13907 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13908 ;;Total ram usage:        4 bytes
 13909 ;; Hardware stack levels used:    1
 13910 ;; Hardware stack levels required when called:    5
 13911 ;; This function calls:
 13912 ;;		_ADCC_SetUpperThreshold
 13913 ;;		_CLOCK_getTime
 13914 ;;		_TM1650_isEnabled
 13915 ;;		___lwdiv
 13916 ;; This function is called by:
 13917 ;;		_main
 13918 ;; This function uses a non-reentrant model
 13919 ;;
 13920                           
 13921                           
 13922                           ;psect for function _BEAT_task
 13923  0CDF                     _BEAT_task:	
 13924                           
 13925                           ;beat.c: 69:     if (TM1650_isEnabled())
 13926                           
 13927                           ;incstack = 0
 13928                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 13929  0CDF  3196  26ED  318C   	fcall	_TM1650_isEnabled
 13930  0CE2  3A00               	xorlw	0
 13931  0CE3  1D03               	btfss	3,2
 13932  0CE4  0008               	return
 13933                           
 13934                           ;beat.c: 72:     if (CLOCK_getTime() - lastRun < delay)
 13935  0CE5  3197  2735  318C   	fcall	_CLOCK_getTime
 13936  0CE8  0141               	movlb	1	; select bank1
 13937  0CE9  082F               	movf	_lastRun^(0+128),w
 13938  0CEA  0140               	movlb	0	; select bank0
 13939  0CEB  0220               	subwf	?_CLOCK_getTime,w
 13940  0CEC  00A8               	movwf	??_BEAT_task
 13941  0CED  0141               	movlb	1	; select bank1
 13942  0CEE  0830               	movf	(_lastRun+1)^(0+128),w
 13943  0CEF  0140               	movlb	0	; select bank0
 13944  0CF0  3B21               	subwfb	?_CLOCK_getTime+1,w
 13945  0CF1  00A9               	movwf	??_BEAT_task+1
 13946  0CF2  0141               	movlb	1	; select bank1
 13947  0CF3  0866               	movf	(_delay+1)^(0+128),w
 13948  0CF4  0140               	movlb	0	; select bank0
 13949  0CF5  0229               	subwf	??_BEAT_task+1,w
 13950  0CF6  1D03               	skipz
 13951  0CF7  2CFC               	goto	u5035
 13952  0CF8  0141               	movlb	1	; select bank1
 13953  0CF9  0865               	movf	_delay^(0+128),w
 13954  0CFA  0140               	movlb	0	; select bank0
 13955  0CFB  0228               	subwf	??_BEAT_task,w
 13956  0CFC                     u5035:	
 13957  0CFC  1C03               	btfss	3,0
 13958  0CFD  0008               	return
 13959                           
 13960                           ;beat.c: 75:     lastRun = CLOCK_getTime();
 13961  0CFE  3197  2735  318C   	fcall	_CLOCK_getTime
 13962  0D01  0140               	movlb	0	; select bank0
 13963  0D02  0821               	movf	?_CLOCK_getTime+1,w
 13964  0D03  0141               	movlb	1	; select bank1
 13965  0D04  00B0               	movwf	(_lastRun+1)^(0+128)
 13966  0D05  0140               	movlb	0	; select bank0
 13967  0D06  0820               	movf	?_CLOCK_getTime,w
 13968  0D07  0141               	movlb	1	; select bank1
 13969  0D08  00AF               	movwf	_lastRun^(0+128)
 13970                           
 13971                           ;beat.c: 77:     if (thresholdExceeded == 1) {
 13972  0D09  0344               	decf	_thresholdExceeded^(0+128),w
 13973  0D0A  1D03               	btfss	3,2
 13974  0D0B  2D11               	goto	l5334
 13975                           
 13976                           ;beat.c: 81:         thresholdCount++;
 13977  0D0C  3001               	movlw	1
 13978  0D0D  07AD               	addwf	_thresholdCount^(0+128),f
 13979  0D0E  3000               	movlw	0
 13980  0D0F  3DAE               	addwfc	(_thresholdCount+1)^(0+128),f
 13981                           
 13982                           ;beat.c: 82:     } else {
 13983  0D10  2D17               	goto	l5338
 13984  0D11                     l5334:	
 13985                           
 13986                           ;beat.c: 84:         thresholdCount = 0;
 13987  0D11  01AD               	clrf	_thresholdCount^(0+128)
 13988  0D12  01AE               	clrf	(_thresholdCount+1)^(0+128)
 13989                           
 13990                           ;beat.c: 85:         delay = 20;
 13991  0D13  3014               	movlw	20
 13992  0D14  00E5               	movwf	_delay^(0+128)
 13993  0D15  3000               	movlw	0
 13994  0D16  00E6               	movwf	(_delay^(0+128)+1)
 13995  0D17                     l5338:	
 13996                           
 13997                           ;beat.c: 91:     if (thresholdExceeded == 1 && lastDetected == 0) {
 13998  0D17  0344               	decf	_thresholdExceeded^(0+128),w
 13999  0D18  1D03               	btfss	3,2
 14000  0D19  2D5C               	goto	l5356
 14001  0D1A  0843               	movf	_lastDetected^(0+128),w
 14002  0D1B  1D03               	btfss	3,2
 14003  0D1C  2D5C               	goto	l5356
 14004                           
 14005                           ;beat.c: 93:         detected = 1;
 14006  0D1D  01C5               	clrf	_detected^(0+128)
 14007  0D1E  0AC5               	incf	_detected^(0+128),f
 14008                           
 14009                           ;beat.c: 96:         delay = 100;
 14010  0D1F  3064               	movlw	100
 14011  0D20  00E5               	movwf	_delay^(0+128)
 14012  0D21  3000               	movlw	0
 14013  0D22  00E6               	movwf	(_delay^(0+128)+1)
 14014                           
 14015                           ;beat.c: 99:         time_t offset = CLOCK_getTime() - lastBeat;
 14016  0D23  3197  2735  318C   	fcall	_CLOCK_getTime
 14017  0D26  0141               	movlb	1	; select bank1
 14018  0D27  0833               	movf	_lastBeat^(0+128),w
 14019  0D28  0140               	movlb	0	; select bank0
 14020  0D29  0220               	subwf	?_CLOCK_getTime,w
 14021  0D2A  00AA               	movwf	BEAT_task@offset
 14022  0D2B  0141               	movlb	1	; select bank1
 14023  0D2C  0834               	movf	(_lastBeat+1)^(0+128),w
 14024  0D2D  0140               	movlb	0	; select bank0
 14025  0D2E  3B21               	subwfb	?_CLOCK_getTime+1,w
 14026  0D2F  00AB               	movwf	BEAT_task@offset+1
 14027                           
 14028                           ;beat.c: 101:         lastBeat = CLOCK_getTime();
 14029  0D30  3197  2735  318C   	fcall	_CLOCK_getTime
 14030  0D33  0140               	movlb	0	; select bank0
 14031  0D34  0821               	movf	?_CLOCK_getTime+1,w
 14032  0D35  0141               	movlb	1	; select bank1
 14033  0D36  00B4               	movwf	(_lastBeat+1)^(0+128)
 14034  0D37  0140               	movlb	0	; select bank0
 14035  0D38  0820               	movf	?_CLOCK_getTime,w
 14036  0D39  0141               	movlb	1	; select bank1
 14037  0D3A  00B3               	movwf	_lastBeat^(0+128)
 14038                           
 14039                           ;beat.c: 103:         if (offset < 150)
 14040  0D3B  3000               	movlw	0
 14041  0D3C  0140               	movlb	0	; select bank0
 14042  0D3D  022B               	subwf	BEAT_task@offset+1,w
 14043  0D3E  3096               	movlw	150
 14044  0D3F  1903               	skipnz
 14045  0D40  022A               	subwf	BEAT_task@offset,w
 14046  0D41  1803               	skipnc
 14047  0D42  2D49               	goto	l5354
 14048                           
 14049                           ;beat.c: 104:             bpm = 400;
 14050  0D43  3090               	movlw	144
 14051  0D44  0141               	movlb	1	; select bank1
 14052  0D45  00B1               	movwf	_bpm^(0+128)
 14053  0D46  3001               	movlw	1
 14054  0D47  00B2               	movwf	(_bpm^(0+128)+1)
 14055  0D48  2D5C               	goto	l5356
 14056  0D49                     l5354:	
 14057                           
 14058                           ;beat.c: 106:             bpm = 60 * 1000 / offset;
 14059  0D49  082B               	movf	BEAT_task@offset+1,w
 14060  0D4A  00A1               	movwf	___lwdiv@divisor+1
 14061  0D4B  082A               	movf	BEAT_task@offset,w
 14062  0D4C  00A0               	movwf	___lwdiv@divisor
 14063  0D4D  3060               	movlw	96
 14064  0D4E  00A2               	movwf	___lwdiv@dividend
 14065  0D4F  30EA               	movlw	234
 14066  0D50  00A3               	movwf	___lwdiv@dividend+1
 14067  0D51  318A  227D  318C   	fcall	___lwdiv
 14068  0D54  0140               	movlb	0	; select bank0
 14069  0D55  0821               	movf	?___lwdiv+1,w
 14070  0D56  0141               	movlb	1	; select bank1
 14071  0D57  00B2               	movwf	(_bpm+1)^(0+128)
 14072  0D58  0140               	movlb	0	; select bank0
 14073  0D59  0820               	movf	?___lwdiv,w
 14074  0D5A  0141               	movlb	1	; select bank1
 14075  0D5B  00B1               	movwf	_bpm^(0+128)
 14076  0D5C                     l5356:	
 14077                           
 14078                           ;beat.c: 112:     lastDetected = thresholdExceeded;
 14079  0D5C  0844               	movf	_thresholdExceeded^(0+128),w
 14080  0D5D  0140               	movlb	0	; select bank0
 14081  0D5E  00A8               	movwf	??_BEAT_task
 14082  0D5F  0828               	movf	??_BEAT_task,w
 14083  0D60  0141               	movlb	1	; select bank1
 14084  0D61  00C3               	movwf	_lastDetected^(0+128)
 14085                           
 14086                           ;beat.c: 113:     thresholdExceeded = 0;
 14087  0D62  01C4               	clrf	_thresholdExceeded^(0+128)
 14088                           
 14089                           ;beat.c: 115:     if (thresholdCount > 3) {
 14090  0D63  082E               	movf	(_thresholdCount+1)^(0+128),w
 14091  0D64  3A80               	xorlw	128
 14092  0D65  0140               	movlb	0	; select bank0
 14093  0D66  00A8               	movwf	??_BEAT_task
 14094  0D67  3080               	movlw	128
 14095  0D68  0228               	subwf	??_BEAT_task,w
 14096  0D69  1D03               	skipz
 14097  0D6A  2D6E               	goto	u5085
 14098  0D6B  3004               	movlw	4
 14099  0D6C  0141               	movlb	1	; select bank1
 14100  0D6D  022D               	subwf	_thresholdCount^(0+128),w
 14101  0D6E                     u5085:	
 14102  0D6E  1C03               	skipc
 14103  0D6F  2D8D               	goto	l5370
 14104                           
 14105                           ;beat.c: 116:         threshold += 1;
 14106  0D70  3001               	movlw	1
 14107  0D71  0141               	movlb	1	; select bank1
 14108  0D72  07E7               	addwf	_threshold^(0+128),f
 14109  0D73  3000               	movlw	0
 14110  0D74  3DE8               	addwfc	(_threshold+1)^(0+128),f
 14111                           
 14112                           ;beat.c: 117:         ADCC_SetUpperThreshold(threshold);
 14113  0D75  0868               	movf	(_threshold+1)^(0+128),w
 14114  0D76  0140               	movlb	0	; select bank0
 14115  0D77  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 14116  0D78  0141               	movlb	1	; select bank1
 14117  0D79  0867               	movf	_threshold^(0+128),w
 14118  0D7A  0140               	movlb	0	; select bank0
 14119  0D7B  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 14120  0D7C  3197  2723  318C   	fcall	_ADCC_SetUpperThreshold
 14121                           
 14122                           ;beat.c: 118:         thresholdCount = 0;
 14123  0D7F  0141               	movlb	1	; select bank1
 14124  0D80  01AD               	clrf	_thresholdCount^(0+128)
 14125  0D81  01AE               	clrf	(_thresholdCount+1)^(0+128)
 14126                           
 14127                           ;beat.c: 121:         lastBeat = CLOCK_getTime();
 14128  0D82  3197  2735         	fcall	_CLOCK_getTime
 14129  0D84  0140               	movlb	0	; select bank0
 14130  0D85  0821               	movf	?_CLOCK_getTime+1,w
 14131  0D86  0141               	movlb	1	; select bank1
 14132  0D87  00B4               	movwf	(_lastBeat+1)^(0+128)
 14133  0D88  0140               	movlb	0	; select bank0
 14134  0D89  0820               	movf	?_CLOCK_getTime,w
 14135  0D8A  0141               	movlb	1	; select bank1
 14136  0D8B  00B3               	movwf	_lastBeat^(0+128)
 14137                           
 14138                           ;beat.c: 122:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 14139  0D8C  0008               	return
 14140  0D8D                     l5370:	
 14141  0D8D  3197  2735  318C   	fcall	_CLOCK_getTime
 14142  0D90  0141               	movlb	1	; select bank1
 14143  0D91  0833               	movf	_lastBeat^(0+128),w
 14144  0D92  0140               	movlb	0	; select bank0
 14145  0D93  0220               	subwf	?_CLOCK_getTime,w
 14146  0D94  00A8               	movwf	??_BEAT_task
 14147  0D95  0141               	movlb	1	; select bank1
 14148  0D96  0834               	movf	(_lastBeat+1)^(0+128),w
 14149  0D97  0140               	movlb	0	; select bank0
 14150  0D98  3B21               	subwfb	?_CLOCK_getTime+1,w
 14151  0D99  00A9               	movwf	??_BEAT_task+1
 14152  0D9A  3003               	movlw	3
 14153  0D9B  0229               	subwf	??_BEAT_task+1,w
 14154  0D9C  30E9               	movlw	233
 14155  0D9D  1903               	skipnz
 14156  0D9E  0228               	subwf	??_BEAT_task,w
 14157  0D9F  1C03               	skipc
 14158  0DA0  0008               	return
 14159                           
 14160                           ;beat.c: 123:         threshold -= 1;
 14161  0DA1  3001               	movlw	1
 14162  0DA2  0141               	movlb	1	; select bank1
 14163  0DA3  02E7               	subwf	_threshold^(0+128),f
 14164  0DA4  3000               	movlw	0
 14165  0DA5  3BE8               	subwfb	(_threshold+1)^(0+128),f
 14166                           
 14167                           ;beat.c: 124:         ADCC_SetUpperThreshold(threshold);
 14168  0DA6  0868               	movf	(_threshold+1)^(0+128),w
 14169  0DA7  0140               	movlb	0	; select bank0
 14170  0DA8  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 14171  0DA9  0141               	movlb	1	; select bank1
 14172  0DAA  0867               	movf	_threshold^(0+128),w
 14173  0DAB  0140               	movlb	0	; select bank0
 14174  0DAC  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 14175  0DAD  3197  2723         	fcall	_ADCC_SetUpperThreshold
 14176  0DAF  0008               	return
 14177  0DB0                     __end_of_BEAT_task:	
 14178                           
 14179                           	psect	text44
 14180  0A7D                     __ptext44:	
 14181 ;; *************** function ___lwdiv *****************
 14182 ;; Defined at:
 14183 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
 14184 ;; Parameters:    Size  Location     Type
 14185 ;;  divisor         2    0[BANK0 ] unsigned int 
 14186 ;;  dividend        2    2[BANK0 ] unsigned int 
 14187 ;; Auto vars:     Size  Location     Type
 14188 ;;  quotient        2    6[BANK0 ] unsigned int 
 14189 ;;  counter         1    5[BANK0 ] unsigned char 
 14190 ;; Return value:  Size  Location     Type
 14191 ;;                  2    0[BANK0 ] unsigned int 
 14192 ;; Registers used:
 14193 ;;		wreg, status,2, status,0
 14194 ;; Tracked objects:
 14195 ;;		On entry : 0/0
 14196 ;;		On exit  : 0/0
 14197 ;;		Unchanged: 0/0
 14198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14199 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14200 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14201 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14202 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14203 ;;Total ram usage:        8 bytes
 14204 ;; Hardware stack levels used:    1
 14205 ;; Hardware stack levels required when called:    4
 14206 ;; This function calls:
 14207 ;;		Nothing
 14208 ;; This function is called by:
 14209 ;;		_TM1650_fastPrintNum
 14210 ;;		_BEAT_task
 14211 ;; This function uses a non-reentrant model
 14212 ;;
 14213                           
 14214                           
 14215                           ;psect for function ___lwdiv
 14216  0A7D                     ___lwdiv:	
 14217                           
 14218                           ;incstack = 0
 14219                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 14220  0A7D  0140               	movlb	0	; select bank0
 14221  0A7E  01A6               	clrf	___lwdiv@quotient
 14222  0A7F  01A7               	clrf	___lwdiv@quotient+1
 14223  0A80  0820               	movf	___lwdiv@divisor,w
 14224  0A81  0421               	iorwf	___lwdiv@divisor+1,w
 14225  0A82  1903               	btfsc	3,2
 14226  0A83  2AAD               	goto	l4526
 14227  0A84  01A5               	clrf	___lwdiv@counter
 14228  0A85  0AA5               	incf	___lwdiv@counter,f
 14229  0A86                     l4514:	
 14230  0A86  1BA1               	btfsc	___lwdiv@divisor+1,7
 14231  0A87  2A92               	goto	l4516
 14232  0A88  3001               	movlw	1
 14233  0A89                     u4035:	
 14234  0A89  35A0               	lslf	___lwdiv@divisor,f
 14235  0A8A  0DA1               	rlf	___lwdiv@divisor+1,f
 14236  0A8B  0B89               	decfsz	9,f
 14237  0A8C  2A89               	goto	u4035
 14238  0A8D  3001               	movlw	1
 14239  0A8E  00A4               	movwf	??___lwdiv
 14240  0A8F  0824               	movf	??___lwdiv,w
 14241  0A90  07A5               	addwf	___lwdiv@counter,f
 14242  0A91  2A86               	goto	l4514
 14243  0A92                     l4516:	
 14244  0A92  3001               	movlw	1
 14245  0A93                     u4055:	
 14246  0A93  35A6               	lslf	___lwdiv@quotient,f
 14247  0A94  0DA7               	rlf	___lwdiv@quotient+1,f
 14248  0A95  0B89               	decfsz	9,f
 14249  0A96  2A93               	goto	u4055
 14250  0A97  0821               	movf	___lwdiv@divisor+1,w
 14251  0A98  0223               	subwf	___lwdiv@dividend+1,w
 14252  0A99  1D03               	skipz
 14253  0A9A  2A9D               	goto	u4065
 14254  0A9B  0820               	movf	___lwdiv@divisor,w
 14255  0A9C  0222               	subwf	___lwdiv@dividend,w
 14256  0A9D                     u4065:	
 14257  0A9D  1C03               	skipc
 14258  0A9E  2AA4               	goto	l4522
 14259  0A9F  0820               	movf	___lwdiv@divisor,w
 14260  0AA0  02A2               	subwf	___lwdiv@dividend,f
 14261  0AA1  0821               	movf	___lwdiv@divisor+1,w
 14262  0AA2  3BA3               	subwfb	___lwdiv@dividend+1,f
 14263  0AA3  1426               	bsf	___lwdiv@quotient,0
 14264  0AA4                     l4522:	
 14265  0AA4  3001               	movlw	1
 14266  0AA5                     u4075:	
 14267  0AA5  36A1               	lsrf	___lwdiv@divisor+1,f
 14268  0AA6  0CA0               	rrf	___lwdiv@divisor,f
 14269  0AA7  0B89               	decfsz	9,f
 14270  0AA8  2AA5               	goto	u4075
 14271  0AA9  3001               	movlw	1
 14272  0AAA  02A5               	subwf	___lwdiv@counter,f
 14273  0AAB  1D03               	btfss	3,2
 14274  0AAC  2A92               	goto	l4516
 14275  0AAD                     l4526:	
 14276  0AAD  0827               	movf	___lwdiv@quotient+1,w
 14277  0AAE  00A1               	movwf	?___lwdiv+1
 14278  0AAF  0826               	movf	___lwdiv@quotient,w
 14279  0AB0  00A0               	movwf	?___lwdiv
 14280  0AB1  0008               	return
 14281  0AB2                     __end_of___lwdiv:	
 14282                           
 14283                           	psect	text45
 14284  16ED                     __ptext45:	
 14285 ;; *************** function _TM1650_isEnabled *****************
 14286 ;; Defined at:
 14287 ;;		line 115 in file "tm1650.c"
 14288 ;; Parameters:    Size  Location     Type
 14289 ;;		None
 14290 ;; Auto vars:     Size  Location     Type
 14291 ;;		None
 14292 ;; Return value:  Size  Location     Type
 14293 ;;                  1    wreg      _Bool 
 14294 ;; Registers used:
 14295 ;;		wreg
 14296 ;; Tracked objects:
 14297 ;;		On entry : 0/0
 14298 ;;		On exit  : 0/0
 14299 ;;		Unchanged: 0/0
 14300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14305 ;;Total ram usage:        0 bytes
 14306 ;; Hardware stack levels used:    1
 14307 ;; Hardware stack levels required when called:    4
 14308 ;; This function calls:
 14309 ;;		Nothing
 14310 ;; This function is called by:
 14311 ;;		_BEAT_task
 14312 ;; This function uses a non-reentrant model
 14313 ;;
 14314                           
 14315                           
 14316                           ;psect for function _TM1650_isEnabled
 14317  16ED                     _TM1650_isEnabled:	
 14318                           
 14319                           ;tm1650.c: 116:     return displayState;
 14320                           
 14321                           ;incstack = 0
 14322                           ; Regs used in _TM1650_isEnabled: [wreg]
 14323  16ED  0141               	movlb	1	; select bank1
 14324  16EE  0846               	movf	_displayState^(0+128),w
 14325  16EF  0008               	return
 14326  16F0                     __end_of_TM1650_isEnabled:	
 14327                           
 14328                           	psect	text46
 14329  1735                     __ptext46:	
 14330 ;; *************** function _CLOCK_getTime *****************
 14331 ;; Defined at:
 14332 ;;		line 25 in file "clock.c"
 14333 ;; Parameters:    Size  Location     Type
 14334 ;;		None
 14335 ;; Auto vars:     Size  Location     Type
 14336 ;;		None
 14337 ;; Return value:  Size  Location     Type
 14338 ;;                  2    0[BANK0 ] unsigned short 
 14339 ;; Registers used:
 14340 ;;		wreg
 14341 ;; Tracked objects:
 14342 ;;		On entry : 0/0
 14343 ;;		On exit  : 0/0
 14344 ;;		Unchanged: 0/0
 14345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14346 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14349 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14350 ;;Total ram usage:        2 bytes
 14351 ;; Hardware stack levels used:    1
 14352 ;; Hardware stack levels required when called:    4
 14353 ;; This function calls:
 14354 ;;		Nothing
 14355 ;; This function is called by:
 14356 ;;		_main
 14357 ;;		_BUTTONS_task
 14358 ;;		_CONTROLLER_task
 14359 ;;		_BEAT_task
 14360 ;; This function uses a non-reentrant model
 14361 ;;
 14362                           
 14363                           
 14364                           ;psect for function _CLOCK_getTime
 14365  1735                     _CLOCK_getTime:	
 14366                           
 14367                           ;clock.c: 26:     return currentTime;
 14368                           
 14369                           ;incstack = 0
 14370                           ; Regs used in _CLOCK_getTime: [wreg]
 14371  1735  0141               	movlb	1	; select bank1
 14372  1736  0838               	movf	(_currentTime+1)^(0+128),w
 14373  1737  0140               	movlb	0	; select bank0
 14374  1738  00A1               	movwf	?_CLOCK_getTime+1
 14375  1739  0141               	movlb	1	; select bank1
 14376  173A  0837               	movf	_currentTime^(0+128),w
 14377  173B  0140               	movlb	0	; select bank0
 14378  173C  00A0               	movwf	?_CLOCK_getTime
 14379  173D  0008               	return
 14380  173E                     __end_of_CLOCK_getTime:	
 14381                           
 14382                           	psect	text47
 14383  081E                     __ptext47:	
 14384 ;; *************** function _BEAT_init *****************
 14385 ;; Defined at:
 14386 ;;		line 40 in file "beat.c"
 14387 ;; Parameters:    Size  Location     Type
 14388 ;;		None
 14389 ;; Auto vars:     Size  Location     Type
 14390 ;;		None
 14391 ;; Return value:  Size  Location     Type
 14392 ;;                  1    wreg      void 
 14393 ;; Registers used:
 14394 ;;		wreg, status,2, status,0, pclath, cstack
 14395 ;; Tracked objects:
 14396 ;;		On entry : 0/0
 14397 ;;		On exit  : 0/0
 14398 ;;		Unchanged: 0/0
 14399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14404 ;;Total ram usage:        0 bytes
 14405 ;; Hardware stack levels used:    1
 14406 ;; Hardware stack levels required when called:    5
 14407 ;; This function calls:
 14408 ;;		_ADCC_SetADTIInterruptHandler
 14409 ;;		_ADCC_SetUpperThreshold
 14410 ;;		_ADCC_StartConversion
 14411 ;; This function is called by:
 14412 ;;		_main
 14413 ;; This function uses a non-reentrant model
 14414 ;;
 14415                           
 14416                           
 14417                           ;psect for function _BEAT_init
 14418  081E                     _BEAT_init:	
 14419                           
 14420                           ;beat.c: 41:     ADCC_SetUpperThreshold(threshold);
 14421                           
 14422                           ;incstack = 0
 14423                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 14424  081E  0141               	movlb	1	; select bank1
 14425  081F  0868               	movf	(_threshold+1)^(0+128),w
 14426  0820  0140               	movlb	0	; select bank0
 14427  0821  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 14428  0822  0141               	movlb	1	; select bank1
 14429  0823  0867               	movf	_threshold^(0+128),w
 14430  0824  0140               	movlb	0	; select bank0
 14431  0825  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 14432  0826  3197  2723  3188   	fcall	_ADCC_SetUpperThreshold
 14433                           
 14434                           ;beat.c: 42:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 14435  0829  30F0               	movlw	low _adcThresholdHandler
 14436  082A  0140               	movlb	0	; select bank0
 14437  082B  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 14438  082C  3016               	movlw	high _adcThresholdHandler
 14439  082D  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 14440  082E  3197  271A  3188   	fcall	_ADCC_SetADTIInterruptHandler
 14441                           
 14442                           ;beat.c: 43:     ADCC_StartConversion(0x0F);
 14443  0831  300F               	movlw	15
 14444  0832  3197  272C         	fcall	_ADCC_StartConversion
 14445  0834  0008               	return
 14446  0835                     __end_of_BEAT_init:	
 14447                           
 14448                           	psect	text48
 14449  172C                     __ptext48:	
 14450 ;; *************** function _ADCC_StartConversion *****************
 14451 ;; Defined at:
 14452 ;;		line 121 in file "mcc_generated_files/adcc.c"
 14453 ;; Parameters:    Size  Location     Type
 14454 ;;  channel         1    wreg     enum E10867
 14455 ;; Auto vars:     Size  Location     Type
 14456 ;;  channel         1    0[BANK0 ] enum E10867
 14457 ;; Return value:  Size  Location     Type
 14458 ;;                  1    wreg      void 
 14459 ;; Registers used:
 14460 ;;		wreg
 14461 ;; Tracked objects:
 14462 ;;		On entry : 0/0
 14463 ;;		On exit  : 0/0
 14464 ;;		Unchanged: 0/0
 14465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14469 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14470 ;;Total ram usage:        1 bytes
 14471 ;; Hardware stack levels used:    1
 14472 ;; Hardware stack levels required when called:    4
 14473 ;; This function calls:
 14474 ;;		Nothing
 14475 ;; This function is called by:
 14476 ;;		_BEAT_init
 14477 ;; This function uses a non-reentrant model
 14478 ;;
 14479                           
 14480                           
 14481                           ;psect for function _ADCC_StartConversion
 14482  172C                     _ADCC_StartConversion:	
 14483                           
 14484                           ;incstack = 0
 14485                           ; Regs used in _ADCC_StartConversion: [wreg]
 14486                           ;ADCC_StartConversion@channel stored from wreg
 14487  172C  0140               	movlb	0	; select bank0
 14488  172D  00A0               	movwf	ADCC_StartConversion@channel
 14489                           
 14490                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 14491  172E  0820               	movf	ADCC_StartConversion@channel,w
 14492  172F  0141               	movlb	1	; select bank1
 14493  1730  009F               	movwf	31	;volatile
 14494                           
 14495                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 14496  1731  0142               	movlb	2	; select bank2
 14497  1732  1791               	bsf	17,7	;volatile
 14498                           
 14499                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 14500  1733  1411               	bsf	17,0	;volatile
 14501  1734  0008               	return
 14502  1735                     __end_of_ADCC_StartConversion:	
 14503                           
 14504                           	psect	text49
 14505  1723                     __ptext49:	
 14506 ;; *************** function _ADCC_SetUpperThreshold *****************
 14507 ;; Defined at:
 14508 ;;		line 251 in file "mcc_generated_files/adcc.c"
 14509 ;; Parameters:    Size  Location     Type
 14510 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 14511 ;; Auto vars:     Size  Location     Type
 14512 ;;		None
 14513 ;; Return value:  Size  Location     Type
 14514 ;;                  1    wreg      void 
 14515 ;; Registers used:
 14516 ;;		wreg, status,2
 14517 ;; Tracked objects:
 14518 ;;		On entry : 0/0
 14519 ;;		On exit  : 0/0
 14520 ;;		Unchanged: 0/0
 14521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14522 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14525 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14526 ;;Total ram usage:        2 bytes
 14527 ;; Hardware stack levels used:    1
 14528 ;; Hardware stack levels required when called:    4
 14529 ;; This function calls:
 14530 ;;		Nothing
 14531 ;; This function is called by:
 14532 ;;		_BEAT_init
 14533 ;;		_BEAT_task
 14534 ;; This function uses a non-reentrant model
 14535 ;;
 14536                           
 14537                           
 14538                           ;psect for function _ADCC_SetUpperThreshold
 14539  1723                     _ADCC_SetUpperThreshold:	
 14540                           
 14541                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 14542                           
 14543                           ;incstack = 0
 14544                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 14545  1723  0140               	movlb	0	; select bank0
 14546  1724  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 14547  1725  0141               	movlb	1	; select bank1
 14548  1726  008F               	movwf	15	;volatile
 14549                           
 14550                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 14551  1727  0140               	movlb	0	; select bank0
 14552  1728  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 14553  1729  0141               	movlb	1	; select bank1
 14554  172A  008E               	movwf	14	;volatile
 14555  172B  0008               	return
 14556  172C                     __end_of_ADCC_SetUpperThreshold:	
 14557                           
 14558                           	psect	text50
 14559  171A                     __ptext50:	
 14560 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 14561 ;; Defined at:
 14562 ;;		line 317 in file "mcc_generated_files/adcc.c"
 14563 ;; Parameters:    Size  Location     Type
 14564 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 14565 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 14566 ;; Auto vars:     Size  Location     Type
 14567 ;;		None
 14568 ;; Return value:  Size  Location     Type
 14569 ;;                  1    wreg      void 
 14570 ;; Registers used:
 14571 ;;		wreg
 14572 ;; Tracked objects:
 14573 ;;		On entry : 0/0
 14574 ;;		On exit  : 0/0
 14575 ;;		Unchanged: 0/0
 14576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14577 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14580 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14581 ;;Total ram usage:        2 bytes
 14582 ;; Hardware stack levels used:    1
 14583 ;; Hardware stack levels required when called:    4
 14584 ;; This function calls:
 14585 ;;		Nothing
 14586 ;; This function is called by:
 14587 ;;		_ADCC_Initialize
 14588 ;;		_BEAT_init
 14589 ;; This function uses a non-reentrant model
 14590 ;;
 14591                           
 14592                           
 14593                           ;psect for function _ADCC_SetADTIInterruptHandler
 14594  171A                     _ADCC_SetADTIInterruptHandler:	
 14595                           
 14596                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 14597                           
 14598                           ;incstack = 0
 14599                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 14600  171A  0140               	movlb	0	; select bank0
 14601  171B  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 14602  171C  0141               	movlb	1	; select bank1
 14603  171D  00EE               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128)
 14604  171E  0140               	movlb	0	; select bank0
 14605  171F  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 14606  1720  0141               	movlb	1	; select bank1
 14607  1721  00ED               	movwf	_ADCC_ADTI_InterruptHandler^(0+128)
 14608  1722  0008               	return
 14609  1723                     __end_of_ADCC_SetADTIInterruptHandler:	
 14610                           
 14611                           	psect	text51
 14612  1711                     __ptext51:	
 14613 ;; *************** function _BEAT_detected *****************
 14614 ;; Defined at:
 14615 ;;		line 50 in file "beat.c"
 14616 ;; Parameters:    Size  Location     Type
 14617 ;;		None
 14618 ;; Auto vars:     Size  Location     Type
 14619 ;;		None
 14620 ;; Return value:  Size  Location     Type
 14621 ;;                  1    wreg      _Bool 
 14622 ;; Registers used:
 14623 ;;		wreg, status,2, status,0
 14624 ;; Tracked objects:
 14625 ;;		On entry : 0/0
 14626 ;;		On exit  : 0/0
 14627 ;;		Unchanged: 0/0
 14628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14633 ;;Total ram usage:        0 bytes
 14634 ;; Hardware stack levels used:    1
 14635 ;; Hardware stack levels required when called:    4
 14636 ;; This function calls:
 14637 ;;		Nothing
 14638 ;; This function is called by:
 14639 ;;		_main
 14640 ;; This function uses a non-reentrant model
 14641 ;;
 14642                           
 14643                           
 14644                           ;psect for function _BEAT_detected
 14645  1711                     _BEAT_detected:	
 14646                           
 14647                           ;beat.c: 51:     if (detected) {
 14648                           
 14649                           ;incstack = 0
 14650                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 14651  1711  0141               	movlb	1	; select bank1
 14652  1712  0845               	movf	_detected^(0+128),w
 14653  1713  1903               	btfsc	3,2
 14654  1714  2F18               	goto	l5384
 14655                           
 14656                           ;beat.c: 52:         detected = 0;
 14657  1715  01C5               	clrf	_detected^(0+128)
 14658                           
 14659                           ;beat.c: 53:         return 1;
 14660  1716  3001               	movlw	1
 14661  1717  0008               	return
 14662  1718                     l5384:	
 14663                           
 14664                           ;beat.c: 56:     return 0;
 14665  1718  3000               	movlw	0
 14666  1719  0008               	return
 14667  171A                     __end_of_BEAT_detected:	
 14668                           
 14669                           	psect	intentry
 14670  0004                     __pintentry:	
 14671 ;; *************** function _INTERRUPT_InterruptManager *****************
 14672 ;; Defined at:
 14673 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14674 ;; Parameters:    Size  Location     Type
 14675 ;;		None
 14676 ;; Auto vars:     Size  Location     Type
 14677 ;;		None
 14678 ;; Return value:  Size  Location     Type
 14679 ;;                  1    wreg      void 
 14680 ;; Registers used:
 14681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14682 ;; Tracked objects:
 14683 ;;		On entry : 0/0
 14684 ;;		On exit  : 0/0
 14685 ;;		Unchanged: 0/0
 14686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14691 ;;Total ram usage:        0 bytes
 14692 ;; Hardware stack levels used:    1
 14693 ;; Hardware stack levels required when called:    3
 14694 ;; This function calls:
 14695 ;;		Absolute function
 14696 ;;		_ADCC_ThresholdISR
 14697 ;;		_EUSART1_Receive_ISR
 14698 ;;		_EUSART1_Transmit_ISR
 14699 ;;		_I2C1_BusCollisionISR
 14700 ;;		_I2C1_ISR
 14701 ;;		_TMR0_ISR
 14702 ;; This function is called by:
 14703 ;;		Interrupt level 1
 14704 ;; This function uses a non-reentrant model
 14705 ;;
 14706                           
 14707  0004                     _INTERRUPT_InterruptManager:	
 14708                           
 14709                           ;incstack = 0
 14710  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14711                           
 14712                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14713  0005  3180               	pagesel	$
 14714                           
 14715                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 14716  0006  014E               	movlb	14	; select bank14
 14717  0007  1A96               	btfsc	22,5	;volatile
 14718  0008  1E8C               	btfss	12,5	;volatile
 14719  0009  280E               	goto	i1l175
 14720                           
 14721                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 14722  000A  3197  27AB  3180   	fcall	_TMR0_ISR
 14723                           
 14724                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 14725  000D  2837               	goto	i1l189
 14726  000E                     i1l175:	
 14727                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 14728                           
 14729  000E  1F0B               	btfss	11,6	;volatile
 14730  000F  2837               	goto	i1l189
 14731                           
 14732                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 14733  0010  1899               	btfsc	25,1	;volatile
 14734  0011  1C8F               	btfss	15,1	;volatile
 14735  0012  2817               	goto	i1l178
 14736                           
 14737                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 14738  0013  3196  26EA  3180   	fcall	_I2C1_BusCollisionISR
 14739                           
 14740                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 14741  0016  2837               	goto	i1l189
 14742  0017                     i1l178:	
 14743                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 14744                           
 14745  0017  1819               	btfsc	25,0	;volatile
 14746  0018  1C0F               	btfss	15,0	;volatile
 14747  0019  281E               	goto	i1l180
 14748                           
 14749                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 14750  001A  318E  26AC  3180   	fcall	_I2C1_ISR
 14751                           
 14752                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 14753  001D  2837               	goto	i1l189
 14754  001E                     i1l180:	
 14755                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 14756                           
 14757  001E  1A19               	btfsc	25,4	;volatile
 14758  001F  1E0F               	btfss	15,4	;volatile
 14759  0020  2828               	goto	i1l182
 14760                           
 14761                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 14762  0021  0142               	movlb	2	; select bank2
 14763  0022  085D               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 14764  0023  008A               	movwf	10
 14765  0024  085C               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 14766  0025  000A               	callw
 14767  0026  3180               	pagesel	$
 14768                           
 14769                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 14770  0027  2837               	goto	i1l189
 14771  0028                     i1l182:	
 14772                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 14773                           
 14774  0028  1A99               	btfsc	25,5	;volatile
 14775  0029  1E8F               	btfss	15,5	;volatile
 14776  002A  2832               	goto	i1l184
 14777                           
 14778                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 14779  002B  0142               	movlb	2	; select bank2
 14780  002C  085B               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 14781  002D  008A               	movwf	10
 14782  002E  085A               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 14783  002F  000A               	callw
 14784  0030  3180               	pagesel	$
 14785                           
 14786                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 14787  0031  2837               	goto	i1l189
 14788  0032                     i1l184:	
 14789                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 14790                           
 14791  0032  1897               	btfsc	23,1	;volatile
 14792  0033  1C8D               	btfss	13,1	;volatile
 14793  0034  2837               	goto	i1l189
 14794                           
 14795                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             ADCC_ThresholdISR();
 14796  0035  3197  279E         	fcall	_ADCC_ThresholdISR
 14797  0037                     i1l189:	
 14798                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 14799                           
 14800  0037  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14801  0038  0009               	retfie
 14802  0039                     __end_of_INTERRUPT_InterruptManager:	
 14803                           
 14804                           	psect	text53
 14805  17AB                     __ptext53:	
 14806 ;; *************** function _TMR0_ISR *****************
 14807 ;; Defined at:
 14808 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 14809 ;; Parameters:    Size  Location     Type
 14810 ;;		None
 14811 ;; Auto vars:     Size  Location     Type
 14812 ;;		None
 14813 ;; Return value:  Size  Location     Type
 14814 ;;                  1    wreg      void 
 14815 ;; Registers used:
 14816 ;;		wreg, status,2, status,0, pclath, cstack
 14817 ;; Tracked objects:
 14818 ;;		On entry : 0/0
 14819 ;;		On exit  : 0/0
 14820 ;;		Unchanged: 0/0
 14821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14826 ;;Total ram usage:        0 bytes
 14827 ;; Hardware stack levels used:    1
 14828 ;; Hardware stack levels required when called:    1
 14829 ;; This function calls:
 14830 ;;		Absolute function
 14831 ;;		_CLOCK_timerCallback
 14832 ;;		_TMR0_DefaultInterruptHandler
 14833 ;; This function is called by:
 14834 ;;		_INTERRUPT_InterruptManager
 14835 ;; This function uses a non-reentrant model
 14836 ;;
 14837                           
 14838                           
 14839                           ;psect for function _TMR0_ISR
 14840  17AB                     _TMR0_ISR:	
 14841                           
 14842                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 14843                           
 14844                           ;incstack = 0
 14845                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 14846  17AB  014E               	movlb	14	; select bank14
 14847  17AC  128C               	bcf	12,5	;volatile
 14848                           
 14849                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 14850  17AD  0141               	movlb	1	; select bank1
 14851  17AE  086B               	movf	_TMR0_InterruptHandler^(0+128),w
 14852  17AF  046C               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 14853  17B0  1903               	btfsc	3,2
 14854  17B1  0008               	return
 14855                           
 14856                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 14857  17B2  086C               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 14858  17B3  008A               	movwf	10
 14859  17B4  086B               	movf	_TMR0_InterruptHandler^(0+128),w
 14860  17B5  000A               	callw
 14861  17B6  3197               	pagesel	$
 14862  17B7  0008               	return
 14863  17B8                     __end_of_TMR0_ISR:	
 14864                           
 14865                           	psect	text54
 14866  16FD                     __ptext54:	
 14867 ;; *************** function _CLOCK_timerCallback *****************
 14868 ;; Defined at:
 14869 ;;		line 15 in file "clock.c"
 14870 ;; Parameters:    Size  Location     Type
 14871 ;;		None
 14872 ;; Auto vars:     Size  Location     Type
 14873 ;;		None
 14874 ;; Return value:  Size  Location     Type
 14875 ;;                  1    wreg      void 
 14876 ;; Registers used:
 14877 ;;		wreg
 14878 ;; Tracked objects:
 14879 ;;		On entry : 0/0
 14880 ;;		On exit  : 0/0
 14881 ;;		Unchanged: 0/0
 14882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14887 ;;Total ram usage:        0 bytes
 14888 ;; Hardware stack levels used:    1
 14889 ;; This function calls:
 14890 ;;		Nothing
 14891 ;; This function is called by:
 14892 ;;		_CLOCK_init
 14893 ;;		_TMR0_ISR
 14894 ;; This function uses a non-reentrant model
 14895 ;;
 14896                           
 14897                           
 14898                           ;psect for function _CLOCK_timerCallback
 14899  16FD                     _CLOCK_timerCallback:	
 14900                           
 14901                           ;clock.c: 17:     currentTime++;
 14902                           
 14903                           ;incstack = 0
 14904                           ; Regs used in _CLOCK_timerCallback: [wreg]
 14905  16FD  3001               	movlw	1
 14906  16FE  0141               	movlb	1	; select bank1
 14907  16FF  07B7               	addwf	_currentTime^(0+128),f
 14908  1700  3000               	movlw	0
 14909  1701  3DB8               	addwfc	(_currentTime+1)^(0+128),f
 14910  1702  0008               	return
 14911  1703                     __end_of_CLOCK_timerCallback:	
 14912                           
 14913                           	psect	text55
 14914  07FF                     __ptext55:	
 14915 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 14916 ;; Defined at:
 14917 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 14918 ;; Parameters:    Size  Location     Type
 14919 ;;		None
 14920 ;; Auto vars:     Size  Location     Type
 14921 ;;		None
 14922 ;; Return value:  Size  Location     Type
 14923 ;;                  1    wreg      void 
 14924 ;; Registers used:
 14925 ;;		None
 14926 ;; Tracked objects:
 14927 ;;		On entry : 0/0
 14928 ;;		On exit  : 0/0
 14929 ;;		Unchanged: 0/0
 14930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14935 ;;Total ram usage:        0 bytes
 14936 ;; Hardware stack levels used:    1
 14937 ;; This function calls:
 14938 ;;		Nothing
 14939 ;; This function is called by:
 14940 ;;		_TMR0_Initialize
 14941 ;;		_TMR0_ISR
 14942 ;; This function uses a non-reentrant model
 14943 ;;
 14944                           
 14945                           
 14946                           ;psect for function _TMR0_DefaultInterruptHandler
 14947  07FF                     _TMR0_DefaultInterruptHandler:	
 14948                           
 14949                           ;incstack = 0
 14950                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 14951  07FF  0008               	return
 14952  0800                     __end_of_TMR0_DefaultInterruptHandler:	
 14953                           
 14954                           	psect	text56
 14955  0EAC                     __ptext56:	
 14956 ;; *************** function _I2C1_ISR *****************
 14957 ;; Defined at:
 14958 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 14959 ;; Parameters:    Size  Location     Type
 14960 ;;		None
 14961 ;; Auto vars:     Size  Location     Type
 14962 ;;		None
 14963 ;; Return value:  Size  Location     Type
 14964 ;;                  1    wreg      void 
 14965 ;; Registers used:
 14966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14967 ;; Tracked objects:
 14968 ;;		On entry : 0/0
 14969 ;;		On exit  : 0/0
 14970 ;;		Unchanged: 0/0
 14971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14974 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14975 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14976 ;;Total ram usage:        4 bytes
 14977 ;; Hardware stack levels used:    1
 14978 ;; Hardware stack levels required when called:    1
 14979 ;; This function calls:
 14980 ;;		_I2C1_FunctionComplete
 14981 ;;		_I2C1_Stop
 14982 ;; This function is called by:
 14983 ;;		_INTERRUPT_InterruptManager
 14984 ;; This function uses a non-reentrant model
 14985 ;;
 14986                           
 14987                           
 14988                           ;psect for function _I2C1_ISR
 14989  0EAC                     _I2C1_ISR:	
 14990                           
 14991                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 14992                           
 14993                           ;incstack = 0
 14994                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14995  0EAC  014E               	movlb	14	; select bank14
 14996  0EAD  100F               	bcf	15,0	;volatile
 14997                           
 14998                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 14999  0EAE  0143               	movlb	3	; select bank3
 15000  0EAF  1F90               	btfss	16,7	;volatile
 15001  0EB0  2FD3               	goto	i1l5154
 15002                           
 15003                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 15004  0EB1  1390               	bcf	16,7	;volatile
 15005                           
 15006                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 15007  0EB2  0141               	movlb	1	; select bank1
 15008  0EB3  01D0               	clrf	_i2c1_state^(0+128)
 15009                           
 15010                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 15011  0EB4  084E               	movf	_p_i2c1_current^(0+128),w
 15012  0EB5  3E03               	addlw	3
 15013  0EB6  0086               	movwf	6
 15014  0EB7  0187               	clrf	7
 15015  0EB8  0801               	movf	1,w
 15016  0EB9  0086               	movwf	6
 15017  0EBA  0187               	clrf	7
 15018  0EBB  0181               	clrf	1
 15019  0EBC  0A81               	incf	1,f
 15020                           
 15021                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 15022  0EBD  01CE               	clrf	_p_i2c1_current^(0+128)
 15023  0EBE  0008               	return
 15024  0EBF                     i1l302:	
 15025                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 15026                           
 15027                           
 15028                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 15029  0EBF  18AA               	btfsc	(_i2c1_object^(0+128)+2),1
 15030  0EC0  0008               	return
 15031                           
 15032                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 15033  0EC1  0829               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15034  0EC2  00F8               	movwf	??_I2C1_ISR
 15035  0EC3  0878               	movf	??_I2C1_ISR,w
 15036  0EC4  00CE               	movwf	_p_i2c1_current^(0+128)
 15037                           
 15038                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 15039  0EC5  0829               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15040  0EC6  0086               	movwf	6
 15041  0EC7  0187               	clrf	7
 15042  0EC8  0801               	movf	1,w
 15043  0EC9  00F8               	movwf	??_I2C1_ISR
 15044  0ECA  0878               	movf	??_I2C1_ISR,w
 15045  0ECB  00CF               	movwf	_i2c1_trb_count^(0+128)
 15046                           
 15047                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 15048  0ECC  0A29               	incf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15049  0ECD  0086               	movwf	6
 15050  0ECE  0187               	clrf	7
 15051  0ECF  3F40               	moviw [0]fsr1
 15052  0ED0  00C1               	movwf	_p_i2c1_trb_current^(0+128)
 15053  0ED1  3F41               	moviw [1]fsr1
 15054  0ED2  00C2               	movwf	(_p_i2c1_trb_current+1)^(0+128)
 15055                           
 15056                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 15057  0ED3  3004               	movlw	4
 15058  0ED4  00F8               	movwf	??_I2C1_ISR
 15059  0ED5  0878               	movf	??_I2C1_ISR,w
 15060  0ED6  07A9               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 15061                           
 15062                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 15063  0ED7  0829               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15064  0ED8  3ADB               	xorlw	(low ((_i2c1_tr_queue| 0+4)))& (0+255)
 15065  0ED9  1D03               	skipz
 15066  0EDA  2EDF               	goto	i1l5040
 15067                           
 15068                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 15069  0EDB  30D7               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 15070  0EDC  00F8               	movwf	??_I2C1_ISR
 15071  0EDD  0878               	movf	??_I2C1_ISR,w
 15072  0EDE  00A9               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 15073  0EDF                     i1l5040:	
 15074                           
 15075                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 15076  0EDF  102A               	bcf	(_i2c1_object^(0+128)+2),0
 15077                           
 15078                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 15079  0EE0  0829               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15080  0EE1  0628               	xorwf	_i2c1_object^(0+128),w
 15081  0EE2  1903               	btfsc	3,2
 15082                           
 15083                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 15084  0EE3  14AA               	bsf	(_i2c1_object^(0+128)+2),1
 15085                           
 15086                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 15087                           
 15088                           ;mcc_generated_files/i2c1.c: 290:                 }
 15089  0EE4  0143               	movlb	3	; select bank3
 15090  0EE5  1411               	bsf	17,0	;volatile
 15091  0EE6                     i1l5044:	
 15092                           
 15093                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 15094  0EE6  3002               	movlw	2
 15095  0EE7  00F8               	movwf	??_I2C1_ISR
 15096  0EE8  0878               	movf	??_I2C1_ISR,w
 15097  0EE9  0141               	movlb	1	; select bank1
 15098  0EEA  00D0               	movwf	_i2c1_state^(0+128)
 15099  0EEB  0008               	return
 15100  0EEC                     i1l307:	
 15101                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 15102                           
 15103  0EEC  2F7C               	goto	i1l328
 15104  0EED                     i1l308:	
 15105                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 15106                           
 15107                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 15108                           
 15109                           
 15110                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 15111  0EED  0143               	movlb	3	; select bank3
 15112  0EEE  1F11               	btfss	17,6	;volatile
 15113  0EEF  2EF9               	goto	i1l5052
 15114                           
 15115                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 15116  0EF0  3001               	movlw	1
 15117  0EF1  00F8               	movwf	??_I2C1_ISR
 15118  0EF2  0878               	movf	??_I2C1_ISR,w
 15119  0EF3  0141               	movlb	1	; select bank1
 15120  0EF4  07AC               	addwf	(_i2c1_object^(0+128)+4),f
 15121                           
 15122                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 15123  0EF5  3004               	movlw	4
 15124  0EF6  3188  204D         	fcall	_I2C1_Stop
 15125                           
 15126                           ;mcc_generated_files/i2c1.c: 319:             }
 15127  0EF8  0008               	return
 15128  0EF9                     i1l5052:	
 15129                           
 15130                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 15131  0EF9  0875               	movf	I2C1_ISR@i2c_address+1,w
 15132  0EFA  00F9               	movwf	??_I2C1_ISR+1
 15133  0EFB  0874               	movf	I2C1_ISR@i2c_address,w
 15134  0EFC  00F8               	movwf	??_I2C1_ISR
 15135  0EFD  36F9               	lsrf	??_I2C1_ISR+1,f
 15136  0EFE  0CF8               	rrf	??_I2C1_ISR,f
 15137  0EFF  0878               	movf	??_I2C1_ISR,w
 15138  0F00  008C               	movwf	12	;volatile
 15139                           
 15140                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 15141  0F01  1C74               	btfss	I2C1_ISR@i2c_address,0
 15142  0F02  2F09               	goto	i1l5058
 15143                           
 15144                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 15145  0F03  300B               	movlw	11
 15146  0F04  00F8               	movwf	??_I2C1_ISR
 15147  0F05  0878               	movf	??_I2C1_ISR,w
 15148  0F06  0141               	movlb	1	; select bank1
 15149  0F07  00D0               	movwf	_i2c1_state^(0+128)
 15150                           
 15151                           ;mcc_generated_files/i2c1.c: 331:                 }
 15152  0F08  0008               	return
 15153  0F09                     i1l5058:	
 15154                           
 15155                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 15156  0F09  3003               	movlw	3
 15157  0F0A  00F8               	movwf	??_I2C1_ISR
 15158  0F0B  0878               	movf	??_I2C1_ISR,w
 15159  0F0C  0141               	movlb	1	; select bank1
 15160  0F0D  00D0               	movwf	_i2c1_state^(0+128)
 15161  0F0E  0008               	return
 15162  0F0F                     i1l313:	
 15163                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 15164                           
 15165                           
 15166                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 15167  0F0F  0143               	movlb	3	; select bank3
 15168  0F10  1F11               	btfss	17,6	;volatile
 15169  0F11  2F1B               	goto	i1l314
 15170                           
 15171                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 15172  0F12  3001               	movlw	1
 15173  0F13  00F8               	movwf	??_I2C1_ISR
 15174  0F14  0878               	movf	??_I2C1_ISR,w
 15175  0F15  0141               	movlb	1	; select bank1
 15176  0F16  07AC               	addwf	(_i2c1_object^(0+128)+4),f
 15177                           
 15178                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 15179  0F17  3004               	movlw	4
 15180  0F18  3188  204D         	fcall	_I2C1_Stop
 15181                           
 15182                           ;mcc_generated_files/i2c1.c: 347:             }
 15183  0F1A  0008               	return
 15184  0F1B                     i1l314:	
 15185                           ;mcc_generated_files/i2c1.c: 348:             else
 15186                           
 15187                           
 15188                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 15189  0F1B  1491               	bsf	17,1	;volatile
 15190                           
 15191                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 15192  0F1C  0875               	movf	I2C1_ISR@i2c_address+1,w
 15193  0F1D  00F9               	movwf	??_I2C1_ISR+1
 15194  0F1E  0874               	movf	I2C1_ISR@i2c_address,w
 15195  0F1F  00F8               	movwf	??_I2C1_ISR
 15196  0F20  0879               	movf	??_I2C1_ISR+1,w
 15197  0F21  00F8               	movwf	??_I2C1_ISR
 15198  0F22  01F9               	clrf	??_I2C1_ISR+1
 15199  0F23  3006               	movlw	6
 15200  0F24  0578               	andwf	??_I2C1_ISR,w
 15201  0F25  00FA               	movwf	??_I2C1_ISR+2
 15202  0F26  3000               	movlw	0
 15203  0F27  0579               	andwf	??_I2C1_ISR+1,w
 15204  0F28  00FB               	movwf	??_I2C1_ISR+3
 15205  0F29  30F0               	movlw	240
 15206  0F2A  047A               	iorwf	??_I2C1_ISR+2,w
 15207  0F2B  00F4               	movwf	I2C1_ISR@i2c_address
 15208  0F2C  3000               	movlw	0
 15209  0F2D  047B               	iorwf	??_I2C1_ISR+3,w
 15210  0F2E  00F5               	movwf	I2C1_ISR@i2c_address+1
 15211                           
 15212                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 15213  0F2F  1474               	bsf	I2C1_ISR@i2c_address,0
 15214                           
 15215                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 15216  0F30  0141               	movlb	1	; select bank1
 15217  0F31  01CB               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 15218  0F32  0ACB               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 15219  0F33  2EE6               	goto	i1l5044
 15220  0F34                     i1l5072:	
 15221                           
 15222                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 15223  0F34  034B               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 15224  0F35  1903               	btfsc	3,2
 15225  0F36  2F51               	goto	i1l5092
 15226                           
 15227                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 15228  0F37  0841               	movf	_p_i2c1_trb_current^(0+128),w
 15229  0F38  0086               	movwf	6
 15230  0F39  0842               	movf	(_p_i2c1_trb_current+1)^(0+128),w
 15231  0F3A  0087               	movwf	7
 15232  0F3B  3F40               	moviw [0]fsr1
 15233  0F3C  00F4               	movwf	I2C1_ISR@i2c_address
 15234  0F3D  3F41               	moviw [1]fsr1
 15235  0F3E  00F5               	movwf	I2C1_ISR@i2c_address+1
 15236                           
 15237                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 15238  0F3F  0841               	movf	_p_i2c1_trb_current^(0+128),w
 15239  0F40  0086               	movwf	6
 15240  0F41  0842               	movf	(_p_i2c1_trb_current+1)^(0+128),w
 15241  0F42  0087               	movwf	7
 15242  0F43  3143               	addfsr 1,3
 15243  0F44  0801               	movf	1,w
 15244  0F45  00F8               	movwf	??_I2C1_ISR
 15245  0F46  0878               	movf	??_I2C1_ISR,w
 15246  0F47  00CD               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 15247                           
 15248                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 15249  0F48  0841               	movf	_p_i2c1_trb_current^(0+128),w
 15250  0F49  0086               	movwf	6
 15251  0F4A  0842               	movf	(_p_i2c1_trb_current+1)^(0+128),w
 15252  0F4B  0087               	movwf	7
 15253  0F4C  3142               	addfsr 1,2
 15254  0F4D  0801               	movf	1,w
 15255  0F4E  00F8               	movwf	??_I2C1_ISR
 15256  0F4F  0878               	movf	??_I2C1_ISR,w
 15257  0F50  00CC               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 15258  0F51                     i1l5092:	
 15259                           
 15260                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 15261  0F51  0874               	movf	I2C1_ISR@i2c_address,w
 15262  0F52  0143               	movlb	3	; select bank3
 15263  0F53  008C               	movwf	12	;volatile
 15264                           
 15265                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 15266  0F54  1C74               	btfss	I2C1_ISR@i2c_address,0
 15267  0F55  2F09               	goto	i1l5058
 15268                           
 15269                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 15270  0F56  3005               	movlw	5
 15271  0F57  00F8               	movwf	??_I2C1_ISR
 15272  0F58  0878               	movf	??_I2C1_ISR,w
 15273  0F59  0141               	movlb	1	; select bank1
 15274  0F5A  00D0               	movwf	_i2c1_state^(0+128)
 15275                           
 15276                           ;mcc_generated_files/i2c1.c: 419:                 }
 15277  0F5B  0008               	return
 15278  0F5C                     i1l324:	
 15279                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 15280                           
 15281                           
 15282                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 15283  0F5C  0143               	movlb	3	; select bank3
 15284  0F5D  1F11               	btfss	17,6	;volatile
 15285  0F5E  2F6A               	goto	i1l5106
 15286                           
 15287                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 15288  0F5F  3001               	movlw	1
 15289  0F60  00F8               	movwf	??_I2C1_ISR
 15290  0F61  0878               	movf	??_I2C1_ISR,w
 15291  0F62  0141               	movlb	1	; select bank1
 15292  0F63  07AC               	addwf	(_i2c1_object^(0+128)+4),f
 15293                           
 15294                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 15295  0F64  0143               	movlb	3	; select bank3
 15296  0F65  1311               	bcf	17,6	;volatile
 15297                           
 15298                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 15299  0F66  3005               	movlw	5
 15300  0F67  3188  204D         	fcall	_I2C1_Stop
 15301                           
 15302                           ;mcc_generated_files/i2c1.c: 442:             }
 15303  0F69  0008               	return
 15304  0F6A                     i1l5106:	
 15305                           
 15306                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 15307  0F6A  3001               	movlw	1
 15308  0F6B  0141               	movlb	1	; select bank1
 15309  0F6C  02CC               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 15310  0F6D  0A4C               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 15311  0F6E  1D03               	btfss	3,2
 15312  0F6F  2F7F               	goto	i1l5116
 15313                           
 15314                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 15315  0F70  3004               	movlw	4
 15316  0F71  07C1               	addwf	_p_i2c1_trb_current^(0+128),f
 15317  0F72  3000               	movlw	0
 15318  0F73  3DC2               	addwfc	(_p_i2c1_trb_current+1)^(0+128),f
 15319                           
 15320                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 15321  0F74  3001               	movlw	1
 15322  0F75  02CF               	subwf	_i2c1_trb_count^(0+128),f
 15323  0F76  1D03               	btfss	3,2
 15324  0F77  2F7C               	goto	i1l328
 15325                           
 15326                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 15327  0F78  3000               	movlw	0
 15328  0F79  3188  204D         	fcall	_I2C1_Stop
 15329                           
 15330                           ;mcc_generated_files/i2c1.c: 457:                     }
 15331  0F7B  0008               	return
 15332  0F7C                     i1l328:	
 15333                           ;mcc_generated_files/i2c1.c: 458:                     else
 15334                           
 15335                           
 15336                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 15337  0F7C  0143               	movlb	3	; select bank3
 15338  0F7D  1491               	bsf	17,1	;volatile
 15339  0F7E  2EE6               	goto	i1l5044
 15340  0F7F                     i1l5116:	
 15341                           
 15342                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 15343  0F7F  084D               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 15344  0F80  0086               	movwf	6
 15345  0F81  0187               	clrf	7
 15346  0F82  0801               	movf	1,w
 15347  0F83  0143               	movlb	3	; select bank3
 15348  0F84  008C               	movwf	12	;volatile
 15349  0F85  3001               	movlw	1
 15350  0F86  00F8               	movwf	??_I2C1_ISR
 15351  0F87  0878               	movf	??_I2C1_ISR,w
 15352  0F88  0141               	movlb	1	; select bank1
 15353  0F89  07CD               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 15354  0F8A  0008               	return
 15355  0F8B                     i1l331:	
 15356                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 15357                           
 15358                           
 15359                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 15360  0F8B  0143               	movlb	3	; select bank3
 15361  0F8C  1F11               	btfss	17,6	;volatile
 15362  0F8D  2F99               	goto	i1l332
 15363                           
 15364                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 15365  0F8E  3001               	movlw	1
 15366  0F8F  00F8               	movwf	??_I2C1_ISR
 15367  0F90  0878               	movf	??_I2C1_ISR,w
 15368  0F91  0141               	movlb	1	; select bank1
 15369  0F92  07AC               	addwf	(_i2c1_object^(0+128)+4),f
 15370                           
 15371                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 15372  0F93  3004               	movlw	4
 15373  0F94  3188  204D         	fcall	_I2C1_Stop
 15374                           
 15375                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 15376  0F96  0143               	movlb	3	; select bank3
 15377  0F97  1311               	bcf	17,6	;volatile
 15378                           
 15379                           ;mcc_generated_files/i2c1.c: 495:             }
 15380  0F98  0008               	return
 15381  0F99                     i1l332:	
 15382                           ;mcc_generated_files/i2c1.c: 496:             else
 15383                           
 15384                           
 15385                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 15386  0F99  1591               	bsf	17,3	;volatile
 15387                           
 15388                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 15389  0F9A  3008               	movlw	8
 15390  0F9B  00F8               	movwf	??_I2C1_ISR
 15391  0F9C  0878               	movf	??_I2C1_ISR,w
 15392  0F9D  0141               	movlb	1	; select bank1
 15393  0F9E  00D0               	movwf	_i2c1_state^(0+128)
 15394  0F9F  0008               	return
 15395  0FA0                     i1l5128:	
 15396                           
 15397                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 15398  0FA0  3008               	movlw	8
 15399  0FA1  00F8               	movwf	??_I2C1_ISR
 15400  0FA2  0878               	movf	??_I2C1_ISR,w
 15401  0FA3  00D0               	movwf	_i2c1_state^(0+128)
 15402                           
 15403                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 15404  0FA4  0143               	movlb	3	; select bank3
 15405  0FA5  1591               	bsf	17,3	;volatile
 15406                           
 15407                           ;mcc_generated_files/i2c1.c: 513:             break;
 15408  0FA6  0008               	return
 15409  0FA7                     i1l5132:	
 15410                           
 15411                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 15412  0FA7  0143               	movlb	3	; select bank3
 15413  0FA8  080C               	movf	12,w	;volatile
 15414  0FA9  00F8               	movwf	??_I2C1_ISR
 15415  0FAA  0141               	movlb	1	; select bank1
 15416  0FAB  084D               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 15417  0FAC  0086               	movwf	6
 15418  0FAD  0187               	clrf	7
 15419  0FAE  0878               	movf	??_I2C1_ISR,w
 15420  0FAF  0081               	movwf	1
 15421  0FB0  3001               	movlw	1
 15422  0FB1  00F8               	movwf	??_I2C1_ISR
 15423  0FB2  0878               	movf	??_I2C1_ISR,w
 15424  0FB3  07CD               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 15425                           
 15426                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 15427  0FB4  3001               	movlw	1
 15428  0FB5  02CC               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 15429  0FB6  1903               	btfsc	3,2
 15430  0FB7  2FC0               	goto	i1l336
 15431                           
 15432                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 15433  0FB8  0143               	movlb	3	; select bank3
 15434  0FB9  1291               	bcf	17,5	;volatile
 15435                           
 15436                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 15437  0FBA  3006               	movlw	6
 15438  0FBB  00F8               	movwf	??_I2C1_ISR
 15439  0FBC  0878               	movf	??_I2C1_ISR,w
 15440  0FBD  0141               	movlb	1	; select bank1
 15441  0FBE  00D0               	movwf	_i2c1_state^(0+128)
 15442                           
 15443                           ;mcc_generated_files/i2c1.c: 532:             }
 15444  0FBF  2FC4               	goto	i1l5144
 15445  0FC0                     i1l336:	
 15446                           ;mcc_generated_files/i2c1.c: 533:             else
 15447                           
 15448                           
 15449                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 15450  0FC0  0143               	movlb	3	; select bank3
 15451  0FC1  1691               	bsf	17,5	;volatile
 15452                           
 15453                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 15454  0FC2  3197  27C7         	fcall	_I2C1_FunctionComplete
 15455  0FC4                     i1l5144:	
 15456                           
 15457                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 15458  0FC4  0143               	movlb	3	; select bank3
 15459  0FC5  1611               	bsf	17,4	;volatile
 15460                           
 15461                           ;mcc_generated_files/i2c1.c: 545:             break;
 15462  0FC6  0008               	return
 15463  0FC7                     i1l5146:	
 15464                           
 15465                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 15466  0FC7  3000               	movlw	0
 15467  0FC8  3188  204D         	fcall	_I2C1_Stop
 15468                           
 15469                           ;mcc_generated_files/i2c1.c: 552:             break;
 15470  0FCA  0008               	return
 15471  0FCB                     i1l5148:	
 15472                           
 15473                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 15474  0FCB  3001               	movlw	1
 15475  0FCC  00F8               	movwf	??_I2C1_ISR
 15476  0FCD  0878               	movf	??_I2C1_ISR,w
 15477  0FCE  07AC               	addwf	(_i2c1_object^(0+128)+4),f
 15478                           
 15479                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 15480  0FCF  3006               	movlw	6
 15481  0FD0  3188  204D         	fcall	_I2C1_Stop
 15482                           
 15483                           ;mcc_generated_files/i2c1.c: 560:             break;
 15484  0FD2  0008               	return
 15485  0FD3                     i1l5154:	
 15486  0FD3  0141               	movlb	1	; select bank1
 15487  0FD4  0850               	movf	_i2c1_state^(0+128),w
 15488  0FD5  00F8               	movwf	??_I2C1_ISR
 15489  0FD6  01F9               	clrf	??_I2C1_ISR+1
 15490                           
 15491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15492                           ; Switch size 1, requested type "simple"
 15493                           ; Number of cases is 1, Range of values is 0 to 0
 15494                           ; switch strategies available:
 15495                           ; Name         Instructions Cycles
 15496                           ; simple_byte            4     3 (average)
 15497                           ; direct_byte            8     6 (fixed)
 15498                           ; jumptable            260     6 (fixed)
 15499                           ;	Chosen strategy is simple_byte
 15500  0FD7  0879               	movf	??_I2C1_ISR+1,w
 15501  0FD8  3A00               	xorlw	0	; case 0
 15502  0FD9  1903               	skipnz
 15503  0FDA  2FDC               	goto	i1l5518
 15504  0FDB  2FCB               	goto	i1l5148
 15505  0FDC                     i1l5518:	
 15506                           
 15507                           ; Switch size 1, requested type "simple"
 15508                           ; Number of cases is 11, Range of values is 0 to 11
 15509                           ; switch strategies available:
 15510                           ; Name         Instructions Cycles
 15511                           ; direct_byte           30     6 (fixed)
 15512                           ; simple_byte           34    18 (average)
 15513                           ; jumptable            260     6 (fixed)
 15514                           ;	Chosen strategy is simple_byte
 15515  0FDC  0878               	movf	??_I2C1_ISR,w
 15516  0FDD  3A00               	xorlw	0	; case 0
 15517  0FDE  1903               	skipnz
 15518  0FDF  2EBF               	goto	i1l302
 15519  0FE0  3A01               	xorlw	1	; case 1
 15520  0FE1  1903               	skipnz
 15521  0FE2  2EEC               	goto	i1l307
 15522  0FE3  3A03               	xorlw	3	; case 2
 15523  0FE4  1903               	skipnz
 15524  0FE5  2F34               	goto	i1l5072
 15525  0FE6  3A01               	xorlw	1	; case 3
 15526  0FE7  1903               	skipnz
 15527  0FE8  2F5C               	goto	i1l324
 15528  0FE9  3A07               	xorlw	7	; case 4
 15529  0FEA  1903               	skipnz
 15530  0FEB  2FC7               	goto	i1l5146
 15531  0FEC  3A01               	xorlw	1	; case 5
 15532  0FED  1903               	skipnz
 15533  0FEE  2F8B               	goto	i1l331
 15534  0FEF  3A03               	xorlw	3	; case 6
 15535  0FF0  1903               	skipnz
 15536  0FF1  2FA0               	goto	i1l5128
 15537  0FF2  3A01               	xorlw	1	; case 7
 15538  0FF3  1903               	skipnz
 15539  0FF4  2FC7               	goto	i1l5146
 15540  0FF5  3A0F               	xorlw	15	; case 8
 15541  0FF6  1903               	skipnz
 15542  0FF7  2FA7               	goto	i1l5132
 15543  0FF8  3A02               	xorlw	2	; case 10
 15544  0FF9  1903               	skipnz
 15545  0FFA  2EED               	goto	i1l308
 15546  0FFB  3A01               	xorlw	1	; case 11
 15547  0FFC  1903               	skipnz
 15548  0FFD  2F0F               	goto	i1l313
 15549  0FFE  2FCB               	goto	i1l5148
 15550  0FFF  0008               	return
 15551  1000                     __end_of_I2C1_ISR:	
 15552                           
 15553                           	psect	text57
 15554  084D                     __ptext57:	
 15555 ;; *************** function _I2C1_Stop *****************
 15556 ;; Defined at:
 15557 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 15558 ;; Parameters:    Size  Location     Type
 15559 ;;  completion_c    1    wreg     enum E10866
 15560 ;; Auto vars:     Size  Location     Type
 15561 ;;  completion_c    1    1[COMMON] enum E10866
 15562 ;; Return value:  Size  Location     Type
 15563 ;;                  1    wreg      void 
 15564 ;; Registers used:
 15565 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15566 ;; Tracked objects:
 15567 ;;		On entry : 0/0
 15568 ;;		On exit  : 0/0
 15569 ;;		Unchanged: 0/0
 15570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15574 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15575 ;;Total ram usage:        2 bytes
 15576 ;; Hardware stack levels used:    1
 15577 ;; This function calls:
 15578 ;;		Nothing
 15579 ;; This function is called by:
 15580 ;;		_I2C1_ISR
 15581 ;; This function uses a non-reentrant model
 15582 ;;
 15583                           
 15584                           
 15585                           ;psect for function _I2C1_Stop
 15586  084D                     _I2C1_Stop:	
 15587                           
 15588                           ;incstack = 0
 15589                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 15590                           ;I2C1_Stop@completion_code stored from wreg
 15591  084D  00F7               	movwf	I2C1_Stop@completion_code
 15592                           
 15593                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 15594  084E  0143               	movlb	3	; select bank3
 15595  084F  1511               	bsf	17,2	;volatile
 15596                           
 15597                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 15598  0850  0141               	movlb	1	; select bank1
 15599  0851  084E               	movf	_p_i2c1_current^(0+128),w
 15600  0852  3E03               	addlw	3
 15601  0853  0086               	movwf	6
 15602  0854  0187               	clrf	7
 15603  0855  0801               	movf	1,w
 15604  0856  1903               	btfsc	3,2
 15605  0857  2863               	goto	i1l4750
 15606                           
 15607                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 15608  0858  0877               	movf	I2C1_Stop@completion_code,w
 15609  0859  00F6               	movwf	??_I2C1_Stop
 15610  085A  084E               	movf	_p_i2c1_current^(0+128),w
 15611  085B  3E03               	addlw	3
 15612  085C  0086               	movwf	6
 15613  085D  0187               	clrf	7
 15614  085E  0801               	movf	1,w
 15615  085F  0086               	movwf	6
 15616  0860  0187               	clrf	7
 15617  0861  0876               	movf	??_I2C1_Stop,w
 15618  0862  0081               	movwf	1
 15619  0863                     i1l4750:	
 15620                           
 15621                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 15622  0863  01D0               	clrf	_i2c1_state^(0+128)
 15623  0864  0008               	return
 15624  0865                     __end_of_I2C1_Stop:	
 15625                           
 15626                           	psect	text58
 15627  17C7                     __ptext58:	
 15628 ;; *************** function _I2C1_FunctionComplete *****************
 15629 ;; Defined at:
 15630 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 15631 ;; Parameters:    Size  Location     Type
 15632 ;;		None
 15633 ;; Auto vars:     Size  Location     Type
 15634 ;;		None
 15635 ;; Return value:  Size  Location     Type
 15636 ;;                  1    wreg      void 
 15637 ;; Registers used:
 15638 ;;		wreg, status,2, status,0
 15639 ;; Tracked objects:
 15640 ;;		On entry : 0/0
 15641 ;;		On exit  : 0/0
 15642 ;;		Unchanged: 0/0
 15643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15647 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15648 ;;Total ram usage:        1 bytes
 15649 ;; Hardware stack levels used:    1
 15650 ;; This function calls:
 15651 ;;		Nothing
 15652 ;; This function is called by:
 15653 ;;		_I2C1_ISR
 15654 ;; This function uses a non-reentrant model
 15655 ;;
 15656                           
 15657                           
 15658                           ;psect for function _I2C1_FunctionComplete
 15659  17C7                     _I2C1_FunctionComplete:	
 15660                           
 15661                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 15662                           
 15663                           ;incstack = 0
 15664                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 15665  17C7  3004               	movlw	4
 15666  17C8  0141               	movlb	1	; select bank1
 15667  17C9  07C1               	addwf	_p_i2c1_trb_current^(0+128),f
 15668  17CA  3000               	movlw	0
 15669  17CB  3DC2               	addwfc	(_p_i2c1_trb_current+1)^(0+128),f
 15670                           
 15671                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 15672  17CC  3001               	movlw	1
 15673  17CD  02CF               	subwf	_i2c1_trb_count^(0+128),f
 15674  17CE  1D03               	btfss	3,2
 15675  17CF  2FD5               	goto	i1l343
 15676                           
 15677                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 15678  17D0  3004               	movlw	4
 15679  17D1  00F6               	movwf	??_I2C1_FunctionComplete
 15680  17D2  0876               	movf	??_I2C1_FunctionComplete,w
 15681  17D3  00D0               	movwf	_i2c1_state^(0+128)
 15682                           
 15683                           ;mcc_generated_files/i2c1.c: 575:     }
 15684  17D4  0008               	return
 15685  17D5                     i1l343:	
 15686                           ;mcc_generated_files/i2c1.c: 576:     else
 15687                           
 15688                           
 15689                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 15690  17D5  01D0               	clrf	_i2c1_state^(0+128)
 15691  17D6  0AD0               	incf	_i2c1_state^(0+128),f
 15692  17D7  0008               	return
 15693  17D8                     __end_of_I2C1_FunctionComplete:	
 15694                           
 15695                           	psect	text59
 15696  16EA                     __ptext59:	
 15697 ;; *************** function _I2C1_BusCollisionISR *****************
 15698 ;; Defined at:
 15699 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 15700 ;; Parameters:    Size  Location     Type
 15701 ;;		None
 15702 ;; Auto vars:     Size  Location     Type
 15703 ;;		None
 15704 ;; Return value:  Size  Location     Type
 15705 ;;                  1    wreg      void 
 15706 ;; Registers used:
 15707 ;;		None
 15708 ;; Tracked objects:
 15709 ;;		On entry : 0/0
 15710 ;;		On exit  : 0/0
 15711 ;;		Unchanged: 0/0
 15712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15717 ;;Total ram usage:        0 bytes
 15718 ;; Hardware stack levels used:    1
 15719 ;; This function calls:
 15720 ;;		Nothing
 15721 ;; This function is called by:
 15722 ;;		_INTERRUPT_InterruptManager
 15723 ;; This function uses a non-reentrant model
 15724 ;;
 15725                           
 15726                           
 15727                           ;psect for function _I2C1_BusCollisionISR
 15728  16EA                     _I2C1_BusCollisionISR:	
 15729                           
 15730                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 15731                           
 15732                           ;incstack = 0
 15733                           ; Regs used in _I2C1_BusCollisionISR: []
 15734  16EA  014E               	movlb	14	; select bank14
 15735  16EB  108F               	bcf	15,1	;volatile
 15736  16EC  0008               	return
 15737  16ED                     __end_of_I2C1_BusCollisionISR:	
 15738                           
 15739                           	psect	text60
 15740  08E4                     __ptext60:	
 15741 ;; *************** function _EUSART1_Transmit_ISR *****************
 15742 ;; Defined at:
 15743 ;;		line 194 in file "mcc_generated_files/eusart1.c"
 15744 ;; Parameters:    Size  Location     Type
 15745 ;;		None
 15746 ;; Auto vars:     Size  Location     Type
 15747 ;;		None
 15748 ;; Return value:  Size  Location     Type
 15749 ;;                  1    wreg      void 
 15750 ;; Registers used:
 15751 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15752 ;; Tracked objects:
 15753 ;;		On entry : 0/0
 15754 ;;		On exit  : 0/0
 15755 ;;		Unchanged: 0/0
 15756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15761 ;;Total ram usage:        1 bytes
 15762 ;; Hardware stack levels used:    1
 15763 ;; This function calls:
 15764 ;;		Nothing
 15765 ;; This function is called by:
 15766 ;;		_EUSART1_Initialize
 15767 ;;		_INTERRUPT_InterruptManager
 15768 ;; This function uses a non-reentrant model
 15769 ;;
 15770                           
 15771                           
 15772                           ;psect for function _EUSART1_Transmit_ISR
 15773  08E4                     _EUSART1_Transmit_ISR:	
 15774                           
 15775                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 15776                           
 15777                           ;incstack = 0
 15778                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 15779  08E4  3008               	movlw	8
 15780  08E5  0141               	movlb	1	; select bank1
 15781  08E6  026F               	subwf	_eusart1TxBufferRemaining^(0+128),w	;volatile
 15782  08E7  1803               	skipnc
 15783  08E8  28FF               	goto	i1l106
 15784                           
 15785                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 15786  08E9  0872               	movf	_eusart1TxTail,w
 15787  08EA  3E28               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 15788  08EB  0086               	movwf	6
 15789  08EC  3001               	movlw	1	; select bank2/3
 15790  08ED  0087               	movwf	7
 15791  08EE  0801               	movf	1,w
 15792  08EF  0142               	movlb	2	; select bank2
 15793  08F0  009A               	movwf	26	;volatile
 15794  08F1  3001               	movlw	1
 15795  08F2  00F6               	movwf	??_EUSART1_Transmit_ISR
 15796  08F3  0876               	movf	??_EUSART1_Transmit_ISR,w
 15797  08F4  07F2               	addwf	_eusart1TxTail,f	;volatile
 15798                           
 15799                           ;mcc_generated_files/eusart1.c: 201:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 15800  08F5  3008               	movlw	8
 15801  08F6  0272               	subwf	_eusart1TxTail,w	;volatile
 15802  08F7  1803               	btfsc	3,0
 15803                           
 15804                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1TxTail = 0;
 15805  08F8  01F2               	clrf	_eusart1TxTail	;volatile
 15806                           
 15807                           ;mcc_generated_files/eusart1.c: 205:         eusart1TxBufferRemaining++;
 15808  08F9  3001               	movlw	1
 15809  08FA  00F6               	movwf	??_EUSART1_Transmit_ISR
 15810  08FB  0876               	movf	??_EUSART1_Transmit_ISR,w
 15811  08FC  0141               	movlb	1	; select bank1
 15812  08FD  07EF               	addwf	_eusart1TxBufferRemaining^(0+128),f	;volatile
 15813                           
 15814                           ;mcc_generated_files/eusart1.c: 206:     }
 15815  08FE  0008               	return
 15816  08FF                     i1l106:	
 15817                           ;mcc_generated_files/eusart1.c: 207:     else
 15818                           
 15819                           
 15820                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         P
      +                          IE3bits.TX1IE = 0;
 15821  08FF  014E               	movlb	14	; select bank14
 15822  0900  1219               	bcf	25,4	;volatile
 15823  0901  0008               	return
 15824  0902                     __end_of_EUSART1_Transmit_ISR:	
 15825                           
 15826                           	psect	text61
 15827  0A4D                     __ptext61:	
 15828 ;; *************** function _EUSART1_Receive_ISR *****************
 15829 ;; Defined at:
 15830 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 15831 ;; Parameters:    Size  Location     Type
 15832 ;;		None
 15833 ;; Auto vars:     Size  Location     Type
 15834 ;;		None
 15835 ;; Return value:  Size  Location     Type
 15836 ;;                  1    wreg      void 
 15837 ;; Registers used:
 15838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15839 ;; Tracked objects:
 15840 ;;		On entry : 0/0
 15841 ;;		On exit  : 0/0
 15842 ;;		Unchanged: 0/0
 15843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15848 ;;Total ram usage:        0 bytes
 15849 ;; Hardware stack levels used:    1
 15850 ;; Hardware stack levels required when called:    2
 15851 ;; This function calls:
 15852 ;;		Absolute function
 15853 ;;		_EUSART1_DefaultErrorHandler
 15854 ;;		_EUSART1_DefaultFramingErrorHandler
 15855 ;;		_EUSART1_DefaultOverrunErrorHandler
 15856 ;;		_EUSART1_RxDataHandler
 15857 ;; This function is called by:
 15858 ;;		_EUSART1_Initialize
 15859 ;;		_INTERRUPT_InterruptManager
 15860 ;; This function uses a non-reentrant model
 15861 ;;
 15862                           
 15863                           
 15864                           ;psect for function _EUSART1_Receive_ISR
 15865  0A4D                     _EUSART1_Receive_ISR:	
 15866                           
 15867                           ;mcc_generated_files/eusart1.c: 216:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 15868                           
 15869                           ;incstack = 0
 15870                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15871  0A4D  0871               	movf	_eusart1RxHead,w	;volatile
 15872  0A4E  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 15873  0A4F  0086               	movwf	6
 15874  0A50  0187               	clrf	7
 15875  0A51  0181               	clrf	1
 15876                           
 15877                           ;mcc_generated_files/eusart1.c: 218:     if(RC1STAbits.FERR){
 15878  0A52  0142               	movlb	2	; select bank2
 15879  0A53  1D1D               	btfss	29,2	;volatile
 15880  0A54  2A5F               	goto	i1l4998
 15881                           
 15882                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 15883  0A55  0871               	movf	_eusart1RxHead,w	;volatile
 15884  0A56  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 15885  0A57  0086               	movwf	6
 15886  0A58  0187               	clrf	7
 15887  0A59  1481               	bsf	1,1
 15888                           
 15889                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_FramingErrorHandler();
 15890  0A5A  0859               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 15891  0A5B  008A               	movwf	10
 15892  0A5C  0858               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 15893  0A5D  000A               	callw
 15894  0A5E  318A               	pagesel	$
 15895  0A5F                     i1l4998:	
 15896                           
 15897                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.OERR){
 15898  0A5F  0142               	movlb	2	; select bank2
 15899  0A60  1C9D               	btfss	29,1	;volatile
 15900  0A61  2A6C               	goto	i1l5004
 15901                           
 15902                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 15903  0A62  0871               	movf	_eusart1RxHead,w	;volatile
 15904  0A63  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 15905  0A64  0086               	movwf	6
 15906  0A65  0187               	clrf	7
 15907  0A66  1501               	bsf	1,2
 15908                           
 15909                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_OverrunErrorHandler();
 15910  0A67  0857               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 15911  0A68  008A               	movwf	10
 15912  0A69  0856               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 15913  0A6A  000A               	callw
 15914  0A6B  318A               	pagesel	$
 15915  0A6C                     i1l5004:	
 15916                           
 15917                           ;mcc_generated_files/eusart1.c: 228:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 15918  0A6C  0871               	movf	_eusart1RxHead,w	;volatile
 15919  0A6D  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 15920  0A6E  0086               	movwf	6
 15921  0A6F  0187               	clrf	7
 15922  0A70  0801               	movf	1,w
 15923  0A71  1903               	btfsc	3,2
 15924  0A72  2A7A               	goto	i1l5008
 15925                           
 15926                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_ErrorHandler();
 15927  0A73  0142               	movlb	2	; select bank2
 15928  0A74  0855               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 15929  0A75  008A               	movwf	10
 15930  0A76  0854               	movf	_EUSART1_ErrorHandler^(0+256),w
 15931  0A77  000A               	callw
 15932  0A78  318A               	pagesel	$
 15933                           
 15934                           ;mcc_generated_files/eusart1.c: 230:     } else {
 15935  0A79  0008               	return
 15936  0A7A                     i1l5008:	
 15937                           
 15938                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_RxDataHandler();
 15939  0A7A  3188  2035         	fcall	_EUSART1_RxDataHandler
 15940  0A7C  0008               	return
 15941  0A7D                     __end_of_EUSART1_Receive_ISR:	
 15942                           
 15943                           	psect	text62
 15944  16F4                     __ptext62:	
 15945 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 15946 ;; Defined at:
 15947 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 15948 ;; Parameters:    Size  Location     Type
 15949 ;;		None
 15950 ;; Auto vars:     Size  Location     Type
 15951 ;;		None
 15952 ;; Return value:  Size  Location     Type
 15953 ;;                  1    wreg      void 
 15954 ;; Registers used:
 15955 ;;		None
 15956 ;; Tracked objects:
 15957 ;;		On entry : 0/0
 15958 ;;		On exit  : 0/0
 15959 ;;		Unchanged: 0/0
 15960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15965 ;;Total ram usage:        0 bytes
 15966 ;; Hardware stack levels used:    1
 15967 ;; This function calls:
 15968 ;;		Nothing
 15969 ;; This function is called by:
 15970 ;;		_EUSART1_Initialize
 15971 ;;		_EUSART1_Receive_ISR
 15972 ;; This function uses a non-reentrant model
 15973 ;;
 15974                           
 15975                           
 15976                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 15977  16F4                     _EUSART1_DefaultOverrunErrorHandler:	
 15978                           
 15979                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 15980                           
 15981                           ;incstack = 0
 15982                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 15983  16F4  0142               	movlb	2	; select bank2
 15984  16F5  121D               	bcf	29,4	;volatile
 15985                           
 15986                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 15987  16F6  161D               	bsf	29,4	;volatile
 15988  16F7  0008               	return
 15989  16F8                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 15990                           
 15991                           	psect	text63
 15992  0003                     __ptext63:	
 15993 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 15994 ;; Defined at:
 15995 ;;		line 247 in file "mcc_generated_files/eusart1.c"
 15996 ;; Parameters:    Size  Location     Type
 15997 ;;		None
 15998 ;; Auto vars:     Size  Location     Type
 15999 ;;		None
 16000 ;; Return value:  Size  Location     Type
 16001 ;;                  1    wreg      void 
 16002 ;; Registers used:
 16003 ;;		None
 16004 ;; Tracked objects:
 16005 ;;		On entry : 0/0
 16006 ;;		On exit  : 0/0
 16007 ;;		Unchanged: 0/0
 16008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16013 ;;Total ram usage:        0 bytes
 16014 ;; Hardware stack levels used:    1
 16015 ;; This function calls:
 16016 ;;		Nothing
 16017 ;; This function is called by:
 16018 ;;		_EUSART1_Initialize
 16019 ;;		_EUSART1_Receive_ISR
 16020 ;; This function uses a non-reentrant model
 16021 ;;
 16022                           
 16023                           
 16024                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 16025  0003                     _EUSART1_DefaultFramingErrorHandler:	
 16026                           
 16027                           ;incstack = 0
 16028                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 16029  0003  0008               	return
 16030  0004                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 16031                           
 16032                           	psect	text64
 16033  16E7                     __ptext64:	
 16034 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 16035 ;; Defined at:
 16036 ;;		line 257 in file "mcc_generated_files/eusart1.c"
 16037 ;; Parameters:    Size  Location     Type
 16038 ;;		None
 16039 ;; Auto vars:     Size  Location     Type
 16040 ;;		None
 16041 ;; Return value:  Size  Location     Type
 16042 ;;                  1    wreg      void 
 16043 ;; Registers used:
 16044 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16045 ;; Tracked objects:
 16046 ;;		On entry : 0/0
 16047 ;;		On exit  : 0/0
 16048 ;;		Unchanged: 0/0
 16049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16054 ;;Total ram usage:        0 bytes
 16055 ;; Hardware stack levels used:    1
 16056 ;; Hardware stack levels required when called:    1
 16057 ;; This function calls:
 16058 ;;		_EUSART1_RxDataHandler
 16059 ;; This function is called by:
 16060 ;;		_EUSART1_Initialize
 16061 ;;		_EUSART1_Receive_ISR
 16062 ;; This function uses a non-reentrant model
 16063 ;;
 16064                           
 16065                           
 16066                           ;psect for function _EUSART1_DefaultErrorHandler
 16067  16E7                     _EUSART1_DefaultErrorHandler:	
 16068                           
 16069                           ;mcc_generated_files/eusart1.c: 258:     EUSART1_RxDataHandler();
 16070                           
 16071                           ;incstack = 0
 16072                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16073  16E7  3188  2035         	fcall	_EUSART1_RxDataHandler
 16074  16E9  0008               	return
 16075  16EA                     __end_of_EUSART1_DefaultErrorHandler:	
 16076                           
 16077                           	psect	text65
 16078  0835                     __ptext65:	
 16079 ;; *************** function _EUSART1_RxDataHandler *****************
 16080 ;; Defined at:
 16081 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 16082 ;; Parameters:    Size  Location     Type
 16083 ;;		None
 16084 ;; Auto vars:     Size  Location     Type
 16085 ;;		None
 16086 ;; Return value:  Size  Location     Type
 16087 ;;                  1    wreg      void 
 16088 ;; Registers used:
 16089 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16090 ;; Tracked objects:
 16091 ;;		On entry : 0/0
 16092 ;;		On exit  : 0/0
 16093 ;;		Unchanged: 0/0
 16094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16097 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16099 ;;Total ram usage:        1 bytes
 16100 ;; Hardware stack levels used:    1
 16101 ;; This function calls:
 16102 ;;		Nothing
 16103 ;; This function is called by:
 16104 ;;		_EUSART1_Receive_ISR
 16105 ;;		_EUSART1_DefaultErrorHandler
 16106 ;; This function uses a non-reentrant model
 16107 ;;
 16108                           
 16109                           
 16110                           ;psect for function _EUSART1_RxDataHandler
 16111  0835                     _EUSART1_RxDataHandler:	
 16112                           
 16113                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 16114                           
 16115                           ;incstack = 0
 16116                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 16117  0835  0142               	movlb	2	; select bank2
 16118  0836  0819               	movf	25,w	;volatile
 16119  0837  00F6               	movwf	??_EUSART1_RxDataHandler
 16120  0838  0871               	movf	_eusart1RxHead,w
 16121  0839  3E20               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 16122  083A  0086               	movwf	6
 16123  083B  3001               	movlw	1	; select bank2/3
 16124  083C  0087               	movwf	7
 16125  083D  0876               	movf	??_EUSART1_RxDataHandler,w
 16126  083E  0081               	movwf	1
 16127  083F  3001               	movlw	1
 16128  0840  00F6               	movwf	??_EUSART1_RxDataHandler
 16129  0841  0876               	movf	??_EUSART1_RxDataHandler,w
 16130  0842  07F1               	addwf	_eusart1RxHead,f	;volatile
 16131                           
 16132                           ;mcc_generated_files/eusart1.c: 240:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 16133  0843  3008               	movlw	8
 16134  0844  0271               	subwf	_eusart1RxHead,w	;volatile
 16135  0845  1803               	btfsc	3,0
 16136                           
 16137                           ;mcc_generated_files/eusart1.c: 241:     {;mcc_generated_files/eusart1.c: 242:         e
      +                          usart1RxHead = 0;
 16138  0846  01F1               	clrf	_eusart1RxHead	;volatile
 16139                           
 16140                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxCount++;
 16141  0847  3001               	movlw	1
 16142  0848  00F6               	movwf	??_EUSART1_RxDataHandler
 16143  0849  0876               	movf	??_EUSART1_RxDataHandler,w
 16144  084A  0141               	movlb	1	; select bank1
 16145  084B  07D2               	addwf	_eusart1RxCount^(0+128),f	;volatile
 16146  084C  0008               	return
 16147  084D                     __end_of_EUSART1_RxDataHandler:	
 16148                           
 16149                           	psect	text66
 16150  179E                     __ptext66:	
 16151 ;; *************** function _ADCC_ThresholdISR *****************
 16152 ;; Defined at:
 16153 ;;		line 308 in file "mcc_generated_files/adcc.c"
 16154 ;; Parameters:    Size  Location     Type
 16155 ;;		None
 16156 ;; Auto vars:     Size  Location     Type
 16157 ;;		None
 16158 ;; Return value:  Size  Location     Type
 16159 ;;                  1    wreg      void 
 16160 ;; Registers used:
 16161 ;;		wreg, status,2, status,0, pclath, cstack
 16162 ;; Tracked objects:
 16163 ;;		On entry : 0/0
 16164 ;;		On exit  : 0/0
 16165 ;;		Unchanged: 0/0
 16166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16171 ;;Total ram usage:        0 bytes
 16172 ;; Hardware stack levels used:    1
 16173 ;; Hardware stack levels required when called:    1
 16174 ;; This function calls:
 16175 ;;		Absolute function
 16176 ;;		_ADCC_DefaultInterruptHandler
 16177 ;;		_adcThresholdHandler
 16178 ;; This function is called by:
 16179 ;;		_INTERRUPT_InterruptManager
 16180 ;; This function uses a non-reentrant model
 16181 ;;
 16182                           
 16183                           
 16184                           ;psect for function _ADCC_ThresholdISR
 16185  179E                     _ADCC_ThresholdISR:	
 16186                           
 16187                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 16188                           
 16189                           ;incstack = 0
 16190                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 16191  179E  014E               	movlb	14	; select bank14
 16192  179F  108D               	bcf	13,1	;volatile
 16193                           
 16194                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 16195  17A0  0141               	movlb	1	; select bank1
 16196  17A1  086D               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 16197  17A2  046E               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 16198  17A3  1903               	btfsc	3,2
 16199  17A4  0008               	return
 16200                           
 16201                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 16202  17A5  086E               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 16203  17A6  008A               	movwf	10
 16204  17A7  086D               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 16205  17A8  000A               	callw
 16206  17A9  3197               	pagesel	$
 16207  17AA  0008               	return
 16208  17AB                     __end_of_ADCC_ThresholdISR:	
 16209                           
 16210                           	psect	text67
 16211  0002                     __ptext67:	
 16212 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 16213 ;; Defined at:
 16214 ;;		line 320 in file "mcc_generated_files/adcc.c"
 16215 ;; Parameters:    Size  Location     Type
 16216 ;;		None
 16217 ;; Auto vars:     Size  Location     Type
 16218 ;;		None
 16219 ;; Return value:  Size  Location     Type
 16220 ;;                  1    wreg      void 
 16221 ;; Registers used:
 16222 ;;		None
 16223 ;; Tracked objects:
 16224 ;;		On entry : 0/0
 16225 ;;		On exit  : 0/0
 16226 ;;		Unchanged: 0/0
 16227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16232 ;;Total ram usage:        0 bytes
 16233 ;; Hardware stack levels used:    1
 16234 ;; This function calls:
 16235 ;;		Nothing
 16236 ;; This function is called by:
 16237 ;;		_ADCC_Initialize
 16238 ;;		_ADCC_ThresholdISR
 16239 ;; This function uses a non-reentrant model
 16240 ;;
 16241                           
 16242                           
 16243                           ;psect for function _ADCC_DefaultInterruptHandler
 16244  0002                     _ADCC_DefaultInterruptHandler:	
 16245                           
 16246                           ;incstack = 0
 16247                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 16248  0002  0008               	return
 16249  0003                     __end_of_ADCC_DefaultInterruptHandler:	
 16250                           
 16251                           	psect	text68
 16252  16F0                     __ptext68:	
 16253 ;; *************** function _adcThresholdHandler *****************
 16254 ;; Defined at:
 16255 ;;		line 36 in file "beat.c"
 16256 ;; Parameters:    Size  Location     Type
 16257 ;;		None
 16258 ;; Auto vars:     Size  Location     Type
 16259 ;;		None
 16260 ;; Return value:  Size  Location     Type
 16261 ;;                  1    wreg      void 
 16262 ;; Registers used:
 16263 ;;		None
 16264 ;; Tracked objects:
 16265 ;;		On entry : 0/0
 16266 ;;		On exit  : 0/0
 16267 ;;		Unchanged: 0/0
 16268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16273 ;;Total ram usage:        0 bytes
 16274 ;; Hardware stack levels used:    1
 16275 ;; This function calls:
 16276 ;;		Nothing
 16277 ;; This function is called by:
 16278 ;;		_BEAT_init
 16279 ;;		_ADCC_ThresholdISR
 16280 ;; This function uses a non-reentrant model
 16281 ;;
 16282                           
 16283                           
 16284                           ;psect for function _adcThresholdHandler
 16285  16F0                     _adcThresholdHandler:	
 16286                           
 16287                           ;beat.c: 37:     thresholdExceeded = 1;
 16288                           
 16289                           ;incstack = 0
 16290                           ; Regs used in _adcThresholdHandler: []
 16291  16F0  0141               	movlb	1	; select bank1
 16292  16F1  01C4               	clrf	_thresholdExceeded^(0+128)
 16293  16F2  0AC4               	incf	_thresholdExceeded^(0+128),f
 16294  16F3  0008               	return
 16295  16F4                     __end_of_adcThresholdHandler:	
 16296  007E                     btemp	set	126	;btemp
 16297  007E                     int$flags	set	126
 16298  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        6
    BSS         117
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     79      79
    BANK1            80     10      80
    BANK2            80      0      62
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), CLOCK_timerCallback(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), CLOCK_timerCallback(), Absolute function(), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    S1257$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), Absolute function(), ADCC_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK1[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S437$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    S449$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    S449$ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[4]), NULL(NULL[0]), 

    S460$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[4]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[4]), 

    S460$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[4]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[4]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_TM1650_enable
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_setColor->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_enable->_writeData
    _CONTROLLER_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    ___lwmod->___lwdiv
    _TM1650_setDigit->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_setColor

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   61900
                                             77 BANK0      2     2      0
                                              8 BANK1      2     2      0
                      _BEAT_detected
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _LED_init
                       _LED_setColor
                  _SYSTEM_Initialize
                _TM1650_fastPrintNum
                        _TM1650_init
                          _UART_init
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    3442
                  _SYSTEM_Initialize
                      _TM1650_enable
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0    1027
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Initialize                                   1     1      0     605
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_setColor                                         8     0      8    7897
                                              0 BANK1      8     0      8
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3893
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1729
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      3     3      0   23757
                                             29 BANK0      3     3      0
                  _BUTTONS_isClicked
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                      _TM1650_enable
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (2) _address_inc                                          0     0      0   10534
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _address_dec                                          0     0      0   10534
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    2415
                                             21 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isHeld                                       1     1      0     103
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     134
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      0     0      0   10534
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (1) _TM1650_fastPrintNum                                  3     1      2   10534
                                             26 BANK0      3     1      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1852
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _TM1650_setDigit                                      5     3      2    6294
                                             21 BANK0      5     3      2
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _writeData                                            7     6      1    2353
                                             14 BANK0      7     6      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 5     2      3     546
                                              0 BANK0      5     2      3
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     911
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1898
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                   _TM1650_isEnabled
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1501
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _TM1650_isEnabled                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0      31
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ISR                                            4     4      0      31
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C1_Stop                                           2     2      0      31
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (11) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_detected
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     _TM1650_isEnabled
     ___lwdiv
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
     _TM1650_fastPrintNum
       _TM1650_setDigit
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
         _writeData (ARG)
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _CONTROLLER_task
     _BUTTONS_isClicked
     _BUTTONS_isHeld
     _CLOCK_getTime
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _address_dec
       _TM1650_fastPrintNum
         _TM1650_setDigit
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
           _writeData (ARG)
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _address_inc
       _TM1650_fastPrintNum
         _TM1650_setDigit
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
           _writeData (ARG)
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _LED_init
   _LED_setColor
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TM1650_fastPrintNum
     _TM1650_setDigit
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       _writeData (ARG)
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _TM1650_init
     _SYSTEM_Initialize
       _ADCC_Initialize
         _ADCC_SetADTIInterruptHandler
       _EUSART1_Initialize
         _EUSART1_SetErrorHandler
         _EUSART1_SetFramingErrorHandler
         _EUSART1_SetOverrunErrorHandler
         _EUSART1_SetRxInterruptHandler
         _EUSART1_SetTxInterruptHandler
       _I2C1_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
   _UART_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      E9       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      A      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3E      10       77.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0      E9      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 26 19:12:58 2019

                      _eusart1TxBufferRemaining 00EF                                    ___fldiv@aexp 0047  
                                  ___fldiv@bexp 0046                        ??_ADCC_SetUpperThreshold 0022  
                                  ___fldiv@sign 003F                                    ?_TM1650_init 0076  
                                            _up 00CA                              __size_of_BEAT_init 0017  
                            __size_of_BEAT_task 00D1                             __Umul8_16@word_mpld 0026  
                           _adcThresholdHandler 16F0                                             l820 0721  
                                           l863 0E08                                             l864 0E21  
                                           l865 0E4A                                             l866 0E72  
                                           l867 0E95                                             _bpm 00B1  
                       __size_of_PMD_Initialize 000A                                             wreg 0009  
                                  ___flmul@aexp 0056                                    ___flmul@bexp 005B  
                                  ___flmul@sign 0055                                    ___flmul@temp 0060  
                                  ___flmul@prod 005C                                    _BAUD1CONbits 011F  
                              __end_of_I2C1_ISR 1000                                    ___fltol@exp1 006C  
                                          l1603 0295                                            l1551 049E  
                                          l1642 07A9                                            l1395 0C43  
                                          l1643 07B3                                            l1635 0795  
                                          l1572 05A5                                            l3500 0C03  
                                          l1573 05BD                                            l1629 075F  
                                          l1575 05CA                                            l1648 0971  
                                          l3520 0C31                                            l3504 0C0C  
                                          l3530 0C50                                            l3522 0C3F  
                                          l4500 0917                                            l3614 0529  
                          _ADCC_StartConversion 172C                                            l3640 0562  
                                          l3632 0534                                            l3608 0510  
                                          l3616 04F2                                            l3552 0472  
                                          l4522 0AA4                                            l4514 0A86  
                                          l5314 0BD4                                            l3634 054B  
                                          l3618 052E                                            l3554 047A  
                                          l4516 0A92                                            l4444 16F8  
                                          l4540 0A04                                            l5308 0BC1  
                                          l3644 0564                                            l3572 0496  
                                          l3548 046F                                            l3820 0757  
                                          l4526 0AAD                                            l5334 0D11  
                                          l5262 0E02                                            l4462 0B81  
                                          l4710 042E                                            l3654 058D  
                                          l3582 04BD                                            l3830 0772  
                                          l5256 0DD2                                            l4464 0B87  
                                          l4480 099B                                            l4544 0A10  
                                          l4704 03A1                                            l3568 0493  
                                          l3840 07A7                                            l3832 0782  
                                          l5370 0D8D                                            l5354 0D49  
                                          l5338 0D17                                            l4458 0B7A  
                                          l4474 09EA                                            l4538 09F8  
                                          l3842 079A                                            l3826 076E  
                                          l5356 0D5C                                            l4548 0A19  
                                          l5292 0B9F                                            l3668 05C6  
                                          l3588 04C9                                            l4716 096B  
                                          l4806 17EA                                            l5294 0BA3  
                                          l3854 07CE                                            l5384 1718  
                                          l4816 17C5                                            l4832 0887  
                                          l4824 08A0                                            l5296 0BAB  
                                          l5456 0C97                                            l4834 088B  
                                          l4826 08A4                                            l5298 0BAF  
                                          l5474 0C83                                            l4692 02D2  
                                          l4852 0090                                            l4942 022B  
                                          l4934 01FD                                            l4870 00B3  
                                          l4854 0092                                            l5398 0711  
                                          l4960 026B                                            l4936 0214  
                                          l4872 00B5                                            l4856 009A  
                                          l4698 032D                                            l4778 0873  
                                          l4946 022D                                            l4882 00CB  
                                          l4874 00BD                                            l4956 0256  
                                          l4966 0282                                  ?_TM1650_enable 0076  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            u3105 07A1  
                                          u4105 09FB                                            u2425 0C32  
                                          u3145 07BB                                            u3065 077B  
                                          u4035 0A89                                            u4125 0A0A  
                                          u2605 050A                                            u3085 078F  
                                          u4055 0A93                                            u4135 0A11  
                                          u2615 051E                                            u2455 0C47  
                                          u4065 0A9D                                            u4075 0AA5  
                                          u5035 0CFC                                            u2395 0C15  
                                          u2645 0537                                            u4245 0972  
                                          u2735 057B                                            u2575 04FA  
                                          u2745 0596                                            u2665 0540  
                                          u2585 0501                                            u4425 0141  
                                          u2755 05AF                                            u4435 0170  
                                          _PMD0 0796                                            u5085 0D6E  
                                          u4445 01C6                                            _PMD1 0797  
                                          _PMD2 0798                                            u4455 01DD  
                                          u5327 0C66                                            _PMD3 0799  
                                          _PMD4 079A                                            u4465 01EC  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u4475 0200                                            _PMD7 079D  
                                          u4565 0244                                            u4575 025F  
                                          u4495 0209                                            u4825 0DD5  
                                          u4585 0275                                            u4834 0DF4  
                                          u4835 0DF3                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                 ?_BUTTONS_init 0076                                   ?_BUTTONS_task 0076  
                          ?_adcThresholdHandler 0076                                            _main 0C5F  
                                          _down 00C9                                            _init 0920  
                                          _menu 00C7                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                          ??_I2C1_MasterTRBInsert 0023  
                                          btemp 007E                                            start 0039  
                               ___fldiv@new_exp 0040                  TM1650_fastPrintNum@inputNumber 003A  
                       __end_of_TM1650_setDigit 0920                             __size_of_CLOCK_init 0008  
                          __size_of_address_dec 0018                            __size_of_address_inc 0019  
                I2C1_MasterWriteTRBBuild@length 0021                                  _BUTTONS_isHeld 17B8  
                       __end_of_TMR0_Initialize 1800                                      _i2c1_state 00D0  
                ??_TMR0_DefaultInterruptHandler 0076                  __size_of_OSCILLATOR_Initialize 0009  
                     I2C1_MasterTRBInsert@count 0024                   __end_of_OSCILLATOR_Initialize 177D  
                      __end_of_TM1650_isEnabled 16F0                       I2C1_MasterTRBInsert@pflag 0022  
                         _eusart1RxStatusBuffer 00A0                                __end_of_LED_init 07FF  
                                 ___fltol@sign1 006B                                           _ADCAP 010E  
                                         _ADACT 0117                                           ?_main 0076  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                               __end_of___fldiv 05CF                                           _ADREF 0116  
                             __end_of_I2C1_Stop 0865                                           _CCPR1 030C  
                                         _CCPR2 0310                                           _CCPR3 0314  
                                         _CCPR4 0318                                   __CFG_WDTE$OFF 0000  
                                         _ADRPT 009A                                 __end_of___flmul 02A2  
                               __end_of___fltol 0C5F                                 __end_of___lwdiv 0AB2  
                    _ADCC_ADTI_InterruptHandler 00ED                                           i1l106 08FF  
                                         i1l302 0EBF                                           i1l313 0F0F  
                                         i1l314 0F1B                                           i1l331 0F8B  
                                         i1l307 0EEC                                           i1l332 0F99  
                                         i1l324 0F5C                                           i1l308 0EED  
                                         i1l180 001E                                           i1l182 0028  
                                         i1l343 17D5                                           i1l175 000E  
                                         i1l336 0FC0                                           i1l328 0F7C  
                                         i1l184 0032                                 __end_of___lwmod 0A1E  
                                         i1l178 0017                                           i1l189 0037  
                                         _OSCEN 0891                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 16ED  
                     ?_TMR0_SetInterruptHandler 0020                            _EUSART1_Transmit_ISR 08E4  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 17B8  
                                         _delay 00E5                              __size_of_UART_init 001A  
                                         _enter 00C8                           ?_ADCC_StartConversion 0076  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0076  
                             __end_of_BEAT_init 0835                               __end_of_BEAT_task 0DB0  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 0004     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 0003                 I2C1_MasterWriteTRBBuild@address 0022  
                        __end_of_BUTTONS_isHeld 17C7                                 __initialization 003B  
                          TM1650_setDigit@digit 0038                           I2C1_MasterWrite@pdata 002D  
                         I2C1_MasterWrite@pflag 002A                      __end_of_EUSART1_Initialize 0AF7  
                                  __end_of_main 0CDF                                    __end_of_init 0940  
                               _CONTROLLER_init 1787                                 _CONTROLLER_task 0B94  
                                 ?_LED_setColor 00DB                    __size_of_CLOCK_timerCallback 0006  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 173E  
                   ?_INTERRUPT_InterruptManager 0076                        TM1650_setDigit@charTable 1000  
                                   _i2c1_object 00A8                                          ??_main 006D  
                                        ??_init 0023                        TM1650_setDigit@character 0039  
                         ?_EUSART1_Transmit_ISR 0076                                 ??_TM1650_enable 0035  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RB6PPS 1F1E                                          _RC4PPS 1F24  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          _RC6PPS 1F26  
                                        _RC7PPS 1F27                                          i1l5004 0A6C  
                                        i1l5008 0A7A                                          i1l5040 0EDF  
                                        i1l5106 0F6A                                          i1l5132 0FA7  
                                        i1l5116 0F7F                                          i1l5052 0EF9  
                                        i1l5044 0EE6                                          i1l5144 0FC4  
                                        i1l5128 0FA0                                          i1l5072 0F34  
                                        i1l5146 0FC7                                          i1l5058 0F09  
                                        i1l5154 0FD3                                          i1l5148 0FCB  
                                        i1l5092 0F51                                          i1l4750 0863  
                                        i1l5518 0FDC                                          i1l4998 0A5F  
                                        _SP1BRG 011B                                          _OSCFRQ 0893  
                                        _RX1PPS 1ECB                                          _TX1REG 011A  
                                        _TX1STA 011E                                          _TRISB4 009C  
                                        _TRISC3 00A3                                          _TRISC4 00A4  
                                        _TRISC6 00A6                                          _TRISC7 00A7  
                              __end_of___xxtofl 07D7                               ?_I2C1_MasterWrite 0027  
                              ?_TM1650_setDigit 0035                                 ?_BUTTONS_isHeld 0076  
                            ??_I2C1_MasterWrite 002B                                  _p_i2c1_current 00CE  
                                ??_LED_setColor 006D                     __end_of_TM1650_fastPrintNum 0455  
                             _ADCC_ThresholdISR 179E                               __end_of_UART_init 08C8  
                                     ??___fldiv 0036                                       ??___flmul 0050  
                                     ??___fltol 0066                                       ??___lwdiv 0024  
                                     ??___lwmod 002C                        ?_EUSART1_SetErrorHandler 0020  
                    ??_I2C1_MasterWriteTRBBuild 0024                                ?_TMR0_Initialize 0076  
                            ?_ADCC_ThresholdISR 0076                                       ?_I2C1_ISR 0076  
                        __size_of_BEAT_detected 0009                ??_EUSART1_SetOverrunErrorHandler 0022  
               ?_EUSART1_SetOverrunErrorHandler 0020                                  _lastActiveTime 00BB  
                          __size_of_TM1650_init 0009                                 _ADCC_Initialize 09A1  
                                _PMD_Initialize 177D                                    ??_CLOCK_init 0022  
                            __size_of__Umul8_16 0020                             ??_ADCC_ThresholdISR 0076  
                        ??_ADCC_StartConversion 0020            ADCC_SetUpperThreshold@upperThreshold 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
                        _ADCC_SetUpperThreshold 1723                   I2C1_MasterWriteTRBBuild@pdata 0020  
                               _eusart1RxBuffer 0120                                 _eusart1TxBuffer 0128  
                                  ___xxtofl@arg 002A                                    ___xxtofl@exp 0029  
                             _SYSTEM_Initialize 0809                                    ___xxtofl@val 0020  
                       __end_of__initialization 0072                         __end_of_CONTROLLER_init 1792  
                       __end_of_CONTROLLER_task 0BF9                              ?_SYSTEM_Initialize 0076  
                                     ?_LED_init 0076                                      ___fltol@f1 0062  
                                _i2c1_trb_count 00CF                  __size_of_EUSART1_RxDataHandler 0018  
                     __end_of_ADCC_ThresholdISR 17AB                   __end_of_EUSART1_RxDataHandler 084D  
                         _I2C1_FunctionComplete 17C7                            _I2C1_BusCollisionISR 16EA  
                                __pcstackCOMMON 0076                              __end_of_CLOCK_init 1711  
                        I2C1_MasterWrite@length 0027                                    __pidataBANK1 1703  
                           ??_SYSTEM_Initialize 0023                                       ?_TMR0_ISR 0076  
                                    ??_I2C1_ISR 0078                            __end_of_BUTTONS_init 0B42  
                        __end_of_PMD_Initialize 1787                            __end_of_BUTTONS_task 0EAC  
                        ??_EUSART1_Transmit_ISR 0076                     __end_of_EUSART1_Receive_ISR 0A7D  
                             _thresholdExceeded 00C4                     ADCC_StartConversion@channel 0020  
                             LED_setColor@green 00DD                               LED_setColor@white 00E1  
                     __end_of_SYSTEM_Initialize 081E                                   _eusart1RxHead 0071  
                                 _eusart1TxHead 0073                                   _eusart1RxTail 0070  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                 _eusart1TxTail 0072               _EUSART1_TxDefaultInterruptHandler 015C  
               ??_EUSART1_SetRxInterruptHandler 0022                                   _BEAT_detected 1711  
                                    ??_LED_init 0020                               __end_of__Umul8_16 0980  
                         ?_I2C1_BusCollisionISR 0076                 __end_of_EUSART1_SetErrorHandler 1750  
                                    __pmaintext 0C5F                __end_of_TMR0_SetInterruptHandler 1747  
                                    ??_TMR0_ISR 0076                                writeData@address 0032  
                       __end_of_ADCC_Initialize 09C7                                      __pintentry 0004  
                               _I2C1_Initialize 08C8                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 1723           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 171A                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 ?_PMD_Initialize 0076  
                             ?_TM1650_isEnabled 0076          __end_of_EUSART1_SetFramingErrorHandler 1759  
       __size_of_EUSART1_SetFramingErrorHandler 0009                  _EUSART1_SetFramingErrorHandler 1750  
                                     ?___xxtofl 0020                              ??_TM1650_isEnabled 0020  
                  ?_EUSART1_DefaultErrorHandler 0076                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                       _I2C1_Stop 084D  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                          __end_of_LED_setColor 0741                             _CLOCK_timerCallback 16FD  
                                ?_BEAT_detected 0076                   I2C1_MasterTRBInsert@ptrb_list 0020  
                            __size_of_writeData 0021                                   ??_address_dec 003D  
                              ?_CONTROLLER_init 0076                                   ??_address_inc 003D  
                              ?_CONTROLLER_task 0076                                 BUTTONS_task@btn 0028  
                        ?_I2C1_FunctionComplete 0076                                       _BEAT_init 081E  
                 __size_of_I2C1_MasterTRBInsert 0052                                       _BEAT_task 0CDF  
                    __size_of_ADCC_ThresholdISR 000D                              _p_i2c1_trb_current 00C1  
                                       ___fldiv 0455                            ?_CLOCK_timerCallback 0076  
                                       ___flmul 0076                                         ___fltol 0BF9  
                                       ___lwdiv 0A7D                                         ___lwmod 09F1  
                                       _address 00E9                                         __ptext1 08AE  
                                       __ptext2 0800                                         __ptext3 0809  
                                       __ptext4 17EC                                         __ptext5 177D  
                                       __ptext6 0A1E                                         __ptext7 1774  
                                       __ptext8 08C8                                         __ptext9 0AB2  
                 ?_ADCC_SetADTIInterruptHandler 0020                                         _counter 00BF  
                                       _lastRun 00AF                           _OSCILLATOR_Initialize 1774  
                                     _T2CONbits 028E                                         _buttons 0130  
                                    ??___xxtofl 0024                              _EUSART1_Initialize 0AB2  
                      ??_PIN_MANAGER_Initialize 0020                                      _inputArray 23EE  
                                    ?_I2C1_Stop 0076                     __end_of_adcThresholdHandler 16F4  
                                       _pointer 00BD                   ??_EUSART1_DefaultErrorHandler 0077  
                    __size_of_SYSTEM_Initialize 0015                            I2C1_ISR@pi2c_buf_ptr 00CD  
                                       clrloop0 1793                            end_of_initialization 0072  
                           ?_EUSART1_Initialize 0076                                         init@btn 0024  
                                       init@pin 0022                                ??_BUTTONS_isHeld 0020  
                   _EUSART1_OverrunErrorHandler 0156                          ??_I2C1_BusCollisionISR 0076  
                       __end_of_I2C1_Initialize 08E4           __end_of_EUSART1_SetRxInterruptHandler 176B  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 1762  
                                    ?_BEAT_init 0076                                      ?_BEAT_task 0076  
                         __size_of_BUTTONS_init 004B                           __size_of_BUTTONS_task 00FC  
                         ??_CLOCK_timerCallback 0076                             __end_of_address_dec 0895  
                           __end_of_address_inc 08AE                                ?_ADCC_Initialize 0076  
                          ??_EUSART1_Initialize 0022                        _TMR0_SetInterruptHandler 173E  
                                     _UART_init 08AE                       __size_of_I2C1_MasterWrite 002A  
                                  _displayState 00C6                               __size_of_I2C1_ISR 0154  
                             __end_of_writeData 09A1                         ?_ADCC_SetUpperThreshold 0020  
                                 ___xxtofl@sign 0028                                     ___fldiv@grs 0042  
                                   ___fldiv@rem 003B                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 087D               I2C1_ISR@i2c_10bit_address_restart 00CB  
                        __size_of_CLOCK_getTime 0009                                     ___flmul@grs 0057  
                                  _BUTTONS_init 0AF7                                    _BUTTONS_task 0DB0  
                                   _CCP1CONbits 030E                                     _CCP2CONbits 0312  
                                   _CCP3CONbits 0316                                     _CCP4CONbits 031A  
                       I2C1_MasterWrite@address 0028            __size_of_EUSART1_DefaultErrorHandler 0003  
                             __size_of_LED_init 0028                  ??_ADCC_DefaultInterruptHandler 0076  
                                 ??_TM1650_init 0036                         I2C1_MasterWrite@trBlock 00D3  
                             __size_of_TMR0_ISR 000D                        I2C1_Stop@completion_code 0077  
                      __size_of_TM1650_setDigit 001E                                      ?_UART_init 0076  
                        ?_OSCILLATOR_Initialize 0076                  __end_of_ADCC_SetUpperThreshold 172C  
                  __size_of_TM1650_fastPrintNum 01B3                           __size_of_LED_setColor 0172  
                                  _lastDetected 00C3                             start_initialization 003B  
                                   ??_I2C1_Stop 0076                        __size_of_TMR0_Initialize 0014  
               __size_of_PIN_MANAGER_Initialize 002F   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
 EUSART1_SetTxInterruptHandler@interruptHandler 0020                   __size_of_ADCC_StartConversion 0009  
             __size_of_I2C1_MasterWriteTRBBuild 0020                       ?_I2C1_MasterWriteTRBBuild 0020  
                             _BUTTONS_isClicked 17D8                              ?_BUTTONS_isClicked 0076  
                                   _address_dec 087D                                     _address_inc 0895  
                                   ??_BEAT_init 0022                                ?_I2C1_Initialize 0076  
                                   ??_BEAT_task 0028                             ??_BUTTONS_isClicked 0020  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 0835  
                                  _LED_setColor 05CF                  ?_EUSART1_SetRxInterruptHandler 0020  
                                     __Umul8_16 0960                                     __pdataBANK1 00E5  
                                 _CLOCK_getTime 1735                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00D2                                       ___fldiv@a 002E  
                                     ___fldiv@b 0032                                     __pbssBIGRAM 23EE  
                           __end_of_TM1650_init 0809                                       ___flmul@a 004C  
                                     ___flmul@b 0048                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 015A                                       ___latbits 0003  
                 __size_of_EUSART1_Transmit_ISR 001E                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00DB                                   _i2c1_tr_queue 00D7  
                             __size_of___xxtofl 0096                       __end_of_BUTTONS_isClicked 17EC  
               ??_EUSART1_SetTxInterruptHandler 0022                                 buttons@lastTime 00B5  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0076                       __size_of_TM1650_isEnabled 0003  
                  __size_of_EUSART1_Receive_ISR 0030                                LED_setColor@blue 00DF  
                         _TMR0_InterruptHandler 00EB                                       __pnvBANK1 00EB  
                                     __pnvBANK2 0154                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 0A1E                                        ?___fldiv 002E  
                                      ?___flmul 0048                                        ?___fltol 0062  
                                    ?__Umul8_16 0020                                        ?___lwdiv 0020  
                                      ?___lwmod 0028                                  ?_CLOCK_getTime 0020  
                                      _I2C1_ISR 0EAC                    ??_INTERRUPT_InterruptManager 007C  
                               writeData@status 0034                                     ??_UART_init 0020  
                              _I2C1_MasterWrite 09C7                                        _BAUD1CON 011F  
                  __end_of_I2C1_MasterTRBInsert 0B94      __end_of_EUSART1_DefaultOverrunErrorHandler 16F8  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076              _EUSART1_DefaultOverrunErrorHandler 16F4  
                          _EUSART1_ErrorHandler 0154                         _EUSART1_SetErrorHandler 1747  
                             ??_TM1650_setDigit 0037                                ___lwdiv@quotient 0026  
                                      _T2CLKCON 0290        __end_of_I2C1_WaitForLastPacketToComplete 16FD  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0076                _I2C1_WaitForLastPacketToComplete 16F8  
                        I2C1_MasterRead@trBlock 0150                               ??_TMR0_Initialize 0022  
       EUSART1_SetErrorHandler@interruptHandler 0020                         BUTTONS_isClicked@button 0020  
                                     clear_ram0 1792                                        _PIE0bits 0716  
                                      _LED_init 07D7                                        _PIE1bits 0717  
                                      _PIE3bits 0719             __size_of_INTERRUPT_InterruptManager 0035  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0076  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 17AB                                        _SSP1STAT 018F  
                           writeData@dataToSend 0033                        __size_of_CONTROLLER_init 000B  
                      __size_of_CONTROLLER_task 0065                                     _TM1650_init 0800  
                                     _threshold 00E7                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                       _writeData 0980  
                    __size_of_BUTTONS_isClicked 0014                              TM1650_setDigit@num 0035  
                  __size_of_adcThresholdHandler 0004                     __end_of_CLOCK_timerCallback 1703  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 02A2  
                                    _ADSTATbits 0115           __end_of_EUSART1_SetTxInterruptHandler 1774  
        __size_of_EUSART1_SetTxInterruptHandler 0009                   _EUSART1_SetTxInterruptHandler 176B  
                 __size_of_I2C1_BusCollisionISR 0003                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 00CC                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fldiv 017A  
                              __size_of___flmul 022C                                __size_of___fltol 0066  
                   __size_of_EUSART1_Initialize 0045                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                __end_of_I2C1_MasterWriteTRBBuild 0960  
                          ?_TM1650_fastPrintNum 003A                       ??_EUSART1_SetErrorHandler 0022  
                               BEAT_task@offset 002A                             TM1650_enable@enable 0035  
           __end_of_EUSART1_DefaultErrorHandler 16EA                     _EUSART1_DefaultErrorHandler 16E7  
                               LED_setColor@red 00DB                                     _currentTime 00B7  
                                    _CLOCK_init 1709                                        ___xxtofl 0741  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                               ___lwdiv@divisor 0020                             I2C1_ISR@i2c_address 0074  
                               ___lwdiv@counter 0025                                        _detected 00C5  
                                    ?_writeData 002E                                        __ptext10 176B  
                                      __ptext11 1762                                        __ptext20 0960  
                                      __ptext12 1759                                        __ptext21 0455  
                                      __ptext13 1750                                        __ptext30 02A2  
                                      __ptext22 07D7                                        __ptext14 1747  
                                      __ptext31 09F1                                        __ptext23 0B94  
                                      __ptext15 09A1                                        __ptext40 0DB0  
                                      __ptext32 0902                                        __ptext24 0895  
                                      __ptext16 05CF                                        __ptext41 0AF7  
                                      __ptext33 0980                                        __ptext25 087D  
                                      __ptext17 0741                                        __ptext50 171A  
                                      __ptext42 0920                                        __ptext34 09C7  
                                      __ptext26 0865                                        __ptext18 0BF9  
                                      __ptext51 1711                                        __ptext43 0CDF  
                                      __ptext35 0940                                        __ptext27 17B8  
                                      __ptext19 0076                                        __ptext60 08E4  
                                      __ptext44 0A7D                                        __ptext36 0B42  
                                      __ptext28 17D8                                        __ptext61 0A4D  
                                      __ptext53 17AB                                        __ptext45 16ED  
                                      __ptext37 16F8                                        __ptext29 1787  
                                      __ptext62 16F4                                        __ptext54 16FD  
                                      __ptext46 1735                                        __ptext38 1709  
                                      __ptext63 0003                                        __ptext55 07FF  
                                      __ptext47 081E                                        __ptext39 173E  
                                      __ptext64 16E7                                        __ptext56 0EAC  
                                      __ptext48 172C                                        __ptext65 0835  
                                      __ptext57 084D                                        __ptext49 1723  
                                      __ptext66 179E                                        __ptext58 17C7  
                                      __ptext67 0002                                        __ptext59 16EA  
                                      __ptext68 16F0                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                            BUTTONS_isHeld@button 0020  
                         __end_of_BEAT_detected 171A                                        _lastBeat 00B3  
                                      _lastTime 00B9                                _TM1650_isEnabled 16ED  
                                 __size_of_main 0080                                   __size_of_init 0020  
                                  ?_address_dec 0076            __end_of_TMR0_DefaultInterruptHandler 0800  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 07FF  
                                  ?_address_inc 0076                            _I2C1_MasterTRBInsert 0B42  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                  __end_of_ADCC_StartConversion 1735                                        int$flags 007E  
                       __size_of_BUTTONS_isHeld 000F              __end_of_INTERRUPT_InterruptManager 0039  
                    _INTERRUPT_InterruptManager 0004                                        main@time 00E3  
                        __size_of_TM1650_enable 0018                     _EUSART1_FramingErrorHandler 0158  
                           _EUSART1_Receive_ISR 0A4D                           ??_TM1650_fastPrintNum 003C  
                             TM1650_setDigit@dp 0036                                      _INTCONbits 000B  
                             ??_CONTROLLER_init 003D                               ??_CONTROLLER_task 003D  
                                      init@port 0020            __end_of_ADCC_DefaultInterruptHandler 0003  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 0002  
                                      intlevel1 0000                                  _thresholdCount 00AD  
                          ?_EUSART1_Receive_ISR 0076                                   writeData@data 002E  
                              ___lwmod@dividend 002A                         ?_PIN_MANAGER_Initialize 0076  
                      __end_of_I2C1_MasterWrite 09F1                  __size_of_I2C1_FunctionComplete 0011  
        __end_of_EUSART1_SetOverrunErrorHandler 1762         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 1759                   __end_of_I2C1_FunctionComplete 17D8  
                         ?_I2C1_MasterTRBInsert 0020                    __end_of_EUSART1_Transmit_ISR 0902  
                         CONTROLLER_task@active 003F                   ?_TMR0_DefaultInterruptHandler 0076  
EUSART1_SetFramingErrorHandler@interruptHandler 0020                  ?_EUSART1_SetTxInterruptHandler 0020  
                               _TM1650_setDigit 0902                        __size_of_I2C1_Initialize 001C  
                            _eusart1RxLastError 00D1                                   __pstringtext1 1000  
                        __Umul8_16@multiplicand 0020                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0028  
                                   ?_CLOCK_init 0076                                 _TMR0_Initialize 17EC  
                               ___lwmod@counter 002D                        _I2C1_MasterWriteTRBBuild 0940  
                                   ??_writeData 002F                                      _TX1STAbits 011E  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 0A4D                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 0865                              __size_of_I2C1_Stop 0018  
                 ?_ADCC_DefaultInterruptHandler 0076                            __Umul8_16@multiplier 0028  
                       ??_EUSART1_RxDataHandler 0076                               __Umul8_16@product 0024  
              __end_ofTM1650_setDigit@charTable 1060  
