

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 23:36:13 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,delta=2
    92                           	dabs	1,0xCA0,32
    93                           	dabs	1,0xC20,80
    94                           	dabs	1,0xBA0,80
    95                           	dabs	1,0xB20,80
    96                           	dabs	1,0xAA0,80
    97                           	dabs	1,0xA20,80
    98                           	dabs	1,0x9A0,80
    99                           	dabs	1,0x96F,1
   100                           	dabs	1,0x25EF,0,_inputArray
   101                           	dabs	1,0x7E,2
   102  0000                     
   103                           ; Version 2.05
   104                           ; Generated 20/12/2018 GMT
   105                           ; 
   106                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC16F18446 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  008C                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  008E                     	;# 
   163  008F                     	;# 
   164  0090                     	;# 
   165  0090                     	;# 
   166  0091                     	;# 
   167  0092                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0094                     	;# 
   172  0095                     	;# 
   173  0096                     	;# 
   174  0096                     	;# 
   175  0097                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009A                     	;# 
   179  009B                     	;# 
   180  009B                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  010F                     	;# 
   192  0110                     	;# 
   193  0111                     	;# 
   194  0112                     	;# 
   195  0113                     	;# 
   196  0114                     	;# 
   197  0115                     	;# 
   198  0116                     	;# 
   199  0117                     	;# 
   200  0118                     	;# 
   201  0119                     	;# 
   202  0119                     	;# 
   203  0119                     	;# 
   204  011A                     	;# 
   205  011A                     	;# 
   206  011A                     	;# 
   207  011B                     	;# 
   208  011B                     	;# 
   209  011B                     	;# 
   210  011B                     	;# 
   211  011B                     	;# 
   212  011C                     	;# 
   213  011C                     	;# 
   214  011C                     	;# 
   215  011D                     	;# 
   216  011D                     	;# 
   217  011D                     	;# 
   218  011E                     	;# 
   219  011E                     	;# 
   220  011E                     	;# 
   221  011F                     	;# 
   222  011F                     	;# 
   223  011F                     	;# 
   224  011F                     	;# 
   225  011F                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  018E                     	;# 
   229  018F                     	;# 
   230  0190                     	;# 
   231  0191                     	;# 
   232  0192                     	;# 
   233  0196                     	;# 
   234  0197                     	;# 
   235  0198                     	;# 
   236  0199                     	;# 
   237  019A                     	;# 
   238  019B                     	;# 
   239  019C                     	;# 
   240  020C                     	;# 
   241  020D                     	;# 
   242  020E                     	;# 
   243  020E                     	;# 
   244  020F                     	;# 
   245  020F                     	;# 
   246  0210                     	;# 
   247  0210                     	;# 
   248  0211                     	;# 
   249  0211                     	;# 
   250  0212                     	;# 
   251  0213                     	;# 
   252  0214                     	;# 
   253  0214                     	;# 
   254  0215                     	;# 
   255  0215                     	;# 
   256  0216                     	;# 
   257  0216                     	;# 
   258  0217                     	;# 
   259  0217                     	;# 
   260  0218                     	;# 
   261  0219                     	;# 
   262  021A                     	;# 
   263  021A                     	;# 
   264  021B                     	;# 
   265  021B                     	;# 
   266  021C                     	;# 
   267  021C                     	;# 
   268  021D                     	;# 
   269  021D                     	;# 
   270  021E                     	;# 
   271  021F                     	;# 
   272  028C                     	;# 
   273  028C                     	;# 
   274  028D                     	;# 
   275  028D                     	;# 
   276  028E                     	;# 
   277  028F                     	;# 
   278  0290                     	;# 
   279  0291                     	;# 
   280  0292                     	;# 
   281  0292                     	;# 
   282  0293                     	;# 
   283  0293                     	;# 
   284  0294                     	;# 
   285  0295                     	;# 
   286  0296                     	;# 
   287  0297                     	;# 
   288  0298                     	;# 
   289  0298                     	;# 
   290  0299                     	;# 
   291  0299                     	;# 
   292  029A                     	;# 
   293  029B                     	;# 
   294  029C                     	;# 
   295  029D                     	;# 
   296  029F                     	;# 
   297  030C                     	;# 
   298  030C                     	;# 
   299  030D                     	;# 
   300  030E                     	;# 
   301  030F                     	;# 
   302  0310                     	;# 
   303  0310                     	;# 
   304  0311                     	;# 
   305  0312                     	;# 
   306  0313                     	;# 
   307  0314                     	;# 
   308  0314                     	;# 
   309  0315                     	;# 
   310  0316                     	;# 
   311  0317                     	;# 
   312  0318                     	;# 
   313  0318                     	;# 
   314  0319                     	;# 
   315  031A                     	;# 
   316  031B                     	;# 
   317  038C                     	;# 
   318  038C                     	;# 
   319  038D                     	;# 
   320  038E                     	;# 
   321  0390                     	;# 
   322  0390                     	;# 
   323  0391                     	;# 
   324  0392                     	;# 
   325  048C                     	;# 
   326  048C                     	;# 
   327  048D                     	;# 
   328  048E                     	;# 
   329  048F                     	;# 
   330  048F                     	;# 
   331  0490                     	;# 
   332  0491                     	;# 
   333  0492                     	;# 
   334  0492                     	;# 
   335  0493                     	;# 
   336  0494                     	;# 
   337  0495                     	;# 
   338  0495                     	;# 
   339  0496                     	;# 
   340  0497                     	;# 
   341  0498                     	;# 
   342  0499                     	;# 
   343  049A                     	;# 
   344  049B                     	;# 
   345  049C                     	;# 
   346  049D                     	;# 
   347  058C                     	;# 
   348  058C                     	;# 
   349  058D                     	;# 
   350  058E                     	;# 
   351  058F                     	;# 
   352  058F                     	;# 
   353  0590                     	;# 
   354  0591                     	;# 
   355  0592                     	;# 
   356  0593                     	;# 
   357  059C                     	;# 
   358  059C                     	;# 
   359  059D                     	;# 
   360  059D                     	;# 
   361  059E                     	;# 
   362  059F                     	;# 
   363  060C                     	;# 
   364  060C                     	;# 
   365  060D                     	;# 
   366  060D                     	;# 
   367  060E                     	;# 
   368  060F                     	;# 
   369  0610                     	;# 
   370  0611                     	;# 
   371  0612                     	;# 
   372  0613                     	;# 
   373  0614                     	;# 
   374  0616                     	;# 
   375  0616                     	;# 
   376  0617                     	;# 
   377  0617                     	;# 
   378  0618                     	;# 
   379  0619                     	;# 
   380  061A                     	;# 
   381  061B                     	;# 
   382  061C                     	;# 
   383  061D                     	;# 
   384  061E                     	;# 
   385  070C                     	;# 
   386  070D                     	;# 
   387  070E                     	;# 
   388  070F                     	;# 
   389  0710                     	;# 
   390  0711                     	;# 
   391  0712                     	;# 
   392  0713                     	;# 
   393  0714                     	;# 
   394  0716                     	;# 
   395  0717                     	;# 
   396  0718                     	;# 
   397  0719                     	;# 
   398  071A                     	;# 
   399  071B                     	;# 
   400  071C                     	;# 
   401  071D                     	;# 
   402  071E                     	;# 
   403  0796                     	;# 
   404  0797                     	;# 
   405  0798                     	;# 
   406  0799                     	;# 
   407  079A                     	;# 
   408  079B                     	;# 
   409  079C                     	;# 
   410  079D                     	;# 
   411  080C                     	;# 
   412  080D                     	;# 
   413  080E                     	;# 
   414  080F                     	;# 
   415  0810                     	;# 
   416  0811                     	;# 
   417  0812                     	;# 
   418  0813                     	;# 
   419  0814                     	;# 
   420  081A                     	;# 
   421  081A                     	;# 
   422  081B                     	;# 
   423  081C                     	;# 
   424  081C                     	;# 
   425  081D                     	;# 
   426  081E                     	;# 
   427  081F                     	;# 
   428  088C                     	;# 
   429  088D                     	;# 
   430  088E                     	;# 
   431  088F                     	;# 
   432  0890                     	;# 
   433  0891                     	;# 
   434  0892                     	;# 
   435  0893                     	;# 
   436  0895                     	;# 
   437  0896                     	;# 
   438  0897                     	;# 
   439  0898                     	;# 
   440  0899                     	;# 
   441  089A                     	;# 
   442  089B                     	;# 
   443  090C                     	;# 
   444  090E                     	;# 
   445  090F                     	;# 
   446  091F                     	;# 
   447  098F                     	;# 
   448  098F                     	;# 
   449  0990                     	;# 
   450  0991                     	;# 
   451  0992                     	;# 
   452  0993                     	;# 
   453  0994                     	;# 
   454  0995                     	;# 
   455  0996                     	;# 
   456  0997                     	;# 
   457  1E0F                     	;# 
   458  1E10                     	;# 
   459  1E11                     	;# 
   460  1E12                     	;# 
   461  1E13                     	;# 
   462  1E14                     	;# 
   463  1E15                     	;# 
   464  1E16                     	;# 
   465  1E17                     	;# 
   466  1E18                     	;# 
   467  1E19                     	;# 
   468  1E1A                     	;# 
   469  1E1B                     	;# 
   470  1E1C                     	;# 
   471  1E1D                     	;# 
   472  1E1E                     	;# 
   473  1E1F                     	;# 
   474  1E20                     	;# 
   475  1E21                     	;# 
   476  1E22                     	;# 
   477  1E23                     	;# 
   478  1E24                     	;# 
   479  1E25                     	;# 
   480  1E26                     	;# 
   481  1E27                     	;# 
   482  1E28                     	;# 
   483  1E29                     	;# 
   484  1E2A                     	;# 
   485  1E2B                     	;# 
   486  1E2C                     	;# 
   487  1E2D                     	;# 
   488  1E2E                     	;# 
   489  1E2F                     	;# 
   490  1E30                     	;# 
   491  1E31                     	;# 
   492  1E32                     	;# 
   493  1E33                     	;# 
   494  1E34                     	;# 
   495  1E35                     	;# 
   496  1E36                     	;# 
   497  1E37                     	;# 
   498  1E8F                     	;# 
   499  1E90                     	;# 
   500  1E91                     	;# 
   501  1E92                     	;# 
   502  1E93                     	;# 
   503  1E94                     	;# 
   504  1E95                     	;# 
   505  1E96                     	;# 
   506  1E97                     	;# 
   507  1E9C                     	;# 
   508  1E9D                     	;# 
   509  1E9E                     	;# 
   510  1EA1                     	;# 
   511  1EA2                     	;# 
   512  1EA3                     	;# 
   513  1EA4                     	;# 
   514  1EA9                     	;# 
   515  1EAA                     	;# 
   516  1EB1                     	;# 
   517  1EB2                     	;# 
   518  1EB8                     	;# 
   519  1EB9                     	;# 
   520  1EBA                     	;# 
   521  1EBB                     	;# 
   522  1EBC                     	;# 
   523  1EBD                     	;# 
   524  1EBE                     	;# 
   525  1EC3                     	;# 
   526  1EC5                     	;# 
   527  1EC6                     	;# 
   528  1EC7                     	;# 
   529  1EC8                     	;# 
   530  1EC9                     	;# 
   531  1ECA                     	;# 
   532  1ECB                     	;# 
   533  1ECB                     	;# 
   534  1ECB                     	;# 
   535  1ECC                     	;# 
   536  1ECC                     	;# 
   537  1ECC                     	;# 
   538  1F10                     	;# 
   539  1F11                     	;# 
   540  1F12                     	;# 
   541  1F14                     	;# 
   542  1F15                     	;# 
   543  1F1C                     	;# 
   544  1F1D                     	;# 
   545  1F1E                     	;# 
   546  1F1F                     	;# 
   547  1F20                     	;# 
   548  1F21                     	;# 
   549  1F22                     	;# 
   550  1F23                     	;# 
   551  1F24                     	;# 
   552  1F25                     	;# 
   553  1F26                     	;# 
   554  1F27                     	;# 
   555  1F38                     	;# 
   556  1F39                     	;# 
   557  1F3A                     	;# 
   558  1F3B                     	;# 
   559  1F3C                     	;# 
   560  1F3D                     	;# 
   561  1F3E                     	;# 
   562  1F3F                     	;# 
   563  1F43                     	;# 
   564  1F44                     	;# 
   565  1F45                     	;# 
   566  1F46                     	;# 
   567  1F47                     	;# 
   568  1F48                     	;# 
   569  1F49                     	;# 
   570  1F4A                     	;# 
   571  1F4E                     	;# 
   572  1F4F                     	;# 
   573  1F50                     	;# 
   574  1F51                     	;# 
   575  1F52                     	;# 
   576  1F53                     	;# 
   577  1F54                     	;# 
   578  1F55                     	;# 
   579  1FE4                     	;# 
   580  1FE5                     	;# 
   581  1FE6                     	;# 
   582  1FE7                     	;# 
   583  1FE8                     	;# 
   584  1FE8                     	;# 
   585  1FE9                     	;# 
   586  1FEA                     	;# 
   587  1FEB                     	;# 
   588  1FED                     	;# 
   589  1FEE                     	;# 
   590  1FEF                     	;# 
   591  0000                     	;# 
   592  0001                     	;# 
   593  0002                     	;# 
   594  0003                     	;# 
   595  0004                     	;# 
   596  0005                     	;# 
   597  0006                     	;# 
   598  0007                     	;# 
   599  0008                     	;# 
   600  0009                     	;# 
   601  000A                     	;# 
   602  000B                     	;# 
   603  000C                     	;# 
   604  000D                     	;# 
   605  000E                     	;# 
   606  0012                     	;# 
   607  0013                     	;# 
   608  0014                     	;# 
   609  0018                     	;# 
   610  0019                     	;# 
   611  001A                     	;# 
   612  008C                     	;# 
   613  008C                     	;# 
   614  008D                     	;# 
   615  008E                     	;# 
   616  008E                     	;# 
   617  008F                     	;# 
   618  0090                     	;# 
   619  0090                     	;# 
   620  0091                     	;# 
   621  0092                     	;# 
   622  0092                     	;# 
   623  0093                     	;# 
   624  0094                     	;# 
   625  0094                     	;# 
   626  0095                     	;# 
   627  0096                     	;# 
   628  0096                     	;# 
   629  0097                     	;# 
   630  0098                     	;# 
   631  0099                     	;# 
   632  009A                     	;# 
   633  009B                     	;# 
   634  009B                     	;# 
   635  009C                     	;# 
   636  009D                     	;# 
   637  009D                     	;# 
   638  009E                     	;# 
   639  009F                     	;# 
   640  010C                     	;# 
   641  010C                     	;# 
   642  010D                     	;# 
   643  010E                     	;# 
   644  010F                     	;# 
   645  010F                     	;# 
   646  0110                     	;# 
   647  0111                     	;# 
   648  0112                     	;# 
   649  0113                     	;# 
   650  0114                     	;# 
   651  0115                     	;# 
   652  0116                     	;# 
   653  0117                     	;# 
   654  0118                     	;# 
   655  0119                     	;# 
   656  0119                     	;# 
   657  0119                     	;# 
   658  011A                     	;# 
   659  011A                     	;# 
   660  011A                     	;# 
   661  011B                     	;# 
   662  011B                     	;# 
   663  011B                     	;# 
   664  011B                     	;# 
   665  011B                     	;# 
   666  011C                     	;# 
   667  011C                     	;# 
   668  011C                     	;# 
   669  011D                     	;# 
   670  011D                     	;# 
   671  011D                     	;# 
   672  011E                     	;# 
   673  011E                     	;# 
   674  011E                     	;# 
   675  011F                     	;# 
   676  011F                     	;# 
   677  011F                     	;# 
   678  011F                     	;# 
   679  011F                     	;# 
   680  018C                     	;# 
   681  018D                     	;# 
   682  018E                     	;# 
   683  018F                     	;# 
   684  0190                     	;# 
   685  0191                     	;# 
   686  0192                     	;# 
   687  0196                     	;# 
   688  0197                     	;# 
   689  0198                     	;# 
   690  0199                     	;# 
   691  019A                     	;# 
   692  019B                     	;# 
   693  019C                     	;# 
   694  020C                     	;# 
   695  020D                     	;# 
   696  020E                     	;# 
   697  020E                     	;# 
   698  020F                     	;# 
   699  020F                     	;# 
   700  0210                     	;# 
   701  0210                     	;# 
   702  0211                     	;# 
   703  0211                     	;# 
   704  0212                     	;# 
   705  0213                     	;# 
   706  0214                     	;# 
   707  0214                     	;# 
   708  0215                     	;# 
   709  0215                     	;# 
   710  0216                     	;# 
   711  0216                     	;# 
   712  0217                     	;# 
   713  0217                     	;# 
   714  0218                     	;# 
   715  0219                     	;# 
   716  021A                     	;# 
   717  021A                     	;# 
   718  021B                     	;# 
   719  021B                     	;# 
   720  021C                     	;# 
   721  021C                     	;# 
   722  021D                     	;# 
   723  021D                     	;# 
   724  021E                     	;# 
   725  021F                     	;# 
   726  028C                     	;# 
   727  028C                     	;# 
   728  028D                     	;# 
   729  028D                     	;# 
   730  028E                     	;# 
   731  028F                     	;# 
   732  0290                     	;# 
   733  0291                     	;# 
   734  0292                     	;# 
   735  0292                     	;# 
   736  0293                     	;# 
   737  0293                     	;# 
   738  0294                     	;# 
   739  0295                     	;# 
   740  0296                     	;# 
   741  0297                     	;# 
   742  0298                     	;# 
   743  0298                     	;# 
   744  0299                     	;# 
   745  0299                     	;# 
   746  029A                     	;# 
   747  029B                     	;# 
   748  029C                     	;# 
   749  029D                     	;# 
   750  029F                     	;# 
   751  030C                     	;# 
   752  030C                     	;# 
   753  030D                     	;# 
   754  030E                     	;# 
   755  030F                     	;# 
   756  0310                     	;# 
   757  0310                     	;# 
   758  0311                     	;# 
   759  0312                     	;# 
   760  0313                     	;# 
   761  0314                     	;# 
   762  0314                     	;# 
   763  0315                     	;# 
   764  0316                     	;# 
   765  0317                     	;# 
   766  0318                     	;# 
   767  0318                     	;# 
   768  0319                     	;# 
   769  031A                     	;# 
   770  031B                     	;# 
   771  038C                     	;# 
   772  038C                     	;# 
   773  038D                     	;# 
   774  038E                     	;# 
   775  0390                     	;# 
   776  0390                     	;# 
   777  0391                     	;# 
   778  0392                     	;# 
   779  048C                     	;# 
   780  048C                     	;# 
   781  048D                     	;# 
   782  048E                     	;# 
   783  048F                     	;# 
   784  048F                     	;# 
   785  0490                     	;# 
   786  0491                     	;# 
   787  0492                     	;# 
   788  0492                     	;# 
   789  0493                     	;# 
   790  0494                     	;# 
   791  0495                     	;# 
   792  0495                     	;# 
   793  0496                     	;# 
   794  0497                     	;# 
   795  0498                     	;# 
   796  0499                     	;# 
   797  049A                     	;# 
   798  049B                     	;# 
   799  049C                     	;# 
   800  049D                     	;# 
   801  058C                     	;# 
   802  058C                     	;# 
   803  058D                     	;# 
   804  058E                     	;# 
   805  058F                     	;# 
   806  058F                     	;# 
   807  0590                     	;# 
   808  0591                     	;# 
   809  0592                     	;# 
   810  0593                     	;# 
   811  059C                     	;# 
   812  059C                     	;# 
   813  059D                     	;# 
   814  059D                     	;# 
   815  059E                     	;# 
   816  059F                     	;# 
   817  060C                     	;# 
   818  060C                     	;# 
   819  060D                     	;# 
   820  060D                     	;# 
   821  060E                     	;# 
   822  060F                     	;# 
   823  0610                     	;# 
   824  0611                     	;# 
   825  0612                     	;# 
   826  0613                     	;# 
   827  0614                     	;# 
   828  0616                     	;# 
   829  0616                     	;# 
   830  0617                     	;# 
   831  0617                     	;# 
   832  0618                     	;# 
   833  0619                     	;# 
   834  061A                     	;# 
   835  061B                     	;# 
   836  061C                     	;# 
   837  061D                     	;# 
   838  061E                     	;# 
   839  070C                     	;# 
   840  070D                     	;# 
   841  070E                     	;# 
   842  070F                     	;# 
   843  0710                     	;# 
   844  0711                     	;# 
   845  0712                     	;# 
   846  0713                     	;# 
   847  0714                     	;# 
   848  0716                     	;# 
   849  0717                     	;# 
   850  0718                     	;# 
   851  0719                     	;# 
   852  071A                     	;# 
   853  071B                     	;# 
   854  071C                     	;# 
   855  071D                     	;# 
   856  071E                     	;# 
   857  0796                     	;# 
   858  0797                     	;# 
   859  0798                     	;# 
   860  0799                     	;# 
   861  079A                     	;# 
   862  079B                     	;# 
   863  079C                     	;# 
   864  079D                     	;# 
   865  080C                     	;# 
   866  080D                     	;# 
   867  080E                     	;# 
   868  080F                     	;# 
   869  0810                     	;# 
   870  0811                     	;# 
   871  0812                     	;# 
   872  0813                     	;# 
   873  0814                     	;# 
   874  081A                     	;# 
   875  081A                     	;# 
   876  081B                     	;# 
   877  081C                     	;# 
   878  081C                     	;# 
   879  081D                     	;# 
   880  081E                     	;# 
   881  081F                     	;# 
   882  088C                     	;# 
   883  088D                     	;# 
   884  088E                     	;# 
   885  088F                     	;# 
   886  0890                     	;# 
   887  0891                     	;# 
   888  0892                     	;# 
   889  0893                     	;# 
   890  0895                     	;# 
   891  0896                     	;# 
   892  0897                     	;# 
   893  0898                     	;# 
   894  0899                     	;# 
   895  089A                     	;# 
   896  089B                     	;# 
   897  090C                     	;# 
   898  090E                     	;# 
   899  090F                     	;# 
   900  091F                     	;# 
   901  098F                     	;# 
   902  098F                     	;# 
   903  0990                     	;# 
   904  0991                     	;# 
   905  0992                     	;# 
   906  0993                     	;# 
   907  0994                     	;# 
   908  0995                     	;# 
   909  0996                     	;# 
   910  0997                     	;# 
   911  1E0F                     	;# 
   912  1E10                     	;# 
   913  1E11                     	;# 
   914  1E12                     	;# 
   915  1E13                     	;# 
   916  1E14                     	;# 
   917  1E15                     	;# 
   918  1E16                     	;# 
   919  1E17                     	;# 
   920  1E18                     	;# 
   921  1E19                     	;# 
   922  1E1A                     	;# 
   923  1E1B                     	;# 
   924  1E1C                     	;# 
   925  1E1D                     	;# 
   926  1E1E                     	;# 
   927  1E1F                     	;# 
   928  1E20                     	;# 
   929  1E21                     	;# 
   930  1E22                     	;# 
   931  1E23                     	;# 
   932  1E24                     	;# 
   933  1E25                     	;# 
   934  1E26                     	;# 
   935  1E27                     	;# 
   936  1E28                     	;# 
   937  1E29                     	;# 
   938  1E2A                     	;# 
   939  1E2B                     	;# 
   940  1E2C                     	;# 
   941  1E2D                     	;# 
   942  1E2E                     	;# 
   943  1E2F                     	;# 
   944  1E30                     	;# 
   945  1E31                     	;# 
   946  1E32                     	;# 
   947  1E33                     	;# 
   948  1E34                     	;# 
   949  1E35                     	;# 
   950  1E36                     	;# 
   951  1E37                     	;# 
   952  1E8F                     	;# 
   953  1E90                     	;# 
   954  1E91                     	;# 
   955  1E92                     	;# 
   956  1E93                     	;# 
   957  1E94                     	;# 
   958  1E95                     	;# 
   959  1E96                     	;# 
   960  1E97                     	;# 
   961  1E9C                     	;# 
   962  1E9D                     	;# 
   963  1E9E                     	;# 
   964  1EA1                     	;# 
   965  1EA2                     	;# 
   966  1EA3                     	;# 
   967  1EA4                     	;# 
   968  1EA9                     	;# 
   969  1EAA                     	;# 
   970  1EB1                     	;# 
   971  1EB2                     	;# 
   972  1EB8                     	;# 
   973  1EB9                     	;# 
   974  1EBA                     	;# 
   975  1EBB                     	;# 
   976  1EBC                     	;# 
   977  1EBD                     	;# 
   978  1EBE                     	;# 
   979  1EC3                     	;# 
   980  1EC5                     	;# 
   981  1EC6                     	;# 
   982  1EC7                     	;# 
   983  1EC8                     	;# 
   984  1EC9                     	;# 
   985  1ECA                     	;# 
   986  1ECB                     	;# 
   987  1ECB                     	;# 
   988  1ECB                     	;# 
   989  1ECC                     	;# 
   990  1ECC                     	;# 
   991  1ECC                     	;# 
   992  1F10                     	;# 
   993  1F11                     	;# 
   994  1F12                     	;# 
   995  1F14                     	;# 
   996  1F15                     	;# 
   997  1F1C                     	;# 
   998  1F1D                     	;# 
   999  1F1E                     	;# 
  1000  1F1F                     	;# 
  1001  1F20                     	;# 
  1002  1F21                     	;# 
  1003  1F22                     	;# 
  1004  1F23                     	;# 
  1005  1F24                     	;# 
  1006  1F25                     	;# 
  1007  1F26                     	;# 
  1008  1F27                     	;# 
  1009  1F38                     	;# 
  1010  1F39                     	;# 
  1011  1F3A                     	;# 
  1012  1F3B                     	;# 
  1013  1F3C                     	;# 
  1014  1F3D                     	;# 
  1015  1F3E                     	;# 
  1016  1F3F                     	;# 
  1017  1F43                     	;# 
  1018  1F44                     	;# 
  1019  1F45                     	;# 
  1020  1F46                     	;# 
  1021  1F47                     	;# 
  1022  1F48                     	;# 
  1023  1F49                     	;# 
  1024  1F4A                     	;# 
  1025  1F4E                     	;# 
  1026  1F4F                     	;# 
  1027  1F50                     	;# 
  1028  1F51                     	;# 
  1029  1F52                     	;# 
  1030  1F53                     	;# 
  1031  1F54                     	;# 
  1032  1F55                     	;# 
  1033  1FE4                     	;# 
  1034  1FE5                     	;# 
  1035  1FE6                     	;# 
  1036  1FE7                     	;# 
  1037  1FE8                     	;# 
  1038  1FE8                     	;# 
  1039  1FE9                     	;# 
  1040  1FEA                     	;# 
  1041  1FEB                     	;# 
  1042  1FED                     	;# 
  1043  1FEE                     	;# 
  1044  1FEF                     	;# 
  1045  0000                     	;# 
  1046  0001                     	;# 
  1047  0002                     	;# 
  1048  0003                     	;# 
  1049  0004                     	;# 
  1050  0005                     	;# 
  1051  0006                     	;# 
  1052  0007                     	;# 
  1053  0008                     	;# 
  1054  0009                     	;# 
  1055  000A                     	;# 
  1056  000B                     	;# 
  1057  000C                     	;# 
  1058  000D                     	;# 
  1059  000E                     	;# 
  1060  0012                     	;# 
  1061  0013                     	;# 
  1062  0014                     	;# 
  1063  0018                     	;# 
  1064  0019                     	;# 
  1065  001A                     	;# 
  1066  008C                     	;# 
  1067  008C                     	;# 
  1068  008D                     	;# 
  1069  008E                     	;# 
  1070  008E                     	;# 
  1071  008F                     	;# 
  1072  0090                     	;# 
  1073  0090                     	;# 
  1074  0091                     	;# 
  1075  0092                     	;# 
  1076  0092                     	;# 
  1077  0093                     	;# 
  1078  0094                     	;# 
  1079  0094                     	;# 
  1080  0095                     	;# 
  1081  0096                     	;# 
  1082  0096                     	;# 
  1083  0097                     	;# 
  1084  0098                     	;# 
  1085  0099                     	;# 
  1086  009A                     	;# 
  1087  009B                     	;# 
  1088  009B                     	;# 
  1089  009C                     	;# 
  1090  009D                     	;# 
  1091  009D                     	;# 
  1092  009E                     	;# 
  1093  009F                     	;# 
  1094  010C                     	;# 
  1095  010C                     	;# 
  1096  010D                     	;# 
  1097  010E                     	;# 
  1098  010F                     	;# 
  1099  010F                     	;# 
  1100  0110                     	;# 
  1101  0111                     	;# 
  1102  0112                     	;# 
  1103  0113                     	;# 
  1104  0114                     	;# 
  1105  0115                     	;# 
  1106  0116                     	;# 
  1107  0117                     	;# 
  1108  0118                     	;# 
  1109  0119                     	;# 
  1110  0119                     	;# 
  1111  0119                     	;# 
  1112  011A                     	;# 
  1113  011A                     	;# 
  1114  011A                     	;# 
  1115  011B                     	;# 
  1116  011B                     	;# 
  1117  011B                     	;# 
  1118  011B                     	;# 
  1119  011B                     	;# 
  1120  011C                     	;# 
  1121  011C                     	;# 
  1122  011C                     	;# 
  1123  011D                     	;# 
  1124  011D                     	;# 
  1125  011D                     	;# 
  1126  011E                     	;# 
  1127  011E                     	;# 
  1128  011E                     	;# 
  1129  011F                     	;# 
  1130  011F                     	;# 
  1131  011F                     	;# 
  1132  011F                     	;# 
  1133  011F                     	;# 
  1134  018C                     	;# 
  1135  018D                     	;# 
  1136  018E                     	;# 
  1137  018F                     	;# 
  1138  0190                     	;# 
  1139  0191                     	;# 
  1140  0192                     	;# 
  1141  0196                     	;# 
  1142  0197                     	;# 
  1143  0198                     	;# 
  1144  0199                     	;# 
  1145  019A                     	;# 
  1146  019B                     	;# 
  1147  019C                     	;# 
  1148  020C                     	;# 
  1149  020D                     	;# 
  1150  020E                     	;# 
  1151  020E                     	;# 
  1152  020F                     	;# 
  1153  020F                     	;# 
  1154  0210                     	;# 
  1155  0210                     	;# 
  1156  0211                     	;# 
  1157  0211                     	;# 
  1158  0212                     	;# 
  1159  0213                     	;# 
  1160  0214                     	;# 
  1161  0214                     	;# 
  1162  0215                     	;# 
  1163  0215                     	;# 
  1164  0216                     	;# 
  1165  0216                     	;# 
  1166  0217                     	;# 
  1167  0217                     	;# 
  1168  0218                     	;# 
  1169  0219                     	;# 
  1170  021A                     	;# 
  1171  021A                     	;# 
  1172  021B                     	;# 
  1173  021B                     	;# 
  1174  021C                     	;# 
  1175  021C                     	;# 
  1176  021D                     	;# 
  1177  021D                     	;# 
  1178  021E                     	;# 
  1179  021F                     	;# 
  1180  028C                     	;# 
  1181  028C                     	;# 
  1182  028D                     	;# 
  1183  028D                     	;# 
  1184  028E                     	;# 
  1185  028F                     	;# 
  1186  0290                     	;# 
  1187  0291                     	;# 
  1188  0292                     	;# 
  1189  0292                     	;# 
  1190  0293                     	;# 
  1191  0293                     	;# 
  1192  0294                     	;# 
  1193  0295                     	;# 
  1194  0296                     	;# 
  1195  0297                     	;# 
  1196  0298                     	;# 
  1197  0298                     	;# 
  1198  0299                     	;# 
  1199  0299                     	;# 
  1200  029A                     	;# 
  1201  029B                     	;# 
  1202  029C                     	;# 
  1203  029D                     	;# 
  1204  029F                     	;# 
  1205  030C                     	;# 
  1206  030C                     	;# 
  1207  030D                     	;# 
  1208  030E                     	;# 
  1209  030F                     	;# 
  1210  0310                     	;# 
  1211  0310                     	;# 
  1212  0311                     	;# 
  1213  0312                     	;# 
  1214  0313                     	;# 
  1215  0314                     	;# 
  1216  0314                     	;# 
  1217  0315                     	;# 
  1218  0316                     	;# 
  1219  0317                     	;# 
  1220  0318                     	;# 
  1221  0318                     	;# 
  1222  0319                     	;# 
  1223  031A                     	;# 
  1224  031B                     	;# 
  1225  038C                     	;# 
  1226  038C                     	;# 
  1227  038D                     	;# 
  1228  038E                     	;# 
  1229  0390                     	;# 
  1230  0390                     	;# 
  1231  0391                     	;# 
  1232  0392                     	;# 
  1233  048C                     	;# 
  1234  048C                     	;# 
  1235  048D                     	;# 
  1236  048E                     	;# 
  1237  048F                     	;# 
  1238  048F                     	;# 
  1239  0490                     	;# 
  1240  0491                     	;# 
  1241  0492                     	;# 
  1242  0492                     	;# 
  1243  0493                     	;# 
  1244  0494                     	;# 
  1245  0495                     	;# 
  1246  0495                     	;# 
  1247  0496                     	;# 
  1248  0497                     	;# 
  1249  0498                     	;# 
  1250  0499                     	;# 
  1251  049A                     	;# 
  1252  049B                     	;# 
  1253  049C                     	;# 
  1254  049D                     	;# 
  1255  058C                     	;# 
  1256  058C                     	;# 
  1257  058D                     	;# 
  1258  058E                     	;# 
  1259  058F                     	;# 
  1260  058F                     	;# 
  1261  0590                     	;# 
  1262  0591                     	;# 
  1263  0592                     	;# 
  1264  0593                     	;# 
  1265  059C                     	;# 
  1266  059C                     	;# 
  1267  059D                     	;# 
  1268  059D                     	;# 
  1269  059E                     	;# 
  1270  059F                     	;# 
  1271  060C                     	;# 
  1272  060C                     	;# 
  1273  060D                     	;# 
  1274  060D                     	;# 
  1275  060E                     	;# 
  1276  060F                     	;# 
  1277  0610                     	;# 
  1278  0611                     	;# 
  1279  0612                     	;# 
  1280  0613                     	;# 
  1281  0614                     	;# 
  1282  0616                     	;# 
  1283  0616                     	;# 
  1284  0617                     	;# 
  1285  0617                     	;# 
  1286  0618                     	;# 
  1287  0619                     	;# 
  1288  061A                     	;# 
  1289  061B                     	;# 
  1290  061C                     	;# 
  1291  061D                     	;# 
  1292  061E                     	;# 
  1293  070C                     	;# 
  1294  070D                     	;# 
  1295  070E                     	;# 
  1296  070F                     	;# 
  1297  0710                     	;# 
  1298  0711                     	;# 
  1299  0712                     	;# 
  1300  0713                     	;# 
  1301  0714                     	;# 
  1302  0716                     	;# 
  1303  0717                     	;# 
  1304  0718                     	;# 
  1305  0719                     	;# 
  1306  071A                     	;# 
  1307  071B                     	;# 
  1308  071C                     	;# 
  1309  071D                     	;# 
  1310  071E                     	;# 
  1311  0796                     	;# 
  1312  0797                     	;# 
  1313  0798                     	;# 
  1314  0799                     	;# 
  1315  079A                     	;# 
  1316  079B                     	;# 
  1317  079C                     	;# 
  1318  079D                     	;# 
  1319  080C                     	;# 
  1320  080D                     	;# 
  1321  080E                     	;# 
  1322  080F                     	;# 
  1323  0810                     	;# 
  1324  0811                     	;# 
  1325  0812                     	;# 
  1326  0813                     	;# 
  1327  0814                     	;# 
  1328  081A                     	;# 
  1329  081A                     	;# 
  1330  081B                     	;# 
  1331  081C                     	;# 
  1332  081C                     	;# 
  1333  081D                     	;# 
  1334  081E                     	;# 
  1335  081F                     	;# 
  1336  088C                     	;# 
  1337  088D                     	;# 
  1338  088E                     	;# 
  1339  088F                     	;# 
  1340  0890                     	;# 
  1341  0891                     	;# 
  1342  0892                     	;# 
  1343  0893                     	;# 
  1344  0895                     	;# 
  1345  0896                     	;# 
  1346  0897                     	;# 
  1347  0898                     	;# 
  1348  0899                     	;# 
  1349  089A                     	;# 
  1350  089B                     	;# 
  1351  090C                     	;# 
  1352  090E                     	;# 
  1353  090F                     	;# 
  1354  091F                     	;# 
  1355  098F                     	;# 
  1356  098F                     	;# 
  1357  0990                     	;# 
  1358  0991                     	;# 
  1359  0992                     	;# 
  1360  0993                     	;# 
  1361  0994                     	;# 
  1362  0995                     	;# 
  1363  0996                     	;# 
  1364  0997                     	;# 
  1365  1E0F                     	;# 
  1366  1E10                     	;# 
  1367  1E11                     	;# 
  1368  1E12                     	;# 
  1369  1E13                     	;# 
  1370  1E14                     	;# 
  1371  1E15                     	;# 
  1372  1E16                     	;# 
  1373  1E17                     	;# 
  1374  1E18                     	;# 
  1375  1E19                     	;# 
  1376  1E1A                     	;# 
  1377  1E1B                     	;# 
  1378  1E1C                     	;# 
  1379  1E1D                     	;# 
  1380  1E1E                     	;# 
  1381  1E1F                     	;# 
  1382  1E20                     	;# 
  1383  1E21                     	;# 
  1384  1E22                     	;# 
  1385  1E23                     	;# 
  1386  1E24                     	;# 
  1387  1E25                     	;# 
  1388  1E26                     	;# 
  1389  1E27                     	;# 
  1390  1E28                     	;# 
  1391  1E29                     	;# 
  1392  1E2A                     	;# 
  1393  1E2B                     	;# 
  1394  1E2C                     	;# 
  1395  1E2D                     	;# 
  1396  1E2E                     	;# 
  1397  1E2F                     	;# 
  1398  1E30                     	;# 
  1399  1E31                     	;# 
  1400  1E32                     	;# 
  1401  1E33                     	;# 
  1402  1E34                     	;# 
  1403  1E35                     	;# 
  1404  1E36                     	;# 
  1405  1E37                     	;# 
  1406  1E8F                     	;# 
  1407  1E90                     	;# 
  1408  1E91                     	;# 
  1409  1E92                     	;# 
  1410  1E93                     	;# 
  1411  1E94                     	;# 
  1412  1E95                     	;# 
  1413  1E96                     	;# 
  1414  1E97                     	;# 
  1415  1E9C                     	;# 
  1416  1E9D                     	;# 
  1417  1E9E                     	;# 
  1418  1EA1                     	;# 
  1419  1EA2                     	;# 
  1420  1EA3                     	;# 
  1421  1EA4                     	;# 
  1422  1EA9                     	;# 
  1423  1EAA                     	;# 
  1424  1EB1                     	;# 
  1425  1EB2                     	;# 
  1426  1EB8                     	;# 
  1427  1EB9                     	;# 
  1428  1EBA                     	;# 
  1429  1EBB                     	;# 
  1430  1EBC                     	;# 
  1431  1EBD                     	;# 
  1432  1EBE                     	;# 
  1433  1EC3                     	;# 
  1434  1EC5                     	;# 
  1435  1EC6                     	;# 
  1436  1EC7                     	;# 
  1437  1EC8                     	;# 
  1438  1EC9                     	;# 
  1439  1ECA                     	;# 
  1440  1ECB                     	;# 
  1441  1ECB                     	;# 
  1442  1ECB                     	;# 
  1443  1ECC                     	;# 
  1444  1ECC                     	;# 
  1445  1ECC                     	;# 
  1446  1F10                     	;# 
  1447  1F11                     	;# 
  1448  1F12                     	;# 
  1449  1F14                     	;# 
  1450  1F15                     	;# 
  1451  1F1C                     	;# 
  1452  1F1D                     	;# 
  1453  1F1E                     	;# 
  1454  1F1F                     	;# 
  1455  1F20                     	;# 
  1456  1F21                     	;# 
  1457  1F22                     	;# 
  1458  1F23                     	;# 
  1459  1F24                     	;# 
  1460  1F25                     	;# 
  1461  1F26                     	;# 
  1462  1F27                     	;# 
  1463  1F38                     	;# 
  1464  1F39                     	;# 
  1465  1F3A                     	;# 
  1466  1F3B                     	;# 
  1467  1F3C                     	;# 
  1468  1F3D                     	;# 
  1469  1F3E                     	;# 
  1470  1F3F                     	;# 
  1471  1F43                     	;# 
  1472  1F44                     	;# 
  1473  1F45                     	;# 
  1474  1F46                     	;# 
  1475  1F47                     	;# 
  1476  1F48                     	;# 
  1477  1F49                     	;# 
  1478  1F4A                     	;# 
  1479  1F4E                     	;# 
  1480  1F4F                     	;# 
  1481  1F50                     	;# 
  1482  1F51                     	;# 
  1483  1F52                     	;# 
  1484  1F53                     	;# 
  1485  1F54                     	;# 
  1486  1F55                     	;# 
  1487  1FE4                     	;# 
  1488  1FE5                     	;# 
  1489  1FE6                     	;# 
  1490  1FE7                     	;# 
  1491  1FE8                     	;# 
  1492  1FE8                     	;# 
  1493  1FE9                     	;# 
  1494  1FEA                     	;# 
  1495  1FEB                     	;# 
  1496  1FED                     	;# 
  1497  1FEE                     	;# 
  1498  1FEF                     	;# 
  1499  0000                     	;# 
  1500  0001                     	;# 
  1501  0002                     	;# 
  1502  0003                     	;# 
  1503  0004                     	;# 
  1504  0005                     	;# 
  1505  0006                     	;# 
  1506  0007                     	;# 
  1507  0008                     	;# 
  1508  0009                     	;# 
  1509  000A                     	;# 
  1510  000B                     	;# 
  1511  000C                     	;# 
  1512  000D                     	;# 
  1513  000E                     	;# 
  1514  0012                     	;# 
  1515  0013                     	;# 
  1516  0014                     	;# 
  1517  0018                     	;# 
  1518  0019                     	;# 
  1519  001A                     	;# 
  1520  008C                     	;# 
  1521  008C                     	;# 
  1522  008D                     	;# 
  1523  008E                     	;# 
  1524  008E                     	;# 
  1525  008F                     	;# 
  1526  0090                     	;# 
  1527  0090                     	;# 
  1528  0091                     	;# 
  1529  0092                     	;# 
  1530  0092                     	;# 
  1531  0093                     	;# 
  1532  0094                     	;# 
  1533  0094                     	;# 
  1534  0095                     	;# 
  1535  0096                     	;# 
  1536  0096                     	;# 
  1537  0097                     	;# 
  1538  0098                     	;# 
  1539  0099                     	;# 
  1540  009A                     	;# 
  1541  009B                     	;# 
  1542  009B                     	;# 
  1543  009C                     	;# 
  1544  009D                     	;# 
  1545  009D                     	;# 
  1546  009E                     	;# 
  1547  009F                     	;# 
  1548  010C                     	;# 
  1549  010C                     	;# 
  1550  010D                     	;# 
  1551  010E                     	;# 
  1552  010F                     	;# 
  1553  010F                     	;# 
  1554  0110                     	;# 
  1555  0111                     	;# 
  1556  0112                     	;# 
  1557  0113                     	;# 
  1558  0114                     	;# 
  1559  0115                     	;# 
  1560  0116                     	;# 
  1561  0117                     	;# 
  1562  0118                     	;# 
  1563  0119                     	;# 
  1564  0119                     	;# 
  1565  0119                     	;# 
  1566  011A                     	;# 
  1567  011A                     	;# 
  1568  011A                     	;# 
  1569  011B                     	;# 
  1570  011B                     	;# 
  1571  011B                     	;# 
  1572  011B                     	;# 
  1573  011B                     	;# 
  1574  011C                     	;# 
  1575  011C                     	;# 
  1576  011C                     	;# 
  1577  011D                     	;# 
  1578  011D                     	;# 
  1579  011D                     	;# 
  1580  011E                     	;# 
  1581  011E                     	;# 
  1582  011E                     	;# 
  1583  011F                     	;# 
  1584  011F                     	;# 
  1585  011F                     	;# 
  1586  011F                     	;# 
  1587  011F                     	;# 
  1588  018C                     	;# 
  1589  018D                     	;# 
  1590  018E                     	;# 
  1591  018F                     	;# 
  1592  0190                     	;# 
  1593  0191                     	;# 
  1594  0192                     	;# 
  1595  0196                     	;# 
  1596  0197                     	;# 
  1597  0198                     	;# 
  1598  0199                     	;# 
  1599  019A                     	;# 
  1600  019B                     	;# 
  1601  019C                     	;# 
  1602  020C                     	;# 
  1603  020D                     	;# 
  1604  020E                     	;# 
  1605  020E                     	;# 
  1606  020F                     	;# 
  1607  020F                     	;# 
  1608  0210                     	;# 
  1609  0210                     	;# 
  1610  0211                     	;# 
  1611  0211                     	;# 
  1612  0212                     	;# 
  1613  0213                     	;# 
  1614  0214                     	;# 
  1615  0214                     	;# 
  1616  0215                     	;# 
  1617  0215                     	;# 
  1618  0216                     	;# 
  1619  0216                     	;# 
  1620  0217                     	;# 
  1621  0217                     	;# 
  1622  0218                     	;# 
  1623  0219                     	;# 
  1624  021A                     	;# 
  1625  021A                     	;# 
  1626  021B                     	;# 
  1627  021B                     	;# 
  1628  021C                     	;# 
  1629  021C                     	;# 
  1630  021D                     	;# 
  1631  021D                     	;# 
  1632  021E                     	;# 
  1633  021F                     	;# 
  1634  028C                     	;# 
  1635  028C                     	;# 
  1636  028D                     	;# 
  1637  028D                     	;# 
  1638  028E                     	;# 
  1639  028F                     	;# 
  1640  0290                     	;# 
  1641  0291                     	;# 
  1642  0292                     	;# 
  1643  0292                     	;# 
  1644  0293                     	;# 
  1645  0293                     	;# 
  1646  0294                     	;# 
  1647  0295                     	;# 
  1648  0296                     	;# 
  1649  0297                     	;# 
  1650  0298                     	;# 
  1651  0298                     	;# 
  1652  0299                     	;# 
  1653  0299                     	;# 
  1654  029A                     	;# 
  1655  029B                     	;# 
  1656  029C                     	;# 
  1657  029D                     	;# 
  1658  029F                     	;# 
  1659  030C                     	;# 
  1660  030C                     	;# 
  1661  030D                     	;# 
  1662  030E                     	;# 
  1663  030F                     	;# 
  1664  0310                     	;# 
  1665  0310                     	;# 
  1666  0311                     	;# 
  1667  0312                     	;# 
  1668  0313                     	;# 
  1669  0314                     	;# 
  1670  0314                     	;# 
  1671  0315                     	;# 
  1672  0316                     	;# 
  1673  0317                     	;# 
  1674  0318                     	;# 
  1675  0318                     	;# 
  1676  0319                     	;# 
  1677  031A                     	;# 
  1678  031B                     	;# 
  1679  038C                     	;# 
  1680  038C                     	;# 
  1681  038D                     	;# 
  1682  038E                     	;# 
  1683  0390                     	;# 
  1684  0390                     	;# 
  1685  0391                     	;# 
  1686  0392                     	;# 
  1687  048C                     	;# 
  1688  048C                     	;# 
  1689  048D                     	;# 
  1690  048E                     	;# 
  1691  048F                     	;# 
  1692  048F                     	;# 
  1693  0490                     	;# 
  1694  0491                     	;# 
  1695  0492                     	;# 
  1696  0492                     	;# 
  1697  0493                     	;# 
  1698  0494                     	;# 
  1699  0495                     	;# 
  1700  0495                     	;# 
  1701  0496                     	;# 
  1702  0497                     	;# 
  1703  0498                     	;# 
  1704  0499                     	;# 
  1705  049A                     	;# 
  1706  049B                     	;# 
  1707  049C                     	;# 
  1708  049D                     	;# 
  1709  058C                     	;# 
  1710  058C                     	;# 
  1711  058D                     	;# 
  1712  058E                     	;# 
  1713  058F                     	;# 
  1714  058F                     	;# 
  1715  0590                     	;# 
  1716  0591                     	;# 
  1717  0592                     	;# 
  1718  0593                     	;# 
  1719  059C                     	;# 
  1720  059C                     	;# 
  1721  059D                     	;# 
  1722  059D                     	;# 
  1723  059E                     	;# 
  1724  059F                     	;# 
  1725  060C                     	;# 
  1726  060C                     	;# 
  1727  060D                     	;# 
  1728  060D                     	;# 
  1729  060E                     	;# 
  1730  060F                     	;# 
  1731  0610                     	;# 
  1732  0611                     	;# 
  1733  0612                     	;# 
  1734  0613                     	;# 
  1735  0614                     	;# 
  1736  0616                     	;# 
  1737  0616                     	;# 
  1738  0617                     	;# 
  1739  0617                     	;# 
  1740  0618                     	;# 
  1741  0619                     	;# 
  1742  061A                     	;# 
  1743  061B                     	;# 
  1744  061C                     	;# 
  1745  061D                     	;# 
  1746  061E                     	;# 
  1747  070C                     	;# 
  1748  070D                     	;# 
  1749  070E                     	;# 
  1750  070F                     	;# 
  1751  0710                     	;# 
  1752  0711                     	;# 
  1753  0712                     	;# 
  1754  0713                     	;# 
  1755  0714                     	;# 
  1756  0716                     	;# 
  1757  0717                     	;# 
  1758  0718                     	;# 
  1759  0719                     	;# 
  1760  071A                     	;# 
  1761  071B                     	;# 
  1762  071C                     	;# 
  1763  071D                     	;# 
  1764  071E                     	;# 
  1765  0796                     	;# 
  1766  0797                     	;# 
  1767  0798                     	;# 
  1768  0799                     	;# 
  1769  079A                     	;# 
  1770  079B                     	;# 
  1771  079C                     	;# 
  1772  079D                     	;# 
  1773  080C                     	;# 
  1774  080D                     	;# 
  1775  080E                     	;# 
  1776  080F                     	;# 
  1777  0810                     	;# 
  1778  0811                     	;# 
  1779  0812                     	;# 
  1780  0813                     	;# 
  1781  0814                     	;# 
  1782  081A                     	;# 
  1783  081A                     	;# 
  1784  081B                     	;# 
  1785  081C                     	;# 
  1786  081C                     	;# 
  1787  081D                     	;# 
  1788  081E                     	;# 
  1789  081F                     	;# 
  1790  088C                     	;# 
  1791  088D                     	;# 
  1792  088E                     	;# 
  1793  088F                     	;# 
  1794  0890                     	;# 
  1795  0891                     	;# 
  1796  0892                     	;# 
  1797  0893                     	;# 
  1798  0895                     	;# 
  1799  0896                     	;# 
  1800  0897                     	;# 
  1801  0898                     	;# 
  1802  0899                     	;# 
  1803  089A                     	;# 
  1804  089B                     	;# 
  1805  090C                     	;# 
  1806  090E                     	;# 
  1807  090F                     	;# 
  1808  091F                     	;# 
  1809  098F                     	;# 
  1810  098F                     	;# 
  1811  0990                     	;# 
  1812  0991                     	;# 
  1813  0992                     	;# 
  1814  0993                     	;# 
  1815  0994                     	;# 
  1816  0995                     	;# 
  1817  0996                     	;# 
  1818  0997                     	;# 
  1819  1E0F                     	;# 
  1820  1E10                     	;# 
  1821  1E11                     	;# 
  1822  1E12                     	;# 
  1823  1E13                     	;# 
  1824  1E14                     	;# 
  1825  1E15                     	;# 
  1826  1E16                     	;# 
  1827  1E17                     	;# 
  1828  1E18                     	;# 
  1829  1E19                     	;# 
  1830  1E1A                     	;# 
  1831  1E1B                     	;# 
  1832  1E1C                     	;# 
  1833  1E1D                     	;# 
  1834  1E1E                     	;# 
  1835  1E1F                     	;# 
  1836  1E20                     	;# 
  1837  1E21                     	;# 
  1838  1E22                     	;# 
  1839  1E23                     	;# 
  1840  1E24                     	;# 
  1841  1E25                     	;# 
  1842  1E26                     	;# 
  1843  1E27                     	;# 
  1844  1E28                     	;# 
  1845  1E29                     	;# 
  1846  1E2A                     	;# 
  1847  1E2B                     	;# 
  1848  1E2C                     	;# 
  1849  1E2D                     	;# 
  1850  1E2E                     	;# 
  1851  1E2F                     	;# 
  1852  1E30                     	;# 
  1853  1E31                     	;# 
  1854  1E32                     	;# 
  1855  1E33                     	;# 
  1856  1E34                     	;# 
  1857  1E35                     	;# 
  1858  1E36                     	;# 
  1859  1E37                     	;# 
  1860  1E8F                     	;# 
  1861  1E90                     	;# 
  1862  1E91                     	;# 
  1863  1E92                     	;# 
  1864  1E93                     	;# 
  1865  1E94                     	;# 
  1866  1E95                     	;# 
  1867  1E96                     	;# 
  1868  1E97                     	;# 
  1869  1E9C                     	;# 
  1870  1E9D                     	;# 
  1871  1E9E                     	;# 
  1872  1EA1                     	;# 
  1873  1EA2                     	;# 
  1874  1EA3                     	;# 
  1875  1EA4                     	;# 
  1876  1EA9                     	;# 
  1877  1EAA                     	;# 
  1878  1EB1                     	;# 
  1879  1EB2                     	;# 
  1880  1EB8                     	;# 
  1881  1EB9                     	;# 
  1882  1EBA                     	;# 
  1883  1EBB                     	;# 
  1884  1EBC                     	;# 
  1885  1EBD                     	;# 
  1886  1EBE                     	;# 
  1887  1EC3                     	;# 
  1888  1EC5                     	;# 
  1889  1EC6                     	;# 
  1890  1EC7                     	;# 
  1891  1EC8                     	;# 
  1892  1EC9                     	;# 
  1893  1ECA                     	;# 
  1894  1ECB                     	;# 
  1895  1ECB                     	;# 
  1896  1ECB                     	;# 
  1897  1ECC                     	;# 
  1898  1ECC                     	;# 
  1899  1ECC                     	;# 
  1900  1F10                     	;# 
  1901  1F11                     	;# 
  1902  1F12                     	;# 
  1903  1F14                     	;# 
  1904  1F15                     	;# 
  1905  1F1C                     	;# 
  1906  1F1D                     	;# 
  1907  1F1E                     	;# 
  1908  1F1F                     	;# 
  1909  1F20                     	;# 
  1910  1F21                     	;# 
  1911  1F22                     	;# 
  1912  1F23                     	;# 
  1913  1F24                     	;# 
  1914  1F25                     	;# 
  1915  1F26                     	;# 
  1916  1F27                     	;# 
  1917  1F38                     	;# 
  1918  1F39                     	;# 
  1919  1F3A                     	;# 
  1920  1F3B                     	;# 
  1921  1F3C                     	;# 
  1922  1F3D                     	;# 
  1923  1F3E                     	;# 
  1924  1F3F                     	;# 
  1925  1F43                     	;# 
  1926  1F44                     	;# 
  1927  1F45                     	;# 
  1928  1F46                     	;# 
  1929  1F47                     	;# 
  1930  1F48                     	;# 
  1931  1F49                     	;# 
  1932  1F4A                     	;# 
  1933  1F4E                     	;# 
  1934  1F4F                     	;# 
  1935  1F50                     	;# 
  1936  1F51                     	;# 
  1937  1F52                     	;# 
  1938  1F53                     	;# 
  1939  1F54                     	;# 
  1940  1F55                     	;# 
  1941  1FE4                     	;# 
  1942  1FE5                     	;# 
  1943  1FE6                     	;# 
  1944  1FE7                     	;# 
  1945  1FE8                     	;# 
  1946  1FE8                     	;# 
  1947  1FE9                     	;# 
  1948  1FEA                     	;# 
  1949  1FEB                     	;# 
  1950  1FED                     	;# 
  1951  1FEE                     	;# 
  1952  1FEF                     	;# 
  1953  0000                     	;# 
  1954  0001                     	;# 
  1955  0002                     	;# 
  1956  0003                     	;# 
  1957  0004                     	;# 
  1958  0005                     	;# 
  1959  0006                     	;# 
  1960  0007                     	;# 
  1961  0008                     	;# 
  1962  0009                     	;# 
  1963  000A                     	;# 
  1964  000B                     	;# 
  1965  000C                     	;# 
  1966  000D                     	;# 
  1967  000E                     	;# 
  1968  0012                     	;# 
  1969  0013                     	;# 
  1970  0014                     	;# 
  1971  0018                     	;# 
  1972  0019                     	;# 
  1973  001A                     	;# 
  1974  008C                     	;# 
  1975  008C                     	;# 
  1976  008D                     	;# 
  1977  008E                     	;# 
  1978  008E                     	;# 
  1979  008F                     	;# 
  1980  0090                     	;# 
  1981  0090                     	;# 
  1982  0091                     	;# 
  1983  0092                     	;# 
  1984  0092                     	;# 
  1985  0093                     	;# 
  1986  0094                     	;# 
  1987  0094                     	;# 
  1988  0095                     	;# 
  1989  0096                     	;# 
  1990  0096                     	;# 
  1991  0097                     	;# 
  1992  0098                     	;# 
  1993  0099                     	;# 
  1994  009A                     	;# 
  1995  009B                     	;# 
  1996  009B                     	;# 
  1997  009C                     	;# 
  1998  009D                     	;# 
  1999  009D                     	;# 
  2000  009E                     	;# 
  2001  009F                     	;# 
  2002  010C                     	;# 
  2003  010C                     	;# 
  2004  010D                     	;# 
  2005  010E                     	;# 
  2006  010F                     	;# 
  2007  010F                     	;# 
  2008  0110                     	;# 
  2009  0111                     	;# 
  2010  0112                     	;# 
  2011  0113                     	;# 
  2012  0114                     	;# 
  2013  0115                     	;# 
  2014  0116                     	;# 
  2015  0117                     	;# 
  2016  0118                     	;# 
  2017  0119                     	;# 
  2018  0119                     	;# 
  2019  0119                     	;# 
  2020  011A                     	;# 
  2021  011A                     	;# 
  2022  011A                     	;# 
  2023  011B                     	;# 
  2024  011B                     	;# 
  2025  011B                     	;# 
  2026  011B                     	;# 
  2027  011B                     	;# 
  2028  011C                     	;# 
  2029  011C                     	;# 
  2030  011C                     	;# 
  2031  011D                     	;# 
  2032  011D                     	;# 
  2033  011D                     	;# 
  2034  011E                     	;# 
  2035  011E                     	;# 
  2036  011E                     	;# 
  2037  011F                     	;# 
  2038  011F                     	;# 
  2039  011F                     	;# 
  2040  011F                     	;# 
  2041  011F                     	;# 
  2042  018C                     	;# 
  2043  018D                     	;# 
  2044  018E                     	;# 
  2045  018F                     	;# 
  2046  0190                     	;# 
  2047  0191                     	;# 
  2048  0192                     	;# 
  2049  0196                     	;# 
  2050  0197                     	;# 
  2051  0198                     	;# 
  2052  0199                     	;# 
  2053  019A                     	;# 
  2054  019B                     	;# 
  2055  019C                     	;# 
  2056  020C                     	;# 
  2057  020D                     	;# 
  2058  020E                     	;# 
  2059  020E                     	;# 
  2060  020F                     	;# 
  2061  020F                     	;# 
  2062  0210                     	;# 
  2063  0210                     	;# 
  2064  0211                     	;# 
  2065  0211                     	;# 
  2066  0212                     	;# 
  2067  0213                     	;# 
  2068  0214                     	;# 
  2069  0214                     	;# 
  2070  0215                     	;# 
  2071  0215                     	;# 
  2072  0216                     	;# 
  2073  0216                     	;# 
  2074  0217                     	;# 
  2075  0217                     	;# 
  2076  0218                     	;# 
  2077  0219                     	;# 
  2078  021A                     	;# 
  2079  021A                     	;# 
  2080  021B                     	;# 
  2081  021B                     	;# 
  2082  021C                     	;# 
  2083  021C                     	;# 
  2084  021D                     	;# 
  2085  021D                     	;# 
  2086  021E                     	;# 
  2087  021F                     	;# 
  2088  028C                     	;# 
  2089  028C                     	;# 
  2090  028D                     	;# 
  2091  028D                     	;# 
  2092  028E                     	;# 
  2093  028F                     	;# 
  2094  0290                     	;# 
  2095  0291                     	;# 
  2096  0292                     	;# 
  2097  0292                     	;# 
  2098  0293                     	;# 
  2099  0293                     	;# 
  2100  0294                     	;# 
  2101  0295                     	;# 
  2102  0296                     	;# 
  2103  0297                     	;# 
  2104  0298                     	;# 
  2105  0298                     	;# 
  2106  0299                     	;# 
  2107  0299                     	;# 
  2108  029A                     	;# 
  2109  029B                     	;# 
  2110  029C                     	;# 
  2111  029D                     	;# 
  2112  029F                     	;# 
  2113  030C                     	;# 
  2114  030C                     	;# 
  2115  030D                     	;# 
  2116  030E                     	;# 
  2117  030F                     	;# 
  2118  0310                     	;# 
  2119  0310                     	;# 
  2120  0311                     	;# 
  2121  0312                     	;# 
  2122  0313                     	;# 
  2123  0314                     	;# 
  2124  0314                     	;# 
  2125  0315                     	;# 
  2126  0316                     	;# 
  2127  0317                     	;# 
  2128  0318                     	;# 
  2129  0318                     	;# 
  2130  0319                     	;# 
  2131  031A                     	;# 
  2132  031B                     	;# 
  2133  038C                     	;# 
  2134  038C                     	;# 
  2135  038D                     	;# 
  2136  038E                     	;# 
  2137  0390                     	;# 
  2138  0390                     	;# 
  2139  0391                     	;# 
  2140  0392                     	;# 
  2141  048C                     	;# 
  2142  048C                     	;# 
  2143  048D                     	;# 
  2144  048E                     	;# 
  2145  048F                     	;# 
  2146  048F                     	;# 
  2147  0490                     	;# 
  2148  0491                     	;# 
  2149  0492                     	;# 
  2150  0492                     	;# 
  2151  0493                     	;# 
  2152  0494                     	;# 
  2153  0495                     	;# 
  2154  0495                     	;# 
  2155  0496                     	;# 
  2156  0497                     	;# 
  2157  0498                     	;# 
  2158  0499                     	;# 
  2159  049A                     	;# 
  2160  049B                     	;# 
  2161  049C                     	;# 
  2162  049D                     	;# 
  2163  058C                     	;# 
  2164  058C                     	;# 
  2165  058D                     	;# 
  2166  058E                     	;# 
  2167  058F                     	;# 
  2168  058F                     	;# 
  2169  0590                     	;# 
  2170  0591                     	;# 
  2171  0592                     	;# 
  2172  0593                     	;# 
  2173  059C                     	;# 
  2174  059C                     	;# 
  2175  059D                     	;# 
  2176  059D                     	;# 
  2177  059E                     	;# 
  2178  059F                     	;# 
  2179  060C                     	;# 
  2180  060C                     	;# 
  2181  060D                     	;# 
  2182  060D                     	;# 
  2183  060E                     	;# 
  2184  060F                     	;# 
  2185  0610                     	;# 
  2186  0611                     	;# 
  2187  0612                     	;# 
  2188  0613                     	;# 
  2189  0614                     	;# 
  2190  0616                     	;# 
  2191  0616                     	;# 
  2192  0617                     	;# 
  2193  0617                     	;# 
  2194  0618                     	;# 
  2195  0619                     	;# 
  2196  061A                     	;# 
  2197  061B                     	;# 
  2198  061C                     	;# 
  2199  061D                     	;# 
  2200  061E                     	;# 
  2201  070C                     	;# 
  2202  070D                     	;# 
  2203  070E                     	;# 
  2204  070F                     	;# 
  2205  0710                     	;# 
  2206  0711                     	;# 
  2207  0712                     	;# 
  2208  0713                     	;# 
  2209  0714                     	;# 
  2210  0716                     	;# 
  2211  0717                     	;# 
  2212  0718                     	;# 
  2213  0719                     	;# 
  2214  071A                     	;# 
  2215  071B                     	;# 
  2216  071C                     	;# 
  2217  071D                     	;# 
  2218  071E                     	;# 
  2219  0796                     	;# 
  2220  0797                     	;# 
  2221  0798                     	;# 
  2222  0799                     	;# 
  2223  079A                     	;# 
  2224  079B                     	;# 
  2225  079C                     	;# 
  2226  079D                     	;# 
  2227  080C                     	;# 
  2228  080D                     	;# 
  2229  080E                     	;# 
  2230  080F                     	;# 
  2231  0810                     	;# 
  2232  0811                     	;# 
  2233  0812                     	;# 
  2234  0813                     	;# 
  2235  0814                     	;# 
  2236  081A                     	;# 
  2237  081A                     	;# 
  2238  081B                     	;# 
  2239  081C                     	;# 
  2240  081C                     	;# 
  2241  081D                     	;# 
  2242  081E                     	;# 
  2243  081F                     	;# 
  2244  088C                     	;# 
  2245  088D                     	;# 
  2246  088E                     	;# 
  2247  088F                     	;# 
  2248  0890                     	;# 
  2249  0891                     	;# 
  2250  0892                     	;# 
  2251  0893                     	;# 
  2252  0895                     	;# 
  2253  0896                     	;# 
  2254  0897                     	;# 
  2255  0898                     	;# 
  2256  0899                     	;# 
  2257  089A                     	;# 
  2258  089B                     	;# 
  2259  090C                     	;# 
  2260  090E                     	;# 
  2261  090F                     	;# 
  2262  091F                     	;# 
  2263  098F                     	;# 
  2264  098F                     	;# 
  2265  0990                     	;# 
  2266  0991                     	;# 
  2267  0992                     	;# 
  2268  0993                     	;# 
  2269  0994                     	;# 
  2270  0995                     	;# 
  2271  0996                     	;# 
  2272  0997                     	;# 
  2273  1E0F                     	;# 
  2274  1E10                     	;# 
  2275  1E11                     	;# 
  2276  1E12                     	;# 
  2277  1E13                     	;# 
  2278  1E14                     	;# 
  2279  1E15                     	;# 
  2280  1E16                     	;# 
  2281  1E17                     	;# 
  2282  1E18                     	;# 
  2283  1E19                     	;# 
  2284  1E1A                     	;# 
  2285  1E1B                     	;# 
  2286  1E1C                     	;# 
  2287  1E1D                     	;# 
  2288  1E1E                     	;# 
  2289  1E1F                     	;# 
  2290  1E20                     	;# 
  2291  1E21                     	;# 
  2292  1E22                     	;# 
  2293  1E23                     	;# 
  2294  1E24                     	;# 
  2295  1E25                     	;# 
  2296  1E26                     	;# 
  2297  1E27                     	;# 
  2298  1E28                     	;# 
  2299  1E29                     	;# 
  2300  1E2A                     	;# 
  2301  1E2B                     	;# 
  2302  1E2C                     	;# 
  2303  1E2D                     	;# 
  2304  1E2E                     	;# 
  2305  1E2F                     	;# 
  2306  1E30                     	;# 
  2307  1E31                     	;# 
  2308  1E32                     	;# 
  2309  1E33                     	;# 
  2310  1E34                     	;# 
  2311  1E35                     	;# 
  2312  1E36                     	;# 
  2313  1E37                     	;# 
  2314  1E8F                     	;# 
  2315  1E90                     	;# 
  2316  1E91                     	;# 
  2317  1E92                     	;# 
  2318  1E93                     	;# 
  2319  1E94                     	;# 
  2320  1E95                     	;# 
  2321  1E96                     	;# 
  2322  1E97                     	;# 
  2323  1E9C                     	;# 
  2324  1E9D                     	;# 
  2325  1E9E                     	;# 
  2326  1EA1                     	;# 
  2327  1EA2                     	;# 
  2328  1EA3                     	;# 
  2329  1EA4                     	;# 
  2330  1EA9                     	;# 
  2331  1EAA                     	;# 
  2332  1EB1                     	;# 
  2333  1EB2                     	;# 
  2334  1EB8                     	;# 
  2335  1EB9                     	;# 
  2336  1EBA                     	;# 
  2337  1EBB                     	;# 
  2338  1EBC                     	;# 
  2339  1EBD                     	;# 
  2340  1EBE                     	;# 
  2341  1EC3                     	;# 
  2342  1EC5                     	;# 
  2343  1EC6                     	;# 
  2344  1EC7                     	;# 
  2345  1EC8                     	;# 
  2346  1EC9                     	;# 
  2347  1ECA                     	;# 
  2348  1ECB                     	;# 
  2349  1ECB                     	;# 
  2350  1ECB                     	;# 
  2351  1ECC                     	;# 
  2352  1ECC                     	;# 
  2353  1ECC                     	;# 
  2354  1F10                     	;# 
  2355  1F11                     	;# 
  2356  1F12                     	;# 
  2357  1F14                     	;# 
  2358  1F15                     	;# 
  2359  1F1C                     	;# 
  2360  1F1D                     	;# 
  2361  1F1E                     	;# 
  2362  1F1F                     	;# 
  2363  1F20                     	;# 
  2364  1F21                     	;# 
  2365  1F22                     	;# 
  2366  1F23                     	;# 
  2367  1F24                     	;# 
  2368  1F25                     	;# 
  2369  1F26                     	;# 
  2370  1F27                     	;# 
  2371  1F38                     	;# 
  2372  1F39                     	;# 
  2373  1F3A                     	;# 
  2374  1F3B                     	;# 
  2375  1F3C                     	;# 
  2376  1F3D                     	;# 
  2377  1F3E                     	;# 
  2378  1F3F                     	;# 
  2379  1F43                     	;# 
  2380  1F44                     	;# 
  2381  1F45                     	;# 
  2382  1F46                     	;# 
  2383  1F47                     	;# 
  2384  1F48                     	;# 
  2385  1F49                     	;# 
  2386  1F4A                     	;# 
  2387  1F4E                     	;# 
  2388  1F4F                     	;# 
  2389  1F50                     	;# 
  2390  1F51                     	;# 
  2391  1F52                     	;# 
  2392  1F53                     	;# 
  2393  1F54                     	;# 
  2394  1F55                     	;# 
  2395  1FE4                     	;# 
  2396  1FE5                     	;# 
  2397  1FE6                     	;# 
  2398  1FE7                     	;# 
  2399  1FE8                     	;# 
  2400  1FE8                     	;# 
  2401  1FE9                     	;# 
  2402  1FEA                     	;# 
  2403  1FEB                     	;# 
  2404  1FED                     	;# 
  2405  1FEE                     	;# 
  2406  1FEF                     	;# 
  2407  0000                     	;# 
  2408  0001                     	;# 
  2409  0002                     	;# 
  2410  0003                     	;# 
  2411  0004                     	;# 
  2412  0005                     	;# 
  2413  0006                     	;# 
  2414  0007                     	;# 
  2415  0008                     	;# 
  2416  0009                     	;# 
  2417  000A                     	;# 
  2418  000B                     	;# 
  2419  000C                     	;# 
  2420  000D                     	;# 
  2421  000E                     	;# 
  2422  0012                     	;# 
  2423  0013                     	;# 
  2424  0014                     	;# 
  2425  0018                     	;# 
  2426  0019                     	;# 
  2427  001A                     	;# 
  2428  008C                     	;# 
  2429  008C                     	;# 
  2430  008D                     	;# 
  2431  008E                     	;# 
  2432  008E                     	;# 
  2433  008F                     	;# 
  2434  0090                     	;# 
  2435  0090                     	;# 
  2436  0091                     	;# 
  2437  0092                     	;# 
  2438  0092                     	;# 
  2439  0093                     	;# 
  2440  0094                     	;# 
  2441  0094                     	;# 
  2442  0095                     	;# 
  2443  0096                     	;# 
  2444  0096                     	;# 
  2445  0097                     	;# 
  2446  0098                     	;# 
  2447  0099                     	;# 
  2448  009A                     	;# 
  2449  009B                     	;# 
  2450  009B                     	;# 
  2451  009C                     	;# 
  2452  009D                     	;# 
  2453  009D                     	;# 
  2454  009E                     	;# 
  2455  009F                     	;# 
  2456  010C                     	;# 
  2457  010C                     	;# 
  2458  010D                     	;# 
  2459  010E                     	;# 
  2460  010F                     	;# 
  2461  010F                     	;# 
  2462  0110                     	;# 
  2463  0111                     	;# 
  2464  0112                     	;# 
  2465  0113                     	;# 
  2466  0114                     	;# 
  2467  0115                     	;# 
  2468  0116                     	;# 
  2469  0117                     	;# 
  2470  0118                     	;# 
  2471  0119                     	;# 
  2472  0119                     	;# 
  2473  0119                     	;# 
  2474  011A                     	;# 
  2475  011A                     	;# 
  2476  011A                     	;# 
  2477  011B                     	;# 
  2478  011B                     	;# 
  2479  011B                     	;# 
  2480  011B                     	;# 
  2481  011B                     	;# 
  2482  011C                     	;# 
  2483  011C                     	;# 
  2484  011C                     	;# 
  2485  011D                     	;# 
  2486  011D                     	;# 
  2487  011D                     	;# 
  2488  011E                     	;# 
  2489  011E                     	;# 
  2490  011E                     	;# 
  2491  011F                     	;# 
  2492  011F                     	;# 
  2493  011F                     	;# 
  2494  011F                     	;# 
  2495  011F                     	;# 
  2496  018C                     	;# 
  2497  018D                     	;# 
  2498  018E                     	;# 
  2499  018F                     	;# 
  2500  0190                     	;# 
  2501  0191                     	;# 
  2502  0192                     	;# 
  2503  0196                     	;# 
  2504  0197                     	;# 
  2505  0198                     	;# 
  2506  0199                     	;# 
  2507  019A                     	;# 
  2508  019B                     	;# 
  2509  019C                     	;# 
  2510  020C                     	;# 
  2511  020D                     	;# 
  2512  020E                     	;# 
  2513  020E                     	;# 
  2514  020F                     	;# 
  2515  020F                     	;# 
  2516  0210                     	;# 
  2517  0210                     	;# 
  2518  0211                     	;# 
  2519  0211                     	;# 
  2520  0212                     	;# 
  2521  0213                     	;# 
  2522  0214                     	;# 
  2523  0214                     	;# 
  2524  0215                     	;# 
  2525  0215                     	;# 
  2526  0216                     	;# 
  2527  0216                     	;# 
  2528  0217                     	;# 
  2529  0217                     	;# 
  2530  0218                     	;# 
  2531  0219                     	;# 
  2532  021A                     	;# 
  2533  021A                     	;# 
  2534  021B                     	;# 
  2535  021B                     	;# 
  2536  021C                     	;# 
  2537  021C                     	;# 
  2538  021D                     	;# 
  2539  021D                     	;# 
  2540  021E                     	;# 
  2541  021F                     	;# 
  2542  028C                     	;# 
  2543  028C                     	;# 
  2544  028D                     	;# 
  2545  028D                     	;# 
  2546  028E                     	;# 
  2547  028F                     	;# 
  2548  0290                     	;# 
  2549  0291                     	;# 
  2550  0292                     	;# 
  2551  0292                     	;# 
  2552  0293                     	;# 
  2553  0293                     	;# 
  2554  0294                     	;# 
  2555  0295                     	;# 
  2556  0296                     	;# 
  2557  0297                     	;# 
  2558  0298                     	;# 
  2559  0298                     	;# 
  2560  0299                     	;# 
  2561  0299                     	;# 
  2562  029A                     	;# 
  2563  029B                     	;# 
  2564  029C                     	;# 
  2565  029D                     	;# 
  2566  029F                     	;# 
  2567  030C                     	;# 
  2568  030C                     	;# 
  2569  030D                     	;# 
  2570  030E                     	;# 
  2571  030F                     	;# 
  2572  0310                     	;# 
  2573  0310                     	;# 
  2574  0311                     	;# 
  2575  0312                     	;# 
  2576  0313                     	;# 
  2577  0314                     	;# 
  2578  0314                     	;# 
  2579  0315                     	;# 
  2580  0316                     	;# 
  2581  0317                     	;# 
  2582  0318                     	;# 
  2583  0318                     	;# 
  2584  0319                     	;# 
  2585  031A                     	;# 
  2586  031B                     	;# 
  2587  038C                     	;# 
  2588  038C                     	;# 
  2589  038D                     	;# 
  2590  038E                     	;# 
  2591  0390                     	;# 
  2592  0390                     	;# 
  2593  0391                     	;# 
  2594  0392                     	;# 
  2595  048C                     	;# 
  2596  048C                     	;# 
  2597  048D                     	;# 
  2598  048E                     	;# 
  2599  048F                     	;# 
  2600  048F                     	;# 
  2601  0490                     	;# 
  2602  0491                     	;# 
  2603  0492                     	;# 
  2604  0492                     	;# 
  2605  0493                     	;# 
  2606  0494                     	;# 
  2607  0495                     	;# 
  2608  0495                     	;# 
  2609  0496                     	;# 
  2610  0497                     	;# 
  2611  0498                     	;# 
  2612  0499                     	;# 
  2613  049A                     	;# 
  2614  049B                     	;# 
  2615  049C                     	;# 
  2616  049D                     	;# 
  2617  058C                     	;# 
  2618  058C                     	;# 
  2619  058D                     	;# 
  2620  058E                     	;# 
  2621  058F                     	;# 
  2622  058F                     	;# 
  2623  0590                     	;# 
  2624  0591                     	;# 
  2625  0592                     	;# 
  2626  0593                     	;# 
  2627  059C                     	;# 
  2628  059C                     	;# 
  2629  059D                     	;# 
  2630  059D                     	;# 
  2631  059E                     	;# 
  2632  059F                     	;# 
  2633  060C                     	;# 
  2634  060C                     	;# 
  2635  060D                     	;# 
  2636  060D                     	;# 
  2637  060E                     	;# 
  2638  060F                     	;# 
  2639  0610                     	;# 
  2640  0611                     	;# 
  2641  0612                     	;# 
  2642  0613                     	;# 
  2643  0614                     	;# 
  2644  0616                     	;# 
  2645  0616                     	;# 
  2646  0617                     	;# 
  2647  0617                     	;# 
  2648  0618                     	;# 
  2649  0619                     	;# 
  2650  061A                     	;# 
  2651  061B                     	;# 
  2652  061C                     	;# 
  2653  061D                     	;# 
  2654  061E                     	;# 
  2655  070C                     	;# 
  2656  070D                     	;# 
  2657  070E                     	;# 
  2658  070F                     	;# 
  2659  0710                     	;# 
  2660  0711                     	;# 
  2661  0712                     	;# 
  2662  0713                     	;# 
  2663  0714                     	;# 
  2664  0716                     	;# 
  2665  0717                     	;# 
  2666  0718                     	;# 
  2667  0719                     	;# 
  2668  071A                     	;# 
  2669  071B                     	;# 
  2670  071C                     	;# 
  2671  071D                     	;# 
  2672  071E                     	;# 
  2673  0796                     	;# 
  2674  0797                     	;# 
  2675  0798                     	;# 
  2676  0799                     	;# 
  2677  079A                     	;# 
  2678  079B                     	;# 
  2679  079C                     	;# 
  2680  079D                     	;# 
  2681  080C                     	;# 
  2682  080D                     	;# 
  2683  080E                     	;# 
  2684  080F                     	;# 
  2685  0810                     	;# 
  2686  0811                     	;# 
  2687  0812                     	;# 
  2688  0813                     	;# 
  2689  0814                     	;# 
  2690  081A                     	;# 
  2691  081A                     	;# 
  2692  081B                     	;# 
  2693  081C                     	;# 
  2694  081C                     	;# 
  2695  081D                     	;# 
  2696  081E                     	;# 
  2697  081F                     	;# 
  2698  088C                     	;# 
  2699  088D                     	;# 
  2700  088E                     	;# 
  2701  088F                     	;# 
  2702  0890                     	;# 
  2703  0891                     	;# 
  2704  0892                     	;# 
  2705  0893                     	;# 
  2706  0895                     	;# 
  2707  0896                     	;# 
  2708  0897                     	;# 
  2709  0898                     	;# 
  2710  0899                     	;# 
  2711  089A                     	;# 
  2712  089B                     	;# 
  2713  090C                     	;# 
  2714  090E                     	;# 
  2715  090F                     	;# 
  2716  091F                     	;# 
  2717  098F                     	;# 
  2718  098F                     	;# 
  2719  0990                     	;# 
  2720  0991                     	;# 
  2721  0992                     	;# 
  2722  0993                     	;# 
  2723  0994                     	;# 
  2724  0995                     	;# 
  2725  0996                     	;# 
  2726  0997                     	;# 
  2727  1E0F                     	;# 
  2728  1E10                     	;# 
  2729  1E11                     	;# 
  2730  1E12                     	;# 
  2731  1E13                     	;# 
  2732  1E14                     	;# 
  2733  1E15                     	;# 
  2734  1E16                     	;# 
  2735  1E17                     	;# 
  2736  1E18                     	;# 
  2737  1E19                     	;# 
  2738  1E1A                     	;# 
  2739  1E1B                     	;# 
  2740  1E1C                     	;# 
  2741  1E1D                     	;# 
  2742  1E1E                     	;# 
  2743  1E1F                     	;# 
  2744  1E20                     	;# 
  2745  1E21                     	;# 
  2746  1E22                     	;# 
  2747  1E23                     	;# 
  2748  1E24                     	;# 
  2749  1E25                     	;# 
  2750  1E26                     	;# 
  2751  1E27                     	;# 
  2752  1E28                     	;# 
  2753  1E29                     	;# 
  2754  1E2A                     	;# 
  2755  1E2B                     	;# 
  2756  1E2C                     	;# 
  2757  1E2D                     	;# 
  2758  1E2E                     	;# 
  2759  1E2F                     	;# 
  2760  1E30                     	;# 
  2761  1E31                     	;# 
  2762  1E32                     	;# 
  2763  1E33                     	;# 
  2764  1E34                     	;# 
  2765  1E35                     	;# 
  2766  1E36                     	;# 
  2767  1E37                     	;# 
  2768  1E8F                     	;# 
  2769  1E90                     	;# 
  2770  1E91                     	;# 
  2771  1E92                     	;# 
  2772  1E93                     	;# 
  2773  1E94                     	;# 
  2774  1E95                     	;# 
  2775  1E96                     	;# 
  2776  1E97                     	;# 
  2777  1E9C                     	;# 
  2778  1E9D                     	;# 
  2779  1E9E                     	;# 
  2780  1EA1                     	;# 
  2781  1EA2                     	;# 
  2782  1EA3                     	;# 
  2783  1EA4                     	;# 
  2784  1EA9                     	;# 
  2785  1EAA                     	;# 
  2786  1EB1                     	;# 
  2787  1EB2                     	;# 
  2788  1EB8                     	;# 
  2789  1EB9                     	;# 
  2790  1EBA                     	;# 
  2791  1EBB                     	;# 
  2792  1EBC                     	;# 
  2793  1EBD                     	;# 
  2794  1EBE                     	;# 
  2795  1EC3                     	;# 
  2796  1EC5                     	;# 
  2797  1EC6                     	;# 
  2798  1EC7                     	;# 
  2799  1EC8                     	;# 
  2800  1EC9                     	;# 
  2801  1ECA                     	;# 
  2802  1ECB                     	;# 
  2803  1ECB                     	;# 
  2804  1ECB                     	;# 
  2805  1ECC                     	;# 
  2806  1ECC                     	;# 
  2807  1ECC                     	;# 
  2808  1F10                     	;# 
  2809  1F11                     	;# 
  2810  1F12                     	;# 
  2811  1F14                     	;# 
  2812  1F15                     	;# 
  2813  1F1C                     	;# 
  2814  1F1D                     	;# 
  2815  1F1E                     	;# 
  2816  1F1F                     	;# 
  2817  1F20                     	;# 
  2818  1F21                     	;# 
  2819  1F22                     	;# 
  2820  1F23                     	;# 
  2821  1F24                     	;# 
  2822  1F25                     	;# 
  2823  1F26                     	;# 
  2824  1F27                     	;# 
  2825  1F38                     	;# 
  2826  1F39                     	;# 
  2827  1F3A                     	;# 
  2828  1F3B                     	;# 
  2829  1F3C                     	;# 
  2830  1F3D                     	;# 
  2831  1F3E                     	;# 
  2832  1F3F                     	;# 
  2833  1F43                     	;# 
  2834  1F44                     	;# 
  2835  1F45                     	;# 
  2836  1F46                     	;# 
  2837  1F47                     	;# 
  2838  1F48                     	;# 
  2839  1F49                     	;# 
  2840  1F4A                     	;# 
  2841  1F4E                     	;# 
  2842  1F4F                     	;# 
  2843  1F50                     	;# 
  2844  1F51                     	;# 
  2845  1F52                     	;# 
  2846  1F53                     	;# 
  2847  1F54                     	;# 
  2848  1F55                     	;# 
  2849  1FE4                     	;# 
  2850  1FE5                     	;# 
  2851  1FE6                     	;# 
  2852  1FE7                     	;# 
  2853  1FE8                     	;# 
  2854  1FE8                     	;# 
  2855  1FE9                     	;# 
  2856  1FEA                     	;# 
  2857  1FEB                     	;# 
  2858  1FED                     	;# 
  2859  1FEE                     	;# 
  2860  1FEF                     	;# 
  2861  0000                     	;# 
  2862  0001                     	;# 
  2863  0002                     	;# 
  2864  0003                     	;# 
  2865  0004                     	;# 
  2866  0005                     	;# 
  2867  0006                     	;# 
  2868  0007                     	;# 
  2869  0008                     	;# 
  2870  0009                     	;# 
  2871  000A                     	;# 
  2872  000B                     	;# 
  2873  000C                     	;# 
  2874  000D                     	;# 
  2875  000E                     	;# 
  2876  0012                     	;# 
  2877  0013                     	;# 
  2878  0014                     	;# 
  2879  0018                     	;# 
  2880  0019                     	;# 
  2881  001A                     	;# 
  2882  008C                     	;# 
  2883  008C                     	;# 
  2884  008D                     	;# 
  2885  008E                     	;# 
  2886  008E                     	;# 
  2887  008F                     	;# 
  2888  0090                     	;# 
  2889  0090                     	;# 
  2890  0091                     	;# 
  2891  0092                     	;# 
  2892  0092                     	;# 
  2893  0093                     	;# 
  2894  0094                     	;# 
  2895  0094                     	;# 
  2896  0095                     	;# 
  2897  0096                     	;# 
  2898  0096                     	;# 
  2899  0097                     	;# 
  2900  0098                     	;# 
  2901  0099                     	;# 
  2902  009A                     	;# 
  2903  009B                     	;# 
  2904  009B                     	;# 
  2905  009C                     	;# 
  2906  009D                     	;# 
  2907  009D                     	;# 
  2908  009E                     	;# 
  2909  009F                     	;# 
  2910  010C                     	;# 
  2911  010C                     	;# 
  2912  010D                     	;# 
  2913  010E                     	;# 
  2914  010F                     	;# 
  2915  010F                     	;# 
  2916  0110                     	;# 
  2917  0111                     	;# 
  2918  0112                     	;# 
  2919  0113                     	;# 
  2920  0114                     	;# 
  2921  0115                     	;# 
  2922  0116                     	;# 
  2923  0117                     	;# 
  2924  0118                     	;# 
  2925  0119                     	;# 
  2926  0119                     	;# 
  2927  0119                     	;# 
  2928  011A                     	;# 
  2929  011A                     	;# 
  2930  011A                     	;# 
  2931  011B                     	;# 
  2932  011B                     	;# 
  2933  011B                     	;# 
  2934  011B                     	;# 
  2935  011B                     	;# 
  2936  011C                     	;# 
  2937  011C                     	;# 
  2938  011C                     	;# 
  2939  011D                     	;# 
  2940  011D                     	;# 
  2941  011D                     	;# 
  2942  011E                     	;# 
  2943  011E                     	;# 
  2944  011E                     	;# 
  2945  011F                     	;# 
  2946  011F                     	;# 
  2947  011F                     	;# 
  2948  011F                     	;# 
  2949  011F                     	;# 
  2950  018C                     	;# 
  2951  018D                     	;# 
  2952  018E                     	;# 
  2953  018F                     	;# 
  2954  0190                     	;# 
  2955  0191                     	;# 
  2956  0192                     	;# 
  2957  0196                     	;# 
  2958  0197                     	;# 
  2959  0198                     	;# 
  2960  0199                     	;# 
  2961  019A                     	;# 
  2962  019B                     	;# 
  2963  019C                     	;# 
  2964  020C                     	;# 
  2965  020D                     	;# 
  2966  020E                     	;# 
  2967  020E                     	;# 
  2968  020F                     	;# 
  2969  020F                     	;# 
  2970  0210                     	;# 
  2971  0210                     	;# 
  2972  0211                     	;# 
  2973  0211                     	;# 
  2974  0212                     	;# 
  2975  0213                     	;# 
  2976  0214                     	;# 
  2977  0214                     	;# 
  2978  0215                     	;# 
  2979  0215                     	;# 
  2980  0216                     	;# 
  2981  0216                     	;# 
  2982  0217                     	;# 
  2983  0217                     	;# 
  2984  0218                     	;# 
  2985  0219                     	;# 
  2986  021A                     	;# 
  2987  021A                     	;# 
  2988  021B                     	;# 
  2989  021B                     	;# 
  2990  021C                     	;# 
  2991  021C                     	;# 
  2992  021D                     	;# 
  2993  021D                     	;# 
  2994  021E                     	;# 
  2995  021F                     	;# 
  2996  028C                     	;# 
  2997  028C                     	;# 
  2998  028D                     	;# 
  2999  028D                     	;# 
  3000  028E                     	;# 
  3001  028F                     	;# 
  3002  0290                     	;# 
  3003  0291                     	;# 
  3004  0292                     	;# 
  3005  0292                     	;# 
  3006  0293                     	;# 
  3007  0293                     	;# 
  3008  0294                     	;# 
  3009  0295                     	;# 
  3010  0296                     	;# 
  3011  0297                     	;# 
  3012  0298                     	;# 
  3013  0298                     	;# 
  3014  0299                     	;# 
  3015  0299                     	;# 
  3016  029A                     	;# 
  3017  029B                     	;# 
  3018  029C                     	;# 
  3019  029D                     	;# 
  3020  029F                     	;# 
  3021  030C                     	;# 
  3022  030C                     	;# 
  3023  030D                     	;# 
  3024  030E                     	;# 
  3025  030F                     	;# 
  3026  0310                     	;# 
  3027  0310                     	;# 
  3028  0311                     	;# 
  3029  0312                     	;# 
  3030  0313                     	;# 
  3031  0314                     	;# 
  3032  0314                     	;# 
  3033  0315                     	;# 
  3034  0316                     	;# 
  3035  0317                     	;# 
  3036  0318                     	;# 
  3037  0318                     	;# 
  3038  0319                     	;# 
  3039  031A                     	;# 
  3040  031B                     	;# 
  3041  038C                     	;# 
  3042  038C                     	;# 
  3043  038D                     	;# 
  3044  038E                     	;# 
  3045  0390                     	;# 
  3046  0390                     	;# 
  3047  0391                     	;# 
  3048  0392                     	;# 
  3049  048C                     	;# 
  3050  048C                     	;# 
  3051  048D                     	;# 
  3052  048E                     	;# 
  3053  048F                     	;# 
  3054  048F                     	;# 
  3055  0490                     	;# 
  3056  0491                     	;# 
  3057  0492                     	;# 
  3058  0492                     	;# 
  3059  0493                     	;# 
  3060  0494                     	;# 
  3061  0495                     	;# 
  3062  0495                     	;# 
  3063  0496                     	;# 
  3064  0497                     	;# 
  3065  0498                     	;# 
  3066  0499                     	;# 
  3067  049A                     	;# 
  3068  049B                     	;# 
  3069  049C                     	;# 
  3070  049D                     	;# 
  3071  058C                     	;# 
  3072  058C                     	;# 
  3073  058D                     	;# 
  3074  058E                     	;# 
  3075  058F                     	;# 
  3076  058F                     	;# 
  3077  0590                     	;# 
  3078  0591                     	;# 
  3079  0592                     	;# 
  3080  0593                     	;# 
  3081  059C                     	;# 
  3082  059C                     	;# 
  3083  059D                     	;# 
  3084  059D                     	;# 
  3085  059E                     	;# 
  3086  059F                     	;# 
  3087  060C                     	;# 
  3088  060C                     	;# 
  3089  060D                     	;# 
  3090  060D                     	;# 
  3091  060E                     	;# 
  3092  060F                     	;# 
  3093  0610                     	;# 
  3094  0611                     	;# 
  3095  0612                     	;# 
  3096  0613                     	;# 
  3097  0614                     	;# 
  3098  0616                     	;# 
  3099  0616                     	;# 
  3100  0617                     	;# 
  3101  0617                     	;# 
  3102  0618                     	;# 
  3103  0619                     	;# 
  3104  061A                     	;# 
  3105  061B                     	;# 
  3106  061C                     	;# 
  3107  061D                     	;# 
  3108  061E                     	;# 
  3109  070C                     	;# 
  3110  070D                     	;# 
  3111  070E                     	;# 
  3112  070F                     	;# 
  3113  0710                     	;# 
  3114  0711                     	;# 
  3115  0712                     	;# 
  3116  0713                     	;# 
  3117  0714                     	;# 
  3118  0716                     	;# 
  3119  0717                     	;# 
  3120  0718                     	;# 
  3121  0719                     	;# 
  3122  071A                     	;# 
  3123  071B                     	;# 
  3124  071C                     	;# 
  3125  071D                     	;# 
  3126  071E                     	;# 
  3127  0796                     	;# 
  3128  0797                     	;# 
  3129  0798                     	;# 
  3130  0799                     	;# 
  3131  079A                     	;# 
  3132  079B                     	;# 
  3133  079C                     	;# 
  3134  079D                     	;# 
  3135  080C                     	;# 
  3136  080D                     	;# 
  3137  080E                     	;# 
  3138  080F                     	;# 
  3139  0810                     	;# 
  3140  0811                     	;# 
  3141  0812                     	;# 
  3142  0813                     	;# 
  3143  0814                     	;# 
  3144  081A                     	;# 
  3145  081A                     	;# 
  3146  081B                     	;# 
  3147  081C                     	;# 
  3148  081C                     	;# 
  3149  081D                     	;# 
  3150  081E                     	;# 
  3151  081F                     	;# 
  3152  088C                     	;# 
  3153  088D                     	;# 
  3154  088E                     	;# 
  3155  088F                     	;# 
  3156  0890                     	;# 
  3157  0891                     	;# 
  3158  0892                     	;# 
  3159  0893                     	;# 
  3160  0895                     	;# 
  3161  0896                     	;# 
  3162  0897                     	;# 
  3163  0898                     	;# 
  3164  0899                     	;# 
  3165  089A                     	;# 
  3166  089B                     	;# 
  3167  090C                     	;# 
  3168  090E                     	;# 
  3169  090F                     	;# 
  3170  091F                     	;# 
  3171  098F                     	;# 
  3172  098F                     	;# 
  3173  0990                     	;# 
  3174  0991                     	;# 
  3175  0992                     	;# 
  3176  0993                     	;# 
  3177  0994                     	;# 
  3178  0995                     	;# 
  3179  0996                     	;# 
  3180  0997                     	;# 
  3181  1E0F                     	;# 
  3182  1E10                     	;# 
  3183  1E11                     	;# 
  3184  1E12                     	;# 
  3185  1E13                     	;# 
  3186  1E14                     	;# 
  3187  1E15                     	;# 
  3188  1E16                     	;# 
  3189  1E17                     	;# 
  3190  1E18                     	;# 
  3191  1E19                     	;# 
  3192  1E1A                     	;# 
  3193  1E1B                     	;# 
  3194  1E1C                     	;# 
  3195  1E1D                     	;# 
  3196  1E1E                     	;# 
  3197  1E1F                     	;# 
  3198  1E20                     	;# 
  3199  1E21                     	;# 
  3200  1E22                     	;# 
  3201  1E23                     	;# 
  3202  1E24                     	;# 
  3203  1E25                     	;# 
  3204  1E26                     	;# 
  3205  1E27                     	;# 
  3206  1E28                     	;# 
  3207  1E29                     	;# 
  3208  1E2A                     	;# 
  3209  1E2B                     	;# 
  3210  1E2C                     	;# 
  3211  1E2D                     	;# 
  3212  1E2E                     	;# 
  3213  1E2F                     	;# 
  3214  1E30                     	;# 
  3215  1E31                     	;# 
  3216  1E32                     	;# 
  3217  1E33                     	;# 
  3218  1E34                     	;# 
  3219  1E35                     	;# 
  3220  1E36                     	;# 
  3221  1E37                     	;# 
  3222  1E8F                     	;# 
  3223  1E90                     	;# 
  3224  1E91                     	;# 
  3225  1E92                     	;# 
  3226  1E93                     	;# 
  3227  1E94                     	;# 
  3228  1E95                     	;# 
  3229  1E96                     	;# 
  3230  1E97                     	;# 
  3231  1E9C                     	;# 
  3232  1E9D                     	;# 
  3233  1E9E                     	;# 
  3234  1EA1                     	;# 
  3235  1EA2                     	;# 
  3236  1EA3                     	;# 
  3237  1EA4                     	;# 
  3238  1EA9                     	;# 
  3239  1EAA                     	;# 
  3240  1EB1                     	;# 
  3241  1EB2                     	;# 
  3242  1EB8                     	;# 
  3243  1EB9                     	;# 
  3244  1EBA                     	;# 
  3245  1EBB                     	;# 
  3246  1EBC                     	;# 
  3247  1EBD                     	;# 
  3248  1EBE                     	;# 
  3249  1EC3                     	;# 
  3250  1EC5                     	;# 
  3251  1EC6                     	;# 
  3252  1EC7                     	;# 
  3253  1EC8                     	;# 
  3254  1EC9                     	;# 
  3255  1ECA                     	;# 
  3256  1ECB                     	;# 
  3257  1ECB                     	;# 
  3258  1ECB                     	;# 
  3259  1ECC                     	;# 
  3260  1ECC                     	;# 
  3261  1ECC                     	;# 
  3262  1F10                     	;# 
  3263  1F11                     	;# 
  3264  1F12                     	;# 
  3265  1F14                     	;# 
  3266  1F15                     	;# 
  3267  1F1C                     	;# 
  3268  1F1D                     	;# 
  3269  1F1E                     	;# 
  3270  1F1F                     	;# 
  3271  1F20                     	;# 
  3272  1F21                     	;# 
  3273  1F22                     	;# 
  3274  1F23                     	;# 
  3275  1F24                     	;# 
  3276  1F25                     	;# 
  3277  1F26                     	;# 
  3278  1F27                     	;# 
  3279  1F38                     	;# 
  3280  1F39                     	;# 
  3281  1F3A                     	;# 
  3282  1F3B                     	;# 
  3283  1F3C                     	;# 
  3284  1F3D                     	;# 
  3285  1F3E                     	;# 
  3286  1F3F                     	;# 
  3287  1F43                     	;# 
  3288  1F44                     	;# 
  3289  1F45                     	;# 
  3290  1F46                     	;# 
  3291  1F47                     	;# 
  3292  1F48                     	;# 
  3293  1F49                     	;# 
  3294  1F4A                     	;# 
  3295  1F4E                     	;# 
  3296  1F4F                     	;# 
  3297  1F50                     	;# 
  3298  1F51                     	;# 
  3299  1F52                     	;# 
  3300  1F53                     	;# 
  3301  1F54                     	;# 
  3302  1F55                     	;# 
  3303  1FE4                     	;# 
  3304  1FE5                     	;# 
  3305  1FE6                     	;# 
  3306  1FE7                     	;# 
  3307  1FE8                     	;# 
  3308  1FE8                     	;# 
  3309  1FE9                     	;# 
  3310  1FEA                     	;# 
  3311  1FEB                     	;# 
  3312  1FED                     	;# 
  3313  1FEE                     	;# 
  3314  1FEF                     	;# 
  3315  0000                     	;# 
  3316  0001                     	;# 
  3317  0002                     	;# 
  3318  0003                     	;# 
  3319  0004                     	;# 
  3320  0005                     	;# 
  3321  0006                     	;# 
  3322  0007                     	;# 
  3323  0008                     	;# 
  3324  0009                     	;# 
  3325  000A                     	;# 
  3326  000B                     	;# 
  3327  000C                     	;# 
  3328  000D                     	;# 
  3329  000E                     	;# 
  3330  0012                     	;# 
  3331  0013                     	;# 
  3332  0014                     	;# 
  3333  0018                     	;# 
  3334  0019                     	;# 
  3335  001A                     	;# 
  3336  008C                     	;# 
  3337  008C                     	;# 
  3338  008D                     	;# 
  3339  008E                     	;# 
  3340  008E                     	;# 
  3341  008F                     	;# 
  3342  0090                     	;# 
  3343  0090                     	;# 
  3344  0091                     	;# 
  3345  0092                     	;# 
  3346  0092                     	;# 
  3347  0093                     	;# 
  3348  0094                     	;# 
  3349  0094                     	;# 
  3350  0095                     	;# 
  3351  0096                     	;# 
  3352  0096                     	;# 
  3353  0097                     	;# 
  3354  0098                     	;# 
  3355  0099                     	;# 
  3356  009A                     	;# 
  3357  009B                     	;# 
  3358  009B                     	;# 
  3359  009C                     	;# 
  3360  009D                     	;# 
  3361  009D                     	;# 
  3362  009E                     	;# 
  3363  009F                     	;# 
  3364  010C                     	;# 
  3365  010C                     	;# 
  3366  010D                     	;# 
  3367  010E                     	;# 
  3368  010F                     	;# 
  3369  010F                     	;# 
  3370  0110                     	;# 
  3371  0111                     	;# 
  3372  0112                     	;# 
  3373  0113                     	;# 
  3374  0114                     	;# 
  3375  0115                     	;# 
  3376  0116                     	;# 
  3377  0117                     	;# 
  3378  0118                     	;# 
  3379  0119                     	;# 
  3380  0119                     	;# 
  3381  0119                     	;# 
  3382  011A                     	;# 
  3383  011A                     	;# 
  3384  011A                     	;# 
  3385  011B                     	;# 
  3386  011B                     	;# 
  3387  011B                     	;# 
  3388  011B                     	;# 
  3389  011B                     	;# 
  3390  011C                     	;# 
  3391  011C                     	;# 
  3392  011C                     	;# 
  3393  011D                     	;# 
  3394  011D                     	;# 
  3395  011D                     	;# 
  3396  011E                     	;# 
  3397  011E                     	;# 
  3398  011E                     	;# 
  3399  011F                     	;# 
  3400  011F                     	;# 
  3401  011F                     	;# 
  3402  011F                     	;# 
  3403  011F                     	;# 
  3404  018C                     	;# 
  3405  018D                     	;# 
  3406  018E                     	;# 
  3407  018F                     	;# 
  3408  0190                     	;# 
  3409  0191                     	;# 
  3410  0192                     	;# 
  3411  0196                     	;# 
  3412  0197                     	;# 
  3413  0198                     	;# 
  3414  0199                     	;# 
  3415  019A                     	;# 
  3416  019B                     	;# 
  3417  019C                     	;# 
  3418  020C                     	;# 
  3419  020D                     	;# 
  3420  020E                     	;# 
  3421  020E                     	;# 
  3422  020F                     	;# 
  3423  020F                     	;# 
  3424  0210                     	;# 
  3425  0210                     	;# 
  3426  0211                     	;# 
  3427  0211                     	;# 
  3428  0212                     	;# 
  3429  0213                     	;# 
  3430  0214                     	;# 
  3431  0214                     	;# 
  3432  0215                     	;# 
  3433  0215                     	;# 
  3434  0216                     	;# 
  3435  0216                     	;# 
  3436  0217                     	;# 
  3437  0217                     	;# 
  3438  0218                     	;# 
  3439  0219                     	;# 
  3440  021A                     	;# 
  3441  021A                     	;# 
  3442  021B                     	;# 
  3443  021B                     	;# 
  3444  021C                     	;# 
  3445  021C                     	;# 
  3446  021D                     	;# 
  3447  021D                     	;# 
  3448  021E                     	;# 
  3449  021F                     	;# 
  3450  028C                     	;# 
  3451  028C                     	;# 
  3452  028D                     	;# 
  3453  028D                     	;# 
  3454  028E                     	;# 
  3455  028F                     	;# 
  3456  0290                     	;# 
  3457  0291                     	;# 
  3458  0292                     	;# 
  3459  0292                     	;# 
  3460  0293                     	;# 
  3461  0293                     	;# 
  3462  0294                     	;# 
  3463  0295                     	;# 
  3464  0296                     	;# 
  3465  0297                     	;# 
  3466  0298                     	;# 
  3467  0298                     	;# 
  3468  0299                     	;# 
  3469  0299                     	;# 
  3470  029A                     	;# 
  3471  029B                     	;# 
  3472  029C                     	;# 
  3473  029D                     	;# 
  3474  029F                     	;# 
  3475  030C                     	;# 
  3476  030C                     	;# 
  3477  030D                     	;# 
  3478  030E                     	;# 
  3479  030F                     	;# 
  3480  0310                     	;# 
  3481  0310                     	;# 
  3482  0311                     	;# 
  3483  0312                     	;# 
  3484  0313                     	;# 
  3485  0314                     	;# 
  3486  0314                     	;# 
  3487  0315                     	;# 
  3488  0316                     	;# 
  3489  0317                     	;# 
  3490  0318                     	;# 
  3491  0318                     	;# 
  3492  0319                     	;# 
  3493  031A                     	;# 
  3494  031B                     	;# 
  3495  038C                     	;# 
  3496  038C                     	;# 
  3497  038D                     	;# 
  3498  038E                     	;# 
  3499  0390                     	;# 
  3500  0390                     	;# 
  3501  0391                     	;# 
  3502  0392                     	;# 
  3503  048C                     	;# 
  3504  048C                     	;# 
  3505  048D                     	;# 
  3506  048E                     	;# 
  3507  048F                     	;# 
  3508  048F                     	;# 
  3509  0490                     	;# 
  3510  0491                     	;# 
  3511  0492                     	;# 
  3512  0492                     	;# 
  3513  0493                     	;# 
  3514  0494                     	;# 
  3515  0495                     	;# 
  3516  0495                     	;# 
  3517  0496                     	;# 
  3518  0497                     	;# 
  3519  0498                     	;# 
  3520  0499                     	;# 
  3521  049A                     	;# 
  3522  049B                     	;# 
  3523  049C                     	;# 
  3524  049D                     	;# 
  3525  058C                     	;# 
  3526  058C                     	;# 
  3527  058D                     	;# 
  3528  058E                     	;# 
  3529  058F                     	;# 
  3530  058F                     	;# 
  3531  0590                     	;# 
  3532  0591                     	;# 
  3533  0592                     	;# 
  3534  0593                     	;# 
  3535  059C                     	;# 
  3536  059C                     	;# 
  3537  059D                     	;# 
  3538  059D                     	;# 
  3539  059E                     	;# 
  3540  059F                     	;# 
  3541  060C                     	;# 
  3542  060C                     	;# 
  3543  060D                     	;# 
  3544  060D                     	;# 
  3545  060E                     	;# 
  3546  060F                     	;# 
  3547  0610                     	;# 
  3548  0611                     	;# 
  3549  0612                     	;# 
  3550  0613                     	;# 
  3551  0614                     	;# 
  3552  0616                     	;# 
  3553  0616                     	;# 
  3554  0617                     	;# 
  3555  0617                     	;# 
  3556  0618                     	;# 
  3557  0619                     	;# 
  3558  061A                     	;# 
  3559  061B                     	;# 
  3560  061C                     	;# 
  3561  061D                     	;# 
  3562  061E                     	;# 
  3563  070C                     	;# 
  3564  070D                     	;# 
  3565  070E                     	;# 
  3566  070F                     	;# 
  3567  0710                     	;# 
  3568  0711                     	;# 
  3569  0712                     	;# 
  3570  0713                     	;# 
  3571  0714                     	;# 
  3572  0716                     	;# 
  3573  0717                     	;# 
  3574  0718                     	;# 
  3575  0719                     	;# 
  3576  071A                     	;# 
  3577  071B                     	;# 
  3578  071C                     	;# 
  3579  071D                     	;# 
  3580  071E                     	;# 
  3581  0796                     	;# 
  3582  0797                     	;# 
  3583  0798                     	;# 
  3584  0799                     	;# 
  3585  079A                     	;# 
  3586  079B                     	;# 
  3587  079C                     	;# 
  3588  079D                     	;# 
  3589  080C                     	;# 
  3590  080D                     	;# 
  3591  080E                     	;# 
  3592  080F                     	;# 
  3593  0810                     	;# 
  3594  0811                     	;# 
  3595  0812                     	;# 
  3596  0813                     	;# 
  3597  0814                     	;# 
  3598  081A                     	;# 
  3599  081A                     	;# 
  3600  081B                     	;# 
  3601  081C                     	;# 
  3602  081C                     	;# 
  3603  081D                     	;# 
  3604  081E                     	;# 
  3605  081F                     	;# 
  3606  088C                     	;# 
  3607  088D                     	;# 
  3608  088E                     	;# 
  3609  088F                     	;# 
  3610  0890                     	;# 
  3611  0891                     	;# 
  3612  0892                     	;# 
  3613  0893                     	;# 
  3614  0895                     	;# 
  3615  0896                     	;# 
  3616  0897                     	;# 
  3617  0898                     	;# 
  3618  0899                     	;# 
  3619  089A                     	;# 
  3620  089B                     	;# 
  3621  090C                     	;# 
  3622  090E                     	;# 
  3623  090F                     	;# 
  3624  091F                     	;# 
  3625  098F                     	;# 
  3626  098F                     	;# 
  3627  0990                     	;# 
  3628  0991                     	;# 
  3629  0992                     	;# 
  3630  0993                     	;# 
  3631  0994                     	;# 
  3632  0995                     	;# 
  3633  0996                     	;# 
  3634  0997                     	;# 
  3635  1E0F                     	;# 
  3636  1E10                     	;# 
  3637  1E11                     	;# 
  3638  1E12                     	;# 
  3639  1E13                     	;# 
  3640  1E14                     	;# 
  3641  1E15                     	;# 
  3642  1E16                     	;# 
  3643  1E17                     	;# 
  3644  1E18                     	;# 
  3645  1E19                     	;# 
  3646  1E1A                     	;# 
  3647  1E1B                     	;# 
  3648  1E1C                     	;# 
  3649  1E1D                     	;# 
  3650  1E1E                     	;# 
  3651  1E1F                     	;# 
  3652  1E20                     	;# 
  3653  1E21                     	;# 
  3654  1E22                     	;# 
  3655  1E23                     	;# 
  3656  1E24                     	;# 
  3657  1E25                     	;# 
  3658  1E26                     	;# 
  3659  1E27                     	;# 
  3660  1E28                     	;# 
  3661  1E29                     	;# 
  3662  1E2A                     	;# 
  3663  1E2B                     	;# 
  3664  1E2C                     	;# 
  3665  1E2D                     	;# 
  3666  1E2E                     	;# 
  3667  1E2F                     	;# 
  3668  1E30                     	;# 
  3669  1E31                     	;# 
  3670  1E32                     	;# 
  3671  1E33                     	;# 
  3672  1E34                     	;# 
  3673  1E35                     	;# 
  3674  1E36                     	;# 
  3675  1E37                     	;# 
  3676  1E8F                     	;# 
  3677  1E90                     	;# 
  3678  1E91                     	;# 
  3679  1E92                     	;# 
  3680  1E93                     	;# 
  3681  1E94                     	;# 
  3682  1E95                     	;# 
  3683  1E96                     	;# 
  3684  1E97                     	;# 
  3685  1E9C                     	;# 
  3686  1E9D                     	;# 
  3687  1E9E                     	;# 
  3688  1EA1                     	;# 
  3689  1EA2                     	;# 
  3690  1EA3                     	;# 
  3691  1EA4                     	;# 
  3692  1EA9                     	;# 
  3693  1EAA                     	;# 
  3694  1EB1                     	;# 
  3695  1EB2                     	;# 
  3696  1EB8                     	;# 
  3697  1EB9                     	;# 
  3698  1EBA                     	;# 
  3699  1EBB                     	;# 
  3700  1EBC                     	;# 
  3701  1EBD                     	;# 
  3702  1EBE                     	;# 
  3703  1EC3                     	;# 
  3704  1EC5                     	;# 
  3705  1EC6                     	;# 
  3706  1EC7                     	;# 
  3707  1EC8                     	;# 
  3708  1EC9                     	;# 
  3709  1ECA                     	;# 
  3710  1ECB                     	;# 
  3711  1ECB                     	;# 
  3712  1ECB                     	;# 
  3713  1ECC                     	;# 
  3714  1ECC                     	;# 
  3715  1ECC                     	;# 
  3716  1F10                     	;# 
  3717  1F11                     	;# 
  3718  1F12                     	;# 
  3719  1F14                     	;# 
  3720  1F15                     	;# 
  3721  1F1C                     	;# 
  3722  1F1D                     	;# 
  3723  1F1E                     	;# 
  3724  1F1F                     	;# 
  3725  1F20                     	;# 
  3726  1F21                     	;# 
  3727  1F22                     	;# 
  3728  1F23                     	;# 
  3729  1F24                     	;# 
  3730  1F25                     	;# 
  3731  1F26                     	;# 
  3732  1F27                     	;# 
  3733  1F38                     	;# 
  3734  1F39                     	;# 
  3735  1F3A                     	;# 
  3736  1F3B                     	;# 
  3737  1F3C                     	;# 
  3738  1F3D                     	;# 
  3739  1F3E                     	;# 
  3740  1F3F                     	;# 
  3741  1F43                     	;# 
  3742  1F44                     	;# 
  3743  1F45                     	;# 
  3744  1F46                     	;# 
  3745  1F47                     	;# 
  3746  1F48                     	;# 
  3747  1F49                     	;# 
  3748  1F4A                     	;# 
  3749  1F4E                     	;# 
  3750  1F4F                     	;# 
  3751  1F50                     	;# 
  3752  1F51                     	;# 
  3753  1F52                     	;# 
  3754  1F53                     	;# 
  3755  1F54                     	;# 
  3756  1F55                     	;# 
  3757  1FE4                     	;# 
  3758  1FE5                     	;# 
  3759  1FE6                     	;# 
  3760  1FE7                     	;# 
  3761  1FE8                     	;# 
  3762  1FE8                     	;# 
  3763  1FE9                     	;# 
  3764  1FEA                     	;# 
  3765  1FEB                     	;# 
  3766  1FED                     	;# 
  3767  1FEE                     	;# 
  3768  1FEF                     	;# 
  3769  0000                     	;# 
  3770  0001                     	;# 
  3771  0002                     	;# 
  3772  0003                     	;# 
  3773  0004                     	;# 
  3774  0005                     	;# 
  3775  0006                     	;# 
  3776  0007                     	;# 
  3777  0008                     	;# 
  3778  0009                     	;# 
  3779  000A                     	;# 
  3780  000B                     	;# 
  3781  000C                     	;# 
  3782  000D                     	;# 
  3783  000E                     	;# 
  3784  0012                     	;# 
  3785  0013                     	;# 
  3786  0014                     	;# 
  3787  0018                     	;# 
  3788  0019                     	;# 
  3789  001A                     	;# 
  3790  008C                     	;# 
  3791  008C                     	;# 
  3792  008D                     	;# 
  3793  008E                     	;# 
  3794  008E                     	;# 
  3795  008F                     	;# 
  3796  0090                     	;# 
  3797  0090                     	;# 
  3798  0091                     	;# 
  3799  0092                     	;# 
  3800  0092                     	;# 
  3801  0093                     	;# 
  3802  0094                     	;# 
  3803  0094                     	;# 
  3804  0095                     	;# 
  3805  0096                     	;# 
  3806  0096                     	;# 
  3807  0097                     	;# 
  3808  0098                     	;# 
  3809  0099                     	;# 
  3810  009A                     	;# 
  3811  009B                     	;# 
  3812  009B                     	;# 
  3813  009C                     	;# 
  3814  009D                     	;# 
  3815  009D                     	;# 
  3816  009E                     	;# 
  3817  009F                     	;# 
  3818  010C                     	;# 
  3819  010C                     	;# 
  3820  010D                     	;# 
  3821  010E                     	;# 
  3822  010F                     	;# 
  3823  010F                     	;# 
  3824  0110                     	;# 
  3825  0111                     	;# 
  3826  0112                     	;# 
  3827  0113                     	;# 
  3828  0114                     	;# 
  3829  0115                     	;# 
  3830  0116                     	;# 
  3831  0117                     	;# 
  3832  0118                     	;# 
  3833  0119                     	;# 
  3834  0119                     	;# 
  3835  0119                     	;# 
  3836  011A                     	;# 
  3837  011A                     	;# 
  3838  011A                     	;# 
  3839  011B                     	;# 
  3840  011B                     	;# 
  3841  011B                     	;# 
  3842  011B                     	;# 
  3843  011B                     	;# 
  3844  011C                     	;# 
  3845  011C                     	;# 
  3846  011C                     	;# 
  3847  011D                     	;# 
  3848  011D                     	;# 
  3849  011D                     	;# 
  3850  011E                     	;# 
  3851  011E                     	;# 
  3852  011E                     	;# 
  3853  011F                     	;# 
  3854  011F                     	;# 
  3855  011F                     	;# 
  3856  011F                     	;# 
  3857  011F                     	;# 
  3858  018C                     	;# 
  3859  018D                     	;# 
  3860  018E                     	;# 
  3861  018F                     	;# 
  3862  0190                     	;# 
  3863  0191                     	;# 
  3864  0192                     	;# 
  3865  0196                     	;# 
  3866  0197                     	;# 
  3867  0198                     	;# 
  3868  0199                     	;# 
  3869  019A                     	;# 
  3870  019B                     	;# 
  3871  019C                     	;# 
  3872  020C                     	;# 
  3873  020D                     	;# 
  3874  020E                     	;# 
  3875  020E                     	;# 
  3876  020F                     	;# 
  3877  020F                     	;# 
  3878  0210                     	;# 
  3879  0210                     	;# 
  3880  0211                     	;# 
  3881  0211                     	;# 
  3882  0212                     	;# 
  3883  0213                     	;# 
  3884  0214                     	;# 
  3885  0214                     	;# 
  3886  0215                     	;# 
  3887  0215                     	;# 
  3888  0216                     	;# 
  3889  0216                     	;# 
  3890  0217                     	;# 
  3891  0217                     	;# 
  3892  0218                     	;# 
  3893  0219                     	;# 
  3894  021A                     	;# 
  3895  021A                     	;# 
  3896  021B                     	;# 
  3897  021B                     	;# 
  3898  021C                     	;# 
  3899  021C                     	;# 
  3900  021D                     	;# 
  3901  021D                     	;# 
  3902  021E                     	;# 
  3903  021F                     	;# 
  3904  028C                     	;# 
  3905  028C                     	;# 
  3906  028D                     	;# 
  3907  028D                     	;# 
  3908  028E                     	;# 
  3909  028F                     	;# 
  3910  0290                     	;# 
  3911  0291                     	;# 
  3912  0292                     	;# 
  3913  0292                     	;# 
  3914  0293                     	;# 
  3915  0293                     	;# 
  3916  0294                     	;# 
  3917  0295                     	;# 
  3918  0296                     	;# 
  3919  0297                     	;# 
  3920  0298                     	;# 
  3921  0298                     	;# 
  3922  0299                     	;# 
  3923  0299                     	;# 
  3924  029A                     	;# 
  3925  029B                     	;# 
  3926  029C                     	;# 
  3927  029D                     	;# 
  3928  029F                     	;# 
  3929  030C                     	;# 
  3930  030C                     	;# 
  3931  030D                     	;# 
  3932  030E                     	;# 
  3933  030F                     	;# 
  3934  0310                     	;# 
  3935  0310                     	;# 
  3936  0311                     	;# 
  3937  0312                     	;# 
  3938  0313                     	;# 
  3939  0314                     	;# 
  3940  0314                     	;# 
  3941  0315                     	;# 
  3942  0316                     	;# 
  3943  0317                     	;# 
  3944  0318                     	;# 
  3945  0318                     	;# 
  3946  0319                     	;# 
  3947  031A                     	;# 
  3948  031B                     	;# 
  3949  038C                     	;# 
  3950  038C                     	;# 
  3951  038D                     	;# 
  3952  038E                     	;# 
  3953  0390                     	;# 
  3954  0390                     	;# 
  3955  0391                     	;# 
  3956  0392                     	;# 
  3957  048C                     	;# 
  3958  048C                     	;# 
  3959  048D                     	;# 
  3960  048E                     	;# 
  3961  048F                     	;# 
  3962  048F                     	;# 
  3963  0490                     	;# 
  3964  0491                     	;# 
  3965  0492                     	;# 
  3966  0492                     	;# 
  3967  0493                     	;# 
  3968  0494                     	;# 
  3969  0495                     	;# 
  3970  0495                     	;# 
  3971  0496                     	;# 
  3972  0497                     	;# 
  3973  0498                     	;# 
  3974  0499                     	;# 
  3975  049A                     	;# 
  3976  049B                     	;# 
  3977  049C                     	;# 
  3978  049D                     	;# 
  3979  058C                     	;# 
  3980  058C                     	;# 
  3981  058D                     	;# 
  3982  058E                     	;# 
  3983  058F                     	;# 
  3984  058F                     	;# 
  3985  0590                     	;# 
  3986  0591                     	;# 
  3987  0592                     	;# 
  3988  0593                     	;# 
  3989  059C                     	;# 
  3990  059C                     	;# 
  3991  059D                     	;# 
  3992  059D                     	;# 
  3993  059E                     	;# 
  3994  059F                     	;# 
  3995  060C                     	;# 
  3996  060C                     	;# 
  3997  060D                     	;# 
  3998  060D                     	;# 
  3999  060E                     	;# 
  4000  060F                     	;# 
  4001  0610                     	;# 
  4002  0611                     	;# 
  4003  0612                     	;# 
  4004  0613                     	;# 
  4005  0614                     	;# 
  4006  0616                     	;# 
  4007  0616                     	;# 
  4008  0617                     	;# 
  4009  0617                     	;# 
  4010  0618                     	;# 
  4011  0619                     	;# 
  4012  061A                     	;# 
  4013  061B                     	;# 
  4014  061C                     	;# 
  4015  061D                     	;# 
  4016  061E                     	;# 
  4017  070C                     	;# 
  4018  070D                     	;# 
  4019  070E                     	;# 
  4020  070F                     	;# 
  4021  0710                     	;# 
  4022  0711                     	;# 
  4023  0712                     	;# 
  4024  0713                     	;# 
  4025  0714                     	;# 
  4026  0716                     	;# 
  4027  0717                     	;# 
  4028  0718                     	;# 
  4029  0719                     	;# 
  4030  071A                     	;# 
  4031  071B                     	;# 
  4032  071C                     	;# 
  4033  071D                     	;# 
  4034  071E                     	;# 
  4035  0796                     	;# 
  4036  0797                     	;# 
  4037  0798                     	;# 
  4038  0799                     	;# 
  4039  079A                     	;# 
  4040  079B                     	;# 
  4041  079C                     	;# 
  4042  079D                     	;# 
  4043  080C                     	;# 
  4044  080D                     	;# 
  4045  080E                     	;# 
  4046  080F                     	;# 
  4047  0810                     	;# 
  4048  0811                     	;# 
  4049  0812                     	;# 
  4050  0813                     	;# 
  4051  0814                     	;# 
  4052  081A                     	;# 
  4053  081A                     	;# 
  4054  081B                     	;# 
  4055  081C                     	;# 
  4056  081C                     	;# 
  4057  081D                     	;# 
  4058  081E                     	;# 
  4059  081F                     	;# 
  4060  088C                     	;# 
  4061  088D                     	;# 
  4062  088E                     	;# 
  4063  088F                     	;# 
  4064  0890                     	;# 
  4065  0891                     	;# 
  4066  0892                     	;# 
  4067  0893                     	;# 
  4068  0895                     	;# 
  4069  0896                     	;# 
  4070  0897                     	;# 
  4071  0898                     	;# 
  4072  0899                     	;# 
  4073  089A                     	;# 
  4074  089B                     	;# 
  4075  090C                     	;# 
  4076  090E                     	;# 
  4077  090F                     	;# 
  4078  091F                     	;# 
  4079  098F                     	;# 
  4080  098F                     	;# 
  4081  0990                     	;# 
  4082  0991                     	;# 
  4083  0992                     	;# 
  4084  0993                     	;# 
  4085  0994                     	;# 
  4086  0995                     	;# 
  4087  0996                     	;# 
  4088  0997                     	;# 
  4089  1E0F                     	;# 
  4090  1E10                     	;# 
  4091  1E11                     	;# 
  4092  1E12                     	;# 
  4093  1E13                     	;# 
  4094  1E14                     	;# 
  4095  1E15                     	;# 
  4096  1E16                     	;# 
  4097  1E17                     	;# 
  4098  1E18                     	;# 
  4099  1E19                     	;# 
  4100  1E1A                     	;# 
  4101  1E1B                     	;# 
  4102  1E1C                     	;# 
  4103  1E1D                     	;# 
  4104  1E1E                     	;# 
  4105  1E1F                     	;# 
  4106  1E20                     	;# 
  4107  1E21                     	;# 
  4108  1E22                     	;# 
  4109  1E23                     	;# 
  4110  1E24                     	;# 
  4111  1E25                     	;# 
  4112  1E26                     	;# 
  4113  1E27                     	;# 
  4114  1E28                     	;# 
  4115  1E29                     	;# 
  4116  1E2A                     	;# 
  4117  1E2B                     	;# 
  4118  1E2C                     	;# 
  4119  1E2D                     	;# 
  4120  1E2E                     	;# 
  4121  1E2F                     	;# 
  4122  1E30                     	;# 
  4123  1E31                     	;# 
  4124  1E32                     	;# 
  4125  1E33                     	;# 
  4126  1E34                     	;# 
  4127  1E35                     	;# 
  4128  1E36                     	;# 
  4129  1E37                     	;# 
  4130  1E8F                     	;# 
  4131  1E90                     	;# 
  4132  1E91                     	;# 
  4133  1E92                     	;# 
  4134  1E93                     	;# 
  4135  1E94                     	;# 
  4136  1E95                     	;# 
  4137  1E96                     	;# 
  4138  1E97                     	;# 
  4139  1E9C                     	;# 
  4140  1E9D                     	;# 
  4141  1E9E                     	;# 
  4142  1EA1                     	;# 
  4143  1EA2                     	;# 
  4144  1EA3                     	;# 
  4145  1EA4                     	;# 
  4146  1EA9                     	;# 
  4147  1EAA                     	;# 
  4148  1EB1                     	;# 
  4149  1EB2                     	;# 
  4150  1EB8                     	;# 
  4151  1EB9                     	;# 
  4152  1EBA                     	;# 
  4153  1EBB                     	;# 
  4154  1EBC                     	;# 
  4155  1EBD                     	;# 
  4156  1EBE                     	;# 
  4157  1EC3                     	;# 
  4158  1EC5                     	;# 
  4159  1EC6                     	;# 
  4160  1EC7                     	;# 
  4161  1EC8                     	;# 
  4162  1EC9                     	;# 
  4163  1ECA                     	;# 
  4164  1ECB                     	;# 
  4165  1ECB                     	;# 
  4166  1ECB                     	;# 
  4167  1ECC                     	;# 
  4168  1ECC                     	;# 
  4169  1ECC                     	;# 
  4170  1F10                     	;# 
  4171  1F11                     	;# 
  4172  1F12                     	;# 
  4173  1F14                     	;# 
  4174  1F15                     	;# 
  4175  1F1C                     	;# 
  4176  1F1D                     	;# 
  4177  1F1E                     	;# 
  4178  1F1F                     	;# 
  4179  1F20                     	;# 
  4180  1F21                     	;# 
  4181  1F22                     	;# 
  4182  1F23                     	;# 
  4183  1F24                     	;# 
  4184  1F25                     	;# 
  4185  1F26                     	;# 
  4186  1F27                     	;# 
  4187  1F38                     	;# 
  4188  1F39                     	;# 
  4189  1F3A                     	;# 
  4190  1F3B                     	;# 
  4191  1F3C                     	;# 
  4192  1F3D                     	;# 
  4193  1F3E                     	;# 
  4194  1F3F                     	;# 
  4195  1F43                     	;# 
  4196  1F44                     	;# 
  4197  1F45                     	;# 
  4198  1F46                     	;# 
  4199  1F47                     	;# 
  4200  1F48                     	;# 
  4201  1F49                     	;# 
  4202  1F4A                     	;# 
  4203  1F4E                     	;# 
  4204  1F4F                     	;# 
  4205  1F50                     	;# 
  4206  1F51                     	;# 
  4207  1F52                     	;# 
  4208  1F53                     	;# 
  4209  1F54                     	;# 
  4210  1F55                     	;# 
  4211  1FE4                     	;# 
  4212  1FE5                     	;# 
  4213  1FE6                     	;# 
  4214  1FE7                     	;# 
  4215  1FE8                     	;# 
  4216  1FE8                     	;# 
  4217  1FE9                     	;# 
  4218  1FEA                     	;# 
  4219  1FEB                     	;# 
  4220  1FED                     	;# 
  4221  1FEE                     	;# 
  4222  1FEF                     	;# 
  4223  0000                     	;# 
  4224  0001                     	;# 
  4225  0002                     	;# 
  4226  0003                     	;# 
  4227  0004                     	;# 
  4228  0005                     	;# 
  4229  0006                     	;# 
  4230  0007                     	;# 
  4231  0008                     	;# 
  4232  0009                     	;# 
  4233  000A                     	;# 
  4234  000B                     	;# 
  4235  000C                     	;# 
  4236  000D                     	;# 
  4237  000E                     	;# 
  4238  0012                     	;# 
  4239  0013                     	;# 
  4240  0014                     	;# 
  4241  0018                     	;# 
  4242  0019                     	;# 
  4243  001A                     	;# 
  4244  008C                     	;# 
  4245  008C                     	;# 
  4246  008D                     	;# 
  4247  008E                     	;# 
  4248  008E                     	;# 
  4249  008F                     	;# 
  4250  0090                     	;# 
  4251  0090                     	;# 
  4252  0091                     	;# 
  4253  0092                     	;# 
  4254  0092                     	;# 
  4255  0093                     	;# 
  4256  0094                     	;# 
  4257  0094                     	;# 
  4258  0095                     	;# 
  4259  0096                     	;# 
  4260  0096                     	;# 
  4261  0097                     	;# 
  4262  0098                     	;# 
  4263  0099                     	;# 
  4264  009A                     	;# 
  4265  009B                     	;# 
  4266  009B                     	;# 
  4267  009C                     	;# 
  4268  009D                     	;# 
  4269  009D                     	;# 
  4270  009E                     	;# 
  4271  009F                     	;# 
  4272  010C                     	;# 
  4273  010C                     	;# 
  4274  010D                     	;# 
  4275  010E                     	;# 
  4276  010F                     	;# 
  4277  010F                     	;# 
  4278  0110                     	;# 
  4279  0111                     	;# 
  4280  0112                     	;# 
  4281  0113                     	;# 
  4282  0114                     	;# 
  4283  0115                     	;# 
  4284  0116                     	;# 
  4285  0117                     	;# 
  4286  0118                     	;# 
  4287  0119                     	;# 
  4288  0119                     	;# 
  4289  0119                     	;# 
  4290  011A                     	;# 
  4291  011A                     	;# 
  4292  011A                     	;# 
  4293  011B                     	;# 
  4294  011B                     	;# 
  4295  011B                     	;# 
  4296  011B                     	;# 
  4297  011B                     	;# 
  4298  011C                     	;# 
  4299  011C                     	;# 
  4300  011C                     	;# 
  4301  011D                     	;# 
  4302  011D                     	;# 
  4303  011D                     	;# 
  4304  011E                     	;# 
  4305  011E                     	;# 
  4306  011E                     	;# 
  4307  011F                     	;# 
  4308  011F                     	;# 
  4309  011F                     	;# 
  4310  011F                     	;# 
  4311  011F                     	;# 
  4312  018C                     	;# 
  4313  018D                     	;# 
  4314  018E                     	;# 
  4315  018F                     	;# 
  4316  0190                     	;# 
  4317  0191                     	;# 
  4318  0192                     	;# 
  4319  0196                     	;# 
  4320  0197                     	;# 
  4321  0198                     	;# 
  4322  0199                     	;# 
  4323  019A                     	;# 
  4324  019B                     	;# 
  4325  019C                     	;# 
  4326  020C                     	;# 
  4327  020D                     	;# 
  4328  020E                     	;# 
  4329  020E                     	;# 
  4330  020F                     	;# 
  4331  020F                     	;# 
  4332  0210                     	;# 
  4333  0210                     	;# 
  4334  0211                     	;# 
  4335  0211                     	;# 
  4336  0212                     	;# 
  4337  0213                     	;# 
  4338  0214                     	;# 
  4339  0214                     	;# 
  4340  0215                     	;# 
  4341  0215                     	;# 
  4342  0216                     	;# 
  4343  0216                     	;# 
  4344  0217                     	;# 
  4345  0217                     	;# 
  4346  0218                     	;# 
  4347  0219                     	;# 
  4348  021A                     	;# 
  4349  021A                     	;# 
  4350  021B                     	;# 
  4351  021B                     	;# 
  4352  021C                     	;# 
  4353  021C                     	;# 
  4354  021D                     	;# 
  4355  021D                     	;# 
  4356  021E                     	;# 
  4357  021F                     	;# 
  4358  028C                     	;# 
  4359  028C                     	;# 
  4360  028D                     	;# 
  4361  028D                     	;# 
  4362  028E                     	;# 
  4363  028F                     	;# 
  4364  0290                     	;# 
  4365  0291                     	;# 
  4366  0292                     	;# 
  4367  0292                     	;# 
  4368  0293                     	;# 
  4369  0293                     	;# 
  4370  0294                     	;# 
  4371  0295                     	;# 
  4372  0296                     	;# 
  4373  0297                     	;# 
  4374  0298                     	;# 
  4375  0298                     	;# 
  4376  0299                     	;# 
  4377  0299                     	;# 
  4378  029A                     	;# 
  4379  029B                     	;# 
  4380  029C                     	;# 
  4381  029D                     	;# 
  4382  029F                     	;# 
  4383  030C                     	;# 
  4384  030C                     	;# 
  4385  030D                     	;# 
  4386  030E                     	;# 
  4387  030F                     	;# 
  4388  0310                     	;# 
  4389  0310                     	;# 
  4390  0311                     	;# 
  4391  0312                     	;# 
  4392  0313                     	;# 
  4393  0314                     	;# 
  4394  0314                     	;# 
  4395  0315                     	;# 
  4396  0316                     	;# 
  4397  0317                     	;# 
  4398  0318                     	;# 
  4399  0318                     	;# 
  4400  0319                     	;# 
  4401  031A                     	;# 
  4402  031B                     	;# 
  4403  038C                     	;# 
  4404  038C                     	;# 
  4405  038D                     	;# 
  4406  038E                     	;# 
  4407  0390                     	;# 
  4408  0390                     	;# 
  4409  0391                     	;# 
  4410  0392                     	;# 
  4411  048C                     	;# 
  4412  048C                     	;# 
  4413  048D                     	;# 
  4414  048E                     	;# 
  4415  048F                     	;# 
  4416  048F                     	;# 
  4417  0490                     	;# 
  4418  0491                     	;# 
  4419  0492                     	;# 
  4420  0492                     	;# 
  4421  0493                     	;# 
  4422  0494                     	;# 
  4423  0495                     	;# 
  4424  0495                     	;# 
  4425  0496                     	;# 
  4426  0497                     	;# 
  4427  0498                     	;# 
  4428  0499                     	;# 
  4429  049A                     	;# 
  4430  049B                     	;# 
  4431  049C                     	;# 
  4432  049D                     	;# 
  4433  058C                     	;# 
  4434  058C                     	;# 
  4435  058D                     	;# 
  4436  058E                     	;# 
  4437  058F                     	;# 
  4438  058F                     	;# 
  4439  0590                     	;# 
  4440  0591                     	;# 
  4441  0592                     	;# 
  4442  0593                     	;# 
  4443  059C                     	;# 
  4444  059C                     	;# 
  4445  059D                     	;# 
  4446  059D                     	;# 
  4447  059E                     	;# 
  4448  059F                     	;# 
  4449  060C                     	;# 
  4450  060C                     	;# 
  4451  060D                     	;# 
  4452  060D                     	;# 
  4453  060E                     	;# 
  4454  060F                     	;# 
  4455  0610                     	;# 
  4456  0611                     	;# 
  4457  0612                     	;# 
  4458  0613                     	;# 
  4459  0614                     	;# 
  4460  0616                     	;# 
  4461  0616                     	;# 
  4462  0617                     	;# 
  4463  0617                     	;# 
  4464  0618                     	;# 
  4465  0619                     	;# 
  4466  061A                     	;# 
  4467  061B                     	;# 
  4468  061C                     	;# 
  4469  061D                     	;# 
  4470  061E                     	;# 
  4471  070C                     	;# 
  4472  070D                     	;# 
  4473  070E                     	;# 
  4474  070F                     	;# 
  4475  0710                     	;# 
  4476  0711                     	;# 
  4477  0712                     	;# 
  4478  0713                     	;# 
  4479  0714                     	;# 
  4480  0716                     	;# 
  4481  0717                     	;# 
  4482  0718                     	;# 
  4483  0719                     	;# 
  4484  071A                     	;# 
  4485  071B                     	;# 
  4486  071C                     	;# 
  4487  071D                     	;# 
  4488  071E                     	;# 
  4489  0796                     	;# 
  4490  0797                     	;# 
  4491  0798                     	;# 
  4492  0799                     	;# 
  4493  079A                     	;# 
  4494  079B                     	;# 
  4495  079C                     	;# 
  4496  079D                     	;# 
  4497  080C                     	;# 
  4498  080D                     	;# 
  4499  080E                     	;# 
  4500  080F                     	;# 
  4501  0810                     	;# 
  4502  0811                     	;# 
  4503  0812                     	;# 
  4504  0813                     	;# 
  4505  0814                     	;# 
  4506  081A                     	;# 
  4507  081A                     	;# 
  4508  081B                     	;# 
  4509  081C                     	;# 
  4510  081C                     	;# 
  4511  081D                     	;# 
  4512  081E                     	;# 
  4513  081F                     	;# 
  4514  088C                     	;# 
  4515  088D                     	;# 
  4516  088E                     	;# 
  4517  088F                     	;# 
  4518  0890                     	;# 
  4519  0891                     	;# 
  4520  0892                     	;# 
  4521  0893                     	;# 
  4522  0895                     	;# 
  4523  0896                     	;# 
  4524  0897                     	;# 
  4525  0898                     	;# 
  4526  0899                     	;# 
  4527  089A                     	;# 
  4528  089B                     	;# 
  4529  090C                     	;# 
  4530  090E                     	;# 
  4531  090F                     	;# 
  4532  091F                     	;# 
  4533  098F                     	;# 
  4534  098F                     	;# 
  4535  0990                     	;# 
  4536  0991                     	;# 
  4537  0992                     	;# 
  4538  0993                     	;# 
  4539  0994                     	;# 
  4540  0995                     	;# 
  4541  0996                     	;# 
  4542  0997                     	;# 
  4543  1E0F                     	;# 
  4544  1E10                     	;# 
  4545  1E11                     	;# 
  4546  1E12                     	;# 
  4547  1E13                     	;# 
  4548  1E14                     	;# 
  4549  1E15                     	;# 
  4550  1E16                     	;# 
  4551  1E17                     	;# 
  4552  1E18                     	;# 
  4553  1E19                     	;# 
  4554  1E1A                     	;# 
  4555  1E1B                     	;# 
  4556  1E1C                     	;# 
  4557  1E1D                     	;# 
  4558  1E1E                     	;# 
  4559  1E1F                     	;# 
  4560  1E20                     	;# 
  4561  1E21                     	;# 
  4562  1E22                     	;# 
  4563  1E23                     	;# 
  4564  1E24                     	;# 
  4565  1E25                     	;# 
  4566  1E26                     	;# 
  4567  1E27                     	;# 
  4568  1E28                     	;# 
  4569  1E29                     	;# 
  4570  1E2A                     	;# 
  4571  1E2B                     	;# 
  4572  1E2C                     	;# 
  4573  1E2D                     	;# 
  4574  1E2E                     	;# 
  4575  1E2F                     	;# 
  4576  1E30                     	;# 
  4577  1E31                     	;# 
  4578  1E32                     	;# 
  4579  1E33                     	;# 
  4580  1E34                     	;# 
  4581  1E35                     	;# 
  4582  1E36                     	;# 
  4583  1E37                     	;# 
  4584  1E8F                     	;# 
  4585  1E90                     	;# 
  4586  1E91                     	;# 
  4587  1E92                     	;# 
  4588  1E93                     	;# 
  4589  1E94                     	;# 
  4590  1E95                     	;# 
  4591  1E96                     	;# 
  4592  1E97                     	;# 
  4593  1E9C                     	;# 
  4594  1E9D                     	;# 
  4595  1E9E                     	;# 
  4596  1EA1                     	;# 
  4597  1EA2                     	;# 
  4598  1EA3                     	;# 
  4599  1EA4                     	;# 
  4600  1EA9                     	;# 
  4601  1EAA                     	;# 
  4602  1EB1                     	;# 
  4603  1EB2                     	;# 
  4604  1EB8                     	;# 
  4605  1EB9                     	;# 
  4606  1EBA                     	;# 
  4607  1EBB                     	;# 
  4608  1EBC                     	;# 
  4609  1EBD                     	;# 
  4610  1EBE                     	;# 
  4611  1EC3                     	;# 
  4612  1EC5                     	;# 
  4613  1EC6                     	;# 
  4614  1EC7                     	;# 
  4615  1EC8                     	;# 
  4616  1EC9                     	;# 
  4617  1ECA                     	;# 
  4618  1ECB                     	;# 
  4619  1ECB                     	;# 
  4620  1ECB                     	;# 
  4621  1ECC                     	;# 
  4622  1ECC                     	;# 
  4623  1ECC                     	;# 
  4624  1F10                     	;# 
  4625  1F11                     	;# 
  4626  1F12                     	;# 
  4627  1F14                     	;# 
  4628  1F15                     	;# 
  4629  1F1C                     	;# 
  4630  1F1D                     	;# 
  4631  1F1E                     	;# 
  4632  1F1F                     	;# 
  4633  1F20                     	;# 
  4634  1F21                     	;# 
  4635  1F22                     	;# 
  4636  1F23                     	;# 
  4637  1F24                     	;# 
  4638  1F25                     	;# 
  4639  1F26                     	;# 
  4640  1F27                     	;# 
  4641  1F38                     	;# 
  4642  1F39                     	;# 
  4643  1F3A                     	;# 
  4644  1F3B                     	;# 
  4645  1F3C                     	;# 
  4646  1F3D                     	;# 
  4647  1F3E                     	;# 
  4648  1F3F                     	;# 
  4649  1F43                     	;# 
  4650  1F44                     	;# 
  4651  1F45                     	;# 
  4652  1F46                     	;# 
  4653  1F47                     	;# 
  4654  1F48                     	;# 
  4655  1F49                     	;# 
  4656  1F4A                     	;# 
  4657  1F4E                     	;# 
  4658  1F4F                     	;# 
  4659  1F50                     	;# 
  4660  1F51                     	;# 
  4661  1F52                     	;# 
  4662  1F53                     	;# 
  4663  1F54                     	;# 
  4664  1F55                     	;# 
  4665  1FE4                     	;# 
  4666  1FE5                     	;# 
  4667  1FE6                     	;# 
  4668  1FE7                     	;# 
  4669  1FE8                     	;# 
  4670  1FE8                     	;# 
  4671  1FE9                     	;# 
  4672  1FEA                     	;# 
  4673  1FEB                     	;# 
  4674  1FED                     	;# 
  4675  1FEE                     	;# 
  4676  1FEF                     	;# 
  4677  0000                     	;# 
  4678  0001                     	;# 
  4679  0002                     	;# 
  4680  0003                     	;# 
  4681  0004                     	;# 
  4682  0005                     	;# 
  4683  0006                     	;# 
  4684  0007                     	;# 
  4685  0008                     	;# 
  4686  0009                     	;# 
  4687  000A                     	;# 
  4688  000B                     	;# 
  4689  000C                     	;# 
  4690  000D                     	;# 
  4691  000E                     	;# 
  4692  0012                     	;# 
  4693  0013                     	;# 
  4694  0014                     	;# 
  4695  0018                     	;# 
  4696  0019                     	;# 
  4697  001A                     	;# 
  4698  008C                     	;# 
  4699  008C                     	;# 
  4700  008D                     	;# 
  4701  008E                     	;# 
  4702  008E                     	;# 
  4703  008F                     	;# 
  4704  0090                     	;# 
  4705  0090                     	;# 
  4706  0091                     	;# 
  4707  0092                     	;# 
  4708  0092                     	;# 
  4709  0093                     	;# 
  4710  0094                     	;# 
  4711  0094                     	;# 
  4712  0095                     	;# 
  4713  0096                     	;# 
  4714  0096                     	;# 
  4715  0097                     	;# 
  4716  0098                     	;# 
  4717  0099                     	;# 
  4718  009A                     	;# 
  4719  009B                     	;# 
  4720  009B                     	;# 
  4721  009C                     	;# 
  4722  009D                     	;# 
  4723  009D                     	;# 
  4724  009E                     	;# 
  4725  009F                     	;# 
  4726  010C                     	;# 
  4727  010C                     	;# 
  4728  010D                     	;# 
  4729  010E                     	;# 
  4730  010F                     	;# 
  4731  010F                     	;# 
  4732  0110                     	;# 
  4733  0111                     	;# 
  4734  0112                     	;# 
  4735  0113                     	;# 
  4736  0114                     	;# 
  4737  0115                     	;# 
  4738  0116                     	;# 
  4739  0117                     	;# 
  4740  0118                     	;# 
  4741  0119                     	;# 
  4742  0119                     	;# 
  4743  0119                     	;# 
  4744  011A                     	;# 
  4745  011A                     	;# 
  4746  011A                     	;# 
  4747  011B                     	;# 
  4748  011B                     	;# 
  4749  011B                     	;# 
  4750  011B                     	;# 
  4751  011B                     	;# 
  4752  011C                     	;# 
  4753  011C                     	;# 
  4754  011C                     	;# 
  4755  011D                     	;# 
  4756  011D                     	;# 
  4757  011D                     	;# 
  4758  011E                     	;# 
  4759  011E                     	;# 
  4760  011E                     	;# 
  4761  011F                     	;# 
  4762  011F                     	;# 
  4763  011F                     	;# 
  4764  011F                     	;# 
  4765  011F                     	;# 
  4766  018C                     	;# 
  4767  018D                     	;# 
  4768  018E                     	;# 
  4769  018F                     	;# 
  4770  0190                     	;# 
  4771  0191                     	;# 
  4772  0192                     	;# 
  4773  0196                     	;# 
  4774  0197                     	;# 
  4775  0198                     	;# 
  4776  0199                     	;# 
  4777  019A                     	;# 
  4778  019B                     	;# 
  4779  019C                     	;# 
  4780  020C                     	;# 
  4781  020D                     	;# 
  4782  020E                     	;# 
  4783  020E                     	;# 
  4784  020F                     	;# 
  4785  020F                     	;# 
  4786  0210                     	;# 
  4787  0210                     	;# 
  4788  0211                     	;# 
  4789  0211                     	;# 
  4790  0212                     	;# 
  4791  0213                     	;# 
  4792  0214                     	;# 
  4793  0214                     	;# 
  4794  0215                     	;# 
  4795  0215                     	;# 
  4796  0216                     	;# 
  4797  0216                     	;# 
  4798  0217                     	;# 
  4799  0217                     	;# 
  4800  0218                     	;# 
  4801  0219                     	;# 
  4802  021A                     	;# 
  4803  021A                     	;# 
  4804  021B                     	;# 
  4805  021B                     	;# 
  4806  021C                     	;# 
  4807  021C                     	;# 
  4808  021D                     	;# 
  4809  021D                     	;# 
  4810  021E                     	;# 
  4811  021F                     	;# 
  4812  028C                     	;# 
  4813  028C                     	;# 
  4814  028D                     	;# 
  4815  028D                     	;# 
  4816  028E                     	;# 
  4817  028F                     	;# 
  4818  0290                     	;# 
  4819  0291                     	;# 
  4820  0292                     	;# 
  4821  0292                     	;# 
  4822  0293                     	;# 
  4823  0293                     	;# 
  4824  0294                     	;# 
  4825  0295                     	;# 
  4826  0296                     	;# 
  4827  0297                     	;# 
  4828  0298                     	;# 
  4829  0298                     	;# 
  4830  0299                     	;# 
  4831  0299                     	;# 
  4832  029A                     	;# 
  4833  029B                     	;# 
  4834  029C                     	;# 
  4835  029D                     	;# 
  4836  029F                     	;# 
  4837  030C                     	;# 
  4838  030C                     	;# 
  4839  030D                     	;# 
  4840  030E                     	;# 
  4841  030F                     	;# 
  4842  0310                     	;# 
  4843  0310                     	;# 
  4844  0311                     	;# 
  4845  0312                     	;# 
  4846  0313                     	;# 
  4847  0314                     	;# 
  4848  0314                     	;# 
  4849  0315                     	;# 
  4850  0316                     	;# 
  4851  0317                     	;# 
  4852  0318                     	;# 
  4853  0318                     	;# 
  4854  0319                     	;# 
  4855  031A                     	;# 
  4856  031B                     	;# 
  4857  038C                     	;# 
  4858  038C                     	;# 
  4859  038D                     	;# 
  4860  038E                     	;# 
  4861  0390                     	;# 
  4862  0390                     	;# 
  4863  0391                     	;# 
  4864  0392                     	;# 
  4865  048C                     	;# 
  4866  048C                     	;# 
  4867  048D                     	;# 
  4868  048E                     	;# 
  4869  048F                     	;# 
  4870  048F                     	;# 
  4871  0490                     	;# 
  4872  0491                     	;# 
  4873  0492                     	;# 
  4874  0492                     	;# 
  4875  0493                     	;# 
  4876  0494                     	;# 
  4877  0495                     	;# 
  4878  0495                     	;# 
  4879  0496                     	;# 
  4880  0497                     	;# 
  4881  0498                     	;# 
  4882  0499                     	;# 
  4883  049A                     	;# 
  4884  049B                     	;# 
  4885  049C                     	;# 
  4886  049D                     	;# 
  4887  058C                     	;# 
  4888  058C                     	;# 
  4889  058D                     	;# 
  4890  058E                     	;# 
  4891  058F                     	;# 
  4892  058F                     	;# 
  4893  0590                     	;# 
  4894  0591                     	;# 
  4895  0592                     	;# 
  4896  0593                     	;# 
  4897  059C                     	;# 
  4898  059C                     	;# 
  4899  059D                     	;# 
  4900  059D                     	;# 
  4901  059E                     	;# 
  4902  059F                     	;# 
  4903  060C                     	;# 
  4904  060C                     	;# 
  4905  060D                     	;# 
  4906  060D                     	;# 
  4907  060E                     	;# 
  4908  060F                     	;# 
  4909  0610                     	;# 
  4910  0611                     	;# 
  4911  0612                     	;# 
  4912  0613                     	;# 
  4913  0614                     	;# 
  4914  0616                     	;# 
  4915  0616                     	;# 
  4916  0617                     	;# 
  4917  0617                     	;# 
  4918  0618                     	;# 
  4919  0619                     	;# 
  4920  061A                     	;# 
  4921  061B                     	;# 
  4922  061C                     	;# 
  4923  061D                     	;# 
  4924  061E                     	;# 
  4925  070C                     	;# 
  4926  070D                     	;# 
  4927  070E                     	;# 
  4928  070F                     	;# 
  4929  0710                     	;# 
  4930  0711                     	;# 
  4931  0712                     	;# 
  4932  0713                     	;# 
  4933  0714                     	;# 
  4934  0716                     	;# 
  4935  0717                     	;# 
  4936  0718                     	;# 
  4937  0719                     	;# 
  4938  071A                     	;# 
  4939  071B                     	;# 
  4940  071C                     	;# 
  4941  071D                     	;# 
  4942  071E                     	;# 
  4943  0796                     	;# 
  4944  0797                     	;# 
  4945  0798                     	;# 
  4946  0799                     	;# 
  4947  079A                     	;# 
  4948  079B                     	;# 
  4949  079C                     	;# 
  4950  079D                     	;# 
  4951  080C                     	;# 
  4952  080D                     	;# 
  4953  080E                     	;# 
  4954  080F                     	;# 
  4955  0810                     	;# 
  4956  0811                     	;# 
  4957  0812                     	;# 
  4958  0813                     	;# 
  4959  0814                     	;# 
  4960  081A                     	;# 
  4961  081A                     	;# 
  4962  081B                     	;# 
  4963  081C                     	;# 
  4964  081C                     	;# 
  4965  081D                     	;# 
  4966  081E                     	;# 
  4967  081F                     	;# 
  4968  088C                     	;# 
  4969  088D                     	;# 
  4970  088E                     	;# 
  4971  088F                     	;# 
  4972  0890                     	;# 
  4973  0891                     	;# 
  4974  0892                     	;# 
  4975  0893                     	;# 
  4976  0895                     	;# 
  4977  0896                     	;# 
  4978  0897                     	;# 
  4979  0898                     	;# 
  4980  0899                     	;# 
  4981  089A                     	;# 
  4982  089B                     	;# 
  4983  090C                     	;# 
  4984  090E                     	;# 
  4985  090F                     	;# 
  4986  091F                     	;# 
  4987  098F                     	;# 
  4988  098F                     	;# 
  4989  0990                     	;# 
  4990  0991                     	;# 
  4991  0992                     	;# 
  4992  0993                     	;# 
  4993  0994                     	;# 
  4994  0995                     	;# 
  4995  0996                     	;# 
  4996  0997                     	;# 
  4997  1E0F                     	;# 
  4998  1E10                     	;# 
  4999  1E11                     	;# 
  5000  1E12                     	;# 
  5001  1E13                     	;# 
  5002  1E14                     	;# 
  5003  1E15                     	;# 
  5004  1E16                     	;# 
  5005  1E17                     	;# 
  5006  1E18                     	;# 
  5007  1E19                     	;# 
  5008  1E1A                     	;# 
  5009  1E1B                     	;# 
  5010  1E1C                     	;# 
  5011  1E1D                     	;# 
  5012  1E1E                     	;# 
  5013  1E1F                     	;# 
  5014  1E20                     	;# 
  5015  1E21                     	;# 
  5016  1E22                     	;# 
  5017  1E23                     	;# 
  5018  1E24                     	;# 
  5019  1E25                     	;# 
  5020  1E26                     	;# 
  5021  1E27                     	;# 
  5022  1E28                     	;# 
  5023  1E29                     	;# 
  5024  1E2A                     	;# 
  5025  1E2B                     	;# 
  5026  1E2C                     	;# 
  5027  1E2D                     	;# 
  5028  1E2E                     	;# 
  5029  1E2F                     	;# 
  5030  1E30                     	;# 
  5031  1E31                     	;# 
  5032  1E32                     	;# 
  5033  1E33                     	;# 
  5034  1E34                     	;# 
  5035  1E35                     	;# 
  5036  1E36                     	;# 
  5037  1E37                     	;# 
  5038  1E8F                     	;# 
  5039  1E90                     	;# 
  5040  1E91                     	;# 
  5041  1E92                     	;# 
  5042  1E93                     	;# 
  5043  1E94                     	;# 
  5044  1E95                     	;# 
  5045  1E96                     	;# 
  5046  1E97                     	;# 
  5047  1E9C                     	;# 
  5048  1E9D                     	;# 
  5049  1E9E                     	;# 
  5050  1EA1                     	;# 
  5051  1EA2                     	;# 
  5052  1EA3                     	;# 
  5053  1EA4                     	;# 
  5054  1EA9                     	;# 
  5055  1EAA                     	;# 
  5056  1EB1                     	;# 
  5057  1EB2                     	;# 
  5058  1EB8                     	;# 
  5059  1EB9                     	;# 
  5060  1EBA                     	;# 
  5061  1EBB                     	;# 
  5062  1EBC                     	;# 
  5063  1EBD                     	;# 
  5064  1EBE                     	;# 
  5065  1EC3                     	;# 
  5066  1EC5                     	;# 
  5067  1EC6                     	;# 
  5068  1EC7                     	;# 
  5069  1EC8                     	;# 
  5070  1EC9                     	;# 
  5071  1ECA                     	;# 
  5072  1ECB                     	;# 
  5073  1ECB                     	;# 
  5074  1ECB                     	;# 
  5075  1ECC                     	;# 
  5076  1ECC                     	;# 
  5077  1ECC                     	;# 
  5078  1F10                     	;# 
  5079  1F11                     	;# 
  5080  1F12                     	;# 
  5081  1F14                     	;# 
  5082  1F15                     	;# 
  5083  1F1C                     	;# 
  5084  1F1D                     	;# 
  5085  1F1E                     	;# 
  5086  1F1F                     	;# 
  5087  1F20                     	;# 
  5088  1F21                     	;# 
  5089  1F22                     	;# 
  5090  1F23                     	;# 
  5091  1F24                     	;# 
  5092  1F25                     	;# 
  5093  1F26                     	;# 
  5094  1F27                     	;# 
  5095  1F38                     	;# 
  5096  1F39                     	;# 
  5097  1F3A                     	;# 
  5098  1F3B                     	;# 
  5099  1F3C                     	;# 
  5100  1F3D                     	;# 
  5101  1F3E                     	;# 
  5102  1F3F                     	;# 
  5103  1F43                     	;# 
  5104  1F44                     	;# 
  5105  1F45                     	;# 
  5106  1F46                     	;# 
  5107  1F47                     	;# 
  5108  1F48                     	;# 
  5109  1F49                     	;# 
  5110  1F4A                     	;# 
  5111  1F4E                     	;# 
  5112  1F4F                     	;# 
  5113  1F50                     	;# 
  5114  1F51                     	;# 
  5115  1F52                     	;# 
  5116  1F53                     	;# 
  5117  1F54                     	;# 
  5118  1F55                     	;# 
  5119  1FE4                     	;# 
  5120  1FE5                     	;# 
  5121  1FE6                     	;# 
  5122  1FE7                     	;# 
  5123  1FE8                     	;# 
  5124  1FE8                     	;# 
  5125  1FE9                     	;# 
  5126  1FEA                     	;# 
  5127  1FEB                     	;# 
  5128  1FED                     	;# 
  5129  1FEE                     	;# 
  5130  1FEF                     	;# 
  5131  0000                     	;# 
  5132  0001                     	;# 
  5133  0002                     	;# 
  5134  0003                     	;# 
  5135  0004                     	;# 
  5136  0005                     	;# 
  5137  0006                     	;# 
  5138  0007                     	;# 
  5139  0008                     	;# 
  5140  0009                     	;# 
  5141  000A                     	;# 
  5142  000B                     	;# 
  5143  000C                     	;# 
  5144  000D                     	;# 
  5145  000E                     	;# 
  5146  0012                     	;# 
  5147  0013                     	;# 
  5148  0014                     	;# 
  5149  0018                     	;# 
  5150  0019                     	;# 
  5151  001A                     	;# 
  5152  008C                     	;# 
  5153  008C                     	;# 
  5154  008D                     	;# 
  5155  008E                     	;# 
  5156  008E                     	;# 
  5157  008F                     	;# 
  5158  0090                     	;# 
  5159  0090                     	;# 
  5160  0091                     	;# 
  5161  0092                     	;# 
  5162  0092                     	;# 
  5163  0093                     	;# 
  5164  0094                     	;# 
  5165  0094                     	;# 
  5166  0095                     	;# 
  5167  0096                     	;# 
  5168  0096                     	;# 
  5169  0097                     	;# 
  5170  0098                     	;# 
  5171  0099                     	;# 
  5172  009A                     	;# 
  5173  009B                     	;# 
  5174  009B                     	;# 
  5175  009C                     	;# 
  5176  009D                     	;# 
  5177  009D                     	;# 
  5178  009E                     	;# 
  5179  009F                     	;# 
  5180  010C                     	;# 
  5181  010C                     	;# 
  5182  010D                     	;# 
  5183  010E                     	;# 
  5184  010F                     	;# 
  5185  010F                     	;# 
  5186  0110                     	;# 
  5187  0111                     	;# 
  5188  0112                     	;# 
  5189  0113                     	;# 
  5190  0114                     	;# 
  5191  0115                     	;# 
  5192  0116                     	;# 
  5193  0117                     	;# 
  5194  0118                     	;# 
  5195  0119                     	;# 
  5196  0119                     	;# 
  5197  0119                     	;# 
  5198  011A                     	;# 
  5199  011A                     	;# 
  5200  011A                     	;# 
  5201  011B                     	;# 
  5202  011B                     	;# 
  5203  011B                     	;# 
  5204  011B                     	;# 
  5205  011B                     	;# 
  5206  011C                     	;# 
  5207  011C                     	;# 
  5208  011C                     	;# 
  5209  011D                     	;# 
  5210  011D                     	;# 
  5211  011D                     	;# 
  5212  011E                     	;# 
  5213  011E                     	;# 
  5214  011E                     	;# 
  5215  011F                     	;# 
  5216  011F                     	;# 
  5217  011F                     	;# 
  5218  011F                     	;# 
  5219  011F                     	;# 
  5220  018C                     	;# 
  5221  018D                     	;# 
  5222  018E                     	;# 
  5223  018F                     	;# 
  5224  0190                     	;# 
  5225  0191                     	;# 
  5226  0192                     	;# 
  5227  0196                     	;# 
  5228  0197                     	;# 
  5229  0198                     	;# 
  5230  0199                     	;# 
  5231  019A                     	;# 
  5232  019B                     	;# 
  5233  019C                     	;# 
  5234  020C                     	;# 
  5235  020D                     	;# 
  5236  020E                     	;# 
  5237  020E                     	;# 
  5238  020F                     	;# 
  5239  020F                     	;# 
  5240  0210                     	;# 
  5241  0210                     	;# 
  5242  0211                     	;# 
  5243  0211                     	;# 
  5244  0212                     	;# 
  5245  0213                     	;# 
  5246  0214                     	;# 
  5247  0214                     	;# 
  5248  0215                     	;# 
  5249  0215                     	;# 
  5250  0216                     	;# 
  5251  0216                     	;# 
  5252  0217                     	;# 
  5253  0217                     	;# 
  5254  0218                     	;# 
  5255  0219                     	;# 
  5256  021A                     	;# 
  5257  021A                     	;# 
  5258  021B                     	;# 
  5259  021B                     	;# 
  5260  021C                     	;# 
  5261  021C                     	;# 
  5262  021D                     	;# 
  5263  021D                     	;# 
  5264  021E                     	;# 
  5265  021F                     	;# 
  5266  028C                     	;# 
  5267  028C                     	;# 
  5268  028D                     	;# 
  5269  028D                     	;# 
  5270  028E                     	;# 
  5271  028F                     	;# 
  5272  0290                     	;# 
  5273  0291                     	;# 
  5274  0292                     	;# 
  5275  0292                     	;# 
  5276  0293                     	;# 
  5277  0293                     	;# 
  5278  0294                     	;# 
  5279  0295                     	;# 
  5280  0296                     	;# 
  5281  0297                     	;# 
  5282  0298                     	;# 
  5283  0298                     	;# 
  5284  0299                     	;# 
  5285  0299                     	;# 
  5286  029A                     	;# 
  5287  029B                     	;# 
  5288  029C                     	;# 
  5289  029D                     	;# 
  5290  029F                     	;# 
  5291  030C                     	;# 
  5292  030C                     	;# 
  5293  030D                     	;# 
  5294  030E                     	;# 
  5295  030F                     	;# 
  5296  0310                     	;# 
  5297  0310                     	;# 
  5298  0311                     	;# 
  5299  0312                     	;# 
  5300  0313                     	;# 
  5301  0314                     	;# 
  5302  0314                     	;# 
  5303  0315                     	;# 
  5304  0316                     	;# 
  5305  0317                     	;# 
  5306  0318                     	;# 
  5307  0318                     	;# 
  5308  0319                     	;# 
  5309  031A                     	;# 
  5310  031B                     	;# 
  5311  038C                     	;# 
  5312  038C                     	;# 
  5313  038D                     	;# 
  5314  038E                     	;# 
  5315  0390                     	;# 
  5316  0390                     	;# 
  5317  0391                     	;# 
  5318  0392                     	;# 
  5319  048C                     	;# 
  5320  048C                     	;# 
  5321  048D                     	;# 
  5322  048E                     	;# 
  5323  048F                     	;# 
  5324  048F                     	;# 
  5325  0490                     	;# 
  5326  0491                     	;# 
  5327  0492                     	;# 
  5328  0492                     	;# 
  5329  0493                     	;# 
  5330  0494                     	;# 
  5331  0495                     	;# 
  5332  0495                     	;# 
  5333  0496                     	;# 
  5334  0497                     	;# 
  5335  0498                     	;# 
  5336  0499                     	;# 
  5337  049A                     	;# 
  5338  049B                     	;# 
  5339  049C                     	;# 
  5340  049D                     	;# 
  5341  058C                     	;# 
  5342  058C                     	;# 
  5343  058D                     	;# 
  5344  058E                     	;# 
  5345  058F                     	;# 
  5346  058F                     	;# 
  5347  0590                     	;# 
  5348  0591                     	;# 
  5349  0592                     	;# 
  5350  0593                     	;# 
  5351  059C                     	;# 
  5352  059C                     	;# 
  5353  059D                     	;# 
  5354  059D                     	;# 
  5355  059E                     	;# 
  5356  059F                     	;# 
  5357  060C                     	;# 
  5358  060C                     	;# 
  5359  060D                     	;# 
  5360  060D                     	;# 
  5361  060E                     	;# 
  5362  060F                     	;# 
  5363  0610                     	;# 
  5364  0611                     	;# 
  5365  0612                     	;# 
  5366  0613                     	;# 
  5367  0614                     	;# 
  5368  0616                     	;# 
  5369  0616                     	;# 
  5370  0617                     	;# 
  5371  0617                     	;# 
  5372  0618                     	;# 
  5373  0619                     	;# 
  5374  061A                     	;# 
  5375  061B                     	;# 
  5376  061C                     	;# 
  5377  061D                     	;# 
  5378  061E                     	;# 
  5379  070C                     	;# 
  5380  070D                     	;# 
  5381  070E                     	;# 
  5382  070F                     	;# 
  5383  0710                     	;# 
  5384  0711                     	;# 
  5385  0712                     	;# 
  5386  0713                     	;# 
  5387  0714                     	;# 
  5388  0716                     	;# 
  5389  0717                     	;# 
  5390  0718                     	;# 
  5391  0719                     	;# 
  5392  071A                     	;# 
  5393  071B                     	;# 
  5394  071C                     	;# 
  5395  071D                     	;# 
  5396  071E                     	;# 
  5397  0796                     	;# 
  5398  0797                     	;# 
  5399  0798                     	;# 
  5400  0799                     	;# 
  5401  079A                     	;# 
  5402  079B                     	;# 
  5403  079C                     	;# 
  5404  079D                     	;# 
  5405  080C                     	;# 
  5406  080D                     	;# 
  5407  080E                     	;# 
  5408  080F                     	;# 
  5409  0810                     	;# 
  5410  0811                     	;# 
  5411  0812                     	;# 
  5412  0813                     	;# 
  5413  0814                     	;# 
  5414  081A                     	;# 
  5415  081A                     	;# 
  5416  081B                     	;# 
  5417  081C                     	;# 
  5418  081C                     	;# 
  5419  081D                     	;# 
  5420  081E                     	;# 
  5421  081F                     	;# 
  5422  088C                     	;# 
  5423  088D                     	;# 
  5424  088E                     	;# 
  5425  088F                     	;# 
  5426  0890                     	;# 
  5427  0891                     	;# 
  5428  0892                     	;# 
  5429  0893                     	;# 
  5430  0895                     	;# 
  5431  0896                     	;# 
  5432  0897                     	;# 
  5433  0898                     	;# 
  5434  0899                     	;# 
  5435  089A                     	;# 
  5436  089B                     	;# 
  5437  090C                     	;# 
  5438  090E                     	;# 
  5439  090F                     	;# 
  5440  091F                     	;# 
  5441  098F                     	;# 
  5442  098F                     	;# 
  5443  0990                     	;# 
  5444  0991                     	;# 
  5445  0992                     	;# 
  5446  0993                     	;# 
  5447  0994                     	;# 
  5448  0995                     	;# 
  5449  0996                     	;# 
  5450  0997                     	;# 
  5451  1E0F                     	;# 
  5452  1E10                     	;# 
  5453  1E11                     	;# 
  5454  1E12                     	;# 
  5455  1E13                     	;# 
  5456  1E14                     	;# 
  5457  1E15                     	;# 
  5458  1E16                     	;# 
  5459  1E17                     	;# 
  5460  1E18                     	;# 
  5461  1E19                     	;# 
  5462  1E1A                     	;# 
  5463  1E1B                     	;# 
  5464  1E1C                     	;# 
  5465  1E1D                     	;# 
  5466  1E1E                     	;# 
  5467  1E1F                     	;# 
  5468  1E20                     	;# 
  5469  1E21                     	;# 
  5470  1E22                     	;# 
  5471  1E23                     	;# 
  5472  1E24                     	;# 
  5473  1E25                     	;# 
  5474  1E26                     	;# 
  5475  1E27                     	;# 
  5476  1E28                     	;# 
  5477  1E29                     	;# 
  5478  1E2A                     	;# 
  5479  1E2B                     	;# 
  5480  1E2C                     	;# 
  5481  1E2D                     	;# 
  5482  1E2E                     	;# 
  5483  1E2F                     	;# 
  5484  1E30                     	;# 
  5485  1E31                     	;# 
  5486  1E32                     	;# 
  5487  1E33                     	;# 
  5488  1E34                     	;# 
  5489  1E35                     	;# 
  5490  1E36                     	;# 
  5491  1E37                     	;# 
  5492  1E8F                     	;# 
  5493  1E90                     	;# 
  5494  1E91                     	;# 
  5495  1E92                     	;# 
  5496  1E93                     	;# 
  5497  1E94                     	;# 
  5498  1E95                     	;# 
  5499  1E96                     	;# 
  5500  1E97                     	;# 
  5501  1E9C                     	;# 
  5502  1E9D                     	;# 
  5503  1E9E                     	;# 
  5504  1EA1                     	;# 
  5505  1EA2                     	;# 
  5506  1EA3                     	;# 
  5507  1EA4                     	;# 
  5508  1EA9                     	;# 
  5509  1EAA                     	;# 
  5510  1EB1                     	;# 
  5511  1EB2                     	;# 
  5512  1EB8                     	;# 
  5513  1EB9                     	;# 
  5514  1EBA                     	;# 
  5515  1EBB                     	;# 
  5516  1EBC                     	;# 
  5517  1EBD                     	;# 
  5518  1EBE                     	;# 
  5519  1EC3                     	;# 
  5520  1EC5                     	;# 
  5521  1EC6                     	;# 
  5522  1EC7                     	;# 
  5523  1EC8                     	;# 
  5524  1EC9                     	;# 
  5525  1ECA                     	;# 
  5526  1ECB                     	;# 
  5527  1ECB                     	;# 
  5528  1ECB                     	;# 
  5529  1ECC                     	;# 
  5530  1ECC                     	;# 
  5531  1ECC                     	;# 
  5532  1F10                     	;# 
  5533  1F11                     	;# 
  5534  1F12                     	;# 
  5535  1F14                     	;# 
  5536  1F15                     	;# 
  5537  1F1C                     	;# 
  5538  1F1D                     	;# 
  5539  1F1E                     	;# 
  5540  1F1F                     	;# 
  5541  1F20                     	;# 
  5542  1F21                     	;# 
  5543  1F22                     	;# 
  5544  1F23                     	;# 
  5545  1F24                     	;# 
  5546  1F25                     	;# 
  5547  1F26                     	;# 
  5548  1F27                     	;# 
  5549  1F38                     	;# 
  5550  1F39                     	;# 
  5551  1F3A                     	;# 
  5552  1F3B                     	;# 
  5553  1F3C                     	;# 
  5554  1F3D                     	;# 
  5555  1F3E                     	;# 
  5556  1F3F                     	;# 
  5557  1F43                     	;# 
  5558  1F44                     	;# 
  5559  1F45                     	;# 
  5560  1F46                     	;# 
  5561  1F47                     	;# 
  5562  1F48                     	;# 
  5563  1F49                     	;# 
  5564  1F4A                     	;# 
  5565  1F4E                     	;# 
  5566  1F4F                     	;# 
  5567  1F50                     	;# 
  5568  1F51                     	;# 
  5569  1F52                     	;# 
  5570  1F53                     	;# 
  5571  1F54                     	;# 
  5572  1F55                     	;# 
  5573  1FE4                     	;# 
  5574  1FE5                     	;# 
  5575  1FE6                     	;# 
  5576  1FE7                     	;# 
  5577  1FE8                     	;# 
  5578  1FE8                     	;# 
  5579  1FE9                     	;# 
  5580  1FEA                     	;# 
  5581  1FEB                     	;# 
  5582  1FED                     	;# 
  5583  1FEE                     	;# 
  5584  1FEF                     	;# 
  5585  0000                     	;# 
  5586  0001                     	;# 
  5587  0002                     	;# 
  5588  0003                     	;# 
  5589  0004                     	;# 
  5590  0005                     	;# 
  5591  0006                     	;# 
  5592  0007                     	;# 
  5593  0008                     	;# 
  5594  0009                     	;# 
  5595  000A                     	;# 
  5596  000B                     	;# 
  5597  000C                     	;# 
  5598  000D                     	;# 
  5599  000E                     	;# 
  5600  0012                     	;# 
  5601  0013                     	;# 
  5602  0014                     	;# 
  5603  0018                     	;# 
  5604  0019                     	;# 
  5605  001A                     	;# 
  5606  008C                     	;# 
  5607  008C                     	;# 
  5608  008D                     	;# 
  5609  008E                     	;# 
  5610  008E                     	;# 
  5611  008F                     	;# 
  5612  0090                     	;# 
  5613  0090                     	;# 
  5614  0091                     	;# 
  5615  0092                     	;# 
  5616  0092                     	;# 
  5617  0093                     	;# 
  5618  0094                     	;# 
  5619  0094                     	;# 
  5620  0095                     	;# 
  5621  0096                     	;# 
  5622  0096                     	;# 
  5623  0097                     	;# 
  5624  0098                     	;# 
  5625  0099                     	;# 
  5626  009A                     	;# 
  5627  009B                     	;# 
  5628  009B                     	;# 
  5629  009C                     	;# 
  5630  009D                     	;# 
  5631  009D                     	;# 
  5632  009E                     	;# 
  5633  009F                     	;# 
  5634  010C                     	;# 
  5635  010C                     	;# 
  5636  010D                     	;# 
  5637  010E                     	;# 
  5638  010F                     	;# 
  5639  010F                     	;# 
  5640  0110                     	;# 
  5641  0111                     	;# 
  5642  0112                     	;# 
  5643  0113                     	;# 
  5644  0114                     	;# 
  5645  0115                     	;# 
  5646  0116                     	;# 
  5647  0117                     	;# 
  5648  0118                     	;# 
  5649  0119                     	;# 
  5650  0119                     	;# 
  5651  0119                     	;# 
  5652  011A                     	;# 
  5653  011A                     	;# 
  5654  011A                     	;# 
  5655  011B                     	;# 
  5656  011B                     	;# 
  5657  011B                     	;# 
  5658  011B                     	;# 
  5659  011B                     	;# 
  5660  011C                     	;# 
  5661  011C                     	;# 
  5662  011C                     	;# 
  5663  011D                     	;# 
  5664  011D                     	;# 
  5665  011D                     	;# 
  5666  011E                     	;# 
  5667  011E                     	;# 
  5668  011E                     	;# 
  5669  011F                     	;# 
  5670  011F                     	;# 
  5671  011F                     	;# 
  5672  011F                     	;# 
  5673  011F                     	;# 
  5674  018C                     	;# 
  5675  018D                     	;# 
  5676  018E                     	;# 
  5677  018F                     	;# 
  5678  0190                     	;# 
  5679  0191                     	;# 
  5680  0192                     	;# 
  5681  0196                     	;# 
  5682  0197                     	;# 
  5683  0198                     	;# 
  5684  0199                     	;# 
  5685  019A                     	;# 
  5686  019B                     	;# 
  5687  019C                     	;# 
  5688  020C                     	;# 
  5689  020D                     	;# 
  5690  020E                     	;# 
  5691  020E                     	;# 
  5692  020F                     	;# 
  5693  020F                     	;# 
  5694  0210                     	;# 
  5695  0210                     	;# 
  5696  0211                     	;# 
  5697  0211                     	;# 
  5698  0212                     	;# 
  5699  0213                     	;# 
  5700  0214                     	;# 
  5701  0214                     	;# 
  5702  0215                     	;# 
  5703  0215                     	;# 
  5704  0216                     	;# 
  5705  0216                     	;# 
  5706  0217                     	;# 
  5707  0217                     	;# 
  5708  0218                     	;# 
  5709  0219                     	;# 
  5710  021A                     	;# 
  5711  021A                     	;# 
  5712  021B                     	;# 
  5713  021B                     	;# 
  5714  021C                     	;# 
  5715  021C                     	;# 
  5716  021D                     	;# 
  5717  021D                     	;# 
  5718  021E                     	;# 
  5719  021F                     	;# 
  5720  028C                     	;# 
  5721  028C                     	;# 
  5722  028D                     	;# 
  5723  028D                     	;# 
  5724  028E                     	;# 
  5725  028F                     	;# 
  5726  0290                     	;# 
  5727  0291                     	;# 
  5728  0292                     	;# 
  5729  0292                     	;# 
  5730  0293                     	;# 
  5731  0293                     	;# 
  5732  0294                     	;# 
  5733  0295                     	;# 
  5734  0296                     	;# 
  5735  0297                     	;# 
  5736  0298                     	;# 
  5737  0298                     	;# 
  5738  0299                     	;# 
  5739  0299                     	;# 
  5740  029A                     	;# 
  5741  029B                     	;# 
  5742  029C                     	;# 
  5743  029D                     	;# 
  5744  029F                     	;# 
  5745  030C                     	;# 
  5746  030C                     	;# 
  5747  030D                     	;# 
  5748  030E                     	;# 
  5749  030F                     	;# 
  5750  0310                     	;# 
  5751  0310                     	;# 
  5752  0311                     	;# 
  5753  0312                     	;# 
  5754  0313                     	;# 
  5755  0314                     	;# 
  5756  0314                     	;# 
  5757  0315                     	;# 
  5758  0316                     	;# 
  5759  0317                     	;# 
  5760  0318                     	;# 
  5761  0318                     	;# 
  5762  0319                     	;# 
  5763  031A                     	;# 
  5764  031B                     	;# 
  5765  038C                     	;# 
  5766  038C                     	;# 
  5767  038D                     	;# 
  5768  038E                     	;# 
  5769  0390                     	;# 
  5770  0390                     	;# 
  5771  0391                     	;# 
  5772  0392                     	;# 
  5773  048C                     	;# 
  5774  048C                     	;# 
  5775  048D                     	;# 
  5776  048E                     	;# 
  5777  048F                     	;# 
  5778  048F                     	;# 
  5779  0490                     	;# 
  5780  0491                     	;# 
  5781  0492                     	;# 
  5782  0492                     	;# 
  5783  0493                     	;# 
  5784  0494                     	;# 
  5785  0495                     	;# 
  5786  0495                     	;# 
  5787  0496                     	;# 
  5788  0497                     	;# 
  5789  0498                     	;# 
  5790  0499                     	;# 
  5791  049A                     	;# 
  5792  049B                     	;# 
  5793  049C                     	;# 
  5794  049D                     	;# 
  5795  058C                     	;# 
  5796  058C                     	;# 
  5797  058D                     	;# 
  5798  058E                     	;# 
  5799  058F                     	;# 
  5800  058F                     	;# 
  5801  0590                     	;# 
  5802  0591                     	;# 
  5803  0592                     	;# 
  5804  0593                     	;# 
  5805  059C                     	;# 
  5806  059C                     	;# 
  5807  059D                     	;# 
  5808  059D                     	;# 
  5809  059E                     	;# 
  5810  059F                     	;# 
  5811  060C                     	;# 
  5812  060C                     	;# 
  5813  060D                     	;# 
  5814  060D                     	;# 
  5815  060E                     	;# 
  5816  060F                     	;# 
  5817  0610                     	;# 
  5818  0611                     	;# 
  5819  0612                     	;# 
  5820  0613                     	;# 
  5821  0614                     	;# 
  5822  0616                     	;# 
  5823  0616                     	;# 
  5824  0617                     	;# 
  5825  0617                     	;# 
  5826  0618                     	;# 
  5827  0619                     	;# 
  5828  061A                     	;# 
  5829  061B                     	;# 
  5830  061C                     	;# 
  5831  061D                     	;# 
  5832  061E                     	;# 
  5833  070C                     	;# 
  5834  070D                     	;# 
  5835  070E                     	;# 
  5836  070F                     	;# 
  5837  0710                     	;# 
  5838  0711                     	;# 
  5839  0712                     	;# 
  5840  0713                     	;# 
  5841  0714                     	;# 
  5842  0716                     	;# 
  5843  0717                     	;# 
  5844  0718                     	;# 
  5845  0719                     	;# 
  5846  071A                     	;# 
  5847  071B                     	;# 
  5848  071C                     	;# 
  5849  071D                     	;# 
  5850  071E                     	;# 
  5851  0796                     	;# 
  5852  0797                     	;# 
  5853  0798                     	;# 
  5854  0799                     	;# 
  5855  079A                     	;# 
  5856  079B                     	;# 
  5857  079C                     	;# 
  5858  079D                     	;# 
  5859  080C                     	;# 
  5860  080D                     	;# 
  5861  080E                     	;# 
  5862  080F                     	;# 
  5863  0810                     	;# 
  5864  0811                     	;# 
  5865  0812                     	;# 
  5866  0813                     	;# 
  5867  0814                     	;# 
  5868  081A                     	;# 
  5869  081A                     	;# 
  5870  081B                     	;# 
  5871  081C                     	;# 
  5872  081C                     	;# 
  5873  081D                     	;# 
  5874  081E                     	;# 
  5875  081F                     	;# 
  5876  088C                     	;# 
  5877  088D                     	;# 
  5878  088E                     	;# 
  5879  088F                     	;# 
  5880  0890                     	;# 
  5881  0891                     	;# 
  5882  0892                     	;# 
  5883  0893                     	;# 
  5884  0895                     	;# 
  5885  0896                     	;# 
  5886  0897                     	;# 
  5887  0898                     	;# 
  5888  0899                     	;# 
  5889  089A                     	;# 
  5890  089B                     	;# 
  5891  090C                     	;# 
  5892  090E                     	;# 
  5893  090F                     	;# 
  5894  091F                     	;# 
  5895  098F                     	;# 
  5896  098F                     	;# 
  5897  0990                     	;# 
  5898  0991                     	;# 
  5899  0992                     	;# 
  5900  0993                     	;# 
  5901  0994                     	;# 
  5902  0995                     	;# 
  5903  0996                     	;# 
  5904  0997                     	;# 
  5905  1E0F                     	;# 
  5906  1E10                     	;# 
  5907  1E11                     	;# 
  5908  1E12                     	;# 
  5909  1E13                     	;# 
  5910  1E14                     	;# 
  5911  1E15                     	;# 
  5912  1E16                     	;# 
  5913  1E17                     	;# 
  5914  1E18                     	;# 
  5915  1E19                     	;# 
  5916  1E1A                     	;# 
  5917  1E1B                     	;# 
  5918  1E1C                     	;# 
  5919  1E1D                     	;# 
  5920  1E1E                     	;# 
  5921  1E1F                     	;# 
  5922  1E20                     	;# 
  5923  1E21                     	;# 
  5924  1E22                     	;# 
  5925  1E23                     	;# 
  5926  1E24                     	;# 
  5927  1E25                     	;# 
  5928  1E26                     	;# 
  5929  1E27                     	;# 
  5930  1E28                     	;# 
  5931  1E29                     	;# 
  5932  1E2A                     	;# 
  5933  1E2B                     	;# 
  5934  1E2C                     	;# 
  5935  1E2D                     	;# 
  5936  1E2E                     	;# 
  5937  1E2F                     	;# 
  5938  1E30                     	;# 
  5939  1E31                     	;# 
  5940  1E32                     	;# 
  5941  1E33                     	;# 
  5942  1E34                     	;# 
  5943  1E35                     	;# 
  5944  1E36                     	;# 
  5945  1E37                     	;# 
  5946  1E8F                     	;# 
  5947  1E90                     	;# 
  5948  1E91                     	;# 
  5949  1E92                     	;# 
  5950  1E93                     	;# 
  5951  1E94                     	;# 
  5952  1E95                     	;# 
  5953  1E96                     	;# 
  5954  1E97                     	;# 
  5955  1E9C                     	;# 
  5956  1E9D                     	;# 
  5957  1E9E                     	;# 
  5958  1EA1                     	;# 
  5959  1EA2                     	;# 
  5960  1EA3                     	;# 
  5961  1EA4                     	;# 
  5962  1EA9                     	;# 
  5963  1EAA                     	;# 
  5964  1EB1                     	;# 
  5965  1EB2                     	;# 
  5966  1EB8                     	;# 
  5967  1EB9                     	;# 
  5968  1EBA                     	;# 
  5969  1EBB                     	;# 
  5970  1EBC                     	;# 
  5971  1EBD                     	;# 
  5972  1EBE                     	;# 
  5973  1EC3                     	;# 
  5974  1EC5                     	;# 
  5975  1EC6                     	;# 
  5976  1EC7                     	;# 
  5977  1EC8                     	;# 
  5978  1EC9                     	;# 
  5979  1ECA                     	;# 
  5980  1ECB                     	;# 
  5981  1ECB                     	;# 
  5982  1ECB                     	;# 
  5983  1ECC                     	;# 
  5984  1ECC                     	;# 
  5985  1ECC                     	;# 
  5986  1F10                     	;# 
  5987  1F11                     	;# 
  5988  1F12                     	;# 
  5989  1F14                     	;# 
  5990  1F15                     	;# 
  5991  1F1C                     	;# 
  5992  1F1D                     	;# 
  5993  1F1E                     	;# 
  5994  1F1F                     	;# 
  5995  1F20                     	;# 
  5996  1F21                     	;# 
  5997  1F22                     	;# 
  5998  1F23                     	;# 
  5999  1F24                     	;# 
  6000  1F25                     	;# 
  6001  1F26                     	;# 
  6002  1F27                     	;# 
  6003  1F38                     	;# 
  6004  1F39                     	;# 
  6005  1F3A                     	;# 
  6006  1F3B                     	;# 
  6007  1F3C                     	;# 
  6008  1F3D                     	;# 
  6009  1F3E                     	;# 
  6010  1F3F                     	;# 
  6011  1F43                     	;# 
  6012  1F44                     	;# 
  6013  1F45                     	;# 
  6014  1F46                     	;# 
  6015  1F47                     	;# 
  6016  1F48                     	;# 
  6017  1F49                     	;# 
  6018  1F4A                     	;# 
  6019  1F4E                     	;# 
  6020  1F4F                     	;# 
  6021  1F50                     	;# 
  6022  1F51                     	;# 
  6023  1F52                     	;# 
  6024  1F53                     	;# 
  6025  1F54                     	;# 
  6026  1F55                     	;# 
  6027  1FE4                     	;# 
  6028  1FE5                     	;# 
  6029  1FE6                     	;# 
  6030  1FE7                     	;# 
  6031  1FE8                     	;# 
  6032  1FE8                     	;# 
  6033  1FE9                     	;# 
  6034  1FEA                     	;# 
  6035  1FEB                     	;# 
  6036  1FED                     	;# 
  6037  1FEE                     	;# 
  6038  1FEF                     	;# 
  6039  0000                     	;# 
  6040  0001                     	;# 
  6041  0002                     	;# 
  6042  0003                     	;# 
  6043  0004                     	;# 
  6044  0005                     	;# 
  6045  0006                     	;# 
  6046  0007                     	;# 
  6047  0008                     	;# 
  6048  0009                     	;# 
  6049  000A                     	;# 
  6050  000B                     	;# 
  6051  000C                     	;# 
  6052  000D                     	;# 
  6053  000E                     	;# 
  6054  0012                     	;# 
  6055  0013                     	;# 
  6056  0014                     	;# 
  6057  0018                     	;# 
  6058  0019                     	;# 
  6059  001A                     	;# 
  6060  008C                     	;# 
  6061  008C                     	;# 
  6062  008D                     	;# 
  6063  008E                     	;# 
  6064  008E                     	;# 
  6065  008F                     	;# 
  6066  0090                     	;# 
  6067  0090                     	;# 
  6068  0091                     	;# 
  6069  0092                     	;# 
  6070  0092                     	;# 
  6071  0093                     	;# 
  6072  0094                     	;# 
  6073  0094                     	;# 
  6074  0095                     	;# 
  6075  0096                     	;# 
  6076  0096                     	;# 
  6077  0097                     	;# 
  6078  0098                     	;# 
  6079  0099                     	;# 
  6080  009A                     	;# 
  6081  009B                     	;# 
  6082  009B                     	;# 
  6083  009C                     	;# 
  6084  009D                     	;# 
  6085  009D                     	;# 
  6086  009E                     	;# 
  6087  009F                     	;# 
  6088  010C                     	;# 
  6089  010C                     	;# 
  6090  010D                     	;# 
  6091  010E                     	;# 
  6092  010F                     	;# 
  6093  010F                     	;# 
  6094  0110                     	;# 
  6095  0111                     	;# 
  6096  0112                     	;# 
  6097  0113                     	;# 
  6098  0114                     	;# 
  6099  0115                     	;# 
  6100  0116                     	;# 
  6101  0117                     	;# 
  6102  0118                     	;# 
  6103  0119                     	;# 
  6104  0119                     	;# 
  6105  0119                     	;# 
  6106  011A                     	;# 
  6107  011A                     	;# 
  6108  011A                     	;# 
  6109  011B                     	;# 
  6110  011B                     	;# 
  6111  011B                     	;# 
  6112  011B                     	;# 
  6113  011B                     	;# 
  6114  011C                     	;# 
  6115  011C                     	;# 
  6116  011C                     	;# 
  6117  011D                     	;# 
  6118  011D                     	;# 
  6119  011D                     	;# 
  6120  011E                     	;# 
  6121  011E                     	;# 
  6122  011E                     	;# 
  6123  011F                     	;# 
  6124  011F                     	;# 
  6125  011F                     	;# 
  6126  011F                     	;# 
  6127  011F                     	;# 
  6128  018C                     	;# 
  6129  018D                     	;# 
  6130  018E                     	;# 
  6131  018F                     	;# 
  6132  0190                     	;# 
  6133  0191                     	;# 
  6134  0192                     	;# 
  6135  0196                     	;# 
  6136  0197                     	;# 
  6137  0198                     	;# 
  6138  0199                     	;# 
  6139  019A                     	;# 
  6140  019B                     	;# 
  6141  019C                     	;# 
  6142  020C                     	;# 
  6143  020D                     	;# 
  6144  020E                     	;# 
  6145  020E                     	;# 
  6146  020F                     	;# 
  6147  020F                     	;# 
  6148  0210                     	;# 
  6149  0210                     	;# 
  6150  0211                     	;# 
  6151  0211                     	;# 
  6152  0212                     	;# 
  6153  0213                     	;# 
  6154  0214                     	;# 
  6155  0214                     	;# 
  6156  0215                     	;# 
  6157  0215                     	;# 
  6158  0216                     	;# 
  6159  0216                     	;# 
  6160  0217                     	;# 
  6161  0217                     	;# 
  6162  0218                     	;# 
  6163  0219                     	;# 
  6164  021A                     	;# 
  6165  021A                     	;# 
  6166  021B                     	;# 
  6167  021B                     	;# 
  6168  021C                     	;# 
  6169  021C                     	;# 
  6170  021D                     	;# 
  6171  021D                     	;# 
  6172  021E                     	;# 
  6173  021F                     	;# 
  6174  028C                     	;# 
  6175  028C                     	;# 
  6176  028D                     	;# 
  6177  028D                     	;# 
  6178  028E                     	;# 
  6179  028F                     	;# 
  6180  0290                     	;# 
  6181  0291                     	;# 
  6182  0292                     	;# 
  6183  0292                     	;# 
  6184  0293                     	;# 
  6185  0293                     	;# 
  6186  0294                     	;# 
  6187  0295                     	;# 
  6188  0296                     	;# 
  6189  0297                     	;# 
  6190  0298                     	;# 
  6191  0298                     	;# 
  6192  0299                     	;# 
  6193  0299                     	;# 
  6194  029A                     	;# 
  6195  029B                     	;# 
  6196  029C                     	;# 
  6197  029D                     	;# 
  6198  029F                     	;# 
  6199  030C                     	;# 
  6200  030C                     	;# 
  6201  030D                     	;# 
  6202  030E                     	;# 
  6203  030F                     	;# 
  6204  0310                     	;# 
  6205  0310                     	;# 
  6206  0311                     	;# 
  6207  0312                     	;# 
  6208  0313                     	;# 
  6209  0314                     	;# 
  6210  0314                     	;# 
  6211  0315                     	;# 
  6212  0316                     	;# 
  6213  0317                     	;# 
  6214  0318                     	;# 
  6215  0318                     	;# 
  6216  0319                     	;# 
  6217  031A                     	;# 
  6218  031B                     	;# 
  6219  038C                     	;# 
  6220  038C                     	;# 
  6221  038D                     	;# 
  6222  038E                     	;# 
  6223  0390                     	;# 
  6224  0390                     	;# 
  6225  0391                     	;# 
  6226  0392                     	;# 
  6227  048C                     	;# 
  6228  048C                     	;# 
  6229  048D                     	;# 
  6230  048E                     	;# 
  6231  048F                     	;# 
  6232  048F                     	;# 
  6233  0490                     	;# 
  6234  0491                     	;# 
  6235  0492                     	;# 
  6236  0492                     	;# 
  6237  0493                     	;# 
  6238  0494                     	;# 
  6239  0495                     	;# 
  6240  0495                     	;# 
  6241  0496                     	;# 
  6242  0497                     	;# 
  6243  0498                     	;# 
  6244  0499                     	;# 
  6245  049A                     	;# 
  6246  049B                     	;# 
  6247  049C                     	;# 
  6248  049D                     	;# 
  6249  058C                     	;# 
  6250  058C                     	;# 
  6251  058D                     	;# 
  6252  058E                     	;# 
  6253  058F                     	;# 
  6254  058F                     	;# 
  6255  0590                     	;# 
  6256  0591                     	;# 
  6257  0592                     	;# 
  6258  0593                     	;# 
  6259  059C                     	;# 
  6260  059C                     	;# 
  6261  059D                     	;# 
  6262  059D                     	;# 
  6263  059E                     	;# 
  6264  059F                     	;# 
  6265  060C                     	;# 
  6266  060C                     	;# 
  6267  060D                     	;# 
  6268  060D                     	;# 
  6269  060E                     	;# 
  6270  060F                     	;# 
  6271  0610                     	;# 
  6272  0611                     	;# 
  6273  0612                     	;# 
  6274  0613                     	;# 
  6275  0614                     	;# 
  6276  0616                     	;# 
  6277  0616                     	;# 
  6278  0617                     	;# 
  6279  0617                     	;# 
  6280  0618                     	;# 
  6281  0619                     	;# 
  6282  061A                     	;# 
  6283  061B                     	;# 
  6284  061C                     	;# 
  6285  061D                     	;# 
  6286  061E                     	;# 
  6287  070C                     	;# 
  6288  070D                     	;# 
  6289  070E                     	;# 
  6290  070F                     	;# 
  6291  0710                     	;# 
  6292  0711                     	;# 
  6293  0712                     	;# 
  6294  0713                     	;# 
  6295  0714                     	;# 
  6296  0716                     	;# 
  6297  0717                     	;# 
  6298  0718                     	;# 
  6299  0719                     	;# 
  6300  071A                     	;# 
  6301  071B                     	;# 
  6302  071C                     	;# 
  6303  071D                     	;# 
  6304  071E                     	;# 
  6305  0796                     	;# 
  6306  0797                     	;# 
  6307  0798                     	;# 
  6308  0799                     	;# 
  6309  079A                     	;# 
  6310  079B                     	;# 
  6311  079C                     	;# 
  6312  079D                     	;# 
  6313  080C                     	;# 
  6314  080D                     	;# 
  6315  080E                     	;# 
  6316  080F                     	;# 
  6317  0810                     	;# 
  6318  0811                     	;# 
  6319  0812                     	;# 
  6320  0813                     	;# 
  6321  0814                     	;# 
  6322  081A                     	;# 
  6323  081A                     	;# 
  6324  081B                     	;# 
  6325  081C                     	;# 
  6326  081C                     	;# 
  6327  081D                     	;# 
  6328  081E                     	;# 
  6329  081F                     	;# 
  6330  088C                     	;# 
  6331  088D                     	;# 
  6332  088E                     	;# 
  6333  088F                     	;# 
  6334  0890                     	;# 
  6335  0891                     	;# 
  6336  0892                     	;# 
  6337  0893                     	;# 
  6338  0895                     	;# 
  6339  0896                     	;# 
  6340  0897                     	;# 
  6341  0898                     	;# 
  6342  0899                     	;# 
  6343  089A                     	;# 
  6344  089B                     	;# 
  6345  090C                     	;# 
  6346  090E                     	;# 
  6347  090F                     	;# 
  6348  091F                     	;# 
  6349  098F                     	;# 
  6350  098F                     	;# 
  6351  0990                     	;# 
  6352  0991                     	;# 
  6353  0992                     	;# 
  6354  0993                     	;# 
  6355  0994                     	;# 
  6356  0995                     	;# 
  6357  0996                     	;# 
  6358  0997                     	;# 
  6359  1E0F                     	;# 
  6360  1E10                     	;# 
  6361  1E11                     	;# 
  6362  1E12                     	;# 
  6363  1E13                     	;# 
  6364  1E14                     	;# 
  6365  1E15                     	;# 
  6366  1E16                     	;# 
  6367  1E17                     	;# 
  6368  1E18                     	;# 
  6369  1E19                     	;# 
  6370  1E1A                     	;# 
  6371  1E1B                     	;# 
  6372  1E1C                     	;# 
  6373  1E1D                     	;# 
  6374  1E1E                     	;# 
  6375  1E1F                     	;# 
  6376  1E20                     	;# 
  6377  1E21                     	;# 
  6378  1E22                     	;# 
  6379  1E23                     	;# 
  6380  1E24                     	;# 
  6381  1E25                     	;# 
  6382  1E26                     	;# 
  6383  1E27                     	;# 
  6384  1E28                     	;# 
  6385  1E29                     	;# 
  6386  1E2A                     	;# 
  6387  1E2B                     	;# 
  6388  1E2C                     	;# 
  6389  1E2D                     	;# 
  6390  1E2E                     	;# 
  6391  1E2F                     	;# 
  6392  1E30                     	;# 
  6393  1E31                     	;# 
  6394  1E32                     	;# 
  6395  1E33                     	;# 
  6396  1E34                     	;# 
  6397  1E35                     	;# 
  6398  1E36                     	;# 
  6399  1E37                     	;# 
  6400  1E8F                     	;# 
  6401  1E90                     	;# 
  6402  1E91                     	;# 
  6403  1E92                     	;# 
  6404  1E93                     	;# 
  6405  1E94                     	;# 
  6406  1E95                     	;# 
  6407  1E96                     	;# 
  6408  1E97                     	;# 
  6409  1E9C                     	;# 
  6410  1E9D                     	;# 
  6411  1E9E                     	;# 
  6412  1EA1                     	;# 
  6413  1EA2                     	;# 
  6414  1EA3                     	;# 
  6415  1EA4                     	;# 
  6416  1EA9                     	;# 
  6417  1EAA                     	;# 
  6418  1EB1                     	;# 
  6419  1EB2                     	;# 
  6420  1EB8                     	;# 
  6421  1EB9                     	;# 
  6422  1EBA                     	;# 
  6423  1EBB                     	;# 
  6424  1EBC                     	;# 
  6425  1EBD                     	;# 
  6426  1EBE                     	;# 
  6427  1EC3                     	;# 
  6428  1EC5                     	;# 
  6429  1EC6                     	;# 
  6430  1EC7                     	;# 
  6431  1EC8                     	;# 
  6432  1EC9                     	;# 
  6433  1ECA                     	;# 
  6434  1ECB                     	;# 
  6435  1ECB                     	;# 
  6436  1ECB                     	;# 
  6437  1ECC                     	;# 
  6438  1ECC                     	;# 
  6439  1ECC                     	;# 
  6440  1F10                     	;# 
  6441  1F11                     	;# 
  6442  1F12                     	;# 
  6443  1F14                     	;# 
  6444  1F15                     	;# 
  6445  1F1C                     	;# 
  6446  1F1D                     	;# 
  6447  1F1E                     	;# 
  6448  1F1F                     	;# 
  6449  1F20                     	;# 
  6450  1F21                     	;# 
  6451  1F22                     	;# 
  6452  1F23                     	;# 
  6453  1F24                     	;# 
  6454  1F25                     	;# 
  6455  1F26                     	;# 
  6456  1F27                     	;# 
  6457  1F38                     	;# 
  6458  1F39                     	;# 
  6459  1F3A                     	;# 
  6460  1F3B                     	;# 
  6461  1F3C                     	;# 
  6462  1F3D                     	;# 
  6463  1F3E                     	;# 
  6464  1F3F                     	;# 
  6465  1F43                     	;# 
  6466  1F44                     	;# 
  6467  1F45                     	;# 
  6468  1F46                     	;# 
  6469  1F47                     	;# 
  6470  1F48                     	;# 
  6471  1F49                     	;# 
  6472  1F4A                     	;# 
  6473  1F4E                     	;# 
  6474  1F4F                     	;# 
  6475  1F50                     	;# 
  6476  1F51                     	;# 
  6477  1F52                     	;# 
  6478  1F53                     	;# 
  6479  1F54                     	;# 
  6480  1F55                     	;# 
  6481  1FE4                     	;# 
  6482  1FE5                     	;# 
  6483  1FE6                     	;# 
  6484  1FE7                     	;# 
  6485  1FE8                     	;# 
  6486  1FE8                     	;# 
  6487  1FE9                     	;# 
  6488  1FEA                     	;# 
  6489  1FEB                     	;# 
  6490  1FED                     	;# 
  6491  1FEE                     	;# 
  6492  1FEF                     	;# 
  6493  0000                     	;# 
  6494  0001                     	;# 
  6495  0002                     	;# 
  6496  0003                     	;# 
  6497  0004                     	;# 
  6498  0005                     	;# 
  6499  0006                     	;# 
  6500  0007                     	;# 
  6501  0008                     	;# 
  6502  0009                     	;# 
  6503  000A                     	;# 
  6504  000B                     	;# 
  6505  000C                     	;# 
  6506  000D                     	;# 
  6507  000E                     	;# 
  6508  0012                     	;# 
  6509  0013                     	;# 
  6510  0014                     	;# 
  6511  0018                     	;# 
  6512  0019                     	;# 
  6513  001A                     	;# 
  6514  008C                     	;# 
  6515  008C                     	;# 
  6516  008D                     	;# 
  6517  008E                     	;# 
  6518  008E                     	;# 
  6519  008F                     	;# 
  6520  0090                     	;# 
  6521  0090                     	;# 
  6522  0091                     	;# 
  6523  0092                     	;# 
  6524  0092                     	;# 
  6525  0093                     	;# 
  6526  0094                     	;# 
  6527  0094                     	;# 
  6528  0095                     	;# 
  6529  0096                     	;# 
  6530  0096                     	;# 
  6531  0097                     	;# 
  6532  0098                     	;# 
  6533  0099                     	;# 
  6534  009A                     	;# 
  6535  009B                     	;# 
  6536  009B                     	;# 
  6537  009C                     	;# 
  6538  009D                     	;# 
  6539  009D                     	;# 
  6540  009E                     	;# 
  6541  009F                     	;# 
  6542  010C                     	;# 
  6543  010C                     	;# 
  6544  010D                     	;# 
  6545  010E                     	;# 
  6546  010F                     	;# 
  6547  010F                     	;# 
  6548  0110                     	;# 
  6549  0111                     	;# 
  6550  0112                     	;# 
  6551  0113                     	;# 
  6552  0114                     	;# 
  6553  0115                     	;# 
  6554  0116                     	;# 
  6555  0117                     	;# 
  6556  0118                     	;# 
  6557  0119                     	;# 
  6558  0119                     	;# 
  6559  0119                     	;# 
  6560  011A                     	;# 
  6561  011A                     	;# 
  6562  011A                     	;# 
  6563  011B                     	;# 
  6564  011B                     	;# 
  6565  011B                     	;# 
  6566  011B                     	;# 
  6567  011B                     	;# 
  6568  011C                     	;# 
  6569  011C                     	;# 
  6570  011C                     	;# 
  6571  011D                     	;# 
  6572  011D                     	;# 
  6573  011D                     	;# 
  6574  011E                     	;# 
  6575  011E                     	;# 
  6576  011E                     	;# 
  6577  011F                     	;# 
  6578  011F                     	;# 
  6579  011F                     	;# 
  6580  011F                     	;# 
  6581  011F                     	;# 
  6582  018C                     	;# 
  6583  018D                     	;# 
  6584  018E                     	;# 
  6585  018F                     	;# 
  6586  0190                     	;# 
  6587  0191                     	;# 
  6588  0192                     	;# 
  6589  0196                     	;# 
  6590  0197                     	;# 
  6591  0198                     	;# 
  6592  0199                     	;# 
  6593  019A                     	;# 
  6594  019B                     	;# 
  6595  019C                     	;# 
  6596  020C                     	;# 
  6597  020D                     	;# 
  6598  020E                     	;# 
  6599  020E                     	;# 
  6600  020F                     	;# 
  6601  020F                     	;# 
  6602  0210                     	;# 
  6603  0210                     	;# 
  6604  0211                     	;# 
  6605  0211                     	;# 
  6606  0212                     	;# 
  6607  0213                     	;# 
  6608  0214                     	;# 
  6609  0214                     	;# 
  6610  0215                     	;# 
  6611  0215                     	;# 
  6612  0216                     	;# 
  6613  0216                     	;# 
  6614  0217                     	;# 
  6615  0217                     	;# 
  6616  0218                     	;# 
  6617  0219                     	;# 
  6618  021A                     	;# 
  6619  021A                     	;# 
  6620  021B                     	;# 
  6621  021B                     	;# 
  6622  021C                     	;# 
  6623  021C                     	;# 
  6624  021D                     	;# 
  6625  021D                     	;# 
  6626  021E                     	;# 
  6627  021F                     	;# 
  6628  028C                     	;# 
  6629  028C                     	;# 
  6630  028D                     	;# 
  6631  028D                     	;# 
  6632  028E                     	;# 
  6633  028F                     	;# 
  6634  0290                     	;# 
  6635  0291                     	;# 
  6636  0292                     	;# 
  6637  0292                     	;# 
  6638  0293                     	;# 
  6639  0293                     	;# 
  6640  0294                     	;# 
  6641  0295                     	;# 
  6642  0296                     	;# 
  6643  0297                     	;# 
  6644  0298                     	;# 
  6645  0298                     	;# 
  6646  0299                     	;# 
  6647  0299                     	;# 
  6648  029A                     	;# 
  6649  029B                     	;# 
  6650  029C                     	;# 
  6651  029D                     	;# 
  6652  029F                     	;# 
  6653  030C                     	;# 
  6654  030C                     	;# 
  6655  030D                     	;# 
  6656  030E                     	;# 
  6657  030F                     	;# 
  6658  0310                     	;# 
  6659  0310                     	;# 
  6660  0311                     	;# 
  6661  0312                     	;# 
  6662  0313                     	;# 
  6663  0314                     	;# 
  6664  0314                     	;# 
  6665  0315                     	;# 
  6666  0316                     	;# 
  6667  0317                     	;# 
  6668  0318                     	;# 
  6669  0318                     	;# 
  6670  0319                     	;# 
  6671  031A                     	;# 
  6672  031B                     	;# 
  6673  038C                     	;# 
  6674  038C                     	;# 
  6675  038D                     	;# 
  6676  038E                     	;# 
  6677  0390                     	;# 
  6678  0390                     	;# 
  6679  0391                     	;# 
  6680  0392                     	;# 
  6681  048C                     	;# 
  6682  048C                     	;# 
  6683  048D                     	;# 
  6684  048E                     	;# 
  6685  048F                     	;# 
  6686  048F                     	;# 
  6687  0490                     	;# 
  6688  0491                     	;# 
  6689  0492                     	;# 
  6690  0492                     	;# 
  6691  0493                     	;# 
  6692  0494                     	;# 
  6693  0495                     	;# 
  6694  0495                     	;# 
  6695  0496                     	;# 
  6696  0497                     	;# 
  6697  0498                     	;# 
  6698  0499                     	;# 
  6699  049A                     	;# 
  6700  049B                     	;# 
  6701  049C                     	;# 
  6702  049D                     	;# 
  6703  058C                     	;# 
  6704  058C                     	;# 
  6705  058D                     	;# 
  6706  058E                     	;# 
  6707  058F                     	;# 
  6708  058F                     	;# 
  6709  0590                     	;# 
  6710  0591                     	;# 
  6711  0592                     	;# 
  6712  0593                     	;# 
  6713  059C                     	;# 
  6714  059C                     	;# 
  6715  059D                     	;# 
  6716  059D                     	;# 
  6717  059E                     	;# 
  6718  059F                     	;# 
  6719  060C                     	;# 
  6720  060C                     	;# 
  6721  060D                     	;# 
  6722  060D                     	;# 
  6723  060E                     	;# 
  6724  060F                     	;# 
  6725  0610                     	;# 
  6726  0611                     	;# 
  6727  0612                     	;# 
  6728  0613                     	;# 
  6729  0614                     	;# 
  6730  0616                     	;# 
  6731  0616                     	;# 
  6732  0617                     	;# 
  6733  0617                     	;# 
  6734  0618                     	;# 
  6735  0619                     	;# 
  6736  061A                     	;# 
  6737  061B                     	;# 
  6738  061C                     	;# 
  6739  061D                     	;# 
  6740  061E                     	;# 
  6741  070C                     	;# 
  6742  070D                     	;# 
  6743  070E                     	;# 
  6744  070F                     	;# 
  6745  0710                     	;# 
  6746  0711                     	;# 
  6747  0712                     	;# 
  6748  0713                     	;# 
  6749  0714                     	;# 
  6750  0716                     	;# 
  6751  0717                     	;# 
  6752  0718                     	;# 
  6753  0719                     	;# 
  6754  071A                     	;# 
  6755  071B                     	;# 
  6756  071C                     	;# 
  6757  071D                     	;# 
  6758  071E                     	;# 
  6759  0796                     	;# 
  6760  0797                     	;# 
  6761  0798                     	;# 
  6762  0799                     	;# 
  6763  079A                     	;# 
  6764  079B                     	;# 
  6765  079C                     	;# 
  6766  079D                     	;# 
  6767  080C                     	;# 
  6768  080D                     	;# 
  6769  080E                     	;# 
  6770  080F                     	;# 
  6771  0810                     	;# 
  6772  0811                     	;# 
  6773  0812                     	;# 
  6774  0813                     	;# 
  6775  0814                     	;# 
  6776  081A                     	;# 
  6777  081A                     	;# 
  6778  081B                     	;# 
  6779  081C                     	;# 
  6780  081C                     	;# 
  6781  081D                     	;# 
  6782  081E                     	;# 
  6783  081F                     	;# 
  6784  088C                     	;# 
  6785  088D                     	;# 
  6786  088E                     	;# 
  6787  088F                     	;# 
  6788  0890                     	;# 
  6789  0891                     	;# 
  6790  0892                     	;# 
  6791  0893                     	;# 
  6792  0895                     	;# 
  6793  0896                     	;# 
  6794  0897                     	;# 
  6795  0898                     	;# 
  6796  0899                     	;# 
  6797  089A                     	;# 
  6798  089B                     	;# 
  6799  090C                     	;# 
  6800  090E                     	;# 
  6801  090F                     	;# 
  6802  091F                     	;# 
  6803  098F                     	;# 
  6804  098F                     	;# 
  6805  0990                     	;# 
  6806  0991                     	;# 
  6807  0992                     	;# 
  6808  0993                     	;# 
  6809  0994                     	;# 
  6810  0995                     	;# 
  6811  0996                     	;# 
  6812  0997                     	;# 
  6813  1E0F                     	;# 
  6814  1E10                     	;# 
  6815  1E11                     	;# 
  6816  1E12                     	;# 
  6817  1E13                     	;# 
  6818  1E14                     	;# 
  6819  1E15                     	;# 
  6820  1E16                     	;# 
  6821  1E17                     	;# 
  6822  1E18                     	;# 
  6823  1E19                     	;# 
  6824  1E1A                     	;# 
  6825  1E1B                     	;# 
  6826  1E1C                     	;# 
  6827  1E1D                     	;# 
  6828  1E1E                     	;# 
  6829  1E1F                     	;# 
  6830  1E20                     	;# 
  6831  1E21                     	;# 
  6832  1E22                     	;# 
  6833  1E23                     	;# 
  6834  1E24                     	;# 
  6835  1E25                     	;# 
  6836  1E26                     	;# 
  6837  1E27                     	;# 
  6838  1E28                     	;# 
  6839  1E29                     	;# 
  6840  1E2A                     	;# 
  6841  1E2B                     	;# 
  6842  1E2C                     	;# 
  6843  1E2D                     	;# 
  6844  1E2E                     	;# 
  6845  1E2F                     	;# 
  6846  1E30                     	;# 
  6847  1E31                     	;# 
  6848  1E32                     	;# 
  6849  1E33                     	;# 
  6850  1E34                     	;# 
  6851  1E35                     	;# 
  6852  1E36                     	;# 
  6853  1E37                     	;# 
  6854  1E8F                     	;# 
  6855  1E90                     	;# 
  6856  1E91                     	;# 
  6857  1E92                     	;# 
  6858  1E93                     	;# 
  6859  1E94                     	;# 
  6860  1E95                     	;# 
  6861  1E96                     	;# 
  6862  1E97                     	;# 
  6863  1E9C                     	;# 
  6864  1E9D                     	;# 
  6865  1E9E                     	;# 
  6866  1EA1                     	;# 
  6867  1EA2                     	;# 
  6868  1EA3                     	;# 
  6869  1EA4                     	;# 
  6870  1EA9                     	;# 
  6871  1EAA                     	;# 
  6872  1EB1                     	;# 
  6873  1EB2                     	;# 
  6874  1EB8                     	;# 
  6875  1EB9                     	;# 
  6876  1EBA                     	;# 
  6877  1EBB                     	;# 
  6878  1EBC                     	;# 
  6879  1EBD                     	;# 
  6880  1EBE                     	;# 
  6881  1EC3                     	;# 
  6882  1EC5                     	;# 
  6883  1EC6                     	;# 
  6884  1EC7                     	;# 
  6885  1EC8                     	;# 
  6886  1EC9                     	;# 
  6887  1ECA                     	;# 
  6888  1ECB                     	;# 
  6889  1ECB                     	;# 
  6890  1ECB                     	;# 
  6891  1ECC                     	;# 
  6892  1ECC                     	;# 
  6893  1ECC                     	;# 
  6894  1F10                     	;# 
  6895  1F11                     	;# 
  6896  1F12                     	;# 
  6897  1F14                     	;# 
  6898  1F15                     	;# 
  6899  1F1C                     	;# 
  6900  1F1D                     	;# 
  6901  1F1E                     	;# 
  6902  1F1F                     	;# 
  6903  1F20                     	;# 
  6904  1F21                     	;# 
  6905  1F22                     	;# 
  6906  1F23                     	;# 
  6907  1F24                     	;# 
  6908  1F25                     	;# 
  6909  1F26                     	;# 
  6910  1F27                     	;# 
  6911  1F38                     	;# 
  6912  1F39                     	;# 
  6913  1F3A                     	;# 
  6914  1F3B                     	;# 
  6915  1F3C                     	;# 
  6916  1F3D                     	;# 
  6917  1F3E                     	;# 
  6918  1F3F                     	;# 
  6919  1F43                     	;# 
  6920  1F44                     	;# 
  6921  1F45                     	;# 
  6922  1F46                     	;# 
  6923  1F47                     	;# 
  6924  1F48                     	;# 
  6925  1F49                     	;# 
  6926  1F4A                     	;# 
  6927  1F4E                     	;# 
  6928  1F4F                     	;# 
  6929  1F50                     	;# 
  6930  1F51                     	;# 
  6931  1F52                     	;# 
  6932  1F53                     	;# 
  6933  1F54                     	;# 
  6934  1F55                     	;# 
  6935  1FE4                     	;# 
  6936  1FE5                     	;# 
  6937  1FE6                     	;# 
  6938  1FE7                     	;# 
  6939  1FE8                     	;# 
  6940  1FE8                     	;# 
  6941  1FE9                     	;# 
  6942  1FEA                     	;# 
  6943  1FEB                     	;# 
  6944  1FED                     	;# 
  6945  1FEE                     	;# 
  6946  1FEF                     	;_inputArray
  6947                           
  6948                           	psect	idataBANK1
  6949  1560                     __pidataBANK1:	
  6950                           
  6951                           ;initializer for _delay
  6952  1560  340A               	retlw	10
  6953  1561  3400               	retlw	0
  6954                           
  6955                           ;initializer for _threshold
  6956  1562  3490               	retlw	144
  6957  1563  3406               	retlw	6
  6958                           
  6959                           ;initializer for _address
  6960  1564  3401               	retlw	1
  6961  1565  3400               	retlw	0
  6962                           
  6963                           	psect	stringtext1
  6964  1000                     __pstringtext1:	
  6965  1000                     TM1650_setDigit@charTable:	
  6966  1000  3400               	retlw	0
  6967  1001  3482               	retlw	130
  6968  1002  3421               	retlw	33
  6969  1003  3400               	retlw	0
  6970  1004  3400               	retlw	0
  6971  1005  3400               	retlw	0
  6972  1006  3400               	retlw	0
  6973  1007  3402               	retlw	2
  6974  1008  3439               	retlw	57
  6975  1009  340F               	retlw	15
  6976  100A  3400               	retlw	0
  6977  100B  3400               	retlw	0
  6978  100C  3400               	retlw	0
  6979  100D  3440               	retlw	64
  6980  100E  3480               	retlw	128
  6981  100F  3400               	retlw	0
  6982  1010  343F               	retlw	63
  6983  1011  3406               	retlw	6
  6984  1012  345B               	retlw	91
  6985  1013  344F               	retlw	79
  6986  1014  3466               	retlw	102
  6987  1015  346D               	retlw	109
  6988  1016  347D               	retlw	125
  6989  1017  3407               	retlw	7
  6990  1018  347F               	retlw	127
  6991  1019  346F               	retlw	111
  6992  101A  3400               	retlw	0
  6993  101B  3400               	retlw	0
  6994  101C  3400               	retlw	0
  6995  101D  3448               	retlw	72
  6996  101E  3400               	retlw	0
  6997  101F  3453               	retlw	83
  6998  1020  3400               	retlw	0
  6999  1021  3477               	retlw	119
  7000  1022  347C               	retlw	124
  7001  1023  3439               	retlw	57
  7002  1024  345E               	retlw	94
  7003  1025  3479               	retlw	121
  7004  1026  3471               	retlw	113
  7005  1027  346F               	retlw	111
  7006  1028  3476               	retlw	118
  7007  1029  3406               	retlw	6
  7008  102A  341E               	retlw	30
  7009  102B  3400               	retlw	0
  7010  102C  3438               	retlw	56
  7011  102D  3400               	retlw	0
  7012  102E  3454               	retlw	84
  7013  102F  343F               	retlw	63
  7014  1030  3473               	retlw	115
  7015  1031  3467               	retlw	103
  7016  1032  3450               	retlw	80
  7017  1033  346D               	retlw	109
  7018  1034  3478               	retlw	120
  7019  1035  343E               	retlw	62
  7020  1036  3400               	retlw	0
  7021  1037  3400               	retlw	0
  7022  1038  3400               	retlw	0
  7023  1039  346E               	retlw	110
  7024  103A  3400               	retlw	0
  7025  103B  3439               	retlw	57
  7026  103C  3400               	retlw	0
  7027  103D  340F               	retlw	15
  7028  103E  3400               	retlw	0
  7029  103F  3408               	retlw	8
  7030  1040  3463               	retlw	99
  7031  1041  345F               	retlw	95
  7032  1042  347C               	retlw	124
  7033  1043  3458               	retlw	88
  7034  1044  345E               	retlw	94
  7035  1045  347B               	retlw	123
  7036  1046  3471               	retlw	113
  7037  1047  346F               	retlw	111
  7038  1048  3474               	retlw	116
  7039  1049  3402               	retlw	2
  7040  104A  341E               	retlw	30
  7041  104B  3400               	retlw	0
  7042  104C  3406               	retlw	6
  7043  104D  3400               	retlw	0
  7044  104E  3454               	retlw	84
  7045  104F  345C               	retlw	92
  7046  1050  3473               	retlw	115
  7047  1051  3467               	retlw	103
  7048  1052  3450               	retlw	80
  7049  1053  346D               	retlw	109
  7050  1054  3478               	retlw	120
  7051  1055  341C               	retlw	28
  7052  1056  3400               	retlw	0
  7053  1057  3400               	retlw	0
  7054  1058  3400               	retlw	0
  7055  1059  346E               	retlw	110
  7056  105A  3400               	retlw	0
  7057  105B  3439               	retlw	57
  7058  105C  3430               	retlw	48
  7059  105D  340F               	retlw	15
  7060  105E  3400               	retlw	0
  7061  105F  3400               	retlw	0
  7062  1060                     __end_ofTM1650_setDigit@charTable:	
  7063                           
  7064                           	psect	nvBANK1
  7065  00EC                     __pnvBANK1:	
  7066  00EC                     _ADCC_ADTI_InterruptHandler:	
  7067  00EC                     	ds	2
  7068  00EE                     _eusart1TxBufferRemaining:	
  7069  00EE                     	ds	1
  7070                           
  7071                           	psect	nvBANK2
  7072  0148                     __pnvBANK2:	
  7073  0148                     _TMR0_InterruptHandler:	
  7074  0148                     	ds	2
  7075  014A                     _EUSART1_ErrorHandler:	
  7076  014A                     	ds	2
  7077  014C                     _EUSART1_OverrunErrorHandler:	
  7078  014C                     	ds	2
  7079  014E                     _EUSART1_FramingErrorHandler:	
  7080  014E                     	ds	2
  7081  0150                     _EUSART1_RxDefaultInterruptHandler:	
  7082  0150                     	ds	2
  7083  0152                     _EUSART1_TxDefaultInterruptHandler:	
  7084  0152                     	ds	2
  7085  0014                     _TRISC	set	20
  7086  0013                     _TRISB	set	19
  7087  0012                     _TRISA	set	18
  7088  001A                     _LATC	set	26
  7089  0019                     _LATB	set	25
  7090  0018                     _LATA	set	24
  7091  000B                     _INTCONbits	set	11
  7092  000C                     _PORTA	set	12
  7093  000E                     _PORTC	set	14
  7094  00A4                     _TRISC4	set	164
  7095  00A3                     _TRISC3	set	163
  7096  00A6                     _TRISC6	set	166
  7097  00A7                     _TRISC7	set	167
  7098  009C                     _TRISB4	set	156
  7099  00D5                     _LATC5	set	213
  7100  0090                     _ADERRL	set	144
  7101  0091                     _ADERRH	set	145
  7102  009B                     _ADPREVL	set	155
  7103  009C                     _ADPREVH	set	156
  7104  0094                     _ADFLTRL	set	148
  7105  0095                     _ADFLTRH	set	149
  7106  0096                     _ADACCL	set	150
  7107  0097                     _ADACCH	set	151
  7108  0099                     _ADCNT	set	153
  7109  009D                     _ADRESL	set	157
  7110  009E                     _ADRESH	set	158
  7111  009F                     _ADPCH	set	159
  7112  009A                     _ADRPT	set	154
  7113  0098                     _ADACCU	set	152
  7114  0093                     _ADSTPTH	set	147
  7115  0092                     _ADSTPTL	set	146
  7116  008F                     _ADUTHH	set	143
  7117  008E                     _ADUTHL	set	142
  7118  008D                     _ADLTHH	set	141
  7119  008C                     _ADLTHL	set	140
  7120  011B                     _SP1BRG	set	283
  7121  011F                     _BAUD1CONbits	set	287
  7122  0112                     _ADCON1bits	set	274
  7123  0115                     _ADSTATbits	set	277
  7124  0113                     _ADCON2bits	set	275
  7125  0114                     _ADCON3bits	set	276
  7126  0111                     _ADCON0bits	set	273
  7127  0111                     _ADCON0	set	273
  7128  0118                     _ADCLK	set	280
  7129  0117                     _ADACT	set	279
  7130  0116                     _ADREF	set	278
  7131  0115                     _ADSTAT	set	277
  7132  0114                     _ADCON3	set	276
  7133  0113                     _ADCON2	set	275
  7134  0112                     _ADCON1	set	274
  7135  0110                     _ADPREH	set	272
  7136  010F                     _ADPREL	set	271
  7137  010E                     _ADCAP	set	270
  7138  010D                     _ADACQH	set	269
  7139  010C                     _ADACQL	set	268
  7140  0119                     _RC1REG	set	281
  7141  011D                     _RC1STAbits	set	285
  7142  011A                     _TX1REG	set	282
  7143  011E                     _TX1STAbits	set	286
  7144  011C                     _SP1BRGH	set	284
  7145  011B                     _SP1BRGL	set	283
  7146  011E                     _TX1STA	set	286
  7147  011D                     _RC1STA	set	285
  7148  011F                     _BAUD1CON	set	287
  7149  018C                     _SSP1BUF	set	396
  7150  0191                     _SSP1CON2bits	set	401
  7151  0190                     _SSP1CON1bits	set	400
  7152  018D                     _SSP1ADD	set	397
  7153  0192                     _SSP1CON3	set	402
  7154  0190                     _SSP1CON1	set	400
  7155  018F                     _SSP1STAT	set	399
  7156  028E                     _T2CONbits	set	654
  7157  0290                     _T2CLKCON	set	656
  7158  0318                     _CCPR4	set	792
  7159  0314                     _CCPR3	set	788
  7160  0310                     _CCPR2	set	784
  7161  030C                     _CCPR1	set	780
  7162  031A                     _CCP4CONbits	set	794
  7163  0316                     _CCP3CONbits	set	790
  7164  0312                     _CCP2CONbits	set	786
  7165  030E                     _CCP1CONbits	set	782
  7166  059E                     _T0CON0bits	set	1438
  7167  059E                     _T0CON0	set	1438
  7168  059C                     _TMR0L	set	1436
  7169  059D                     _TMR0H	set	1437
  7170  059F                     _T0CON1	set	1439
  7171  070D                     _PIR1bits	set	1805
  7172  0717                     _PIE1bits	set	1815
  7173  070F                     _PIR3bits	set	1807
  7174  070C                     _PIR0bits	set	1804
  7175  0716                     _PIE0bits	set	1814
  7176  0719                     _PIE3bits	set	1817
  7177  079D                     _PMD7	set	1949
  7178  079C                     _PMD6	set	1948
  7179  079B                     _PMD5	set	1947
  7180  079A                     _PMD4	set	1946
  7181  0799                     _PMD3	set	1945
  7182  0798                     _PMD2	set	1944
  7183  0797                     _PMD1	set	1943
  7184  0796                     _PMD0	set	1942
  7185  0892                     _OSCTUNE	set	2194
  7186  0893                     _OSCFRQ	set	2195
  7187  0891                     _OSCEN	set	2193
  7188  088F                     _OSCCON3	set	2191
  7189  088D                     _OSCCON1	set	2189
  7190  1ECB                     _RX1PPS	set	7883
  7191  1ECB                     _RX1DTPPS	set	7883
  7192  1EC6                     _SSP1DATPPS	set	7878
  7193  1EC5                     _SSP1CLKPPS	set	7877
  7194  1F24                     _RC4PPS	set	7972
  7195  1F23                     _RC3PPS	set	7971
  7196  1F26                     _RC6PPS	set	7974
  7197  1F27                     _RC7PPS	set	7975
  7198  1F15                     _RA5PPS	set	7957
  7199  1F1E                     _RB6PPS	set	7966
  7200  1F14                     _RA4PPS	set	7956
  7201  1F51                     _SLRCONC	set	8017
  7202  1F46                     _SLRCONB	set	8006
  7203  1F3B                     _SLRCONA	set	7995
  7204  1F50                     _ODCONC	set	8016
  7205  1F45                     _ODCONB	set	8005
  7206  1F3A                     _ODCONA	set	7994
  7207  1F4F                     _WPUC	set	8015
  7208  1F39                     _WPUA	set	7993
  7209  1F44                     _WPUB	set	8004
  7210  1F38                     _ANSELA	set	7992
  7211  1F43                     _ANSELB	set	8003
  7212  1F4E                     _ANSELC	set	8014
  7213                           
  7214                           ; #config settings
  7215  0000                     
  7216                           	psect	cinit
  7217  0043                     start_initialization:	
  7218  0043                     __initialization:		;BIGRAM
  7219                           
  7220                           ; Initialize objects allocated to BANK1
  7221  0043  3060               	movlw	low __pidataBANK1
  7222  0044  0084               	movwf	4
  7223  0045  3095               	movlw	(high __pidataBANK1)| (0+128)
  7224  0046  0085               	movwf	5
  7225  0047  0141               	movlb	1	; select bank1
  7226  0048  0012               	moviw fsr0++
  7227  0049  00E6               	movwf	__pdataBANK1& (0+127)
  7228  004A  0012               	moviw fsr0++
  7229  004B  00E7               	movwf	(__pdataBANK1+1)& (0+127)
  7230  004C  0012               	moviw fsr0++
  7231  004D  00E8               	movwf	(__pdataBANK1+2)& (0+127)
  7232  004E  0012               	moviw fsr0++
  7233  004F  00E9               	movwf	(__pdataBANK1+3)& (0+127)
  7234  0050  0012               	moviw fsr0++
  7235  0051  00EA               	movwf	(__pdataBANK1+4)& (0+127)
  7236  0052  0012               	moviw fsr0++
  7237  0053  00EB               	movwf	(__pdataBANK1+5)& (0+127)
  7238                           
  7239                           ; Clear objects allocated to BIGRAM
  7240  0054  30EF               	movlw	low (0+9711)
  7241  0055  0084               	movwf	4
  7242  0056  3025               	movlw	high (0+9711)
  7243  0057  0085               	movwf	5
  7244  0058  3001               	movlw	1
  7245  0059  00FE               	movwf	btemp
  7246  005A  3002               	movlw	2
  7247  005B  00FF               	movwf	btemp+1
  7248  005C  3195  25F8  3180   	fcall	clear_ram0
  7249                           
  7250                           ; Clear objects allocated to COMMON
  7251  005F  01F0               	clrf	__pbssCOMMON& (0+127)
  7252  0060  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  7253  0061  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  7254  0062  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  7255  0063  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  7256  0064  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  7257                           
  7258                           ; Clear objects allocated to BANK1
  7259  0065  30A0               	movlw	low __pbssBANK1
  7260  0066  0084               	movwf	4
  7261  0067  3000               	movlw	high __pbssBANK1
  7262  0068  0085               	movwf	5
  7263  0069  3031               	movlw	49
  7264  006A  00FE               	movwf	btemp
  7265  006B  3000               	movlw	0
  7266  006C  00FF               	movwf	btemp+1
  7267  006D  3195  25F8  3180   	fcall	clear_ram0
  7268                           
  7269                           ; Clear objects allocated to BANK2
  7270  0070  3020               	movlw	low __pbssBANK2
  7271  0071  0084               	movwf	4
  7272  0072  3001               	movlw	high __pbssBANK2
  7273  0073  0085               	movwf	5
  7274  0074  3028               	movlw	40
  7275  0075  00FE               	movwf	btemp
  7276  0076  3000               	movlw	0
  7277  0077  00FF               	movwf	btemp+1
  7278  0078  3195  25F8  3180   	fcall	clear_ram0
  7279                           
  7280                           ; Clear objects allocated to BANK3
  7281  007B  30A0               	movlw	low __pbssBANK3
  7282  007C  0084               	movwf	4
  7283  007D  3001               	movlw	high __pbssBANK3
  7284  007E  0085               	movwf	5
  7285  007F  3020               	movlw	32
  7286  0080  00FE               	movwf	btemp
  7287  0081  3000               	movlw	0
  7288  0082  00FF               	movwf	btemp+1
  7289  0083  3195  25F8         	fcall	clear_ram0
  7290  0085                     end_of_initialization:	
  7291                           ;End of C runtime variable initialization code
  7292                           
  7293  0085                     __end_of__initialization:	
  7294  0085  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7295  0086  0140               	movlb	0
  7296  0087  3185  2DB0         	ljmp	_main	;jump to C main() function
  7297                           
  7298                           	psect	bssCOMMON
  7299  0070                     __pbssCOMMON:	
  7300  0070                     _eusart1RxTail:	
  7301  0070                     	ds	1
  7302  0071                     _eusart1RxHead:	
  7303  0071                     	ds	1
  7304  0072                     _eusart1TxTail:	
  7305  0072                     	ds	1
  7306  0073                     _eusart1TxHead:	
  7307  0073                     	ds	1
  7308  0074                     I2C1_ISR@i2c_address:	
  7309  0074                     	ds	2
  7310                           
  7311                           	psect	bssBANK1
  7312  00A0                     __pbssBANK1:	
  7313  00A0                     _i2c1_object:	
  7314  00A0                     	ds	5
  7315  00A5                     _thresholdCount:	
  7316  00A5                     	ds	2
  7317  00A7                     _lastRun:	
  7318  00A7                     	ds	2
  7319  00A9                     _bpm:	
  7320  00A9                     	ds	2
  7321  00AB                     _lastBeat:	
  7322  00AB                     	ds	2
  7323  00AD                     buttons@lastTime:	
  7324  00AD                     	ds	2
  7325  00AF                     _currentTime:	
  7326  00AF                     	ds	2
  7327  00B1                     _point:	
  7328  00B1                     	ds	2
  7329  00B3                     _lastTime:	
  7330  00B3                     	ds	2
  7331  00B5                     _lastActiveTime:	
  7332  00B5                     	ds	2
  7333  00B7                     _counter:	
  7334  00B7                     	ds	2
  7335  00B9                     _pointer:	
  7336  00B9                     	ds	2
  7337  00BB                     _lastActiveDMXTime:	
  7338  00BB                     	ds	2
  7339  00BD                     _lastDetected:	
  7340  00BD                     	ds	1
  7341  00BE                     _thresholdExceeded:	
  7342  00BE                     	ds	1
  7343  00BF                     _detected:	
  7344  00BF                     	ds	1
  7345  00C0                     _displayState:	
  7346  00C0                     	ds	1
  7347  00C1                     _menu:	
  7348  00C1                     	ds	1
  7349  00C2                     _enter:	
  7350  00C2                     	ds	1
  7351  00C3                     _down:	
  7352  00C3                     	ds	1
  7353  00C4                     _up:	
  7354  00C4                     	ds	1
  7355  00C5                     I2C1_ISR@i2c_10bit_address_restart:	
  7356  00C5                     	ds	1
  7357  00C6                     I2C1_ISR@i2c_bytes_left:	
  7358  00C6                     	ds	1
  7359  00C7                     I2C1_ISR@pi2c_buf_ptr:	
  7360  00C7                     	ds	1
  7361  00C8                     _p_i2c1_current:	
  7362  00C8                     	ds	1
  7363  00C9                     _p_i2c1_trb_current:	
  7364  00C9                     	ds	1
  7365  00CA                     _i2c1_trb_count:	
  7366  00CA                     	ds	1
  7367  00CB                     _i2c1_state:	
  7368  00CB                     	ds	1
  7369  00CC                     _eusart1RxLastError:	
  7370  00CC                     	ds	1
  7371  00CD                     _eusart1RxCount:	
  7372  00CD                     	ds	1
  7373  00CE                     _i2c1_tr_queue:	
  7374  00CE                     	ds	3
  7375                           
  7376                           	psect	dataBANK1
  7377  00E6                     __pdataBANK1:	
  7378  00E6                     _delay:	
  7379  00E6                     	ds	2
  7380  00E8                     _threshold:	
  7381  00E8                     	ds	2
  7382  00EA                     _address:	
  7383  00EA                     	ds	2
  7384                           
  7385                           	psect	bssBANK2
  7386  0120                     __pbssBANK2:	
  7387  0120                     _eusart1RxStatusBuffer:	
  7388  0120                     	ds	8
  7389  0128                     _eusart1RxBuffer:	
  7390  0128                     	ds	8
  7391  0130                     _eusart1TxBuffer:	
  7392  0130                     	ds	8
  7393  0138                     _seed:	
  7394  0138                     	ds	8
  7395  0140                     I2C1_MasterRead@trBlock:	
  7396  0140                     	ds	4
  7397  0144                     I2C1_MasterWrite@trBlock:	
  7398  0144                     	ds	4
  7399                           
  7400                           	psect	bssBANK3
  7401  01A0                     __pbssBANK3:	
  7402  01A0                     _buttons:	
  7403  01A0                     	ds	32
  7404                           
  7405                           	psect	clrtext
  7406  15F8                     clear_ram0:	
  7407                           ;	Called with FSR0 containing the base address, and
  7408                           ;	btemp/btemp+1 has the size to clear
  7409                           
  7410  15F8  0064               	clrwdt	;clear the watchdog before getting into this loop
  7411  15F9                     clrloop0:	
  7412  15F9  0180               	clrf	0	;clear RAM location pointed to by FSR
  7413  15FA  3101               	addfsr 0,1
  7414  15FB  3001               	movlw	1
  7415  15FC  02FE               	subwf	126,f
  7416  15FD  3000               	movlw	0
  7417  15FE  3BFF               	subwfb	127,f
  7418  15FF  087F               	movf	127,w
  7419  1600  047E               	iorwf	126,w
  7420  1601  1903               	btfsc	3,2
  7421  1602  3400               	retlw	0	;all done for this memory range, return
  7422  1603  2DF9               	goto	clrloop0	;have we reached the end yet?
  7423                           
  7424                           	psect	cstackBANK1
  7425  00D1                     __pcstackBANK1:	
  7426  00D1                     ??_LED_setColor:	
  7427                           
  7428                           ; 1 bytes @ 0x0
  7429  00D1                     	ds	5
  7430  00D6                     LED_setColor@red:	
  7431                           
  7432                           ; 1 bytes @ 0x5
  7433  00D6                     	ds	1
  7434  00D7                     ??_main:	
  7435                           
  7436                           ; 1 bytes @ 0x6
  7437  00D7                     	ds	11
  7438  00E2                     main@time:	
  7439                           
  7440                           ; 2 bytes @ 0x11
  7441  00E2                     	ds	2
  7442  00E4                     main@randomNumber:	
  7443                           
  7444                           ; 2 bytes @ 0x13
  7445  00E4                     	ds	2
  7446                           
  7447                           	psect	cstackCOMMON
  7448  0076                     __pcstackCOMMON:	
  7449  0076                     ?_EUSART1_Receive_ISR:	
  7450  0076                     ?_EUSART1_Transmit_ISR:	
  7451                           ; 1 bytes @ 0x0
  7452                           
  7453  0076                     ??_EUSART1_Transmit_ISR:	
  7454                           ; 1 bytes @ 0x0
  7455                           
  7456  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  7457                           ; 1 bytes @ 0x0
  7458                           
  7459  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  7460                           ; 1 bytes @ 0x0
  7461                           
  7462  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7463                           ; 1 bytes @ 0x0
  7464                           
  7465  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7466                           ; 1 bytes @ 0x0
  7467                           
  7468  0076                     ?_EUSART1_DefaultErrorHandler:	
  7469                           ; 1 bytes @ 0x0
  7470                           
  7471  0076                     ?_EUSART1_RxDataHandler:	
  7472                           ; 1 bytes @ 0x0
  7473                           
  7474  0076                     ??_EUSART1_RxDataHandler:	
  7475                           ; 1 bytes @ 0x0
  7476                           
  7477  0076                     ?_TMR0_ISR:	
  7478                           ; 1 bytes @ 0x0
  7479                           
  7480  0076                     ??_TMR0_ISR:	
  7481                           ; 1 bytes @ 0x0
  7482                           
  7483  0076                     ?_I2C1_BusCollisionISR:	
  7484                           ; 1 bytes @ 0x0
  7485                           
  7486  0076                     ??_I2C1_BusCollisionISR:	
  7487                           ; 1 bytes @ 0x0
  7488                           
  7489  0076                     ?_I2C1_ISR:	
  7490                           ; 1 bytes @ 0x0
  7491                           
  7492  0076                     ?_ADCC_ThresholdISR:	
  7493                           ; 1 bytes @ 0x0
  7494                           
  7495  0076                     ??_ADCC_ThresholdISR:	
  7496                           ; 1 bytes @ 0x0
  7497                           
  7498  0076                     ?_PMD_Initialize:	
  7499                           ; 1 bytes @ 0x0
  7500                           
  7501  0076                     ?_PIN_MANAGER_Initialize:	
  7502                           ; 1 bytes @ 0x0
  7503                           
  7504  0076                     ?_OSCILLATOR_Initialize:	
  7505                           ; 1 bytes @ 0x0
  7506                           
  7507  0076                     ?_I2C1_Initialize:	
  7508                           ; 1 bytes @ 0x0
  7509                           
  7510  0076                     ?_ADCC_Initialize:	
  7511                           ; 1 bytes @ 0x0
  7512                           
  7513  0076                     ?_TMR0_Initialize:	
  7514                           ; 1 bytes @ 0x0
  7515                           
  7516  0076                     ?_I2C1_Stop:	
  7517                           ; 1 bytes @ 0x0
  7518                           
  7519  0076                     ??_I2C1_Stop:	
  7520                           ; 1 bytes @ 0x0
  7521                           
  7522  0076                     ?_I2C1_FunctionComplete:	
  7523                           ; 1 bytes @ 0x0
  7524                           
  7525  0076                     ??_I2C1_FunctionComplete:	
  7526                           ; 1 bytes @ 0x0
  7527                           
  7528  0076                     ?_ADCC_DefaultInterruptHandler:	
  7529                           ; 1 bytes @ 0x0
  7530                           
  7531  0076                     ??_ADCC_DefaultInterruptHandler:	
  7532                           ; 1 bytes @ 0x0
  7533                           
  7534  0076                     ?_TMR0_DefaultInterruptHandler:	
  7535                           ; 1 bytes @ 0x0
  7536                           
  7537  0076                     ??_TMR0_DefaultInterruptHandler:	
  7538                           ; 1 bytes @ 0x0
  7539                           
  7540  0076                     ?_TM1650_init:	
  7541                           ; 1 bytes @ 0x0
  7542                           
  7543  0076                     ?_CLOCK_init:	
  7544                           ; 1 bytes @ 0x0
  7545                           
  7546  0076                     ?_BUTTONS_init:	
  7547                           ; 1 bytes @ 0x0
  7548                           
  7549  0076                     ?_CONTROLLER_init:	
  7550                           ; 1 bytes @ 0x0
  7551                           
  7552  0076                     ?_DMX_init:	
  7553                           ; 1 bytes @ 0x0
  7554                           
  7555  0076                     ?_LED_init:	
  7556                           ; 1 bytes @ 0x0
  7557                           
  7558  0076                     ?_BEAT_init:	
  7559                           ; 1 bytes @ 0x0
  7560                           
  7561  0076                     ?_BUTTONS_task:	
  7562                           ; 1 bytes @ 0x0
  7563                           
  7564  0076                     ?_CONTROLLER_task:	
  7565                           ; 1 bytes @ 0x0
  7566                           
  7567  0076                     ?_BEAT_task:	
  7568                           ; 1 bytes @ 0x0
  7569                           
  7570  0076                     ?_BEAT_detected:	
  7571                           ; 1 bytes @ 0x0
  7572                           
  7573  0076                     ?_TM1650_enable:	
  7574                           ; 1 bytes @ 0x0
  7575                           
  7576  0076                     ?_EUSART1_Initialize:	
  7577                           ; 1 bytes @ 0x0
  7578                           
  7579  0076                     ?_INTERRUPT_InterruptManager:	
  7580                           ; 1 bytes @ 0x0
  7581                           
  7582  0076                     ?_SYSTEM_Initialize:	
  7583                           ; 1 bytes @ 0x0
  7584                           
  7585  0076                     ?_I2C1_WaitForLastPacketToComplete:	
  7586                           ; 1 bytes @ 0x0
  7587                           
  7588  0076                     ?_ADCC_StartConversion:	
  7589                           ; 1 bytes @ 0x0
  7590                           
  7591  0076                     ?_main:	
  7592                           ; 1 bytes @ 0x0
  7593                           
  7594  0076                     ?_TM1650_isEnabled:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597  0076                     ?_handler:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600  0076                     ??_handler:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603  0076                     ?_CLOCK_timerCallback:	
  7604                           ; 1 bytes @ 0x0
  7605                           
  7606  0076                     ??_CLOCK_timerCallback:	
  7607                           ; 1 bytes @ 0x0
  7608                           
  7609  0076                     ?_BUTTONS_isClicked:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612  0076                     ?_BUTTONS_isHeld:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615  0076                     ?_address_inc:	
  7616                           ; 1 bytes @ 0x0
  7617                           
  7618  0076                     ?_address_dec:	
  7619                           ; 1 bytes @ 0x0
  7620                           
  7621  0076                     ?_adcThresholdHandler:	
  7622                           ; 1 bytes @ 0x0
  7623                           
  7624  0076                     ??_adcThresholdHandler:	
  7625                           ; 1 bytes @ 0x0
  7626                           
  7627  0076                     ?i1_CLOCK_getTime:	
  7628                           ; 1 bytes @ 0x0
  7629                           
  7630                           
  7631                           ; 2 bytes @ 0x0
  7632  0076                     	ds	1
  7633  0077                     ??_EUSART1_Receive_ISR:	
  7634  0077                     ??_EUSART1_DefaultErrorHandler:	
  7635                           ; 1 bytes @ 0x1
  7636                           
  7637  0077                     I2C1_Stop@completion_code:	
  7638                           ; 1 bytes @ 0x1
  7639                           
  7640                           
  7641                           ; 1 bytes @ 0x1
  7642  0077                     	ds	1
  7643  0078                     ??_I2C1_ISR:	
  7644  0078                     ??i1_CLOCK_getTime:	
  7645                           ; 1 bytes @ 0x2
  7646                           
  7647                           
  7648                           ; 1 bytes @ 0x2
  7649  0078                     	ds	2
  7650  007A                     handler@dataIn:	
  7651                           
  7652                           ; 1 bytes @ 0x4
  7653  007A                     	ds	2
  7654  007C                     ??_INTERRUPT_InterruptManager:	
  7655                           
  7656                           	psect	cstackBANK0
  7657  0020                     __pcstackBANK0:	
  7658                           ; 1 bytes @ 0x6
  7659                           
  7660  0020                     ?_EUSART1_SetRxInterruptHandler:	
  7661  0020                     ?_EUSART1_SetTxInterruptHandler:	
  7662                           ; 1 bytes @ 0x0
  7663                           
  7664  0020                     ?_EUSART1_SetFramingErrorHandler:	
  7665                           ; 1 bytes @ 0x0
  7666                           
  7667  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  7668                           ; 1 bytes @ 0x0
  7669                           
  7670  0020                     ?_EUSART1_SetErrorHandler:	
  7671                           ; 1 bytes @ 0x0
  7672                           
  7673  0020                     ??_PMD_Initialize:	
  7674                           ; 1 bytes @ 0x0
  7675                           
  7676  0020                     ??_PIN_MANAGER_Initialize:	
  7677                           ; 1 bytes @ 0x0
  7678                           
  7679  0020                     ??_OSCILLATOR_Initialize:	
  7680                           ; 1 bytes @ 0x0
  7681                           
  7682  0020                     ??_I2C1_Initialize:	
  7683                           ; 1 bytes @ 0x0
  7684                           
  7685  0020                     ?_I2C1_MasterWriteTRBBuild:	
  7686                           ; 1 bytes @ 0x0
  7687                           
  7688  0020                     ?_I2C1_MasterTRBInsert:	
  7689                           ; 1 bytes @ 0x0
  7690                           
  7691  0020                     ?_ADCC_SetADTIInterruptHandler:	
  7692                           ; 1 bytes @ 0x0
  7693                           
  7694  0020                     ?_TMR0_SetInterruptHandler:	
  7695                           ; 1 bytes @ 0x0
  7696                           
  7697  0020                     ??_LED_init:	
  7698                           ; 1 bytes @ 0x0
  7699                           
  7700  0020                     ??_BEAT_detected:	
  7701                           ; 1 bytes @ 0x0
  7702                           
  7703  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  7704                           ; 1 bytes @ 0x0
  7705                           
  7706  0020                     ??_ADCC_StartConversion:	
  7707                           ; 1 bytes @ 0x0
  7708                           
  7709  0020                     ?_ADCC_SetUpperThreshold:	
  7710                           ; 1 bytes @ 0x0
  7711                           
  7712  0020                     ??_TM1650_isEnabled:	
  7713                           ; 1 bytes @ 0x0
  7714                           
  7715  0020                     ?_init:	
  7716                           ; 1 bytes @ 0x0
  7717                           
  7718  0020                     ??_BUTTONS_isClicked:	
  7719                           ; 1 bytes @ 0x0
  7720                           
  7721  0020                     ??_BUTTONS_isHeld:	
  7722                           ; 1 bytes @ 0x0
  7723                           
  7724  0020                     ?_CLOCK_getTime:	
  7725                           ; 1 bytes @ 0x0
  7726                           
  7727  0020                     ?__Umul8_16:	
  7728                           ; 2 bytes @ 0x0
  7729                           
  7730  0020                     ?___lwdiv:	
  7731                           ; 2 bytes @ 0x0
  7732                           
  7733  0020                     ?___xxtofl:	
  7734                           ; 2 bytes @ 0x0
  7735                           
  7736  0020                     ?___omul:	
  7737                           ; 4 bytes @ 0x0
  7738                           
  7739  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  7740                           ; 8 bytes @ 0x0
  7741                           
  7742  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  7743                           ; 1 bytes @ 0x0
  7744                           
  7745  0020                     ADCC_StartConversion@channel:	
  7746                           ; 1 bytes @ 0x0
  7747                           
  7748  0020                     BUTTONS_isClicked@button:	
  7749                           ; 1 bytes @ 0x0
  7750                           
  7751  0020                     BUTTONS_isHeld@button:	
  7752                           ; 1 bytes @ 0x0
  7753                           
  7754  0020                     __Umul8_16@multiplicand:	
  7755                           ; 1 bytes @ 0x0
  7756                           
  7757  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7758                           ; 1 bytes @ 0x0
  7759                           
  7760  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7761                           ; 2 bytes @ 0x0
  7762                           
  7763  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  7764                           ; 2 bytes @ 0x0
  7765                           
  7766  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7767                           ; 2 bytes @ 0x0
  7768                           
  7769  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7770                           ; 2 bytes @ 0x0
  7771                           
  7772  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  7773                           ; 2 bytes @ 0x0
  7774                           
  7775  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  7776                           ; 2 bytes @ 0x0
  7777                           
  7778  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7779                           ; 2 bytes @ 0x0
  7780                           
  7781  0020                     init@port:	
  7782                           ; 2 bytes @ 0x0
  7783                           
  7784  0020                     ___lwdiv@divisor:	
  7785                           ; 2 bytes @ 0x0
  7786                           
  7787  0020                     ___xxtofl@val:	
  7788                           ; 2 bytes @ 0x0
  7789                           
  7790  0020                     ___omul@multiplier:	
  7791                           ; 4 bytes @ 0x0
  7792                           
  7793                           
  7794                           ; 8 bytes @ 0x0
  7795  0020                     	ds	1
  7796  0021                     I2C1_MasterTRBInsert@pflag:	
  7797  0021                     I2C1_MasterWriteTRBBuild@length:	
  7798                           ; 1 bytes @ 0x1
  7799                           
  7800                           
  7801                           ; 1 bytes @ 0x1
  7802  0021                     	ds	1
  7803  0022                     ??_EUSART1_SetRxInterruptHandler:	
  7804  0022                     ??_EUSART1_SetTxInterruptHandler:	
  7805                           ; 1 bytes @ 0x2
  7806                           
  7807  0022                     ??_EUSART1_SetFramingErrorHandler:	
  7808                           ; 1 bytes @ 0x2
  7809                           
  7810  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  7811                           ; 1 bytes @ 0x2
  7812                           
  7813  0022                     ??_EUSART1_SetErrorHandler:	
  7814                           ; 1 bytes @ 0x2
  7815                           
  7816  0022                     ??_CLOCK_getTime:	
  7817                           ; 1 bytes @ 0x2
  7818                           
  7819  0022                     ??_ADCC_Initialize:	
  7820                           ; 1 bytes @ 0x2
  7821                           
  7822  0022                     ??_TMR0_Initialize:	
  7823                           ; 1 bytes @ 0x2
  7824                           
  7825  0022                     ??_I2C1_MasterTRBInsert:	
  7826                           ; 1 bytes @ 0x2
  7827                           
  7828  0022                     ??_ADCC_SetADTIInterruptHandler:	
  7829                           ; 1 bytes @ 0x2
  7830                           
  7831  0022                     ??_TMR0_SetInterruptHandler:	
  7832                           ; 1 bytes @ 0x2
  7833                           
  7834  0022                     ??_CLOCK_init:	
  7835                           ; 1 bytes @ 0x2
  7836                           
  7837  0022                     ??_DMX_init:	
  7838                           ; 1 bytes @ 0x2
  7839                           
  7840  0022                     ??_BEAT_init:	
  7841                           ; 1 bytes @ 0x2
  7842                           
  7843  0022                     ??_BUTTONS_task:	
  7844                           ; 1 bytes @ 0x2
  7845                           
  7846  0022                     ??__Umul8_16:	
  7847                           ; 1 bytes @ 0x2
  7848                           
  7849  0022                     ??_EUSART1_Initialize:	
  7850                           ; 1 bytes @ 0x2
  7851                           
  7852  0022                     ??_ADCC_SetUpperThreshold:	
  7853                           ; 1 bytes @ 0x2
  7854                           
  7855  0022                     init@pin:	
  7856                           ; 1 bytes @ 0x2
  7857                           
  7858  0022                     I2C1_MasterWriteTRBBuild@address:	
  7859                           ; 1 bytes @ 0x2
  7860                           
  7861  0022                     ___lwdiv@dividend:	
  7862                           ; 2 bytes @ 0x2
  7863                           
  7864                           
  7865                           ; 2 bytes @ 0x2
  7866  0022                     	ds	1
  7867  0023                     ??_SYSTEM_Initialize:	
  7868  0023                     ??_init:	
  7869                           ; 1 bytes @ 0x3
  7870                           
  7871  0023                     I2C1_MasterTRBInsert@count:	
  7872                           ; 1 bytes @ 0x3
  7873                           
  7874                           
  7875                           ; 1 bytes @ 0x3
  7876  0023                     	ds	1
  7877  0024                     ??_I2C1_MasterWriteTRBBuild:	
  7878  0024                     ??___lwdiv:	
  7879                           ; 1 bytes @ 0x4
  7880                           
  7881  0024                     ??___xxtofl:	
  7882                           ; 1 bytes @ 0x4
  7883                           
  7884  0024                     init@btn:	
  7885                           ; 1 bytes @ 0x4
  7886                           
  7887  0024                     __Umul8_16@product:	
  7888                           ; 1 bytes @ 0x4
  7889                           
  7890                           
  7891                           ; 2 bytes @ 0x4
  7892  0024                     	ds	1
  7893  0025                     ??_BUTTONS_init:	
  7894  0025                     BUTTONS_task@i:	
  7895                           ; 1 bytes @ 0x5
  7896                           
  7897  0025                     ___lwdiv@counter:	
  7898                           ; 1 bytes @ 0x5
  7899                           
  7900                           
  7901                           ; 1 bytes @ 0x5
  7902  0025                     	ds	1
  7903  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  7904  0026                     BUTTONS_task@time:	
  7905                           ; 1 bytes @ 0x6
  7906                           
  7907  0026                     ___lwdiv@quotient:	
  7908                           ; 2 bytes @ 0x6
  7909                           
  7910  0026                     __Umul8_16@word_mpld:	
  7911                           ; 2 bytes @ 0x6
  7912                           
  7913                           
  7914                           ; 2 bytes @ 0x6
  7915  0026                     	ds	1
  7916  0027                     ?_I2C1_MasterWrite:	
  7917  0027                     I2C1_MasterWrite@length:	
  7918                           ; 1 bytes @ 0x7
  7919                           
  7920                           
  7921                           ; 1 bytes @ 0x7
  7922  0027                     	ds	1
  7923  0028                     ??_BEAT_task:	
  7924  0028                     ?___lwmod:	
  7925                           ; 1 bytes @ 0x8
  7926                           
  7927  0028                     BUTTONS_task@btn:	
  7928                           ; 2 bytes @ 0x8
  7929                           
  7930  0028                     ___xxtofl@sign:	
  7931                           ; 1 bytes @ 0x8
  7932                           
  7933  0028                     __Umul8_16@multiplier:	
  7934                           ; 1 bytes @ 0x8
  7935                           
  7936  0028                     I2C1_MasterWrite@address:	
  7937                           ; 1 bytes @ 0x8
  7938                           
  7939  0028                     ___lwmod@divisor:	
  7940                           ; 2 bytes @ 0x8
  7941                           
  7942  0028                     ___omul@multiplicand:	
  7943                           ; 2 bytes @ 0x8
  7944                           
  7945                           
  7946                           ; 8 bytes @ 0x8
  7947  0028                     	ds	1
  7948  0029                     ___xxtofl@exp:	
  7949                           
  7950                           ; 1 bytes @ 0x9
  7951  0029                     	ds	1
  7952  002A                     I2C1_MasterWrite@pflag:	
  7953  002A                     BEAT_task@offset:	
  7954                           ; 1 bytes @ 0xA
  7955                           
  7956  002A                     ___lwmod@dividend:	
  7957                           ; 2 bytes @ 0xA
  7958                           
  7959  002A                     ___xxtofl@arg:	
  7960                           ; 2 bytes @ 0xA
  7961                           
  7962                           
  7963                           ; 4 bytes @ 0xA
  7964  002A                     	ds	1
  7965  002B                     ??_I2C1_MasterWrite:	
  7966                           
  7967                           ; 1 bytes @ 0xB
  7968  002B                     	ds	1
  7969  002C                     ??___lwmod:	
  7970                           
  7971                           ; 1 bytes @ 0xC
  7972  002C                     	ds	1
  7973  002D                     I2C1_MasterWrite@pdata:	
  7974  002D                     ___lwmod@counter:	
  7975                           ; 1 bytes @ 0xD
  7976                           
  7977                           
  7978                           ; 1 bytes @ 0xD
  7979  002D                     	ds	1
  7980  002E                     ?_writeData:	
  7981  002E                     ?___fldiv:	
  7982                           ; 1 bytes @ 0xE
  7983                           
  7984  002E                     writeData@data:	
  7985                           ; 4 bytes @ 0xE
  7986                           
  7987  002E                     ___fldiv@a:	
  7988                           ; 1 bytes @ 0xE
  7989                           
  7990                           
  7991                           ; 4 bytes @ 0xE
  7992  002E                     	ds	1
  7993  002F                     ??_writeData:	
  7994                           
  7995                           ; 1 bytes @ 0xF
  7996  002F                     	ds	1
  7997  0030                     ??___omul:	
  7998                           
  7999                           ; 1 bytes @ 0x10
  8000  0030                     	ds	1
  8001  0031                     ___omul@product:	
  8002                           
  8003                           ; 8 bytes @ 0x11
  8004  0031                     	ds	1
  8005  0032                     writeData@address:	
  8006  0032                     ___fldiv@b:	
  8007                           ; 1 bytes @ 0x12
  8008                           
  8009                           
  8010                           ; 4 bytes @ 0x12
  8011  0032                     	ds	1
  8012  0033                     writeData@dataToSend:	
  8013                           
  8014                           ; 1 bytes @ 0x13
  8015  0033                     	ds	1
  8016  0034                     writeData@status:	
  8017                           
  8018                           ; 1 bytes @ 0x14
  8019  0034                     	ds	1
  8020  0035                     ??_TM1650_enable:	
  8021  0035                     ?_TM1650_setDigit:	
  8022                           ; 1 bytes @ 0x15
  8023                           
  8024  0035                     TM1650_setDigit@num:	
  8025                           ; 1 bytes @ 0x15
  8026                           
  8027  0035                     TM1650_enable@enable:	
  8028                           ; 1 bytes @ 0x15
  8029                           
  8030                           
  8031                           ; 1 bytes @ 0x15
  8032  0035                     	ds	1
  8033  0036                     ??_TM1650_init:	
  8034  0036                     ??___fldiv:	
  8035                           ; 1 bytes @ 0x16
  8036                           
  8037  0036                     TM1650_setDigit@dp:	
  8038                           ; 1 bytes @ 0x16
  8039                           
  8040                           
  8041                           ; 1 bytes @ 0x16
  8042  0036                     	ds	1
  8043  0037                     ??_TM1650_setDigit:	
  8044                           
  8045                           ; 1 bytes @ 0x17
  8046  0037                     	ds	1
  8047  0038                     TM1650_setDigit@digit:	
  8048                           
  8049                           ; 1 bytes @ 0x18
  8050  0038                     	ds	1
  8051  0039                     ?_rand:	
  8052  0039                     TM1650_setDigit@character:	
  8053                           ; 2 bytes @ 0x19
  8054                           
  8055                           
  8056                           ; 1 bytes @ 0x19
  8057  0039                     	ds	1
  8058  003A                     ?_TM1650_fastPrintNum:	
  8059  003A                     TM1650_fastPrintNum@inputNumber:	
  8060                           ; 1 bytes @ 0x1A
  8061                           
  8062                           
  8063                           ; 2 bytes @ 0x1A
  8064  003A                     	ds	1
  8065  003B                     ??_rand:	
  8066  003B                     ___fldiv@rem:	
  8067                           ; 1 bytes @ 0x1B
  8068                           
  8069                           
  8070                           ; 4 bytes @ 0x1B
  8071  003B                     	ds	1
  8072  003C                     ??_TM1650_fastPrintNum:	
  8073                           
  8074                           ; 1 bytes @ 0x1C
  8075  003C                     	ds	1
  8076  003D                     ??_CONTROLLER_init:	
  8077  003D                     ??_CONTROLLER_task:	
  8078                           ; 1 bytes @ 0x1D
  8079                           
  8080  003D                     ??_address_inc:	
  8081                           ; 1 bytes @ 0x1D
  8082                           
  8083  003D                     ??_address_dec:	
  8084                           ; 1 bytes @ 0x1D
  8085                           
  8086                           
  8087                           ; 1 bytes @ 0x1D
  8088  003D                     	ds	2
  8089  003F                     CONTROLLER_task@active:	
  8090  003F                     ___fldiv@sign:	
  8091                           ; 1 bytes @ 0x1F
  8092                           
  8093                           
  8094                           ; 1 bytes @ 0x1F
  8095  003F                     	ds	1
  8096  0040                     ___fldiv@new_exp:	
  8097                           
  8098                           ; 2 bytes @ 0x20
  8099  0040                     	ds	2
  8100  0042                     ___fldiv@grs:	
  8101                           
  8102                           ; 4 bytes @ 0x22
  8103  0042                     	ds	1
  8104  0043                     ?___awmod:	
  8105  0043                     ___awmod@divisor:	
  8106                           ; 2 bytes @ 0x23
  8107                           
  8108                           
  8109                           ; 2 bytes @ 0x23
  8110  0043                     	ds	2
  8111  0045                     ___awmod@dividend:	
  8112                           
  8113                           ; 2 bytes @ 0x25
  8114  0045                     	ds	1
  8115  0046                     ___fldiv@bexp:	
  8116                           
  8117                           ; 1 bytes @ 0x26
  8118  0046                     	ds	1
  8119  0047                     ??___awmod:	
  8120  0047                     ___fldiv@aexp:	
  8121                           ; 1 bytes @ 0x27
  8122                           
  8123                           
  8124                           ; 1 bytes @ 0x27
  8125  0047                     	ds	1
  8126  0048                     ?___flmul:	
  8127  0048                     ___awmod@counter:	
  8128                           ; 4 bytes @ 0x28
  8129                           
  8130  0048                     ___flmul@b:	
  8131                           ; 1 bytes @ 0x28
  8132                           
  8133                           
  8134                           ; 4 bytes @ 0x28
  8135  0048                     	ds	1
  8136  0049                     ___awmod@sign:	
  8137                           
  8138                           ; 1 bytes @ 0x29
  8139  0049                     	ds	3
  8140  004C                     ___flmul@a:	
  8141                           
  8142                           ; 4 bytes @ 0x2C
  8143  004C                     	ds	4
  8144  0050                     ??___flmul:	
  8145                           
  8146                           ; 1 bytes @ 0x30
  8147  0050                     	ds	5
  8148  0055                     ___flmul@sign:	
  8149                           
  8150                           ; 1 bytes @ 0x35
  8151  0055                     	ds	1
  8152  0056                     ___flmul@aexp:	
  8153                           
  8154                           ; 1 bytes @ 0x36
  8155  0056                     	ds	1
  8156  0057                     ___flmul@grs:	
  8157                           
  8158                           ; 4 bytes @ 0x37
  8159  0057                     	ds	4
  8160  005B                     ___flmul@bexp:	
  8161                           
  8162                           ; 1 bytes @ 0x3B
  8163  005B                     	ds	1
  8164  005C                     ___flmul@prod:	
  8165                           
  8166                           ; 4 bytes @ 0x3C
  8167  005C                     	ds	4
  8168  0060                     ___flmul@temp:	
  8169                           
  8170                           ; 2 bytes @ 0x40
  8171  0060                     	ds	2
  8172  0062                     ?___fltol:	
  8173  0062                     ___fltol@f1:	
  8174                           ; 4 bytes @ 0x42
  8175                           
  8176                           
  8177                           ; 4 bytes @ 0x42
  8178  0062                     	ds	4
  8179  0066                     ??___fltol:	
  8180                           
  8181                           ; 1 bytes @ 0x46
  8182  0066                     	ds	5
  8183  006B                     ___fltol@sign1:	
  8184                           
  8185                           ; 1 bytes @ 0x4B
  8186  006B                     	ds	1
  8187  006C                     ___fltol@exp1:	
  8188                           
  8189                           ; 1 bytes @ 0x4C
  8190  006C                     	ds	1
  8191  006D                     ?_LED_setColor:	
  8192  006D                     LED_setColor@green:	
  8193                           ; 1 bytes @ 0x4D
  8194                           
  8195                           
  8196                           ; 1 bytes @ 0x4D
  8197  006D                     	ds	1
  8198  006E                     LED_setColor@blue:	
  8199                           
  8200                           ; 1 bytes @ 0x4E
  8201  006E                     	ds	1
  8202  006F                     LED_setColor@white:	
  8203                           
  8204                           ; 1 bytes @ 0x4F
  8205  006F                     	ds	1
  8206                           
  8207                           	psect	maintext
  8208  05B0                     __pmaintext:	
  8209 ;;
  8210 ;;Main: autosize = 0, tempsize = 11, incstack = 0, save=0
  8211 ;;
  8212 ;; *************** function _main *****************
  8213 ;; Defined at:
  8214 ;;		line 59 in file "main.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;		None
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;  randomNumber    2   19[BANK1 ] int 
  8219 ;;  time            2   17[BANK1 ] unsigned short 
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  1    wreg      void 
  8222 ;; Registers used:
  8223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8224 ;; Tracked objects:
  8225 ;;		On entry : B3F/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8230 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8231 ;;      Temps:          0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8232 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8233 ;;Total ram usage:       15 bytes
  8234 ;; Hardware stack levels required when called:   12
  8235 ;; This function calls:
  8236 ;;		_BEAT_detected
  8237 ;;		_BEAT_init
  8238 ;;		_BEAT_task
  8239 ;;		_BUTTONS_init
  8240 ;;		_BUTTONS_task
  8241 ;;		_CLOCK_getTime
  8242 ;;		_CLOCK_init
  8243 ;;		_CONTROLLER_init
  8244 ;;		_CONTROLLER_task
  8245 ;;		_DMX_init
  8246 ;;		_LED_init
  8247 ;;		_LED_setColor
  8248 ;;		_SYSTEM_Initialize
  8249 ;;		_TM1650_fastPrintNum
  8250 ;;		_TM1650_init
  8251 ;;		___awmod
  8252 ;;		_rand
  8253 ;; This function is called by:
  8254 ;;		Startup code after reset
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258                           
  8259                           ;psect for function _main
  8260  05B0                     _main:	
  8261                           
  8262                           ;main.c: 62:     SYSTEM_Initialize();
  8263                           
  8264                           ;incstack = 0
  8265                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8266  05B0  3196  2675  3185   	fcall	_SYSTEM_Initialize
  8267                           
  8268                           ;main.c: 63:     _delay((unsigned long)((50)*(4000000/4000.0)));
  8269  05B3  3041               	movlw	65
  8270  05B4  0141               	movlb	1	; select bank1
  8271  05B5  00D7               	movwf	??_main^(0+128)
  8272  05B6  30EE               	movlw	238
  8273  05B7                     u5597:	
  8274  05B7  0B89               	decfsz	9,f
  8275  05B8  2DB7               	goto	u5597
  8276  05B9  0BD7               	decfsz	??_main^(0+128),f
  8277  05BA  2DB7               	goto	u5597
  8278  05BB  0000               	nop
  8279                           
  8280                           ;main.c: 64:     TM1650_init();
  8281  05BC  3195  25DA  3185   	fcall	_TM1650_init
  8282                           
  8283                           ;main.c: 65:     CLOCK_init();
  8284  05BF  3195  2566  3185   	fcall	_CLOCK_init
  8285                           
  8286                           ;main.c: 66:     BUTTONS_init();
  8287  05C2  318A  223B  3185   	fcall	_BUTTONS_init
  8288                           
  8289                           ;main.c: 67:     CONTROLLER_init();
  8290  05C5  3195  25ED  3185   	fcall	_CONTROLLER_init
  8291                           
  8292                           ;main.c: 85:     DMX_init();
  8293  05C8  3196  262D  3185   	fcall	_DMX_init
  8294                           
  8295                           ;main.c: 86:     LED_init();
  8296  05CB  3188  201C  3185   	fcall	_LED_init
  8297                           
  8298                           ;main.c: 87:     BEAT_init();
  8299  05CE  3196  268A  3185   	fcall	_BEAT_init
  8300  05D1  2E10               	goto	l5533
  8301  05D2                     l5543:	
  8302                           
  8303                           ;main.c: 137:             LED_setColor(inputArray[address], inputArray[address+1], input
      +                          Array[address+2], inputArray[address+3]);
  8304  05D2  30F0               	movlw	240
  8305  05D3  00D7               	movwf	??_main^(0+128)
  8306  05D4  3025               	movlw	37
  8307  05D5  00D8               	movwf	(??_main^(0+128)+1)
  8308  05D6  086A               	movf	_address^(0+128),w
  8309  05D7  0757               	addwf	??_main^(0+128),w
  8310  05D8  0086               	movwf	6
  8311  05D9  086B               	movf	(_address+1)^(0+128),w
  8312  05DA  3D58               	addwfc	(??_main+1)^(0+128),w
  8313  05DB  0087               	movwf	7
  8314  05DC  0801               	movf	1,w
  8315  05DD  00D9               	movwf	(??_main+2)^(0+128)
  8316  05DE  0859               	movf	(??_main+2)^(0+128),w
  8317  05DF  0140               	movlb	0	; select bank0
  8318  05E0  00ED               	movwf	LED_setColor@green
  8319  05E1  30F1               	movlw	241
  8320  05E2  0141               	movlb	1	; select bank1
  8321  05E3  00DA               	movwf	(??_main+3)^(0+128)
  8322  05E4  3025               	movlw	37
  8323  05E5  00DB               	movwf	((??_main+3)^(0+128)+1)
  8324  05E6  086A               	movf	_address^(0+128),w
  8325  05E7  075A               	addwf	(??_main+3)^(0+128),w
  8326  05E8  0086               	movwf	6
  8327  05E9  086B               	movf	(_address+1)^(0+128),w
  8328  05EA  3D5B               	addwfc	(??_main+4)^(0+128),w
  8329  05EB  0087               	movwf	7
  8330  05EC  0801               	movf	1,w
  8331  05ED  00DC               	movwf	(??_main+5)^(0+128)
  8332  05EE  085C               	movf	(??_main+5)^(0+128),w
  8333  05EF  0140               	movlb	0	; select bank0
  8334  05F0  00EE               	movwf	LED_setColor@blue
  8335  05F1  30F2               	movlw	242
  8336  05F2  0141               	movlb	1	; select bank1
  8337  05F3  00DD               	movwf	(??_main+6)^(0+128)
  8338  05F4  3025               	movlw	37
  8339  05F5  00DE               	movwf	((??_main+6)^(0+128)+1)
  8340  05F6  086A               	movf	_address^(0+128),w
  8341  05F7  075D               	addwf	(??_main+6)^(0+128),w
  8342  05F8  0086               	movwf	6
  8343  05F9  086B               	movf	(_address+1)^(0+128),w
  8344  05FA  3D5E               	addwfc	(??_main+7)^(0+128),w
  8345  05FB  0087               	movwf	7
  8346  05FC  0801               	movf	1,w
  8347  05FD  00DF               	movwf	(??_main+8)^(0+128)
  8348  05FE  085F               	movf	(??_main+8)^(0+128),w
  8349  05FF  0140               	movlb	0	; select bank0
  8350  0600  00EF               	movwf	LED_setColor@white
  8351  0601  30EF               	movlw	239
  8352  0602  0141               	movlb	1	; select bank1
  8353  0603  00E0               	movwf	(??_main+9)^(0+128)
  8354  0604  3025               	movlw	37
  8355  0605  00E1               	movwf	((??_main+9)^(0+128)+1)
  8356  0606  086A               	movf	_address^(0+128),w
  8357  0607  0760               	addwf	(??_main+9)^(0+128),w
  8358  0608  0086               	movwf	6
  8359  0609  086B               	movf	(_address+1)^(0+128),w
  8360  060A  3D61               	addwfc	(??_main+10)^(0+128),w
  8361  060B  0087               	movwf	7
  8362  060C  0801               	movf	1,w
  8363  060D                     L1:	
  8364  060D  3182  22B5  3185   	fcall	_LED_setColor
  8365  0610                     l5533:	
  8366                           ;main.c: 138:         } else if ((CLOCK_getTime() - lastActiveDMXTime) > 50) {
  8367                           
  8368                           ;main.c: 143:                 continue;
  8369                           
  8370                           
  8371                           ;main.c: 130:     {;main.c: 131:         BUTTONS_task();
  8372  0610  3187  2702  3185   	fcall	_BUTTONS_task
  8373                           
  8374                           ;main.c: 132:         CONTROLLER_task();
  8375  0613  318A  22D8  3185   	fcall	_CONTROLLER_task
  8376                           
  8377                           ;main.c: 133:         BEAT_task();
  8378  0616  318C  24D8  3185   	fcall	_BEAT_task
  8379                           
  8380                           ;main.c: 134:         TM1650_fastPrintNum(address);
  8381  0619  0141               	movlb	1	; select bank1
  8382  061A  086B               	movf	(_address+1)^(0+128),w
  8383  061B  0140               	movlb	0	; select bank0
  8384  061C  00BB               	movwf	TM1650_fastPrintNum@inputNumber+1
  8385  061D  0141               	movlb	1	; select bank1
  8386  061E  086A               	movf	_address^(0+128),w
  8387  061F  0140               	movlb	0	; select bank0
  8388  0620  00BA               	movwf	TM1650_fastPrintNum@inputNumber
  8389  0621  318D  25A9  3185   	fcall	_TM1650_fastPrintNum
  8390                           
  8391                           ;main.c: 136:         if((CLOCK_getTime() - lastActiveDMXTime) <= 50){
  8392  0624  3195  2592  3185   	fcall	_CLOCK_getTime
  8393  0627  0141               	movlb	1	; select bank1
  8394  0628  083B               	movf	_lastActiveDMXTime^(0+128),w
  8395  0629  0140               	movlb	0	; select bank0
  8396  062A  0220               	subwf	?_CLOCK_getTime,w
  8397  062B  0141               	movlb	1	; select bank1
  8398  062C  00D7               	movwf	??_main^(0+128)
  8399  062D  083C               	movf	(_lastActiveDMXTime+1)^(0+128),w
  8400  062E  0140               	movlb	0	; select bank0
  8401  062F  3B21               	subwfb	?_CLOCK_getTime+1,w
  8402  0630  0141               	movlb	1	; select bank1
  8403  0631  00D8               	movwf	(??_main+1)^(0+128)
  8404  0632  3000               	movlw	0
  8405  0633  0258               	subwf	(??_main+1)^(0+128),w
  8406  0634  3033               	movlw	51
  8407  0635  1903               	skipnz
  8408  0636  0257               	subwf	??_main^(0+128),w
  8409  0637  1C03               	btfss	3,0
  8410  0638  2DD2               	goto	l5543
  8411  0639  3195  2592  3185   	fcall	_CLOCK_getTime
  8412  063C  0141               	movlb	1	; select bank1
  8413  063D  083B               	movf	_lastActiveDMXTime^(0+128),w
  8414  063E  0140               	movlb	0	; select bank0
  8415  063F  0220               	subwf	?_CLOCK_getTime,w
  8416  0640  0141               	movlb	1	; select bank1
  8417  0641  00D7               	movwf	??_main^(0+128)
  8418  0642  083C               	movf	(_lastActiveDMXTime+1)^(0+128),w
  8419  0643  0140               	movlb	0	; select bank0
  8420  0644  3B21               	subwfb	?_CLOCK_getTime+1,w
  8421  0645  0141               	movlb	1	; select bank1
  8422  0646  00D8               	movwf	(??_main+1)^(0+128)
  8423  0647  3000               	movlw	0
  8424  0648  0258               	subwf	(??_main+1)^(0+128),w
  8425  0649  3033               	movlw	51
  8426  064A  1903               	skipnz
  8427  064B  0257               	subwf	??_main^(0+128),w
  8428  064C  1C03               	skipc
  8429  064D  2E10               	goto	l5533
  8430                           
  8431                           ;main.c: 140:             time_t time = CLOCK_getTime();
  8432  064E  3195  2592  3185   	fcall	_CLOCK_getTime
  8433  0651  0140               	movlb	0	; select bank0
  8434  0652  0821               	movf	?_CLOCK_getTime+1,w
  8435  0653  0141               	movlb	1	; select bank1
  8436  0654  00E3               	movwf	(main@time+1)^(0+128)
  8437  0655  0140               	movlb	0	; select bank0
  8438  0656  0820               	movf	?_CLOCK_getTime,w
  8439  0657  0141               	movlb	1	; select bank1
  8440  0658  00E2               	movwf	main@time^(0+128)
  8441                           
  8442                           ;main.c: 142:             if(time - lastTime < 100){
  8443  0659  0833               	movf	_lastTime^(0+128),w
  8444  065A  0262               	subwf	main@time^(0+128),w
  8445  065B  00D7               	movwf	??_main^(0+128)
  8446  065C  0834               	movf	(_lastTime+1)^(0+128),w
  8447  065D  3B63               	subwfb	(main@time+1)^(0+128),w
  8448  065E  00D8               	movwf	(??_main+1)^(0+128)
  8449  065F  3000               	movlw	0
  8450  0660  0258               	subwf	(??_main+1)^(0+128),w
  8451  0661  3064               	movlw	100
  8452  0662  1903               	skipnz
  8453  0663  0257               	subwf	??_main^(0+128),w
  8454  0664  1C03               	btfss	3,0
  8455  0665  2E10               	goto	l5533
  8456                           
  8457                           ;main.c: 146:             lastTime = time;
  8458  0666  0863               	movf	(main@time+1)^(0+128),w
  8459  0667  00B4               	movwf	(_lastTime+1)^(0+128)
  8460  0668  0862               	movf	main@time^(0+128),w
  8461  0669  00B3               	movwf	_lastTime^(0+128)
  8462                           
  8463                           ;main.c: 148:             if(BEAT_detected()){
  8464  066A  3195  256E  3185   	fcall	_BEAT_detected
  8465  066D  3A00               	xorlw	0
  8466  066E  1903               	skipnz
  8467  066F  2E10               	goto	l5533
  8468                           
  8469                           ;main.c: 149:                 int randomNumber = rand() % 10;
  8470  0670  300A               	movlw	10
  8471  0671  0140               	movlb	0	; select bank0
  8472  0672  00C3               	movwf	___awmod@divisor
  8473  0673  3000               	movlw	0
  8474  0674  00C4               	movwf	___awmod@divisor+1
  8475  0675  318C  2439  3185   	fcall	_rand
  8476  0678  0140               	movlb	0	; select bank0
  8477  0679  083A               	movf	?_rand+1,w
  8478  067A  00C6               	movwf	___awmod@dividend+1
  8479  067B  0839               	movf	?_rand,w
  8480  067C  00C5               	movwf	___awmod@dividend
  8481  067D  3189  21AD  3185   	fcall	___awmod
  8482  0680  0140               	movlb	0	; select bank0
  8483  0681  0844               	movf	?___awmod+1,w
  8484  0682  0141               	movlb	1	; select bank1
  8485  0683  00E5               	movwf	(main@randomNumber+1)^(0+128)
  8486  0684  0140               	movlb	0	; select bank0
  8487  0685  0843               	movf	?___awmod,w
  8488  0686  0141               	movlb	1	; select bank1
  8489  0687  00E4               	movwf	main@randomNumber^(0+128)
  8490                           
  8491                           ;main.c: 150:                 if(randomNumber == 0) {
  8492  0688  0864               	movf	main@randomNumber^(0+128),w
  8493  0689  0465               	iorwf	(main@randomNumber+1)^(0+128),w
  8494  068A  1D03               	btfss	3,2
  8495  068B  2E8F               	goto	l5563
  8496                           
  8497                           ;main.c: 152:                     LED_setColor(200, 0, 0, 0);
  8498  068C  0140               	movlb	0	; select bank0
  8499  068D  01ED               	clrf	LED_setColor@green
  8500  068E  2E98               	goto	L2
  8501  068F                     l5563:	
  8502                           ;main.c: 153:                 } else if (randomNumber == 1) {
  8503                           
  8504  068F  0364               	decf	main@randomNumber^(0+128),w
  8505  0690  0465               	iorwf	(main@randomNumber+1)^(0+128),w
  8506  0691  1D03               	btfss	3,2
  8507  0692  2E9A               	goto	l5567
  8508                           
  8509                           ;main.c: 155:                     LED_setColor(200, 200, 0, 0);
  8510  0693  30C8               	movlw	200
  8511  0694  00D7               	movwf	??_main^(0+128)
  8512  0695  0857               	movf	??_main^(0+128),w
  8513  0696  0140               	movlb	0	; select bank0
  8514  0697  00ED               	movwf	LED_setColor@green
  8515  0698                     L2:	
  8516  0698  01EE               	clrf	LED_setColor@blue
  8517  0699  2EEF               	goto	L3
  8518  069A                     l5567:	
  8519                           ;main.c: 156:                 } else if (randomNumber == 2) {
  8520                           
  8521  069A  3002               	movlw	2
  8522  069B  0664               	xorwf	main@randomNumber^(0+128),w
  8523  069C  0465               	iorwf	(main@randomNumber+1)^(0+128),w
  8524  069D  1D03               	btfss	3,2
  8525  069E  2EA8               	goto	l5571
  8526                           
  8527                           ;main.c: 158:                     LED_setColor(70, 200, 0, 0);
  8528  069F  30C8               	movlw	200
  8529  06A0  00D7               	movwf	??_main^(0+128)
  8530  06A1  0857               	movf	??_main^(0+128),w
  8531  06A2  0140               	movlb	0	; select bank0
  8532  06A3  00ED               	movwf	LED_setColor@green
  8533  06A4  01EE               	clrf	LED_setColor@blue
  8534  06A5  01EF               	clrf	LED_setColor@white
  8535  06A6  3046               	movlw	70
  8536  06A7  2E0D               	goto	L1
  8537  06A8                     l5571:	
  8538                           ;main.c: 159:                 } else if (randomNumber == 3) {
  8539                           
  8540  06A8  3003               	movlw	3
  8541  06A9  0664               	xorwf	main@randomNumber^(0+128),w
  8542  06AA  0465               	iorwf	(main@randomNumber+1)^(0+128),w
  8543  06AB  1D03               	btfss	3,2
  8544  06AC  2EB4               	goto	l5575
  8545                           
  8546                           ;main.c: 161:                     LED_setColor(0, 200, 0, 0);
  8547  06AD  30C8               	movlw	200
  8548  06AE  00D7               	movwf	??_main^(0+128)
  8549  06AF  0857               	movf	??_main^(0+128),w
  8550  06B0  0140               	movlb	0	; select bank0
  8551  06B1  00ED               	movwf	LED_setColor@green
  8552  06B2  01EE               	clrf	LED_setColor@blue
  8553  06B3  2ED0               	goto	L5
  8554  06B4                     l5575:	
  8555                           ;main.c: 162:                 } else if (randomNumber == 4) {
  8556                           
  8557  06B4  3004               	movlw	4
  8558  06B5  0664               	xorwf	main@randomNumber^(0+128),w
  8559  06B6  0465               	iorwf	(main@randomNumber+1)^(0+128),w
  8560  06B7  1D03               	btfss	3,2
  8561  06B8  2EC3               	goto	l5579
  8562                           
  8563                           ;main.c: 164:                     LED_setColor(0, 200, 200, 0);
  8564  06B9  30C8               	movlw	200
  8565  06BA  00D7               	movwf	??_main^(0+128)
  8566  06BB  0857               	movf	??_main^(0+128),w
  8567  06BC  0140               	movlb	0	; select bank0
  8568  06BD  00ED               	movwf	LED_setColor@green
  8569  06BE  30C8               	movlw	200
  8570  06BF  0141               	movlb	1	; select bank1
  8571  06C0  00D8               	movwf	(??_main+1)^(0+128)
  8572  06C1  0858               	movf	(??_main+1)^(0+128),w
  8573  06C2  2ECE               	goto	L7
  8574  06C3                     l5579:	
  8575                           ;main.c: 165:                 } else if (randomNumber == 5) {
  8576                           
  8577  06C3  3005               	movlw	5
  8578  06C4  0664               	xorwf	main@randomNumber^(0+128),w
  8579  06C5  0465               	iorwf	(main@randomNumber+1)^(0+128),w
  8580  06C6  1D03               	btfss	3,2
  8581  06C7  2ED2               	goto	l5583
  8582                           
  8583                           ;main.c: 167:                     LED_setColor(0, 0, 200, 0);
  8584  06C8  0140               	movlb	0	; select bank0
  8585  06C9  01ED               	clrf	LED_setColor@green
  8586  06CA  30C8               	movlw	200
  8587  06CB  0141               	movlb	1	; select bank1
  8588  06CC  00D7               	movwf	??_main^(0+128)
  8589  06CD  0857               	movf	??_main^(0+128),w
  8590  06CE                     L7:	
  8591  06CE  0140               	movlb	0	; select bank0
  8592  06CF  00EE               	movwf	LED_setColor@blue
  8593  06D0                     L5:	
  8594  06D0  01EF               	clrf	LED_setColor@white
  8595  06D1  2F00               	goto	L6
  8596  06D2                     l5583:	
  8597                           ;main.c: 168:                 } else if (randomNumber == 6) {
  8598                           
  8599  06D2  3006               	movlw	6
  8600  06D3  0664               	xorwf	main@randomNumber^(0+128),w
  8601  06D4  0465               	iorwf	(main@randomNumber+1)^(0+128),w
  8602  06D5  1D03               	btfss	3,2
  8603  06D6  2EE2               	goto	l5587
  8604                           
  8605                           ;main.c: 170:                     LED_setColor(14, 0, 200, 0);
  8606  06D7  0140               	movlb	0	; select bank0
  8607  06D8  01ED               	clrf	LED_setColor@green
  8608  06D9  30C8               	movlw	200
  8609  06DA  0141               	movlb	1	; select bank1
  8610  06DB  00D7               	movwf	??_main^(0+128)
  8611  06DC  0857               	movf	??_main^(0+128),w
  8612  06DD  0140               	movlb	0	; select bank0
  8613  06DE  00EE               	movwf	LED_setColor@blue
  8614  06DF  01EF               	clrf	LED_setColor@white
  8615  06E0  300E               	movlw	14
  8616  06E1  2E0D               	goto	L1
  8617  06E2                     l5587:	
  8618                           ;main.c: 171:                 } else if (randomNumber == 7) {
  8619                           
  8620  06E2  3007               	movlw	7
  8621  06E3  0664               	xorwf	main@randomNumber^(0+128),w
  8622  06E4  0465               	iorwf	(main@randomNumber+1)^(0+128),w
  8623  06E5  1D03               	btfss	3,2
  8624  06E6  2EF2               	goto	l5591
  8625                           
  8626                           ;main.c: 173:                     LED_setColor(200, 0, 200, 0);
  8627  06E7  0140               	movlb	0	; select bank0
  8628  06E8  01ED               	clrf	LED_setColor@green
  8629  06E9  30C8               	movlw	200
  8630  06EA  0141               	movlb	1	; select bank1
  8631  06EB  00D7               	movwf	??_main^(0+128)
  8632  06EC  0857               	movf	??_main^(0+128),w
  8633  06ED  0140               	movlb	0	; select bank0
  8634  06EE  00EE               	movwf	LED_setColor@blue
  8635  06EF                     L3:	
  8636  06EF  01EF               	clrf	LED_setColor@white
  8637  06F0  30C8               	movlw	200
  8638  06F1  2E0D               	goto	L1
  8639  06F2                     l5591:	
  8640                           ;main.c: 174:                 } else if (randomNumber == 8) {
  8641                           
  8642  06F2  3008               	movlw	8
  8643  06F3  0664               	xorwf	main@randomNumber^(0+128),w
  8644  06F4  0465               	iorwf	(main@randomNumber+1)^(0+128),w
  8645  06F5  1D03               	btfss	3,2
  8646  06F6  2E10               	goto	l5533
  8647                           
  8648                           ;main.c: 176:                     LED_setColor(0, 0, 0, 250);
  8649  06F7  0140               	movlb	0	; select bank0
  8650  06F8  01ED               	clrf	LED_setColor@green
  8651  06F9  01EE               	clrf	LED_setColor@blue
  8652  06FA  30FA               	movlw	250
  8653  06FB  0141               	movlb	1	; select bank1
  8654  06FC  00D7               	movwf	??_main^(0+128)
  8655  06FD  0857               	movf	??_main^(0+128),w
  8656  06FE  0140               	movlb	0	; select bank0
  8657  06FF  00EF               	movwf	LED_setColor@white
  8658  0700                     L6:	
  8659  0700  3000               	movlw	0
  8660  0701  2E0D               	goto	L1
  8661  0702                     __end_of_main:	
  8662                           
  8663                           	psect	text1
  8664  0C39                     __ptext1:	
  8665 ;; *************** function _rand *****************
  8666 ;; Defined at:
  8667 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/rand.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;		None
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;		None
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  2   25[BANK0 ] int 
  8674 ;; Registers used:
  8675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8683 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8684 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8685 ;;Total ram usage:       10 bytes
  8686 ;; Hardware stack levels used:    1
  8687 ;; Hardware stack levels required when called:    5
  8688 ;; This function calls:
  8689 ;;		___omul
  8690 ;; This function is called by:
  8691 ;;		_main
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695                           
  8696                           ;psect for function _rand
  8697  0C39                     _rand:	
  8698                           
  8699                           ;incstack = 0
  8700                           ; Regs used in _rand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8701  0C39  3001               	movlw	1
  8702  0C3A  0140               	movlb	0	; select bank0
  8703  0C3B  00BB               	movwf	??_rand
  8704  0C3C  3000               	movlw	0
  8705  0C3D  00BC               	movwf	??_rand+1
  8706  0C3E  3000               	movlw	0
  8707  0C3F  00BD               	movwf	??_rand+2
  8708  0C40  3000               	movlw	0
  8709  0C41  00BE               	movwf	??_rand+3
  8710  0C42  3000               	movlw	0
  8711  0C43  00BF               	movwf	??_rand+4
  8712  0C44  3000               	movlw	0
  8713  0C45  00C0               	movwf	??_rand+5
  8714  0C46  3000               	movlw	0
  8715  0C47  00C1               	movwf	??_rand+6
  8716  0C48  3000               	movlw	0
  8717  0C49  00C2               	movwf	??_rand+7
  8718  0C4A  0142               	movlb	2	; select bank2
  8719  0C4B  0838               	movf	_seed^(0+256),w
  8720  0C4C  0140               	movlb	0	; select bank0
  8721  0C4D  00A0               	movwf	___omul@multiplier
  8722  0C4E  0142               	movlb	2	; select bank2
  8723  0C4F  0839               	movf	(_seed+1)^(0+256),w
  8724  0C50  0140               	movlb	0	; select bank0
  8725  0C51  00A1               	movwf	___omul@multiplier+1
  8726  0C52  0142               	movlb	2	; select bank2
  8727  0C53  083A               	movf	(_seed+2)^(0+256),w
  8728  0C54  0140               	movlb	0	; select bank0
  8729  0C55  00A2               	movwf	___omul@multiplier+2
  8730  0C56  0142               	movlb	2	; select bank2
  8731  0C57  083B               	movf	(_seed+3)^(0+256),w
  8732  0C58  0140               	movlb	0	; select bank0
  8733  0C59  00A3               	movwf	___omul@multiplier+3
  8734  0C5A  0142               	movlb	2	; select bank2
  8735  0C5B  083C               	movf	(_seed+4)^(0+256),w
  8736  0C5C  0140               	movlb	0	; select bank0
  8737  0C5D  00A4               	movwf	___omul@multiplier+4
  8738  0C5E  0142               	movlb	2	; select bank2
  8739  0C5F  083D               	movf	(_seed+5)^(0+256),w
  8740  0C60  0140               	movlb	0	; select bank0
  8741  0C61  00A5               	movwf	___omul@multiplier+5
  8742  0C62  0142               	movlb	2	; select bank2
  8743  0C63  083E               	movf	(_seed+6)^(0+256),w
  8744  0C64  0140               	movlb	0	; select bank0
  8745  0C65  00A6               	movwf	___omul@multiplier+6
  8746  0C66  0142               	movlb	2	; select bank2
  8747  0C67  083F               	movf	(_seed+7)^(0+256),w
  8748  0C68  0140               	movlb	0	; select bank0
  8749  0C69  00A7               	movwf	___omul@multiplier+7
  8750  0C6A  3058               	movlw	88
  8751  0C6B  00AF               	movwf	___omul@multiplicand+7
  8752  0C6C  3051               	movlw	81
  8753  0C6D  00AE               	movwf	___omul@multiplicand+6
  8754  0C6E  30F4               	movlw	244
  8755  0C6F  00AD               	movwf	___omul@multiplicand+5
  8756  0C70  302D               	movlw	45
  8757  0C71  00AC               	movwf	___omul@multiplicand+4
  8758  0C72  304C               	movlw	76
  8759  0C73  00AB               	movwf	___omul@multiplicand+3
  8760  0C74  3095               	movlw	149
  8761  0C75  00AA               	movwf	___omul@multiplicand+2
  8762  0C76  307F               	movlw	127
  8763  0C77  00A9               	movwf	___omul@multiplicand+1
  8764  0C78  302D               	movlw	45
  8765  0C79  00A8               	movwf	___omul@multiplicand
  8766  0C7A  3189  21F3  318C   	fcall	___omul
  8767  0C7D  0140               	movlb	0	; select bank0
  8768  0C7E  3020               	movlw	low ?___omul
  8769  0C7F  0086               	movwf	6
  8770  0C80  3000               	movlw	high ?___omul
  8771  0C81  0087               	movwf	7
  8772  0C82  3F40               	moviw [0]fsr1
  8773  0C83  07BB               	addwf	??_rand,f
  8774  0C84  3F41               	moviw [1]fsr1
  8775  0C85  3DBC               	addwfc	??_rand+1,f
  8776  0C86  3F42               	moviw [2]fsr1
  8777  0C87  3DBD               	addwfc	??_rand+2,f
  8778  0C88  3F43               	moviw [3]fsr1
  8779  0C89  3DBE               	addwfc	??_rand+3,f
  8780  0C8A  3F44               	moviw [4]fsr1
  8781  0C8B  3DBF               	addwfc	??_rand+4,f
  8782  0C8C  3F45               	moviw [5]fsr1
  8783  0C8D  3DC0               	addwfc	??_rand+5,f
  8784  0C8E  3F46               	moviw [6]fsr1
  8785  0C8F  3DC1               	addwfc	??_rand+6,f
  8786  0C90  3F47               	moviw [7]fsr1
  8787  0C91  3DC2               	addwfc	??_rand+7,f
  8788  0C92  0842               	movf	??_rand+7,w
  8789  0C93  0142               	movlb	2	; select bank2
  8790  0C94  00BF               	movwf	(_seed+7)^(0+256)
  8791  0C95  0140               	movlb	0	; select bank0
  8792  0C96  0841               	movf	??_rand+6,w
  8793  0C97  0142               	movlb	2	; select bank2
  8794  0C98  00BE               	movwf	(_seed+6)^(0+256)
  8795  0C99  0140               	movlb	0	; select bank0
  8796  0C9A  0840               	movf	??_rand+5,w
  8797  0C9B  0142               	movlb	2	; select bank2
  8798  0C9C  00BD               	movwf	(_seed+5)^(0+256)
  8799  0C9D  0140               	movlb	0	; select bank0
  8800  0C9E  083F               	movf	??_rand+4,w
  8801  0C9F  0142               	movlb	2	; select bank2
  8802  0CA0  00BC               	movwf	(_seed+4)^(0+256)
  8803  0CA1  0140               	movlb	0	; select bank0
  8804  0CA2  083E               	movf	??_rand+3,w
  8805  0CA3  0142               	movlb	2	; select bank2
  8806  0CA4  00BB               	movwf	(_seed+3)^(0+256)
  8807  0CA5  0140               	movlb	0	; select bank0
  8808  0CA6  083D               	movf	??_rand+2,w
  8809  0CA7  0142               	movlb	2	; select bank2
  8810  0CA8  00BA               	movwf	(_seed+2)^(0+256)
  8811  0CA9  0140               	movlb	0	; select bank0
  8812  0CAA  083C               	movf	??_rand+1,w
  8813  0CAB  0142               	movlb	2	; select bank2
  8814  0CAC  00B9               	movwf	(_seed+1)^(0+256)
  8815  0CAD  0140               	movlb	0	; select bank0
  8816  0CAE  083B               	movf	??_rand,w
  8817  0CAF  0142               	movlb	2	; select bank2
  8818  0CB0  00B8               	movwf	_seed^(0+256)
  8819  0CB1  3038               	movlw	low _seed
  8820  0CB2  0086               	movwf	6
  8821  0CB3  3001               	movlw	high _seed
  8822  0CB4  0087               	movwf	7
  8823  0CB5  3F40               	moviw [0]fsr1
  8824  0CB6  0140               	movlb	0	; select bank0
  8825  0CB7  00BB               	movwf	??_rand
  8826  0CB8  3F41               	moviw [1]fsr1
  8827  0CB9  00BC               	movwf	??_rand+1
  8828  0CBA  3F42               	moviw [2]fsr1
  8829  0CBB  00BD               	movwf	??_rand+2
  8830  0CBC  3F43               	moviw [3]fsr1
  8831  0CBD  00BE               	movwf	??_rand+3
  8832  0CBE  3F44               	moviw [4]fsr1
  8833  0CBF  00BF               	movwf	??_rand+4
  8834  0CC0  3F45               	moviw [5]fsr1
  8835  0CC1  00C0               	movwf	??_rand+5
  8836  0CC2  3F46               	moviw [6]fsr1
  8837  0CC3  00C1               	movwf	??_rand+6
  8838  0CC4  3F47               	moviw [7]fsr1
  8839  0CC5  00C2               	movwf	??_rand+7
  8840  0CC6  3007               	movlw	7
  8841  0CC7                     u5345:	
  8842  0CC7  0140               	movlb	0	; select bank0
  8843  0CC8  36C2               	lsrf	??_rand+7,f
  8844  0CC9  0CC1               	rrf	??_rand+6,f
  8845  0CCA  0CC0               	rrf	??_rand+5,f
  8846  0CCB  0CBF               	rrf	??_rand+4,f
  8847  0CCC  0CBE               	rrf	??_rand+3,f
  8848  0CCD  0CBD               	rrf	??_rand+2,f
  8849  0CCE  0CBC               	rrf	??_rand+1,f
  8850  0CCF  0CBB               	rrf	??_rand,f
  8851  0CD0  0B89               	decfsz	9,f
  8852  0CD1  2CC7               	goto	u5345
  8853  0CD2  0140               	movlb	0	; select bank0
  8854  0CD3  083C               	movf	??_rand+1,w
  8855  0CD4  00BA               	movwf	?_rand+1
  8856  0CD5  083B               	movf	??_rand,w
  8857  0CD6  00B9               	movwf	?_rand
  8858  0CD7  0008               	return
  8859  0CD8                     __end_of_rand:	
  8860                           
  8861                           	psect	text2
  8862  09F3                     __ptext2:	
  8863 ;; *************** function ___omul *****************
  8864 ;; Defined at:
  8865 ;;		line 91 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul64.c"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;  multiplier      8    0[BANK0 ] unsigned long long 
  8868 ;;  multiplicand    8    8[BANK0 ] unsigned long long 
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;  product         8   17[BANK0 ] unsigned long long 
  8871 ;; Return value:  Size  Location     Type
  8872 ;;                  8    0[BANK0 ] unsigned long long 
  8873 ;; Registers used:
  8874 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8880 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8881 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8882 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8883 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8884 ;;Total ram usage:       25 bytes
  8885 ;; Hardware stack levels used:    1
  8886 ;; Hardware stack levels required when called:    4
  8887 ;; This function calls:
  8888 ;;		Nothing
  8889 ;; This function is called by:
  8890 ;;		_rand
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           
  8894                           
  8895                           ;psect for function ___omul
  8896  09F3                     ___omul:	
  8897                           
  8898                           ;incstack = 0
  8899                           ; Regs used in ___omul: [wreg+fsr1l+fsr1h+status,2+status,0]
  8900  09F3  3031               	movlw	low ___omul@product
  8901  09F4  0086               	movwf	6
  8902  09F5  3000               	movlw	high ___omul@product
  8903  09F6  0087               	movwf	7
  8904  09F7  3008               	movlw	8
  8905  09F8  0140               	movlb	0	; select bank0
  8906  09F9  00B0               	movwf	??___omul
  8907  09FA  3000               	movlw	0
  8908  09FB                     u4750:	
  8909  09FB  001E               	movwi fsr1++
  8910  09FC  0BB0               	decfsz	??___omul,f
  8911  09FD  29FB               	goto	u4750
  8912  09FE                     l5105:	
  8913  09FE  1C20               	btfss	___omul@multiplier,0
  8914  09FF  2A10               	goto	l5109
  8915  0A00  0828               	movf	___omul@multiplicand,w
  8916  0A01  07B1               	addwf	___omul@product,f
  8917  0A02  0829               	movf	___omul@multiplicand+1,w
  8918  0A03  3DB2               	addwfc	___omul@product+1,f
  8919  0A04  082A               	movf	___omul@multiplicand+2,w
  8920  0A05  3DB3               	addwfc	___omul@product+2,f
  8921  0A06  082B               	movf	___omul@multiplicand+3,w
  8922  0A07  3DB4               	addwfc	___omul@product+3,f
  8923  0A08  082C               	movf	___omul@multiplicand+4,w
  8924  0A09  3DB5               	addwfc	___omul@product+4,f
  8925  0A0A  082D               	movf	___omul@multiplicand+5,w
  8926  0A0B  3DB6               	addwfc	___omul@product+5,f
  8927  0A0C  082E               	movf	___omul@multiplicand+6,w
  8928  0A0D  3DB7               	addwfc	___omul@product+6,f
  8929  0A0E  082F               	movf	___omul@multiplicand+7,w
  8930  0A0F  3DB8               	addwfc	___omul@product+7,f
  8931  0A10                     l5109:	
  8932  0A10  35A8               	lslf	___omul@multiplicand,f
  8933  0A11  0DA9               	rlf	___omul@multiplicand+1,f
  8934  0A12  0DAA               	rlf	___omul@multiplicand+2,f
  8935  0A13  0DAB               	rlf	___omul@multiplicand+3,f
  8936  0A14  0DAC               	rlf	___omul@multiplicand+4,f
  8937  0A15  0DAD               	rlf	___omul@multiplicand+5,f
  8938  0A16  0DAE               	rlf	___omul@multiplicand+6,f
  8939  0A17  0DAF               	rlf	___omul@multiplicand+7,f
  8940  0A18  36A7               	lsrf	___omul@multiplier+7,f
  8941  0A19  0CA6               	rrf	___omul@multiplier+6,f
  8942  0A1A  0CA5               	rrf	___omul@multiplier+5,f
  8943  0A1B  0CA4               	rrf	___omul@multiplier+4,f
  8944  0A1C  0CA3               	rrf	___omul@multiplier+3,f
  8945  0A1D  0CA2               	rrf	___omul@multiplier+2,f
  8946  0A1E  0CA1               	rrf	___omul@multiplier+1,f
  8947  0A1F  0CA0               	rrf	___omul@multiplier,f
  8948  0A20  0820               	movf	___omul@multiplier,w
  8949  0A21  0421               	iorwf	___omul@multiplier+1,w
  8950  0A22  0422               	iorwf	___omul@multiplier+2,w
  8951  0A23  0423               	iorwf	___omul@multiplier+3,w
  8952  0A24  0424               	iorwf	___omul@multiplier+4,w
  8953  0A25  0425               	iorwf	___omul@multiplier+5,w
  8954  0A26  0426               	iorwf	___omul@multiplier+6,w
  8955  0A27  0427               	iorwf	___omul@multiplier+7,w
  8956  0A28  1D03               	skipz
  8957  0A29  29FE               	goto	l5105
  8958  0A2A  0831               	movf	___omul@product,w
  8959  0A2B  00A0               	movwf	?___omul
  8960  0A2C  0832               	movf	___omul@product+1,w
  8961  0A2D  00A1               	movwf	?___omul+1
  8962  0A2E  0833               	movf	___omul@product+2,w
  8963  0A2F  00A2               	movwf	?___omul+2
  8964  0A30  0834               	movf	___omul@product+3,w
  8965  0A31  00A3               	movwf	?___omul+3
  8966  0A32  0835               	movf	___omul@product+4,w
  8967  0A33  00A4               	movwf	?___omul+4
  8968  0A34  0836               	movf	___omul@product+5,w
  8969  0A35  00A5               	movwf	?___omul+5
  8970  0A36  0837               	movf	___omul@product+6,w
  8971  0A37  00A6               	movwf	?___omul+6
  8972  0A38  0838               	movf	___omul@product+7,w
  8973  0A39  00A7               	movwf	?___omul+7
  8974  0A3A  0008               	return
  8975  0A3B                     __end_of___omul:	
  8976                           
  8977                           	psect	text3
  8978  09AD                     __ptext3:	
  8979 ;; *************** function ___awmod *****************
  8980 ;; Defined at:
  8981 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  8982 ;; Parameters:    Size  Location     Type
  8983 ;;  divisor         2   35[BANK0 ] int 
  8984 ;;  dividend        2   37[BANK0 ] int 
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;  sign            1   41[BANK0 ] unsigned char 
  8987 ;;  counter         1   40[BANK0 ] unsigned char 
  8988 ;; Return value:  Size  Location     Type
  8989 ;;                  2   35[BANK0 ] int 
  8990 ;; Registers used:
  8991 ;;		wreg, status,2, status,0
  8992 ;; Tracked objects:
  8993 ;;		On entry : 0/0
  8994 ;;		On exit  : 0/0
  8995 ;;		Unchanged: 0/0
  8996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8997 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8998 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8999 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9000 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9001 ;;Total ram usage:        7 bytes
  9002 ;; Hardware stack levels used:    1
  9003 ;; Hardware stack levels required when called:    4
  9004 ;; This function calls:
  9005 ;;		Nothing
  9006 ;; This function is called by:
  9007 ;;		_main
  9008 ;; This function uses a non-reentrant model
  9009 ;;
  9010                           
  9011                           
  9012                           ;psect for function ___awmod
  9013  09AD                     ___awmod:	
  9014                           
  9015                           ;incstack = 0
  9016                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9017  09AD  0140               	movlb	0	; select bank0
  9018  09AE  01C9               	clrf	___awmod@sign
  9019  09AF  1FC6               	btfss	___awmod@dividend+1,7
  9020  09B0  29B8               	goto	l5481
  9021  09B1  09C5               	comf	___awmod@dividend,f
  9022  09B2  09C6               	comf	___awmod@dividend+1,f
  9023  09B3  0AC5               	incf	___awmod@dividend,f
  9024  09B4  1903               	skipnz
  9025  09B5  0AC6               	incf	___awmod@dividend+1,f
  9026  09B6  01C9               	clrf	___awmod@sign
  9027  09B7  0AC9               	incf	___awmod@sign,f
  9028  09B8                     l5481:	
  9029  09B8  1FC4               	btfss	___awmod@divisor+1,7
  9030  09B9  29BF               	goto	l5485
  9031  09BA  09C3               	comf	___awmod@divisor,f
  9032  09BB  09C4               	comf	___awmod@divisor+1,f
  9033  09BC  0AC3               	incf	___awmod@divisor,f
  9034  09BD  1903               	skipnz
  9035  09BE  0AC4               	incf	___awmod@divisor+1,f
  9036  09BF                     l5485:	
  9037  09BF  0843               	movf	___awmod@divisor,w
  9038  09C0  0444               	iorwf	___awmod@divisor+1,w
  9039  09C1  1903               	btfsc	3,2
  9040  09C2  29E6               	goto	l5503
  9041  09C3  01C8               	clrf	___awmod@counter
  9042  09C4  0AC8               	incf	___awmod@counter,f
  9043  09C5                     l5493:	
  9044  09C5  1BC4               	btfsc	___awmod@divisor+1,7
  9045  09C6  29D1               	goto	l5495
  9046  09C7  3001               	movlw	1
  9047  09C8                     u5385:	
  9048  09C8  35C3               	lslf	___awmod@divisor,f
  9049  09C9  0DC4               	rlf	___awmod@divisor+1,f
  9050  09CA  0B89               	decfsz	9,f
  9051  09CB  29C8               	goto	u5385
  9052  09CC  3001               	movlw	1
  9053  09CD  00C7               	movwf	??___awmod
  9054  09CE  0847               	movf	??___awmod,w
  9055  09CF  07C8               	addwf	___awmod@counter,f
  9056  09D0  29C5               	goto	l5493
  9057  09D1                     l5495:	
  9058  09D1  0844               	movf	___awmod@divisor+1,w
  9059  09D2  0246               	subwf	___awmod@dividend+1,w
  9060  09D3  1D03               	skipz
  9061  09D4  29D7               	goto	u5405
  9062  09D5  0843               	movf	___awmod@divisor,w
  9063  09D6  0245               	subwf	___awmod@dividend,w
  9064  09D7                     u5405:	
  9065  09D7  1C03               	skipc
  9066  09D8  29DD               	goto	l5499
  9067  09D9  0843               	movf	___awmod@divisor,w
  9068  09DA  02C5               	subwf	___awmod@dividend,f
  9069  09DB  0844               	movf	___awmod@divisor+1,w
  9070  09DC  3BC6               	subwfb	___awmod@dividend+1,f
  9071  09DD                     l5499:	
  9072  09DD  3001               	movlw	1
  9073  09DE                     u5415:	
  9074  09DE  36C4               	lsrf	___awmod@divisor+1,f
  9075  09DF  0CC3               	rrf	___awmod@divisor,f
  9076  09E0  0B89               	decfsz	9,f
  9077  09E1  29DE               	goto	u5415
  9078  09E2  3001               	movlw	1
  9079  09E3  02C8               	subwf	___awmod@counter,f
  9080  09E4  1D03               	btfss	3,2
  9081  09E5  29D1               	goto	l5495
  9082  09E6                     l5503:	
  9083  09E6  0849               	movf	___awmod@sign,w
  9084  09E7  1903               	btfsc	3,2
  9085  09E8  29EE               	goto	l5507
  9086  09E9  09C5               	comf	___awmod@dividend,f
  9087  09EA  09C6               	comf	___awmod@dividend+1,f
  9088  09EB  0AC5               	incf	___awmod@dividend,f
  9089  09EC  1903               	skipnz
  9090  09ED  0AC6               	incf	___awmod@dividend+1,f
  9091  09EE                     l5507:	
  9092  09EE  0846               	movf	___awmod@dividend+1,w
  9093  09EF  00C4               	movwf	?___awmod+1
  9094  09F0  0845               	movf	___awmod@dividend,w
  9095  09F1  00C3               	movwf	?___awmod
  9096  09F2  0008               	return
  9097  09F3                     __end_of___awmod:	
  9098                           
  9099                           	psect	text4
  9100  15DA                     __ptext4:	
  9101 ;; *************** function _TM1650_init *****************
  9102 ;; Defined at:
  9103 ;;		line 19 in file "tm1650.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;		None
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;		None
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1    wreg      void 
  9110 ;; Registers used:
  9111 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9121 ;;Total ram usage:        0 bytes
  9122 ;; Hardware stack levels used:    1
  9123 ;; Hardware stack levels required when called:    9
  9124 ;; This function calls:
  9125 ;;		_SYSTEM_Initialize
  9126 ;;		_TM1650_enable
  9127 ;; This function is called by:
  9128 ;;		_main
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           
  9133                           ;psect for function _TM1650_init
  9134  15DA                     _TM1650_init:	
  9135                           
  9136                           ;tm1650.c: 21:     SYSTEM_Initialize();
  9137                           
  9138                           ;incstack = 0
  9139                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9140  15DA  3196  2675  3195   	fcall	_SYSTEM_Initialize
  9141                           
  9142                           ;tm1650.c: 27:     (INTCONbits.GIE = 1);
  9143  15DD  178B               	bsf	11,7	;volatile
  9144                           
  9145                           ;tm1650.c: 30:     (INTCONbits.PEIE = 1);
  9146  15DE  170B               	bsf	11,6	;volatile
  9147                           
  9148                           ;tm1650.c: 32:     TM1650_enable(1);
  9149  15DF  3001               	movlw	1
  9150  15E0  3196  26D1         	fcall	_TM1650_enable
  9151  15E2  0008               	return
  9152  15E3                     __end_of_TM1650_init:	
  9153                           
  9154                           	psect	text5
  9155  1675                     __ptext5:	
  9156 ;; *************** function _SYSTEM_Initialize *****************
  9157 ;; Defined at:
  9158 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;		None
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;		None
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  1    wreg      void 
  9165 ;; Registers used:
  9166 ;;		wreg, status,2, status,0, pclath, cstack
  9167 ;; Tracked objects:
  9168 ;;		On entry : 0/0
  9169 ;;		On exit  : 0/0
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9176 ;;Total ram usage:        0 bytes
  9177 ;; Hardware stack levels used:    1
  9178 ;; Hardware stack levels required when called:    6
  9179 ;; This function calls:
  9180 ;;		_ADCC_Initialize
  9181 ;;		_EUSART1_Initialize
  9182 ;;		_I2C1_Initialize
  9183 ;;		_OSCILLATOR_Initialize
  9184 ;;		_PIN_MANAGER_Initialize
  9185 ;;		_PMD_Initialize
  9186 ;;		_TMR0_Initialize
  9187 ;; This function is called by:
  9188 ;;		_main
  9189 ;;		_TM1650_init
  9190 ;; This function uses a non-reentrant model
  9191 ;;
  9192                           
  9193                           
  9194                           ;psect for function _SYSTEM_Initialize
  9195  1675                     _SYSTEM_Initialize:	
  9196                           
  9197                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  9198                           
  9199                           ;incstack = 0
  9200                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9201  1675  3195  25E3  3196   	fcall	_PMD_Initialize
  9202                           
  9203                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  9204  1678  3188  209B  3196   	fcall	_PIN_MANAGER_Initialize
  9205                           
  9206                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  9207  167B  3195  25D1  3196   	fcall	_OSCILLATOR_Initialize
  9208                           
  9209                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  9210  167E  3188  2000  3196   	fcall	_I2C1_Initialize
  9211                           
  9212                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  9213  1681  3197  27DA  3196   	fcall	_ADCC_Initialize
  9214                           
  9215                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  9216  1684  3196  2661  3196   	fcall	_TMR0_Initialize
  9217                           
  9218                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  9219  1687  3189  2168         	fcall	_EUSART1_Initialize
  9220  1689  0008               	return
  9221  168A                     __end_of_SYSTEM_Initialize:	
  9222                           
  9223                           	psect	text6
  9224  1661                     __ptext6:	
  9225 ;; *************** function _TMR0_Initialize *****************
  9226 ;; Defined at:
  9227 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  9228 ;; Parameters:    Size  Location     Type
  9229 ;;		None
  9230 ;; Auto vars:     Size  Location     Type
  9231 ;;		None
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  1    wreg      void 
  9234 ;; Registers used:
  9235 ;;		wreg, status,2, status,0, pclath, cstack
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9245 ;;Total ram usage:        0 bytes
  9246 ;; Hardware stack levels used:    1
  9247 ;; Hardware stack levels required when called:    5
  9248 ;; This function calls:
  9249 ;;		_TMR0_SetInterruptHandler
  9250 ;; This function is called by:
  9251 ;;		_SYSTEM_Initialize
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           
  9256                           ;psect for function _TMR0_Initialize
  9257  1661                     _TMR0_Initialize:	
  9258                           
  9259                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x46;
  9260                           
  9261                           ;incstack = 0
  9262                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9263  1661  3046               	movlw	70
  9264  1662  014B               	movlb	11	; select bank11
  9265  1663  009F               	movwf	31	;volatile
  9266                           
  9267                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x7C;
  9268  1664  307C               	movlw	124
  9269  1665  009D               	movwf	29	;volatile
  9270                           
  9271                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  9272  1666  019C               	clrf	28	;volatile
  9273                           
  9274                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  9275  1667  014E               	movlb	14	; select bank14
  9276  1668  128C               	bcf	12,5	;volatile
  9277                           
  9278                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  9279  1669  1696               	bsf	22,5	;volatile
  9280                           
  9281                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  9282  166A  30FE               	movlw	low _TMR0_DefaultInterruptHandler
  9283  166B  0140               	movlb	0	; select bank0
  9284  166C  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9285  166D  3007               	movlw	high _TMR0_DefaultInterruptHandler
  9286  166E  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9287  166F  3195  259B         	fcall	_TMR0_SetInterruptHandler
  9288                           
  9289                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  9290  1671  3080               	movlw	128
  9291  1672  014B               	movlb	11	; select bank11
  9292  1673  009E               	movwf	30	;volatile
  9293  1674  0008               	return
  9294  1675                     __end_of_TMR0_Initialize:	
  9295                           
  9296                           	psect	text7
  9297  15E3                     __ptext7:	
  9298 ;; *************** function _PMD_Initialize *****************
  9299 ;; Defined at:
  9300 ;;		line 75 in file "mcc_generated_files/mcc.c"
  9301 ;; Parameters:    Size  Location     Type
  9302 ;;		None
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;		None
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  1    wreg      void 
  9307 ;; Registers used:
  9308 ;;		status,2
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9318 ;;Total ram usage:        0 bytes
  9319 ;; Hardware stack levels used:    1
  9320 ;; Hardware stack levels required when called:    4
  9321 ;; This function calls:
  9322 ;;		Nothing
  9323 ;; This function is called by:
  9324 ;;		_SYSTEM_Initialize
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           
  9329                           ;psect for function _PMD_Initialize
  9330  15E3                     _PMD_Initialize:	
  9331                           
  9332                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  9333                           
  9334                           ;incstack = 0
  9335                           ; Regs used in _PMD_Initialize: [status,2]
  9336  15E3  014F               	movlb	15	; select bank15
  9337  15E4  0196               	clrf	22	;volatile
  9338                           
  9339                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  9340  15E5  0197               	clrf	23	;volatile
  9341                           
  9342                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  9343  15E6  0198               	clrf	24	;volatile
  9344                           
  9345                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  9346  15E7  0199               	clrf	25	;volatile
  9347                           
  9348                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  9349  15E8  019A               	clrf	26	;volatile
  9350                           
  9351                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  9352  15E9  019B               	clrf	27	;volatile
  9353                           
  9354                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  9355  15EA  019C               	clrf	28	;volatile
  9356                           
  9357                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  9358  15EB  019D               	clrf	29	;volatile
  9359  15EC  0008               	return
  9360  15ED                     __end_of_PMD_Initialize:	
  9361                           
  9362                           	psect	text8
  9363  089B                     __ptext8:	
  9364 ;; *************** function _PIN_MANAGER_Initialize *****************
  9365 ;; Defined at:
  9366 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;		None
  9369 ;; Auto vars:     Size  Location     Type
  9370 ;;		None
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  1    wreg      void 
  9373 ;; Registers used:
  9374 ;;		wreg, status,2
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/0
  9377 ;;		On exit  : 0/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9384 ;;Total ram usage:        0 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; Hardware stack levels required when called:    4
  9387 ;; This function calls:
  9388 ;;		Nothing
  9389 ;; This function is called by:
  9390 ;;		_SYSTEM_Initialize
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           
  9395                           ;psect for function _PIN_MANAGER_Initialize
  9396  089B                     _PIN_MANAGER_Initialize:	
  9397                           
  9398                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  9399                           
  9400                           ;incstack = 0
  9401                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9402  089B  0140               	movlb	0	; select bank0
  9403  089C  0198               	clrf	24	;volatile
  9404                           
  9405                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  9406  089D  0199               	clrf	25	;volatile
  9407                           
  9408                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  9409  089E  019A               	clrf	26	;volatile
  9410                           
  9411                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  9412  089F  303F               	movlw	63
  9413  08A0  0092               	movwf	18	;volatile
  9414                           
  9415                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x90;
  9416  08A1  3090               	movlw	144
  9417  08A2  0093               	movwf	19	;volatile
  9418                           
  9419                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  9420  08A3  30FF               	movlw	255
  9421  08A4  0094               	movwf	20	;volatile
  9422                           
  9423                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  9424  08A5  30F8               	movlw	248
  9425  08A6  017E               	movlb	62	; select bank62
  9426  08A7  00CE               	movwf	78	;volatile
  9427                           
  9428                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  9429  08A8  30E0               	movlw	224
  9430  08A9  00C3               	movwf	67	;volatile
  9431                           
  9432                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  9433  08AA  3003               	movlw	3
  9434  08AB  00B8               	movwf	56	;volatile
  9435                           
  9436                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  9437  08AC  01C4               	clrf	68	;volatile
  9438                           
  9439                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  9440  08AD  3004               	movlw	4
  9441  08AE  00B9               	movwf	57	;volatile
  9442                           
  9443                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  9444  08AF  3007               	movlw	7
  9445  08B0  00CF               	movwf	79	;volatile
  9446                           
  9447                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  9448  08B1  01BA               	clrf	58	;volatile
  9449                           
  9450                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  9451  08B2  01C5               	clrf	69	;volatile
  9452                           
  9453                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  9454  08B3  01D0               	clrf	80	;volatile
  9455                           
  9456                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  9457  08B4  3037               	movlw	55
  9458  08B5  00BB               	movwf	59	;volatile
  9459                           
  9460                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  9461  08B6  30F0               	movlw	240
  9462  08B7  00C6               	movwf	70	;volatile
  9463                           
  9464                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  9465  08B8  30FF               	movlw	255
  9466  08B9  00D1               	movwf	81	;volatile
  9467                           
  9468                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  9469  08BA  3005               	movlw	5
  9470  08BB  017D               	movlb	61	; select bank61
  9471  08BC  00C5               	movwf	69	;volatile
  9472                           
  9473                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  9474  08BD  3014               	movlw	20
  9475  08BE  017E               	movlb	62	; select bank62
  9476  08BF  0094               	movwf	20	;volatile
  9477                           
  9478                           ;mcc_generated_files/pin_manager.c: 108:     RB6PPS = 0x0F;
  9479  08C0  300F               	movlw	15
  9480  08C1  009E               	movwf	30	;volatile
  9481                           
  9482                           ;mcc_generated_files/pin_manager.c: 109:     RA5PPS = 0x13;
  9483  08C2  3013               	movlw	19
  9484  08C3  0095               	movwf	21	;volatile
  9485                           
  9486                           ;mcc_generated_files/pin_manager.c: 110:     SSP1DATPPS = 0x04;
  9487  08C4  3004               	movlw	4
  9488  08C5  017D               	movlb	61	; select bank61
  9489  08C6  00C6               	movwf	70	;volatile
  9490                           
  9491                           ;mcc_generated_files/pin_manager.c: 111:     RX1DTPPS = 0x0C;
  9492  08C7  300C               	movlw	12
  9493  08C8  00CB               	movwf	75	;volatile
  9494  08C9  0008               	return
  9495  08CA                     __end_of_PIN_MANAGER_Initialize:	
  9496                           
  9497                           	psect	text9
  9498  15D1                     __ptext9:	
  9499 ;; *************** function _OSCILLATOR_Initialize *****************
  9500 ;; Defined at:
  9501 ;;		line 61 in file "mcc_generated_files/mcc.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;		None
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg, status,2
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9519 ;;Total ram usage:        0 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; Hardware stack levels required when called:    4
  9522 ;; This function calls:
  9523 ;;		Nothing
  9524 ;; This function is called by:
  9525 ;;		_SYSTEM_Initialize
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           
  9530                           ;psect for function _OSCILLATOR_Initialize
  9531  15D1                     _OSCILLATOR_Initialize:	
  9532                           
  9533                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  9534                           
  9535                           ;incstack = 0
  9536                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9537  15D1  3060               	movlw	96
  9538  15D2  0151               	movlb	17	; select bank17
  9539  15D3  008D               	movwf	13	;volatile
  9540                           
  9541                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  9542  15D4  018F               	clrf	15	;volatile
  9543                           
  9544                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  9545  15D5  0191               	clrf	17	;volatile
  9546                           
  9547                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
  9548  15D6  3006               	movlw	6
  9549  15D7  0093               	movwf	19	;volatile
  9550                           
  9551                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  9552  15D8  0192               	clrf	18	;volatile
  9553  15D9  0008               	return
  9554  15DA                     __end_of_OSCILLATOR_Initialize:	
  9555                           
  9556                           	psect	text10
  9557  0800                     __ptext10:	
  9558 ;; *************** function _I2C1_Initialize *****************
  9559 ;; Defined at:
  9560 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;		None
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;		None
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  1    wreg      void 
  9567 ;; Registers used:
  9568 ;;		wreg, status,2
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9576 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9577 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9578 ;;Total ram usage:        1 bytes
  9579 ;; Hardware stack levels used:    1
  9580 ;; Hardware stack levels required when called:    4
  9581 ;; This function calls:
  9582 ;;		Nothing
  9583 ;; This function is called by:
  9584 ;;		_SYSTEM_Initialize
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           
  9589                           ;psect for function _I2C1_Initialize
  9590  0800                     _I2C1_Initialize:	
  9591                           
  9592                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  9593                           
  9594                           ;incstack = 0
  9595                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  9596  0800  30CE               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  9597  0801  0140               	movlb	0	; select bank0
  9598  0802  00A0               	movwf	??_I2C1_Initialize
  9599  0803  0820               	movf	??_I2C1_Initialize,w
  9600  0804  0141               	movlb	1	; select bank1
  9601  0805  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
  9602                           
  9603                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  9604  0806  30CE               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  9605  0807  0140               	movlb	0	; select bank0
  9606  0808  00A0               	movwf	??_I2C1_Initialize
  9607  0809  0820               	movf	??_I2C1_Initialize,w
  9608  080A  0141               	movlb	1	; select bank1
  9609  080B  00A0               	movwf	_i2c1_object^(0+128)
  9610                           
  9611                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  9612  080C  14A2               	bsf	(_i2c1_object^(0+128)+2),1
  9613                           
  9614                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  9615  080D  1022               	bcf	(_i2c1_object^(0+128)+2),0
  9616                           
  9617                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  9618  080E  01A4               	clrf	(_i2c1_object^(0+128)+4)
  9619                           
  9620                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  9621  080F  0143               	movlb	3	; select bank3
  9622  0810  018F               	clrf	15	;volatile
  9623                           
  9624                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  9625  0811  3028               	movlw	40
  9626  0812  0090               	movwf	16	;volatile
  9627                           
  9628                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  9629  0813  0192               	clrf	18	;volatile
  9630                           
  9631                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x18;
  9632  0814  3018               	movlw	24
  9633  0815  008D               	movwf	13	;volatile
  9634                           
  9635                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  9636  0816  014E               	movlb	14	; select bank14
  9637  0817  100F               	bcf	15,0	;volatile
  9638                           
  9639                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  9640  0818  108F               	bcf	15,1	;volatile
  9641                           
  9642                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  9643  0819  1419               	bsf	25,0	;volatile
  9644                           
  9645                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  9646  081A  1499               	bsf	25,1	;volatile
  9647  081B  0008               	return
  9648  081C                     __end_of_I2C1_Initialize:	
  9649                           
  9650                           	psect	text11
  9651  0968                     __ptext11:	
  9652 ;; *************** function _EUSART1_Initialize *****************
  9653 ;; Defined at:
  9654 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;		None
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;		None
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  1    wreg      void 
  9661 ;; Registers used:
  9662 ;;		wreg, status,2, status,0, pclath, cstack
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9670 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9671 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9672 ;;Total ram usage:        1 bytes
  9673 ;; Hardware stack levels used:    1
  9674 ;; Hardware stack levels required when called:    5
  9675 ;; This function calls:
  9676 ;;		_EUSART1_SetErrorHandler
  9677 ;;		_EUSART1_SetFramingErrorHandler
  9678 ;;		_EUSART1_SetOverrunErrorHandler
  9679 ;;		_EUSART1_SetRxInterruptHandler
  9680 ;;		_EUSART1_SetTxInterruptHandler
  9681 ;; This function is called by:
  9682 ;;		_SYSTEM_Initialize
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           
  9687                           ;psect for function _EUSART1_Initialize
  9688  0968                     _EUSART1_Initialize:	
  9689                           
  9690                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  9691                           
  9692                           ;incstack = 0
  9693                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9694  0968  014E               	movlb	14	; select bank14
  9695  0969  1299               	bcf	25,5	;volatile
  9696                           
  9697                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  9698  096A  30CA               	movlw	low _EUSART1_Receive_ISR
  9699  096B  0140               	movlb	0	; select bank0
  9700  096C  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  9701  096D  3008               	movlw	high _EUSART1_Receive_ISR
  9702  096E  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  9703  096F  3195  25A4  3189   	fcall	_EUSART1_SetRxInterruptHandler
  9704                           
  9705                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  9706  0972  014E               	movlb	14	; select bank14
  9707  0973  1219               	bcf	25,4	;volatile
  9708                           
  9709                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  9710  0974  301A               	movlw	low _EUSART1_Transmit_ISR
  9711  0975  0140               	movlb	0	; select bank0
  9712  0976  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  9713  0977  3017               	movlw	high _EUSART1_Transmit_ISR
  9714  0978  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  9715  0979  3195  25C8  3189   	fcall	_EUSART1_SetTxInterruptHandler
  9716                           
  9717                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  9718  097C  3008               	movlw	8
  9719  097D  0142               	movlb	2	; select bank2
  9720  097E  009F               	movwf	31	;volatile
  9721                           
  9722                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x90;
  9723  097F  3090               	movlw	144
  9724  0980  009D               	movwf	29	;volatile
  9725                           
  9726                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x04;
  9727  0981  3004               	movlw	4
  9728  0982  009E               	movwf	30	;volatile
  9729                           
  9730                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x1F;
  9731  0983  301F               	movlw	31
  9732  0984  009B               	movwf	27	;volatile
  9733                           
  9734                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  9735  0985  019C               	clrf	28	;volatile
  9736                           
  9737                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  9738  0986  30FF               	movlw	low _EUSART1_DefaultFramingErrorHandler
  9739  0987  0140               	movlb	0	; select bank0
  9740  0988  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  9741  0989  3007               	movlw	high _EUSART1_DefaultFramingErrorHandler
  9742  098A  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  9743  098B  3195  25B6  3189   	fcall	_EUSART1_SetFramingErrorHandler
  9744                           
  9745                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  9746  098E  304B               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  9747  098F  0140               	movlb	0	; select bank0
  9748  0990  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  9749  0991  3015               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  9750  0992  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  9751  0993  3195  25BF  3189   	fcall	_EUSART1_SetOverrunErrorHandler
  9752                           
  9753                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  9754  0996  303E               	movlw	low _EUSART1_DefaultErrorHandler
  9755  0997  0140               	movlb	0	; select bank0
  9756  0998  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  9757  0999  3015               	movlw	high _EUSART1_DefaultErrorHandler
  9758  099A  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  9759  099B  3195  25AD         	fcall	_EUSART1_SetErrorHandler
  9760                           
  9761                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  9762  099D  0141               	movlb	1	; select bank1
  9763  099E  01CC               	clrf	_eusart1RxLastError^(0+128)	;volatile
  9764                           
  9765                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  9766  099F  01F3               	clrf	_eusart1TxHead	;volatile
  9767                           
  9768                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  9769  09A0  01F2               	clrf	_eusart1TxTail	;volatile
  9770                           
  9771                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  9772  09A1  3008               	movlw	8
  9773  09A2  0140               	movlb	0	; select bank0
  9774  09A3  00A2               	movwf	??_EUSART1_Initialize
  9775  09A4  0822               	movf	??_EUSART1_Initialize,w
  9776  09A5  0141               	movlb	1	; select bank1
  9777  09A6  00EE               	movwf	_eusart1TxBufferRemaining^(0+128)	;volatile
  9778                           
  9779                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  9780  09A7  01F1               	clrf	_eusart1RxHead	;volatile
  9781                           
  9782                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  9783  09A8  01F0               	clrf	_eusart1RxTail	;volatile
  9784                           
  9785                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  9786  09A9  01CD               	clrf	_eusart1RxCount^(0+128)	;volatile
  9787                           
  9788                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  9789  09AA  014E               	movlb	14	; select bank14
  9790  09AB  1699               	bsf	25,5	;volatile
  9791  09AC  0008               	return
  9792  09AD                     __end_of_EUSART1_Initialize:	
  9793                           
  9794                           	psect	text12
  9795  15C8                     __ptext12:	
  9796 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  9797 ;; Defined at:
  9798 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9801 ;;		 -> EUSART1_Transmit_ISR(1), 
  9802 ;; Auto vars:     Size  Location     Type
  9803 ;;		None
  9804 ;; Return value:  Size  Location     Type
  9805 ;;                  1    wreg      void 
  9806 ;; Registers used:
  9807 ;;		wreg
  9808 ;; Tracked objects:
  9809 ;;		On entry : 0/0
  9810 ;;		On exit  : 0/0
  9811 ;;		Unchanged: 0/0
  9812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9813 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9817 ;;Total ram usage:        2 bytes
  9818 ;; Hardware stack levels used:    1
  9819 ;; Hardware stack levels required when called:    4
  9820 ;; This function calls:
  9821 ;;		Nothing
  9822 ;; This function is called by:
  9823 ;;		_EUSART1_Initialize
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           
  9828                           ;psect for function _EUSART1_SetTxInterruptHandler
  9829  15C8                     _EUSART1_SetTxInterruptHandler:	
  9830                           
  9831                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9832                           
  9833                           ;incstack = 0
  9834                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  9835  15C8  0140               	movlb	0	; select bank0
  9836  15C9  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  9837  15CA  0142               	movlb	2	; select bank2
  9838  15CB  00D3               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
  9839  15CC  0140               	movlb	0	; select bank0
  9840  15CD  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  9841  15CE  0142               	movlb	2	; select bank2
  9842  15CF  00D2               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
  9843  15D0  0008               	return
  9844  15D1                     __end_of_EUSART1_SetTxInterruptHandler:	
  9845                           
  9846                           	psect	text13
  9847  15BF                     __ptext13:	
  9848 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9849 ;; Defined at:
  9850 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9853 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;		None
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  1    wreg      void 
  9858 ;; Registers used:
  9859 ;;		wreg
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 0/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9865 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9868 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9869 ;;Total ram usage:        2 bytes
  9870 ;; Hardware stack levels used:    1
  9871 ;; Hardware stack levels required when called:    4
  9872 ;; This function calls:
  9873 ;;		Nothing
  9874 ;; This function is called by:
  9875 ;;		_EUSART1_Initialize
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879                           
  9880                           ;psect for function _EUSART1_SetOverrunErrorHandler
  9881  15BF                     _EUSART1_SetOverrunErrorHandler:	
  9882                           
  9883                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_OverrunErrorHandler = interruptHandler;
  9884                           
  9885                           ;incstack = 0
  9886                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9887  15BF  0140               	movlb	0	; select bank0
  9888  15C0  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9889  15C1  0142               	movlb	2	; select bank2
  9890  15C2  00CD               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
  9891  15C3  0140               	movlb	0	; select bank0
  9892  15C4  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9893  15C5  0142               	movlb	2	; select bank2
  9894  15C6  00CC               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
  9895  15C7  0008               	return
  9896  15C8                     __end_of_EUSART1_SetOverrunErrorHandler:	
  9897                           
  9898                           	psect	text14
  9899  15B6                     __ptext14:	
  9900 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9901 ;; Defined at:
  9902 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9905 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;		None
  9908 ;; Return value:  Size  Location     Type
  9909 ;;                  1    wreg      void 
  9910 ;; Registers used:
  9911 ;;		wreg
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9917 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9920 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9921 ;;Total ram usage:        2 bytes
  9922 ;; Hardware stack levels used:    1
  9923 ;; Hardware stack levels required when called:    4
  9924 ;; This function calls:
  9925 ;;		Nothing
  9926 ;; This function is called by:
  9927 ;;		_EUSART1_Initialize
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931                           
  9932                           ;psect for function _EUSART1_SetFramingErrorHandler
  9933  15B6                     _EUSART1_SetFramingErrorHandler:	
  9934                           
  9935                           ;mcc_generated_files/eusart1.c: 262:     EUSART1_FramingErrorHandler = interruptHandler;
  9936                           
  9937                           ;incstack = 0
  9938                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9939  15B6  0140               	movlb	0	; select bank0
  9940  15B7  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9941  15B8  0142               	movlb	2	; select bank2
  9942  15B9  00CF               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
  9943  15BA  0140               	movlb	0	; select bank0
  9944  15BB  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9945  15BC  0142               	movlb	2	; select bank2
  9946  15BD  00CE               	movwf	_EUSART1_FramingErrorHandler^(0+256)
  9947  15BE  0008               	return
  9948  15BF                     __end_of_EUSART1_SetFramingErrorHandler:	
  9949                           
  9950                           	psect	text15
  9951  15AD                     __ptext15:	
  9952 ;; *************** function _EUSART1_SetErrorHandler *****************
  9953 ;; Defined at:
  9954 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9957 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;		None
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  1    wreg      void 
  9962 ;; Registers used:
  9963 ;;		wreg
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9969 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9972 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9973 ;;Total ram usage:        2 bytes
  9974 ;; Hardware stack levels used:    1
  9975 ;; Hardware stack levels required when called:    4
  9976 ;; This function calls:
  9977 ;;		Nothing
  9978 ;; This function is called by:
  9979 ;;		_EUSART1_Initialize
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983                           
  9984                           ;psect for function _EUSART1_SetErrorHandler
  9985  15AD                     _EUSART1_SetErrorHandler:	
  9986                           
  9987                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_ErrorHandler = interruptHandler;
  9988                           
  9989                           ;incstack = 0
  9990                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9991  15AD  0140               	movlb	0	; select bank0
  9992  15AE  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9993  15AF  0142               	movlb	2	; select bank2
  9994  15B0  00CB               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
  9995  15B1  0140               	movlb	0	; select bank0
  9996  15B2  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9997  15B3  0142               	movlb	2	; select bank2
  9998  15B4  00CA               	movwf	_EUSART1_ErrorHandler^(0+256)
  9999  15B5  0008               	return
 10000  15B6                     __end_of_EUSART1_SetErrorHandler:	
 10001                           
 10002                           	psect	text16
 10003  17DA                     __ptext16:	
 10004 ;; *************** function _ADCC_Initialize *****************
 10005 ;; Defined at:
 10006 ;;		line 64 in file "mcc_generated_files/adcc.c"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;		None
 10009 ;; Auto vars:     Size  Location     Type
 10010 ;;		None
 10011 ;; Return value:  Size  Location     Type
 10012 ;;                  1    wreg      void 
 10013 ;; Registers used:
 10014 ;;		wreg, status,2, status,0, pclath, cstack
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/0
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10024 ;;Total ram usage:        0 bytes
 10025 ;; Hardware stack levels used:    1
 10026 ;; Hardware stack levels required when called:    5
 10027 ;; This function calls:
 10028 ;;		_ADCC_SetADTIInterruptHandler
 10029 ;; This function is called by:
 10030 ;;		_SYSTEM_Initialize
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           
 10035                           ;psect for function _ADCC_Initialize
 10036  17DA                     _ADCC_Initialize:	
 10037                           
 10038                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 10039                           
 10040                           ;incstack = 0
 10041                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10042  17DA  0141               	movlb	1	; select bank1
 10043  17DB  018C               	clrf	12	;volatile
 10044                           
 10045                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 10046  17DC  018D               	clrf	13	;volatile
 10047                           
 10048                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 10049  17DD  018E               	clrf	14	;volatile
 10050                           
 10051                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 10052  17DE  018F               	clrf	15	;volatile
 10053                           
 10054                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 10055  17DF  0192               	clrf	18	;volatile
 10056                           
 10057                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 10058  17E0  0193               	clrf	19	;volatile
 10059                           
 10060                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 10061  17E1  0198               	clrf	24	;volatile
 10062                           
 10063                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 10064  17E2  019A               	clrf	26	;volatile
 10065                           
 10066                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 10067  17E3  019F               	clrf	31	;volatile
 10068                           
 10069                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 10070  17E4  0142               	movlb	2	; select bank2
 10071  17E5  018C               	clrf	12	;volatile
 10072                           
 10073                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 10074  17E6  018D               	clrf	13	;volatile
 10075                           
 10076                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 10077  17E7  018E               	clrf	14	;volatile
 10078                           
 10079                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 10080  17E8  018F               	clrf	15	;volatile
 10081                           
 10082                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 10083  17E9  0190               	clrf	16	;volatile
 10084                           
 10085                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 10086  17EA  0192               	clrf	18	;volatile
 10087                           
 10088                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 10089  17EB  3054               	movlw	84
 10090  17EC  0093               	movwf	19	;volatile
 10091                           
 10092                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 10093  17ED  3056               	movlw	86
 10094  17EE  0094               	movwf	20	;volatile
 10095                           
 10096                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 10097  17EF  0195               	clrf	21	;volatile
 10098                           
 10099                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 10100  17F0  0196               	clrf	22	;volatile
 10101                           
 10102                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 10103  17F1  0197               	clrf	23	;volatile
 10104                           
 10105                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 10106  17F2  0198               	clrf	24	;volatile
 10107                           
 10108                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 10109  17F3  30D4               	movlw	212
 10110  17F4  0091               	movwf	17	;volatile
 10111                           
 10112                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 10113  17F5  014E               	movlb	14	; select bank14
 10114  17F6  108D               	bcf	13,1	;volatile
 10115                           
 10116                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 10117  17F7  1497               	bsf	23,1	;volatile
 10118                           
 10119                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 10120  17F8  3003               	movlw	low _ADCC_DefaultInterruptHandler
 10121  17F9  0140               	movlb	0	; select bank0
 10122  17FA  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 10123  17FB  3000               	movlw	high _ADCC_DefaultInterruptHandler
 10124  17FC  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 10125  17FD  3195  2577         	fcall	_ADCC_SetADTIInterruptHandler
 10126  17FF  0008               	return
 10127  1800                     __end_of_ADCC_Initialize:	
 10128                           
 10129                           	psect	text17
 10130  02B5                     __ptext17:	
 10131 ;; *************** function _LED_setColor *****************
 10132 ;; Defined at:
 10133 ;;		line 82 in file "lights.c"
 10134 ;; Parameters:    Size  Location     Type
 10135 ;;  red             1    wreg     unsigned char 
 10136 ;;  green           1   77[BANK0 ] unsigned char 
 10137 ;;  blue            1   78[BANK0 ] unsigned char 
 10138 ;;  white           1   79[BANK0 ] unsigned char 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  red             1    5[BANK1 ] unsigned char 
 10141 ;; Return value:  Size  Location     Type
 10142 ;;                  1    wreg      void 
 10143 ;; Registers used:
 10144 ;;		wreg, status,2, status,0, pclath, cstack
 10145 ;; Tracked objects:
 10146 ;;		On entry : 0/0
 10147 ;;		On exit  : 0/0
 10148 ;;		Unchanged: 0/0
 10149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10150 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10151 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10152 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10153 ;;      Totals:         0       3       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10154 ;;Total ram usage:        9 bytes
 10155 ;; Hardware stack levels used:    1
 10156 ;; Hardware stack levels required when called:    6
 10157 ;; This function calls:
 10158 ;;		___fldiv
 10159 ;;		___flmul
 10160 ;;		___fltol
 10161 ;;		___xxtofl
 10162 ;; This function is called by:
 10163 ;;		_main
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           
 10168                           ;psect for function _LED_setColor
 10169  02B5                     _LED_setColor:	
 10170                           
 10171                           ;incstack = 0
 10172                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
 10173                           ;LED_setColor@red stored from wreg
 10174  02B5  0141               	movlb	1	; select bank1
 10175  02B6  00D6               	movwf	LED_setColor@red^(0+128)
 10176                           
 10177                           ;lights.c: 84:         red = ((float)red / 2048) * (4000000 / (122 * 32));
 10178  02B7  0856               	movf	LED_setColor@red^(0+128),w
 10179  02B8  00D1               	movwf	??_LED_setColor^(0+128)
 10180  02B9  01D2               	clrf	(??_LED_setColor^(0+128)+1)
 10181  02BA  01D3               	clrf	(??_LED_setColor^(0+128)+2)
 10182  02BB  01D4               	clrf	(??_LED_setColor^(0+128)+3)
 10183  02BC  0854               	movf	(??_LED_setColor+3)^(0+128),w
 10184  02BD  0140               	movlb	0	; select bank0
 10185  02BE  00A3               	movwf	___xxtofl@val+3
 10186  02BF  0141               	movlb	1	; select bank1
 10187  02C0  0853               	movf	(??_LED_setColor+2)^(0+128),w
 10188  02C1  0140               	movlb	0	; select bank0
 10189  02C2  00A2               	movwf	___xxtofl@val+2
 10190  02C3  0141               	movlb	1	; select bank1
 10191  02C4  0852               	movf	(??_LED_setColor+1)^(0+128),w
 10192  02C5  0140               	movlb	0	; select bank0
 10193  02C6  00A1               	movwf	___xxtofl@val+1
 10194  02C7  0141               	movlb	1	; select bank1
 10195  02C8  0851               	movf	??_LED_setColor^(0+128),w
 10196  02C9  0140               	movlb	0	; select bank0
 10197  02CA  00A0               	movwf	___xxtofl@val
 10198  02CB  3000               	movlw	0
 10199  02CC  318B  23A3  3182   	fcall	___xxtofl
 10200  02CF  0140               	movlb	0	; select bank0
 10201  02D0  0823               	movf	?___xxtofl+3,w
 10202  02D1  00B5               	movwf	___fldiv@b+3
 10203  02D2  0822               	movf	?___xxtofl+2,w
 10204  02D3  00B4               	movwf	___fldiv@b+2
 10205  02D4  0821               	movf	?___xxtofl+1,w
 10206  02D5  00B3               	movwf	___fldiv@b+1
 10207  02D6  0820               	movf	?___xxtofl,w
 10208  02D7  00B2               	movwf	___fldiv@b
 10209  02D8  3045               	movlw	69
 10210  02D9  00B1               	movwf	___fldiv@a+3
 10211  02DA  3000               	movlw	0
 10212  02DB  00B0               	movwf	___fldiv@a+2
 10213  02DC  3000               	movlw	0
 10214  02DD  00AF               	movwf	___fldiv@a+1
 10215  02DE  3000               	movlw	0
 10216  02DF  00AE               	movwf	___fldiv@a
 10217  02E0  3184  2436  3182   	fcall	___fldiv
 10218  02E3  0140               	movlb	0	; select bank0
 10219  02E4  0831               	movf	?___fldiv+3,w
 10220  02E5  00CF               	movwf	___flmul@a+3
 10221  02E6  0830               	movf	?___fldiv+2,w
 10222  02E7  00CE               	movwf	___flmul@a+2
 10223  02E8  082F               	movf	?___fldiv+1,w
 10224  02E9  00CD               	movwf	___flmul@a+1
 10225  02EA  082E               	movf	?___fldiv,w
 10226  02EB  00CC               	movwf	___flmul@a
 10227  02EC  3044               	movlw	68
 10228  02ED  00CB               	movwf	___flmul@b+3
 10229  02EE  3080               	movlw	128
 10230  02EF  00CA               	movwf	___flmul@b+2
 10231  02F0  3000               	movlw	0
 10232  02F1  00C9               	movwf	___flmul@b+1
 10233  02F2  3000               	movlw	0
 10234  02F3  00C8               	movwf	___flmul@b
 10235  02F4  3180  2089  3182   	fcall	___flmul
 10236  02F7  0140               	movlb	0	; select bank0
 10237  02F8  084B               	movf	?___flmul+3,w
 10238  02F9  00E5               	movwf	___fltol@f1+3
 10239  02FA  084A               	movf	?___flmul+2,w
 10240  02FB  00E4               	movwf	___fltol@f1+2
 10241  02FC  0849               	movf	?___flmul+1,w
 10242  02FD  00E3               	movwf	___fltol@f1+1
 10243  02FE  0848               	movf	?___flmul,w
 10244  02FF  00E2               	movwf	___fltol@f1
 10245  0300  318B  233D  3182   	fcall	___fltol
 10246  0303  0140               	movlb	0	; select bank0
 10247  0304  0862               	movf	?___fltol,w
 10248  0305  0141               	movlb	1	; select bank1
 10249  0306  00D5               	movwf	(??_LED_setColor+4)^(0+128)
 10250  0307  0855               	movf	(??_LED_setColor+4)^(0+128),w
 10251  0308  00D6               	movwf	LED_setColor@red^(0+128)
 10252                           
 10253                           ;lights.c: 85:         green = ((float)green / 2048) * (4000000 / (122 * 32));
 10254  0309  0140               	movlb	0	; select bank0
 10255  030A  086D               	movf	LED_setColor@green,w
 10256  030B  0141               	movlb	1	; select bank1
 10257  030C  00D1               	movwf	??_LED_setColor^(0+128)
 10258  030D  01D2               	clrf	(??_LED_setColor^(0+128)+1)
 10259  030E  01D3               	clrf	(??_LED_setColor^(0+128)+2)
 10260  030F  01D4               	clrf	(??_LED_setColor^(0+128)+3)
 10261  0310  0854               	movf	(??_LED_setColor+3)^(0+128),w
 10262  0311  0140               	movlb	0	; select bank0
 10263  0312  00A3               	movwf	___xxtofl@val+3
 10264  0313  0141               	movlb	1	; select bank1
 10265  0314  0853               	movf	(??_LED_setColor+2)^(0+128),w
 10266  0315  0140               	movlb	0	; select bank0
 10267  0316  00A2               	movwf	___xxtofl@val+2
 10268  0317  0141               	movlb	1	; select bank1
 10269  0318  0852               	movf	(??_LED_setColor+1)^(0+128),w
 10270  0319  0140               	movlb	0	; select bank0
 10271  031A  00A1               	movwf	___xxtofl@val+1
 10272  031B  0141               	movlb	1	; select bank1
 10273  031C  0851               	movf	??_LED_setColor^(0+128),w
 10274  031D  0140               	movlb	0	; select bank0
 10275  031E  00A0               	movwf	___xxtofl@val
 10276  031F  3000               	movlw	0
 10277  0320  318B  23A3  3182   	fcall	___xxtofl
 10278  0323  0140               	movlb	0	; select bank0
 10279  0324  0823               	movf	?___xxtofl+3,w
 10280  0325  00B5               	movwf	___fldiv@b+3
 10281  0326  0822               	movf	?___xxtofl+2,w
 10282  0327  00B4               	movwf	___fldiv@b+2
 10283  0328  0821               	movf	?___xxtofl+1,w
 10284  0329  00B3               	movwf	___fldiv@b+1
 10285  032A  0820               	movf	?___xxtofl,w
 10286  032B  00B2               	movwf	___fldiv@b
 10287  032C  3045               	movlw	69
 10288  032D  00B1               	movwf	___fldiv@a+3
 10289  032E  3000               	movlw	0
 10290  032F  00B0               	movwf	___fldiv@a+2
 10291  0330  3000               	movlw	0
 10292  0331  00AF               	movwf	___fldiv@a+1
 10293  0332  3000               	movlw	0
 10294  0333  00AE               	movwf	___fldiv@a
 10295  0334  3184  2436  3182   	fcall	___fldiv
 10296  0337  0140               	movlb	0	; select bank0
 10297  0338  0831               	movf	?___fldiv+3,w
 10298  0339  00CF               	movwf	___flmul@a+3
 10299  033A  0830               	movf	?___fldiv+2,w
 10300  033B  00CE               	movwf	___flmul@a+2
 10301  033C  082F               	movf	?___fldiv+1,w
 10302  033D  00CD               	movwf	___flmul@a+1
 10303  033E  082E               	movf	?___fldiv,w
 10304  033F  00CC               	movwf	___flmul@a
 10305  0340  3044               	movlw	68
 10306  0341  00CB               	movwf	___flmul@b+3
 10307  0342  3080               	movlw	128
 10308  0343  00CA               	movwf	___flmul@b+2
 10309  0344  3000               	movlw	0
 10310  0345  00C9               	movwf	___flmul@b+1
 10311  0346  3000               	movlw	0
 10312  0347  00C8               	movwf	___flmul@b
 10313  0348  3180  2089  3182   	fcall	___flmul
 10314  034B  0140               	movlb	0	; select bank0
 10315  034C  084B               	movf	?___flmul+3,w
 10316  034D  00E5               	movwf	___fltol@f1+3
 10317  034E  084A               	movf	?___flmul+2,w
 10318  034F  00E4               	movwf	___fltol@f1+2
 10319  0350  0849               	movf	?___flmul+1,w
 10320  0351  00E3               	movwf	___fltol@f1+1
 10321  0352  0848               	movf	?___flmul,w
 10322  0353  00E2               	movwf	___fltol@f1
 10323  0354  318B  233D  3182   	fcall	___fltol
 10324  0357  0140               	movlb	0	; select bank0
 10325  0358  0862               	movf	?___fltol,w
 10326  0359  0141               	movlb	1	; select bank1
 10327  035A  00D5               	movwf	(??_LED_setColor+4)^(0+128)
 10328  035B  0855               	movf	(??_LED_setColor+4)^(0+128),w
 10329  035C  0140               	movlb	0	; select bank0
 10330  035D  00ED               	movwf	LED_setColor@green
 10331                           
 10332                           ;lights.c: 86:         blue = ((float)blue / 2048) * (4000000 / (122 * 32));
 10333  035E  086E               	movf	LED_setColor@blue,w
 10334  035F  0141               	movlb	1	; select bank1
 10335  0360  00D1               	movwf	??_LED_setColor^(0+128)
 10336  0361  01D2               	clrf	(??_LED_setColor^(0+128)+1)
 10337  0362  01D3               	clrf	(??_LED_setColor^(0+128)+2)
 10338  0363  01D4               	clrf	(??_LED_setColor^(0+128)+3)
 10339  0364  0854               	movf	(??_LED_setColor+3)^(0+128),w
 10340  0365  0140               	movlb	0	; select bank0
 10341  0366  00A3               	movwf	___xxtofl@val+3
 10342  0367  0141               	movlb	1	; select bank1
 10343  0368  0853               	movf	(??_LED_setColor+2)^(0+128),w
 10344  0369  0140               	movlb	0	; select bank0
 10345  036A  00A2               	movwf	___xxtofl@val+2
 10346  036B  0141               	movlb	1	; select bank1
 10347  036C  0852               	movf	(??_LED_setColor+1)^(0+128),w
 10348  036D  0140               	movlb	0	; select bank0
 10349  036E  00A1               	movwf	___xxtofl@val+1
 10350  036F  0141               	movlb	1	; select bank1
 10351  0370  0851               	movf	??_LED_setColor^(0+128),w
 10352  0371  0140               	movlb	0	; select bank0
 10353  0372  00A0               	movwf	___xxtofl@val
 10354  0373  3000               	movlw	0
 10355  0374  318B  23A3  3182   	fcall	___xxtofl
 10356  0377  0140               	movlb	0	; select bank0
 10357  0378  0823               	movf	?___xxtofl+3,w
 10358  0379  00B5               	movwf	___fldiv@b+3
 10359  037A  0822               	movf	?___xxtofl+2,w
 10360  037B  00B4               	movwf	___fldiv@b+2
 10361  037C  0821               	movf	?___xxtofl+1,w
 10362  037D  00B3               	movwf	___fldiv@b+1
 10363  037E  0820               	movf	?___xxtofl,w
 10364  037F  00B2               	movwf	___fldiv@b
 10365  0380  3045               	movlw	69
 10366  0381  00B1               	movwf	___fldiv@a+3
 10367  0382  3000               	movlw	0
 10368  0383  00B0               	movwf	___fldiv@a+2
 10369  0384  3000               	movlw	0
 10370  0385  00AF               	movwf	___fldiv@a+1
 10371  0386  3000               	movlw	0
 10372  0387  00AE               	movwf	___fldiv@a
 10373  0388  3184  2436  3182   	fcall	___fldiv
 10374  038B  0140               	movlb	0	; select bank0
 10375  038C  0831               	movf	?___fldiv+3,w
 10376  038D  00CF               	movwf	___flmul@a+3
 10377  038E  0830               	movf	?___fldiv+2,w
 10378  038F  00CE               	movwf	___flmul@a+2
 10379  0390  082F               	movf	?___fldiv+1,w
 10380  0391  00CD               	movwf	___flmul@a+1
 10381  0392  082E               	movf	?___fldiv,w
 10382  0393  00CC               	movwf	___flmul@a
 10383  0394  3044               	movlw	68
 10384  0395  00CB               	movwf	___flmul@b+3
 10385  0396  3080               	movlw	128
 10386  0397  00CA               	movwf	___flmul@b+2
 10387  0398  3000               	movlw	0
 10388  0399  00C9               	movwf	___flmul@b+1
 10389  039A  3000               	movlw	0
 10390  039B  00C8               	movwf	___flmul@b
 10391  039C  3180  2089  3182   	fcall	___flmul
 10392  039F  0140               	movlb	0	; select bank0
 10393  03A0  084B               	movf	?___flmul+3,w
 10394  03A1  00E5               	movwf	___fltol@f1+3
 10395  03A2  084A               	movf	?___flmul+2,w
 10396  03A3  00E4               	movwf	___fltol@f1+2
 10397  03A4  0849               	movf	?___flmul+1,w
 10398  03A5  00E3               	movwf	___fltol@f1+1
 10399  03A6  0848               	movf	?___flmul,w
 10400  03A7  00E2               	movwf	___fltol@f1
 10401  03A8  318B  233D  3182   	fcall	___fltol
 10402  03AB  0140               	movlb	0	; select bank0
 10403  03AC  0862               	movf	?___fltol,w
 10404  03AD  0141               	movlb	1	; select bank1
 10405  03AE  00D5               	movwf	(??_LED_setColor+4)^(0+128)
 10406  03AF  0855               	movf	(??_LED_setColor+4)^(0+128),w
 10407  03B0  0140               	movlb	0	; select bank0
 10408  03B1  00EE               	movwf	LED_setColor@blue
 10409                           
 10410                           ;lights.c: 87:         white = ((float)white / 2048) * (4000000 / (122 * 32));
 10411  03B2  086F               	movf	LED_setColor@white,w
 10412  03B3  0141               	movlb	1	; select bank1
 10413  03B4  00D1               	movwf	??_LED_setColor^(0+128)
 10414  03B5  01D2               	clrf	(??_LED_setColor^(0+128)+1)
 10415  03B6  01D3               	clrf	(??_LED_setColor^(0+128)+2)
 10416  03B7  01D4               	clrf	(??_LED_setColor^(0+128)+3)
 10417  03B8  0854               	movf	(??_LED_setColor+3)^(0+128),w
 10418  03B9  0140               	movlb	0	; select bank0
 10419  03BA  00A3               	movwf	___xxtofl@val+3
 10420  03BB  0141               	movlb	1	; select bank1
 10421  03BC  0853               	movf	(??_LED_setColor+2)^(0+128),w
 10422  03BD  0140               	movlb	0	; select bank0
 10423  03BE  00A2               	movwf	___xxtofl@val+2
 10424  03BF  0141               	movlb	1	; select bank1
 10425  03C0  0852               	movf	(??_LED_setColor+1)^(0+128),w
 10426  03C1  0140               	movlb	0	; select bank0
 10427  03C2  00A1               	movwf	___xxtofl@val+1
 10428  03C3  0141               	movlb	1	; select bank1
 10429  03C4  0851               	movf	??_LED_setColor^(0+128),w
 10430  03C5  0140               	movlb	0	; select bank0
 10431  03C6  00A0               	movwf	___xxtofl@val
 10432  03C7  3000               	movlw	0
 10433  03C8  318B  23A3  3182   	fcall	___xxtofl
 10434  03CB  0140               	movlb	0	; select bank0
 10435  03CC  0823               	movf	?___xxtofl+3,w
 10436  03CD  00B5               	movwf	___fldiv@b+3
 10437  03CE  0822               	movf	?___xxtofl+2,w
 10438  03CF  00B4               	movwf	___fldiv@b+2
 10439  03D0  0821               	movf	?___xxtofl+1,w
 10440  03D1  00B3               	movwf	___fldiv@b+1
 10441  03D2  0820               	movf	?___xxtofl,w
 10442  03D3  00B2               	movwf	___fldiv@b
 10443  03D4  3045               	movlw	69
 10444  03D5  00B1               	movwf	___fldiv@a+3
 10445  03D6  3000               	movlw	0
 10446  03D7  00B0               	movwf	___fldiv@a+2
 10447  03D8  3000               	movlw	0
 10448  03D9  00AF               	movwf	___fldiv@a+1
 10449  03DA  3000               	movlw	0
 10450  03DB  00AE               	movwf	___fldiv@a
 10451  03DC  3184  2436  3182   	fcall	___fldiv
 10452  03DF  0140               	movlb	0	; select bank0
 10453  03E0  0831               	movf	?___fldiv+3,w
 10454  03E1  00CF               	movwf	___flmul@a+3
 10455  03E2  0830               	movf	?___fldiv+2,w
 10456  03E3  00CE               	movwf	___flmul@a+2
 10457  03E4  082F               	movf	?___fldiv+1,w
 10458  03E5  00CD               	movwf	___flmul@a+1
 10459  03E6  082E               	movf	?___fldiv,w
 10460  03E7  00CC               	movwf	___flmul@a
 10461  03E8  3044               	movlw	68
 10462  03E9  00CB               	movwf	___flmul@b+3
 10463  03EA  3080               	movlw	128
 10464  03EB  00CA               	movwf	___flmul@b+2
 10465  03EC  3000               	movlw	0
 10466  03ED  00C9               	movwf	___flmul@b+1
 10467  03EE  3000               	movlw	0
 10468  03EF  00C8               	movwf	___flmul@b
 10469  03F0  3180  2089  3182   	fcall	___flmul
 10470  03F3  0140               	movlb	0	; select bank0
 10471  03F4  084B               	movf	?___flmul+3,w
 10472  03F5  00E5               	movwf	___fltol@f1+3
 10473  03F6  084A               	movf	?___flmul+2,w
 10474  03F7  00E4               	movwf	___fltol@f1+2
 10475  03F8  0849               	movf	?___flmul+1,w
 10476  03F9  00E3               	movwf	___fltol@f1+1
 10477  03FA  0848               	movf	?___flmul,w
 10478  03FB  00E2               	movwf	___fltol@f1
 10479  03FC  318B  233D  3182   	fcall	___fltol
 10480  03FF  0140               	movlb	0	; select bank0
 10481  0400  0862               	movf	?___fltol,w
 10482  0401  0141               	movlb	1	; select bank1
 10483  0402  00D5               	movwf	(??_LED_setColor+4)^(0+128)
 10484  0403  0855               	movf	(??_LED_setColor+4)^(0+128),w
 10485  0404  0140               	movlb	0	; select bank0
 10486  0405  00EF               	movwf	LED_setColor@white
 10487                           
 10488                           ;lights.c: 95:     CCPR1 = red;
 10489                           
 10490                           ;lights.c: 93:     }
 10491  0406  0141               	movlb	1	; select bank1
 10492  0407  0856               	movf	LED_setColor@red^(0+128),w
 10493  0408  00D1               	movwf	??_LED_setColor^(0+128)
 10494  0409  01D2               	clrf	(??_LED_setColor^(0+128)+1)
 10495  040A  0851               	movf	??_LED_setColor^(0+128),w
 10496  040B  0146               	movlb	6	; select bank6
 10497  040C  008C               	movwf	12	;volatile
 10498  040D  0141               	movlb	1	; select bank1
 10499  040E  0852               	movf	(??_LED_setColor+1)^(0+128),w
 10500  040F  0146               	movlb	6	; select bank6
 10501  0410  008D               	movwf	13	;volatile
 10502                           
 10503                           ;lights.c: 96:     CCPR2 = green;
 10504  0411  0140               	movlb	0	; select bank0
 10505  0412  086D               	movf	LED_setColor@green,w
 10506  0413  0141               	movlb	1	; select bank1
 10507  0414  00D1               	movwf	??_LED_setColor^(0+128)
 10508  0415  01D2               	clrf	(??_LED_setColor^(0+128)+1)
 10509  0416  0851               	movf	??_LED_setColor^(0+128),w
 10510  0417  0146               	movlb	6	; select bank6
 10511  0418  0090               	movwf	16	;volatile
 10512  0419  0141               	movlb	1	; select bank1
 10513  041A  0852               	movf	(??_LED_setColor+1)^(0+128),w
 10514  041B  0146               	movlb	6	; select bank6
 10515  041C  0091               	movwf	17	;volatile
 10516                           
 10517                           ;lights.c: 97:     CCPR3 = blue;
 10518  041D  0140               	movlb	0	; select bank0
 10519  041E  086E               	movf	LED_setColor@blue,w
 10520  041F  0141               	movlb	1	; select bank1
 10521  0420  00D1               	movwf	??_LED_setColor^(0+128)
 10522  0421  01D2               	clrf	(??_LED_setColor^(0+128)+1)
 10523  0422  0851               	movf	??_LED_setColor^(0+128),w
 10524  0423  0146               	movlb	6	; select bank6
 10525  0424  0094               	movwf	20	;volatile
 10526  0425  0141               	movlb	1	; select bank1
 10527  0426  0852               	movf	(??_LED_setColor+1)^(0+128),w
 10528  0427  0146               	movlb	6	; select bank6
 10529  0428  0095               	movwf	21	;volatile
 10530                           
 10531                           ;lights.c: 98:     CCPR4 = white;
 10532  0429  0140               	movlb	0	; select bank0
 10533  042A  086F               	movf	LED_setColor@white,w
 10534  042B  0141               	movlb	1	; select bank1
 10535  042C  00D1               	movwf	??_LED_setColor^(0+128)
 10536  042D  01D2               	clrf	(??_LED_setColor^(0+128)+1)
 10537  042E  0851               	movf	??_LED_setColor^(0+128),w
 10538  042F  0146               	movlb	6	; select bank6
 10539  0430  0098               	movwf	24	;volatile
 10540  0431  0141               	movlb	1	; select bank1
 10541  0432  0852               	movf	(??_LED_setColor+1)^(0+128),w
 10542  0433  0146               	movlb	6	; select bank6
 10543  0434  0099               	movwf	25	;volatile
 10544  0435  0008               	return
 10545  0436                     __end_of_LED_setColor:	
 10546                           
 10547                           	psect	text18
 10548  0BA3                     __ptext18:	
 10549 ;; *************** function ___xxtofl *****************
 10550 ;; Defined at:
 10551 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;  sign            1    wreg     unsigned char 
 10554 ;;  val             4    0[BANK0 ] long 
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;  sign            1    8[BANK0 ] unsigned char 
 10557 ;;  arg             4   10[BANK0 ] unsigned long 
 10558 ;;  exp             1    9[BANK0 ] unsigned char 
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  4    0[BANK0 ] unsigned char 
 10561 ;; Registers used:
 10562 ;;		wreg, status,2, status,0
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/0
 10565 ;;		On exit  : 0/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10568 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10569 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10570 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10571 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10572 ;;Total ram usage:       14 bytes
 10573 ;; Hardware stack levels used:    1
 10574 ;; Hardware stack levels required when called:    4
 10575 ;; This function calls:
 10576 ;;		Nothing
 10577 ;; This function is called by:
 10578 ;;		_LED_setColor
 10579 ;; This function uses a non-reentrant model
 10580 ;;
 10581                           
 10582                           
 10583                           ;psect for function ___xxtofl
 10584  0BA3                     ___xxtofl:	
 10585                           
 10586                           ;incstack = 0
 10587                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10588                           ;___xxtofl@sign stored from wreg
 10589  0BA3  0140               	movlb	0	; select bank0
 10590  0BA4  00A8               	movwf	___xxtofl@sign
 10591  0BA5  0828               	movf	___xxtofl@sign,w
 10592  0BA6  1D03               	btfss	3,2
 10593  0BA7  1FA3               	btfss	___xxtofl@val+3,7
 10594  0BA8  2BB9               	goto	l4009
 10595  0BA9  0920               	comf	___xxtofl@val,w
 10596  0BAA  00AA               	movwf	___xxtofl@arg
 10597  0BAB  0921               	comf	___xxtofl@val+1,w
 10598  0BAC  00AB               	movwf	___xxtofl@arg+1
 10599  0BAD  0922               	comf	___xxtofl@val+2,w
 10600  0BAE  00AC               	movwf	___xxtofl@arg+2
 10601  0BAF  0923               	comf	___xxtofl@val+3,w
 10602  0BB0  00AD               	movwf	___xxtofl@arg+3
 10603  0BB1  0AAA               	incf	___xxtofl@arg,f
 10604  0BB2  1903               	skipnz
 10605  0BB3  0AAB               	incf	___xxtofl@arg+1,f
 10606  0BB4  1903               	skipnz
 10607  0BB5  0AAC               	incf	___xxtofl@arg+2,f
 10608  0BB6  1903               	skipnz
 10609  0BB7  0AAD               	incf	___xxtofl@arg+3,f
 10610  0BB8  2BC1               	goto	l1684
 10611  0BB9                     l4009:	
 10612  0BB9  0823               	movf	___xxtofl@val+3,w
 10613  0BBA  00AD               	movwf	___xxtofl@arg+3
 10614  0BBB  0822               	movf	___xxtofl@val+2,w
 10615  0BBC  00AC               	movwf	___xxtofl@arg+2
 10616  0BBD  0821               	movf	___xxtofl@val+1,w
 10617  0BBE  00AB               	movwf	___xxtofl@arg+1
 10618  0BBF  0820               	movf	___xxtofl@val,w
 10619  0BC0  00AA               	movwf	___xxtofl@arg
 10620  0BC1                     l1684:	
 10621  0BC1  0823               	movf	___xxtofl@val+3,w
 10622  0BC2  0422               	iorwf	___xxtofl@val+2,w
 10623  0BC3  0421               	iorwf	___xxtofl@val+1,w
 10624  0BC4  0420               	iorwf	___xxtofl@val,w
 10625  0BC5  1D03               	skipz
 10626  0BC6  2BD0               	goto	l4015
 10627  0BC7  3000               	movlw	0
 10628  0BC8  00A3               	movwf	?___xxtofl+3
 10629  0BC9  3000               	movlw	0
 10630  0BCA  00A2               	movwf	?___xxtofl+2
 10631  0BCB  3000               	movlw	0
 10632  0BCC  00A1               	movwf	?___xxtofl+1
 10633  0BCD  3000               	movlw	0
 10634  0BCE  00A0               	movwf	?___xxtofl
 10635  0BCF  0008               	return
 10636  0BD0                     l4015:	
 10637  0BD0  3096               	movlw	150
 10638  0BD1  00A4               	movwf	??___xxtofl
 10639  0BD2  0824               	movf	??___xxtofl,w
 10640  0BD3  00A9               	movwf	___xxtofl@exp
 10641  0BD4                     l4019:	
 10642  0BD4  30FE               	movlw	254
 10643  0BD5  052D               	andwf	___xxtofl@arg+3,w
 10644  0BD6  1903               	btfsc	3,2
 10645  0BD7  2BF7               	goto	l1690
 10646  0BD8  3001               	movlw	1
 10647  0BD9  00A4               	movwf	??___xxtofl
 10648  0BDA  0824               	movf	??___xxtofl,w
 10649  0BDB  07A9               	addwf	___xxtofl@exp,f
 10650  0BDC  3001               	movlw	1
 10651  0BDD                     u3305:	
 10652  0BDD  36AD               	lsrf	___xxtofl@arg+3,f
 10653  0BDE  0CAC               	rrf	___xxtofl@arg+2,f
 10654  0BDF  0CAB               	rrf	___xxtofl@arg+1,f
 10655  0BE0  0CAA               	rrf	___xxtofl@arg,f
 10656  0BE1  0B89               	decfsz	9,f
 10657  0BE2  2BDD               	goto	u3305
 10658  0BE3  2BD4               	goto	l4019
 10659  0BE4                     l4021:	
 10660  0BE4  3001               	movlw	1
 10661  0BE5  00A4               	movwf	??___xxtofl
 10662  0BE6  0824               	movf	??___xxtofl,w
 10663  0BE7  07A9               	addwf	___xxtofl@exp,f
 10664  0BE8  3001               	movlw	1
 10665  0BE9  07AA               	addwf	___xxtofl@arg,f
 10666  0BEA  3000               	movlw	0
 10667  0BEB  3DAB               	addwfc	___xxtofl@arg+1,f
 10668  0BEC  3000               	movlw	0
 10669  0BED  3DAC               	addwfc	___xxtofl@arg+2,f
 10670  0BEE  3000               	movlw	0
 10671  0BEF  3DAD               	addwfc	___xxtofl@arg+3,f
 10672  0BF0  3001               	movlw	1
 10673  0BF1                     u3325:	
 10674  0BF1  36AD               	lsrf	___xxtofl@arg+3,f
 10675  0BF2  0CAC               	rrf	___xxtofl@arg+2,f
 10676  0BF3  0CAB               	rrf	___xxtofl@arg+1,f
 10677  0BF4  0CAA               	rrf	___xxtofl@arg,f
 10678  0BF5  0B89               	decfsz	9,f
 10679  0BF6  2BF1               	goto	u3325
 10680  0BF7                     l1690:	
 10681  0BF7  30FF               	movlw	255
 10682  0BF8  052D               	andwf	___xxtofl@arg+3,w
 10683  0BF9  1903               	btfsc	3,2
 10684  0BFA  2C09               	goto	l4029
 10685  0BFB  2BE4               	goto	l4021
 10686  0BFC                     l4031:	
 10687  0BFC  3002               	movlw	2
 10688  0BFD  0229               	subwf	___xxtofl@exp,w
 10689  0BFE  1C03               	btfss	3,0
 10690  0BFF  2C0B               	goto	l1697
 10691  0C00  3001               	movlw	1
 10692  0C01  02A9               	subwf	___xxtofl@exp,f
 10693  0C02  3001               	movlw	1
 10694  0C03                     u3345:	
 10695  0C03  35AA               	lslf	___xxtofl@arg,f
 10696  0C04  0DAB               	rlf	___xxtofl@arg+1,f
 10697  0C05  0DAC               	rlf	___xxtofl@arg+2,f
 10698  0C06  0DAD               	rlf	___xxtofl@arg+3,f
 10699  0C07  0B89               	decfsz	9,f
 10700  0C08  2C03               	goto	u3345
 10701  0C09                     l4029:	
 10702  0C09  1FAC               	btfss	___xxtofl@arg+2,7
 10703  0C0A  2BFC               	goto	l4031
 10704  0C0B                     l1697:	
 10705  0C0B  1829               	btfsc	___xxtofl@exp,0
 10706  0C0C  2C15               	goto	l1698
 10707  0C0D  30FF               	movlw	255
 10708  0C0E  05AA               	andwf	___xxtofl@arg,f
 10709  0C0F  30FF               	movlw	255
 10710  0C10  05AB               	andwf	___xxtofl@arg+1,f
 10711  0C11  307F               	movlw	127
 10712  0C12  05AC               	andwf	___xxtofl@arg+2,f
 10713  0C13  30FF               	movlw	255
 10714  0C14  05AD               	andwf	___xxtofl@arg+3,f
 10715  0C15                     l1698:	
 10716  0C15  1003               	clrc
 10717  0C16  0CA9               	rrf	___xxtofl@exp,f
 10718  0C17  0829               	movf	___xxtofl@exp,w
 10719  0C18  00A4               	movwf	??___xxtofl
 10720  0C19  01A5               	clrf	??___xxtofl+1
 10721  0C1A  01A6               	clrf	??___xxtofl+2
 10722  0C1B  01A7               	clrf	??___xxtofl+3
 10723  0C1C  3018               	movlw	24
 10724  0C1D                     u3385:	
 10725  0C1D  35A4               	lslf	??___xxtofl,f
 10726  0C1E  0DA5               	rlf	??___xxtofl+1,f
 10727  0C1F  0DA6               	rlf	??___xxtofl+2,f
 10728  0C20  0DA7               	rlf	??___xxtofl+3,f
 10729  0C21  0B89               	decfsz	9,f
 10730  0C22  2C1D               	goto	u3385
 10731  0C23  0824               	movf	??___xxtofl,w
 10732  0C24  04AA               	iorwf	___xxtofl@arg,f
 10733  0C25  0825               	movf	??___xxtofl+1,w
 10734  0C26  04AB               	iorwf	___xxtofl@arg+1,f
 10735  0C27  0826               	movf	??___xxtofl+2,w
 10736  0C28  04AC               	iorwf	___xxtofl@arg+2,f
 10737  0C29  0827               	movf	??___xxtofl+3,w
 10738  0C2A  04AD               	iorwf	___xxtofl@arg+3,f
 10739  0C2B  0828               	movf	___xxtofl@sign,w
 10740  0C2C  1D03               	btfss	3,2
 10741  0C2D  1FA3               	btfss	___xxtofl@val+3,7
 10742  0C2E  2C30               	goto	l4043
 10743  0C2F  17AD               	bsf	___xxtofl@arg+3,7
 10744  0C30                     l4043:	
 10745  0C30  082D               	movf	___xxtofl@arg+3,w
 10746  0C31  00A3               	movwf	?___xxtofl+3
 10747  0C32  082C               	movf	___xxtofl@arg+2,w
 10748  0C33  00A2               	movwf	?___xxtofl+2
 10749  0C34  082B               	movf	___xxtofl@arg+1,w
 10750  0C35  00A1               	movwf	?___xxtofl+1
 10751  0C36  082A               	movf	___xxtofl@arg,w
 10752  0C37  00A0               	movwf	?___xxtofl
 10753  0C38  0008               	return
 10754  0C39                     __end_of___xxtofl:	
 10755                           
 10756                           	psect	text19
 10757  0B3D                     __ptext19:	
 10758 ;; *************** function ___fltol *****************
 10759 ;; Defined at:
 10760 ;;		line 43 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
 10761 ;; Parameters:    Size  Location     Type
 10762 ;;  f1              4   66[BANK0 ] unsigned char 
 10763 ;; Auto vars:     Size  Location     Type
 10764 ;;  exp1            1   76[BANK0 ] unsigned char 
 10765 ;;  sign1           1   75[BANK0 ] unsigned char 
 10766 ;; Return value:  Size  Location     Type
 10767 ;;                  4   66[BANK0 ] long 
 10768 ;; Registers used:
 10769 ;;		wreg, status,2, status,0
 10770 ;; Tracked objects:
 10771 ;;		On entry : 0/0
 10772 ;;		On exit  : 0/0
 10773 ;;		Unchanged: 0/0
 10774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10775 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10776 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10777 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10778 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10779 ;;Total ram usage:       11 bytes
 10780 ;; Hardware stack levels used:    1
 10781 ;; Hardware stack levels required when called:    4
 10782 ;; This function calls:
 10783 ;;		Nothing
 10784 ;; This function is called by:
 10785 ;;		_LED_setColor
 10786 ;; This function uses a non-reentrant model
 10787 ;;
 10788                           
 10789                           
 10790                           ;psect for function ___fltol
 10791  0B3D                     ___fltol:	
 10792                           
 10793                           ;incstack = 0
 10794                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10795  0B3D  1003               	clrc
 10796  0B3E  0140               	movlb	0	; select bank0
 10797  0B3F  0D64               	rlf	___fltol@f1+2,w
 10798  0B40  0D65               	rlf	___fltol@f1+3,w
 10799  0B41  00E6               	movwf	??___fltol
 10800  0B42  0866               	movf	??___fltol,w
 10801  0B43  00EC               	movwf	___fltol@exp1
 10802  0B44  086C               	movf	___fltol@exp1,w
 10803  0B45  1D03               	btfss	3,2
 10804  0B46  2B50               	goto	l3693
 10805  0B47                     l3689:	
 10806  0B47  3000               	movlw	0
 10807  0B48  00E5               	movwf	?___fltol+3
 10808  0B49  3000               	movlw	0
 10809  0B4A  00E4               	movwf	?___fltol+2
 10810  0B4B  3000               	movlw	0
 10811  0B4C  00E3               	movwf	?___fltol+1
 10812  0B4D  3000               	movlw	0
 10813  0B4E  00E2               	movwf	?___fltol
 10814  0B4F  0008               	return
 10815  0B50                     l3693:	
 10816  0B50  0862               	movf	___fltol@f1,w
 10817  0B51  00E6               	movwf	??___fltol
 10818  0B52  0863               	movf	___fltol@f1+1,w
 10819  0B53  00E7               	movwf	??___fltol+1
 10820  0B54  0864               	movf	___fltol@f1+2,w
 10821  0B55  00E8               	movwf	??___fltol+2
 10822  0B56  0865               	movf	___fltol@f1+3,w
 10823  0B57  00E9               	movwf	??___fltol+3
 10824  0B58  301F               	movlw	31
 10825  0B59                     u2635:	
 10826  0B59  36E9               	lsrf	??___fltol+3,f
 10827  0B5A  0CE8               	rrf	??___fltol+2,f
 10828  0B5B  0CE7               	rrf	??___fltol+1,f
 10829  0B5C  0CE6               	rrf	??___fltol,f
 10830  0B5D  0B89               	decfsz	9,f
 10831  0B5E  2B59               	goto	u2635
 10832  0B5F  0866               	movf	??___fltol,w
 10833  0B60  00EA               	movwf	??___fltol+4
 10834  0B61  086A               	movf	??___fltol+4,w
 10835  0B62  00EB               	movwf	___fltol@sign1
 10836  0B63  17E4               	bsf	___fltol@f1+2,7
 10837  0B64  30FF               	movlw	255
 10838  0B65  05E2               	andwf	___fltol@f1,f
 10839  0B66  30FF               	movlw	255
 10840  0B67  05E3               	andwf	___fltol@f1+1,f
 10841  0B68  30FF               	movlw	255
 10842  0B69  05E4               	andwf	___fltol@f1+2,f
 10843  0B6A  3000               	movlw	0
 10844  0B6B  05E5               	andwf	___fltol@f1+3,f
 10845  0B6C  3096               	movlw	150
 10846  0B6D  02EC               	subwf	___fltol@exp1,f
 10847  0B6E  1FEC               	btfss	___fltol@exp1,7
 10848  0B6F  2B83               	goto	l3711
 10849  0B70  086C               	movf	___fltol@exp1,w
 10850  0B71  3A80               	xorlw	128
 10851  0B72  3E97               	addlw	151
 10852  0B73  1C03               	btfss	3,0
 10853  0B74  2B47               	goto	l3689
 10854  0B75                     l3709:	
 10855  0B75  3001               	movlw	1
 10856  0B76                     u2665:	
 10857  0B76  36E5               	lsrf	___fltol@f1+3,f
 10858  0B77  0CE4               	rrf	___fltol@f1+2,f
 10859  0B78  0CE3               	rrf	___fltol@f1+1,f
 10860  0B79  0CE2               	rrf	___fltol@f1,f
 10861  0B7A  0B89               	decfsz	9,f
 10862  0B7B  2B76               	goto	u2665
 10863  0B7C  3001               	movlw	1
 10864  0B7D  00E6               	movwf	??___fltol
 10865  0B7E  0866               	movf	??___fltol,w
 10866  0B7F  07EC               	addwf	___fltol@exp1,f
 10867  0B80  1903               	btfsc	3,2
 10868  0B81  2B94               	goto	l3719
 10869  0B82  2B75               	goto	l3709
 10870  0B83                     l3711:	
 10871  0B83  3020               	movlw	32
 10872  0B84  026C               	subwf	___fltol@exp1,w
 10873  0B85  1803               	btfsc	3,0
 10874  0B86  2B47               	goto	l3689
 10875  0B87                     l1450:	
 10876  0B87  086C               	movf	___fltol@exp1,w
 10877  0B88  1903               	btfsc	3,2
 10878  0B89  2B94               	goto	l3719
 10879  0B8A  3001               	movlw	1
 10880  0B8B                     u2695:	
 10881  0B8B  35E2               	lslf	___fltol@f1,f
 10882  0B8C  0DE3               	rlf	___fltol@f1+1,f
 10883  0B8D  0DE4               	rlf	___fltol@f1+2,f
 10884  0B8E  0DE5               	rlf	___fltol@f1+3,f
 10885  0B8F  0B89               	decfsz	9,f
 10886  0B90  2B8B               	goto	u2695
 10887  0B91  3001               	movlw	1
 10888  0B92  02EC               	subwf	___fltol@exp1,f
 10889  0B93  2B87               	goto	l1450
 10890  0B94                     l3719:	
 10891  0B94  086B               	movf	___fltol@sign1,w
 10892  0B95  1903               	btfsc	3,2
 10893  0B96  0008               	return
 10894  0B97  09E2               	comf	___fltol@f1,f
 10895  0B98  09E3               	comf	___fltol@f1+1,f
 10896  0B99  09E4               	comf	___fltol@f1+2,f
 10897  0B9A  09E5               	comf	___fltol@f1+3,f
 10898  0B9B  0AE2               	incf	___fltol@f1,f
 10899  0B9C  1903               	skipnz
 10900  0B9D  0AE3               	incf	___fltol@f1+1,f
 10901  0B9E  1903               	skipnz
 10902  0B9F  0AE4               	incf	___fltol@f1+2,f
 10903  0BA0  1903               	skipnz
 10904  0BA1  0AE5               	incf	___fltol@f1+3,f
 10905  0BA2  0008               	return
 10906  0BA3                     __end_of___fltol:	
 10907                           
 10908                           	psect	text20
 10909  0089                     __ptext20:	
 10910 ;; *************** function ___flmul *****************
 10911 ;; Defined at:
 10912 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  b               4   40[BANK0 ] long 
 10915 ;;  a               4   44[BANK0 ] long 
 10916 ;; Auto vars:     Size  Location     Type
 10917 ;;  prod            4   60[BANK0 ] struct .
 10918 ;;  grs             4   55[BANK0 ] unsigned long 
 10919 ;;  temp            2   64[BANK0 ] struct .
 10920 ;;  bexp            1   59[BANK0 ] unsigned char 
 10921 ;;  aexp            1   54[BANK0 ] unsigned char 
 10922 ;;  sign            1   53[BANK0 ] unsigned char 
 10923 ;; Return value:  Size  Location     Type
 10924 ;;                  4   40[BANK0 ] unsigned char 
 10925 ;; Registers used:
 10926 ;;		wreg, status,2, status,0, pclath, cstack
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10932 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10933 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10934 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10935 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10936 ;;Total ram usage:       26 bytes
 10937 ;; Hardware stack levels used:    1
 10938 ;; Hardware stack levels required when called:    5
 10939 ;; This function calls:
 10940 ;;		__Umul8_16
 10941 ;; This function is called by:
 10942 ;;		_LED_setColor
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           
 10947                           ;psect for function ___flmul
 10948  0089                     ___flmul:	
 10949                           
 10950                           ;incstack = 0
 10951                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10952  0089  0140               	movlb	0	; select bank0
 10953  008A  084B               	movf	___flmul@b+3,w
 10954  008B  3980               	andlw	128
 10955  008C  00D0               	movwf	??___flmul
 10956  008D  0850               	movf	??___flmul,w
 10957  008E  00D5               	movwf	___flmul@sign
 10958  008F  354B               	lslf	___flmul@b+3,w
 10959  0090  00D0               	movwf	??___flmul
 10960  0091  0850               	movf	??___flmul,w
 10961  0092  00DB               	movwf	___flmul@bexp
 10962  0093  1BCA               	btfsc	___flmul@b+2,7
 10963  0094  145B               	bsf	___flmul@bexp,0
 10964  0095  085B               	movf	___flmul@bexp,w
 10965  0096  1903               	btfsc	3,2
 10966  0097  28A5               	goto	l5129
 10967  0098  0A5B               	incf	___flmul@bexp,w
 10968  0099  1D03               	btfss	3,2
 10969  009A  28A3               	goto	l5127
 10970  009B  3000               	movlw	0
 10971  009C  00CB               	movwf	___flmul@b+3
 10972  009D  3000               	movlw	0
 10973  009E  00CA               	movwf	___flmul@b+2
 10974  009F  3000               	movlw	0
 10975  00A0  00C9               	movwf	___flmul@b+1
 10976  00A1  3000               	movlw	0
 10977  00A2  00C8               	movwf	___flmul@b
 10978  00A3                     l5127:	
 10979  00A3  17CA               	bsf	___flmul@b+2,7
 10980  00A4  28AD               	goto	l5131
 10981  00A5                     l5129:	
 10982  00A5  3000               	movlw	0
 10983  00A6  00CB               	movwf	___flmul@b+3
 10984  00A7  3000               	movlw	0
 10985  00A8  00CA               	movwf	___flmul@b+2
 10986  00A9  3000               	movlw	0
 10987  00AA  00C9               	movwf	___flmul@b+1
 10988  00AB  3000               	movlw	0
 10989  00AC  00C8               	movwf	___flmul@b
 10990  00AD                     l5131:	
 10991  00AD  084F               	movf	___flmul@a+3,w
 10992  00AE  3980               	andlw	128
 10993  00AF  00D0               	movwf	??___flmul
 10994  00B0  0850               	movf	??___flmul,w
 10995  00B1  06D5               	xorwf	___flmul@sign,f
 10996  00B2  354F               	lslf	___flmul@a+3,w
 10997  00B3  00D0               	movwf	??___flmul
 10998  00B4  0850               	movf	??___flmul,w
 10999  00B5  00D6               	movwf	___flmul@aexp
 11000  00B6  1BCE               	btfsc	___flmul@a+2,7
 11001  00B7  1456               	bsf	___flmul@aexp,0
 11002  00B8  0856               	movf	___flmul@aexp,w
 11003  00B9  1903               	btfsc	3,2
 11004  00BA  28C8               	goto	l5147
 11005  00BB  0A56               	incf	___flmul@aexp,w
 11006  00BC  1D03               	btfss	3,2
 11007  00BD  28C6               	goto	l5145
 11008  00BE  3000               	movlw	0
 11009  00BF  00CF               	movwf	___flmul@a+3
 11010  00C0  3000               	movlw	0
 11011  00C1  00CE               	movwf	___flmul@a+2
 11012  00C2  3000               	movlw	0
 11013  00C3  00CD               	movwf	___flmul@a+1
 11014  00C4  3000               	movlw	0
 11015  00C5  00CC               	movwf	___flmul@a
 11016  00C6                     l5145:	
 11017  00C6  17CE               	bsf	___flmul@a+2,7
 11018  00C7  28D0               	goto	l5149
 11019  00C8                     l5147:	
 11020  00C8  3000               	movlw	0
 11021  00C9  00CF               	movwf	___flmul@a+3
 11022  00CA  3000               	movlw	0
 11023  00CB  00CE               	movwf	___flmul@a+2
 11024  00CC  3000               	movlw	0
 11025  00CD  00CD               	movwf	___flmul@a+1
 11026  00CE  3000               	movlw	0
 11027  00CF  00CC               	movwf	___flmul@a
 11028  00D0                     l5149:	
 11029  00D0  0856               	movf	___flmul@aexp,w
 11030  00D1  1D03               	btfss	3,2
 11031  00D2  085B               	movf	___flmul@bexp,w
 11032  00D3  1D03               	btfss	3,2
 11033  00D4  28DE               	goto	l5157
 11034  00D5  3000               	movlw	0
 11035  00D6  00CB               	movwf	?___flmul+3
 11036  00D7  3000               	movlw	0
 11037  00D8  00CA               	movwf	?___flmul+2
 11038  00D9  3000               	movlw	0
 11039  00DA  00C9               	movwf	?___flmul+1
 11040  00DB  3000               	movlw	0
 11041  00DC  00C8               	movwf	?___flmul
 11042  00DD  0008               	return
 11043  00DE                     l5157:	
 11044  00DE  0848               	movf	___flmul@b,w
 11045  00DF  00D0               	movwf	??___flmul
 11046  00E0  0850               	movf	??___flmul,w
 11047  00E1  00A0               	movwf	__Umul8_16@multiplicand
 11048  00E2  084E               	movf	___flmul@a+2,w
 11049  00E3  3197  2776  3180   	fcall	__Umul8_16
 11050  00E6  0140               	movlb	0	; select bank0
 11051  00E7  0821               	movf	?__Umul8_16+1,w
 11052  00E8  00E1               	movwf	___flmul@temp+1
 11053  00E9  0820               	movf	?__Umul8_16,w
 11054  00EA  00E0               	movwf	___flmul@temp
 11055  00EB  0860               	movf	___flmul@temp,w
 11056  00EC  00D0               	movwf	??___flmul
 11057  00ED  01D1               	clrf	??___flmul+1
 11058  00EE  01D2               	clrf	??___flmul+2
 11059  00EF  01D3               	clrf	??___flmul+3
 11060  00F0  0853               	movf	??___flmul+3,w
 11061  00F1  00DA               	movwf	___flmul@grs+3
 11062  00F2  0852               	movf	??___flmul+2,w
 11063  00F3  00D9               	movwf	___flmul@grs+2
 11064  00F4  0851               	movf	??___flmul+1,w
 11065  00F5  00D8               	movwf	___flmul@grs+1
 11066  00F6  0850               	movf	??___flmul,w
 11067  00F7  00D7               	movwf	___flmul@grs
 11068  00F8  0861               	movf	___flmul@temp+1,w
 11069  00F9  00D0               	movwf	??___flmul
 11070  00FA  01D1               	clrf	??___flmul+1
 11071  00FB  01D2               	clrf	??___flmul+2
 11072  00FC  01D3               	clrf	??___flmul+3
 11073  00FD  0853               	movf	??___flmul+3,w
 11074  00FE  00DF               	movwf	___flmul@prod+3
 11075  00FF  0852               	movf	??___flmul+2,w
 11076  0100  00DE               	movwf	___flmul@prod+2
 11077  0101  0851               	movf	??___flmul+1,w
 11078  0102  00DD               	movwf	___flmul@prod+1
 11079  0103  0850               	movf	??___flmul,w
 11080  0104  00DC               	movwf	___flmul@prod
 11081  0105  0849               	movf	___flmul@b+1,w
 11082  0106  00D0               	movwf	??___flmul
 11083  0107  0850               	movf	??___flmul,w
 11084  0108  00A0               	movwf	__Umul8_16@multiplicand
 11085  0109  084D               	movf	___flmul@a+1,w
 11086  010A  3197  2776  3180   	fcall	__Umul8_16
 11087  010D  0140               	movlb	0	; select bank0
 11088  010E  0821               	movf	?__Umul8_16+1,w
 11089  010F  00E1               	movwf	___flmul@temp+1
 11090  0110  0820               	movf	?__Umul8_16,w
 11091  0111  00E0               	movwf	___flmul@temp
 11092  0112  0860               	movf	___flmul@temp,w
 11093  0113  00D0               	movwf	??___flmul
 11094  0114  01D1               	clrf	??___flmul+1
 11095  0115  01D2               	clrf	??___flmul+2
 11096  0116  01D3               	clrf	??___flmul+3
 11097  0117  0850               	movf	??___flmul,w
 11098  0118  07D7               	addwf	___flmul@grs,f
 11099  0119  0851               	movf	??___flmul+1,w
 11100  011A  3DD8               	addwfc	___flmul@grs+1,f
 11101  011B  0852               	movf	??___flmul+2,w
 11102  011C  3DD9               	addwfc	___flmul@grs+2,f
 11103  011D  0853               	movf	??___flmul+3,w
 11104  011E  3DDA               	addwfc	___flmul@grs+3,f
 11105  011F  0861               	movf	___flmul@temp+1,w
 11106  0120  00D0               	movwf	??___flmul
 11107  0121  01D1               	clrf	??___flmul+1
 11108  0122  01D2               	clrf	??___flmul+2
 11109  0123  01D3               	clrf	??___flmul+3
 11110  0124  0850               	movf	??___flmul,w
 11111  0125  07DC               	addwf	___flmul@prod,f
 11112  0126  0851               	movf	??___flmul+1,w
 11113  0127  3DDD               	addwfc	___flmul@prod+1,f
 11114  0128  0852               	movf	??___flmul+2,w
 11115  0129  3DDE               	addwfc	___flmul@prod+2,f
 11116  012A  0853               	movf	??___flmul+3,w
 11117  012B  3DDF               	addwfc	___flmul@prod+3,f
 11118  012C  084A               	movf	___flmul@b+2,w
 11119  012D  00D0               	movwf	??___flmul
 11120  012E  0850               	movf	??___flmul,w
 11121  012F  00A0               	movwf	__Umul8_16@multiplicand
 11122  0130  084C               	movf	___flmul@a,w
 11123  0131  3197  2776  3180   	fcall	__Umul8_16
 11124  0134  0140               	movlb	0	; select bank0
 11125  0135  0821               	movf	?__Umul8_16+1,w
 11126  0136  00E1               	movwf	___flmul@temp+1
 11127  0137  0820               	movf	?__Umul8_16,w
 11128  0138  00E0               	movwf	___flmul@temp
 11129  0139  0860               	movf	___flmul@temp,w
 11130  013A  00D0               	movwf	??___flmul
 11131  013B  01D1               	clrf	??___flmul+1
 11132  013C  01D2               	clrf	??___flmul+2
 11133  013D  01D3               	clrf	??___flmul+3
 11134  013E  0850               	movf	??___flmul,w
 11135  013F  07D7               	addwf	___flmul@grs,f
 11136  0140  0851               	movf	??___flmul+1,w
 11137  0141  3DD8               	addwfc	___flmul@grs+1,f
 11138  0142  0852               	movf	??___flmul+2,w
 11139  0143  3DD9               	addwfc	___flmul@grs+2,f
 11140  0144  0853               	movf	??___flmul+3,w
 11141  0145  3DDA               	addwfc	___flmul@grs+3,f
 11142  0146  0861               	movf	___flmul@temp+1,w
 11143  0147  00D0               	movwf	??___flmul
 11144  0148  01D1               	clrf	??___flmul+1
 11145  0149  01D2               	clrf	??___flmul+2
 11146  014A  01D3               	clrf	??___flmul+3
 11147  014B  0850               	movf	??___flmul,w
 11148  014C  07DC               	addwf	___flmul@prod,f
 11149  014D  0851               	movf	??___flmul+1,w
 11150  014E  3DDD               	addwfc	___flmul@prod+1,f
 11151  014F  0852               	movf	??___flmul+2,w
 11152  0150  3DDE               	addwfc	___flmul@prod+2,f
 11153  0151  0853               	movf	??___flmul+3,w
 11154  0152  3DDF               	addwfc	___flmul@prod+3,f
 11155  0153  3008               	movlw	8
 11156  0154                     u4865:	
 11157  0154  35D7               	lslf	___flmul@grs,f
 11158  0155  0DD8               	rlf	___flmul@grs+1,f
 11159  0156  0DD9               	rlf	___flmul@grs+2,f
 11160  0157  0DDA               	rlf	___flmul@grs+3,f
 11161  0158  0B89               	decfsz	9,f
 11162  0159  2954               	goto	u4865
 11163  015A  0849               	movf	___flmul@b+1,w
 11164  015B  00D0               	movwf	??___flmul
 11165  015C  0850               	movf	??___flmul,w
 11166  015D  00A0               	movwf	__Umul8_16@multiplicand
 11167  015E  084C               	movf	___flmul@a,w
 11168  015F  3197  2776  3180   	fcall	__Umul8_16
 11169  0162  0140               	movlb	0	; select bank0
 11170  0163  0821               	movf	?__Umul8_16+1,w
 11171  0164  00E1               	movwf	___flmul@temp+1
 11172  0165  0820               	movf	?__Umul8_16,w
 11173  0166  00E0               	movwf	___flmul@temp
 11174  0167  0860               	movf	___flmul@temp,w
 11175  0168  07D7               	addwf	___flmul@grs,f
 11176  0169  0861               	movf	___flmul@temp+1,w
 11177  016A  3DD8               	addwfc	___flmul@grs+1,f
 11178  016B  3000               	movlw	0
 11179  016C  3DD9               	addwfc	___flmul@grs+2,f
 11180  016D  3DDA               	addwfc	___flmul@grs+3,f
 11181  016E  0848               	movf	___flmul@b,w
 11182  016F  00D0               	movwf	??___flmul
 11183  0170  0850               	movf	??___flmul,w
 11184  0171  00A0               	movwf	__Umul8_16@multiplicand
 11185  0172  084D               	movf	___flmul@a+1,w
 11186  0173  3197  2776  3180   	fcall	__Umul8_16
 11187  0176  0140               	movlb	0	; select bank0
 11188  0177  0821               	movf	?__Umul8_16+1,w
 11189  0178  00E1               	movwf	___flmul@temp+1
 11190  0179  0820               	movf	?__Umul8_16,w
 11191  017A  00E0               	movwf	___flmul@temp
 11192  017B  0860               	movf	___flmul@temp,w
 11193  017C  07D7               	addwf	___flmul@grs,f
 11194  017D  0861               	movf	___flmul@temp+1,w
 11195  017E  3DD8               	addwfc	___flmul@grs+1,f
 11196  017F  3000               	movlw	0
 11197  0180  3DD9               	addwfc	___flmul@grs+2,f
 11198  0181  3DDA               	addwfc	___flmul@grs+3,f
 11199  0182  3008               	movlw	8
 11200  0183                     u4875:	
 11201  0183  35D7               	lslf	___flmul@grs,f
 11202  0184  0DD8               	rlf	___flmul@grs+1,f
 11203  0185  0DD9               	rlf	___flmul@grs+2,f
 11204  0186  0DDA               	rlf	___flmul@grs+3,f
 11205  0187  0B89               	decfsz	9,f
 11206  0188  2983               	goto	u4875
 11207  0189  0848               	movf	___flmul@b,w
 11208  018A  00D0               	movwf	??___flmul
 11209  018B  0850               	movf	??___flmul,w
 11210  018C  00A0               	movwf	__Umul8_16@multiplicand
 11211  018D  084C               	movf	___flmul@a,w
 11212  018E  3197  2776  3180   	fcall	__Umul8_16
 11213  0191  0140               	movlb	0	; select bank0
 11214  0192  0821               	movf	?__Umul8_16+1,w
 11215  0193  00E1               	movwf	___flmul@temp+1
 11216  0194  0820               	movf	?__Umul8_16,w
 11217  0195  00E0               	movwf	___flmul@temp
 11218  0196  0860               	movf	___flmul@temp,w
 11219  0197  07D7               	addwf	___flmul@grs,f
 11220  0198  0861               	movf	___flmul@temp+1,w
 11221  0199  3DD8               	addwfc	___flmul@grs+1,f
 11222  019A  3000               	movlw	0
 11223  019B  3DD9               	addwfc	___flmul@grs+2,f
 11224  019C  3DDA               	addwfc	___flmul@grs+3,f
 11225  019D  0849               	movf	___flmul@b+1,w
 11226  019E  00D0               	movwf	??___flmul
 11227  019F  0850               	movf	??___flmul,w
 11228  01A0  00A0               	movwf	__Umul8_16@multiplicand
 11229  01A1  084E               	movf	___flmul@a+2,w
 11230  01A2  3197  2776  3180   	fcall	__Umul8_16
 11231  01A5  0140               	movlb	0	; select bank0
 11232  01A6  0821               	movf	?__Umul8_16+1,w
 11233  01A7  00E1               	movwf	___flmul@temp+1
 11234  01A8  0820               	movf	?__Umul8_16,w
 11235  01A9  00E0               	movwf	___flmul@temp
 11236  01AA  0860               	movf	___flmul@temp,w
 11237  01AB  07DC               	addwf	___flmul@prod,f
 11238  01AC  0861               	movf	___flmul@temp+1,w
 11239  01AD  3DDD               	addwfc	___flmul@prod+1,f
 11240  01AE  3000               	movlw	0
 11241  01AF  3DDE               	addwfc	___flmul@prod+2,f
 11242  01B0  3DDF               	addwfc	___flmul@prod+3,f
 11243  01B1  084A               	movf	___flmul@b+2,w
 11244  01B2  00D0               	movwf	??___flmul
 11245  01B3  0850               	movf	??___flmul,w
 11246  01B4  00A0               	movwf	__Umul8_16@multiplicand
 11247  01B5  084D               	movf	___flmul@a+1,w
 11248  01B6  3197  2776  3180   	fcall	__Umul8_16
 11249  01B9  0140               	movlb	0	; select bank0
 11250  01BA  0821               	movf	?__Umul8_16+1,w
 11251  01BB  00E1               	movwf	___flmul@temp+1
 11252  01BC  0820               	movf	?__Umul8_16,w
 11253  01BD  00E0               	movwf	___flmul@temp
 11254  01BE  0860               	movf	___flmul@temp,w
 11255  01BF  07DC               	addwf	___flmul@prod,f
 11256  01C0  0861               	movf	___flmul@temp+1,w
 11257  01C1  3DDD               	addwfc	___flmul@prod+1,f
 11258  01C2  3000               	movlw	0
 11259  01C3  3DDE               	addwfc	___flmul@prod+2,f
 11260  01C4  3DDF               	addwfc	___flmul@prod+3,f
 11261  01C5  084A               	movf	___flmul@b+2,w
 11262  01C6  00D0               	movwf	??___flmul
 11263  01C7  0850               	movf	??___flmul,w
 11264  01C8  00A0               	movwf	__Umul8_16@multiplicand
 11265  01C9  084E               	movf	___flmul@a+2,w
 11266  01CA  3197  2776  3180   	fcall	__Umul8_16
 11267  01CD  0140               	movlb	0	; select bank0
 11268  01CE  0821               	movf	?__Umul8_16+1,w
 11269  01CF  00E1               	movwf	___flmul@temp+1
 11270  01D0  0820               	movf	?__Umul8_16,w
 11271  01D1  00E0               	movwf	___flmul@temp
 11272  01D2  0860               	movf	___flmul@temp,w
 11273  01D3  00D0               	movwf	??___flmul
 11274  01D4  0861               	movf	___flmul@temp+1,w
 11275  01D5  00D1               	movwf	??___flmul+1
 11276  01D6  01D2               	clrf	??___flmul+2
 11277  01D7  01D3               	clrf	??___flmul+3
 11278  01D8  3008               	movlw	8
 11279  01D9                     u4885:	
 11280  01D9  35D0               	lslf	??___flmul,f
 11281  01DA  0DD1               	rlf	??___flmul+1,f
 11282  01DB  0DD2               	rlf	??___flmul+2,f
 11283  01DC  0DD3               	rlf	??___flmul+3,f
 11284  01DD  0B89               	decfsz	9,f
 11285  01DE  29D9               	goto	u4885
 11286  01DF  0850               	movf	??___flmul,w
 11287  01E0  07DC               	addwf	___flmul@prod,f
 11288  01E1  0851               	movf	??___flmul+1,w
 11289  01E2  3DDD               	addwfc	___flmul@prod+1,f
 11290  01E3  0852               	movf	??___flmul+2,w
 11291  01E4  3DDE               	addwfc	___flmul@prod+2,f
 11292  01E5  0853               	movf	??___flmul+3,w
 11293  01E6  3DDF               	addwfc	___flmul@prod+3,f
 11294  01E7  0857               	movf	___flmul@grs,w
 11295  01E8  00D0               	movwf	??___flmul
 11296  01E9  0858               	movf	___flmul@grs+1,w
 11297  01EA  00D1               	movwf	??___flmul+1
 11298  01EB  0859               	movf	___flmul@grs+2,w
 11299  01EC  00D2               	movwf	??___flmul+2
 11300  01ED  085A               	movf	___flmul@grs+3,w
 11301  01EE  00D3               	movwf	??___flmul+3
 11302  01EF  3018               	movlw	24
 11303  01F0                     u4895:	
 11304  01F0  36D3               	lsrf	??___flmul+3,f
 11305  01F1  0CD2               	rrf	??___flmul+2,f
 11306  01F2  0CD1               	rrf	??___flmul+1,f
 11307  01F3  0CD0               	rrf	??___flmul,f
 11308  01F4  0B89               	decfsz	9,f
 11309  01F5  29F0               	goto	u4895
 11310  01F6  0850               	movf	??___flmul,w
 11311  01F7  07DC               	addwf	___flmul@prod,f
 11312  01F8  0851               	movf	??___flmul+1,w
 11313  01F9  3DDD               	addwfc	___flmul@prod+1,f
 11314  01FA  0852               	movf	??___flmul+2,w
 11315  01FB  3DDE               	addwfc	___flmul@prod+2,f
 11316  01FC  0853               	movf	??___flmul+3,w
 11317  01FD  3DDF               	addwfc	___flmul@prod+3,f
 11318  01FE  3008               	movlw	8
 11319  01FF                     u4905:	
 11320  01FF  35D7               	lslf	___flmul@grs,f
 11321  0200  0DD8               	rlf	___flmul@grs+1,f
 11322  0201  0DD9               	rlf	___flmul@grs+2,f
 11323  0202  0DDA               	rlf	___flmul@grs+3,f
 11324  0203  0B89               	decfsz	9,f
 11325  0204  29FF               	goto	u4905
 11326  0205  085B               	movf	___flmul@bexp,w
 11327  0206  0756               	addwf	___flmul@aexp,w
 11328  0207  00D0               	movwf	??___flmul
 11329  0208  01D1               	clrf	??___flmul+1
 11330  0209  0DD1               	rlf	??___flmul+1,f
 11331  020A  0850               	movf	??___flmul,w
 11332  020B  3E82               	addlw	130
 11333  020C  00E0               	movwf	___flmul@temp
 11334  020D  30FF               	movlw	255
 11335  020E  3D51               	addwfc	??___flmul+1,w
 11336  020F  00E1               	movwf	___flmul@temp+1
 11337  0210                     l5209:	
 11338  0210  1BDE               	btfsc	___flmul@prod+2,7
 11339  0211  2A27               	goto	l5211
 11340  0212  3001               	movlw	1
 11341  0213                     u4915:	
 11342  0213  35DC               	lslf	___flmul@prod,f
 11343  0214  0DDD               	rlf	___flmul@prod+1,f
 11344  0215  0DDE               	rlf	___flmul@prod+2,f
 11345  0216  0DDF               	rlf	___flmul@prod+3,f
 11346  0217  0B89               	decfsz	9,f
 11347  0218  2A13               	goto	u4915
 11348  0219  1BDA               	btfsc	___flmul@grs+3,7
 11349  021A  145C               	bsf	___flmul@prod,0
 11350  021B  3001               	movlw	1
 11351  021C                     u4935:	
 11352  021C  35D7               	lslf	___flmul@grs,f
 11353  021D  0DD8               	rlf	___flmul@grs+1,f
 11354  021E  0DD9               	rlf	___flmul@grs+2,f
 11355  021F  0DDA               	rlf	___flmul@grs+3,f
 11356  0220  0B89               	decfsz	9,f
 11357  0221  2A1C               	goto	u4935
 11358  0222  30FF               	movlw	255
 11359  0223  07E0               	addwf	___flmul@temp,f
 11360  0224  30FF               	movlw	255
 11361  0225  3DE1               	addwfc	___flmul@temp+1,f
 11362  0226  2A10               	goto	l5209
 11363  0227                     l5211:	
 11364  0227  01D6               	clrf	___flmul@aexp
 11365  0228  1FDA               	btfss	___flmul@grs+3,7
 11366  0229  2A40               	goto	l5221
 11367  022A  30FF               	movlw	255
 11368  022B  0557               	andwf	___flmul@grs,w
 11369  022C  00D0               	movwf	??___flmul
 11370  022D  30FF               	movlw	255
 11371  022E  0558               	andwf	___flmul@grs+1,w
 11372  022F  00D1               	movwf	??___flmul+1
 11373  0230  30FF               	movlw	255
 11374  0231  0559               	andwf	___flmul@grs+2,w
 11375  0232  00D2               	movwf	??___flmul+2
 11376  0233  307F               	movlw	127
 11377  0234  055A               	andwf	___flmul@grs+3,w
 11378  0235  00D3               	movwf	??___flmul+3
 11379  0236  0853               	movf	??___flmul+3,w
 11380  0237  0452               	iorwf	??___flmul+2,w
 11381  0238  0451               	iorwf	??___flmul+1,w
 11382  0239  0450               	iorwf	??___flmul,w
 11383  023A  1903               	skipnz
 11384  023B  185C               	btfsc	___flmul@prod,0
 11385  023C  2A3E               	goto	l5217
 11386  023D  2A40               	goto	l5221
 11387  023E                     l5217:	
 11388  023E  01D6               	clrf	___flmul@aexp
 11389  023F  0AD6               	incf	___flmul@aexp,f
 11390  0240                     l5221:	
 11391  0240  0856               	movf	___flmul@aexp,w
 11392  0241  1903               	btfsc	3,2
 11393  0242  2A69               	goto	l5231
 11394  0243  3001               	movlw	1
 11395  0244  07DC               	addwf	___flmul@prod,f
 11396  0245  3000               	movlw	0
 11397  0246  3DDD               	addwfc	___flmul@prod+1,f
 11398  0247  3000               	movlw	0
 11399  0248  3DDE               	addwfc	___flmul@prod+2,f
 11400  0249  3000               	movlw	0
 11401  024A  3DDF               	addwfc	___flmul@prod+3,f
 11402  024B  1C5F               	btfss	___flmul@prod+3,0
 11403  024C  2A69               	goto	l5231
 11404  024D  085C               	movf	___flmul@prod,w
 11405  024E  00D0               	movwf	??___flmul
 11406  024F  085D               	movf	___flmul@prod+1,w
 11407  0250  00D1               	movwf	??___flmul+1
 11408  0251  085E               	movf	___flmul@prod+2,w
 11409  0252  00D2               	movwf	??___flmul+2
 11410  0253  085F               	movf	___flmul@prod+3,w
 11411  0254  00D3               	movwf	??___flmul+3
 11412  0255  3001               	movlw	1
 11413  0256  00D4               	movwf	??___flmul+4
 11414  0257                     u5005:	
 11415  0257  37D3               	asrf	??___flmul+3,f
 11416  0258  0CD2               	rrf	??___flmul+2,f
 11417  0259  0CD1               	rrf	??___flmul+1,f
 11418  025A  0CD0               	rrf	??___flmul,f
 11419  025B  0BD4               	decfsz	??___flmul+4,f
 11420  025C  2A57               	goto	u5005
 11421  025D  0853               	movf	??___flmul+3,w
 11422  025E  00DF               	movwf	___flmul@prod+3
 11423  025F  0852               	movf	??___flmul+2,w
 11424  0260  00DE               	movwf	___flmul@prod+2
 11425  0261  0851               	movf	??___flmul+1,w
 11426  0262  00DD               	movwf	___flmul@prod+1
 11427  0263  0850               	movf	??___flmul,w
 11428  0264  00DC               	movwf	___flmul@prod
 11429  0265  3001               	movlw	1
 11430  0266  07E0               	addwf	___flmul@temp,f
 11431  0267  3000               	movlw	0
 11432  0268  3DE1               	addwfc	___flmul@temp+1,f
 11433  0269                     l5231:	
 11434  0269  0861               	movf	___flmul@temp+1,w
 11435  026A  3A80               	xorlw	128
 11436  026B  00D0               	movwf	??___flmul
 11437  026C  3080               	movlw	128
 11438  026D  0250               	subwf	??___flmul,w
 11439  026E  1D03               	skipz
 11440  026F  2A72               	goto	u5015
 11441  0270  30FF               	movlw	255
 11442  0271  0260               	subwf	___flmul@temp,w
 11443  0272                     u5015:	
 11444  0272  1C03               	skipc
 11445  0273  2A7E               	goto	l5235
 11446  0274  307F               	movlw	127
 11447  0275  0140               	movlb	0	; select bank0
 11448  0276  00DF               	movwf	___flmul@prod+3
 11449  0277  3080               	movlw	128
 11450  0278  00DE               	movwf	___flmul@prod+2
 11451  0279  3000               	movlw	0
 11452  027A  00DD               	movwf	___flmul@prod+1
 11453  027B  3000               	movlw	0
 11454  027C  00DC               	movwf	___flmul@prod
 11455  027D  2AA8               	goto	l1658
 11456  027E                     l5235:	
 11457  027E  0140               	movlb	0	; select bank0
 11458  027F  0861               	movf	___flmul@temp+1,w
 11459  0280  3A80               	xorlw	128
 11460  0281  00D0               	movwf	??___flmul
 11461  0282  3080               	movlw	128
 11462  0283  0250               	subwf	??___flmul,w
 11463  0284  1D03               	skipz
 11464  0285  2A88               	goto	u5025
 11465  0286  3001               	movlw	1
 11466  0287  0260               	subwf	___flmul@temp,w
 11467  0288                     u5025:	
 11468  0288  1803               	skipnc
 11469  0289  2A95               	goto	l5241
 11470  028A  3000               	movlw	0
 11471  028B  0140               	movlb	0	; select bank0
 11472  028C  00DF               	movwf	___flmul@prod+3
 11473  028D  3000               	movlw	0
 11474  028E  00DE               	movwf	___flmul@prod+2
 11475  028F  3000               	movlw	0
 11476  0290  00DD               	movwf	___flmul@prod+1
 11477  0291  3000               	movlw	0
 11478  0292  00DC               	movwf	___flmul@prod
 11479  0293  01D5               	clrf	___flmul@sign
 11480  0294  2AA8               	goto	l1658
 11481  0295                     l5241:	
 11482  0295  0140               	movlb	0	; select bank0
 11483  0296  0860               	movf	___flmul@temp,w
 11484  0297  00D0               	movwf	??___flmul
 11485  0298  0850               	movf	??___flmul,w
 11486  0299  00DB               	movwf	___flmul@bexp
 11487  029A  30FF               	movlw	255
 11488  029B  05DC               	andwf	___flmul@prod,f
 11489  029C  30FF               	movlw	255
 11490  029D  05DD               	andwf	___flmul@prod+1,f
 11491  029E  307F               	movlw	127
 11492  029F  05DE               	andwf	___flmul@prod+2,f
 11493  02A0  3000               	movlw	0
 11494  02A1  05DF               	andwf	___flmul@prod+3,f
 11495  02A2  185B               	btfsc	___flmul@bexp,0
 11496  02A3  17DE               	bsf	___flmul@prod+2,7
 11497  02A4  365B               	lsrf	___flmul@bexp,w
 11498  02A5  00D0               	movwf	??___flmul
 11499  02A6  0850               	movf	??___flmul,w
 11500  02A7  00DF               	movwf	___flmul@prod+3
 11501  02A8                     l1658:	
 11502  02A8  0855               	movf	___flmul@sign,w
 11503  02A9  00D0               	movwf	??___flmul
 11504  02AA  0850               	movf	??___flmul,w
 11505  02AB  04DF               	iorwf	___flmul@prod+3,f
 11506  02AC  085F               	movf	___flmul@prod+3,w
 11507  02AD  00CB               	movwf	?___flmul+3
 11508  02AE  085E               	movf	___flmul@prod+2,w
 11509  02AF  00CA               	movwf	?___flmul+2
 11510  02B0  085D               	movf	___flmul@prod+1,w
 11511  02B1  00C9               	movwf	?___flmul+1
 11512  02B2  085C               	movf	___flmul@prod,w
 11513  02B3  00C8               	movwf	?___flmul
 11514  02B4  0008               	return
 11515  02B5                     __end_of___flmul:	
 11516                           
 11517                           	psect	text21
 11518  1776                     __ptext21:	
 11519 ;; *************** function __Umul8_16 *****************
 11520 ;; Defined at:
 11521 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul8_16.c"
 11522 ;; Parameters:    Size  Location     Type
 11523 ;;  multiplier      1    wreg     unsigned char 
 11524 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 11525 ;; Auto vars:     Size  Location     Type
 11526 ;;  multiplier      1    8[BANK0 ] unsigned char 
 11527 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 11528 ;;  product         2    4[BANK0 ] unsigned int 
 11529 ;; Return value:  Size  Location     Type
 11530 ;;                  2    0[BANK0 ] unsigned int 
 11531 ;; Registers used:
 11532 ;;		wreg, status,2, status,0
 11533 ;; Tracked objects:
 11534 ;;		On entry : 0/0
 11535 ;;		On exit  : 0/0
 11536 ;;		Unchanged: 0/0
 11537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11538 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11539 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11540 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11541 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11542 ;;Total ram usage:        9 bytes
 11543 ;; Hardware stack levels used:    1
 11544 ;; Hardware stack levels required when called:    4
 11545 ;; This function calls:
 11546 ;;		Nothing
 11547 ;; This function is called by:
 11548 ;;		___flmul
 11549 ;; This function uses a non-reentrant model
 11550 ;;
 11551                           
 11552                           
 11553                           ;psect for function __Umul8_16
 11554  1776                     __Umul8_16:	
 11555                           
 11556                           ;incstack = 0
 11557                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11558                           ;__Umul8_16@multiplier stored from wreg
 11559  1776  0140               	movlb	0	; select bank0
 11560  1777  00A8               	movwf	__Umul8_16@multiplier
 11561  1778  01A4               	clrf	__Umul8_16@product
 11562  1779  01A5               	clrf	__Umul8_16@product+1
 11563  177A  0820               	movf	__Umul8_16@multiplicand,w
 11564  177B  00A2               	movwf	??__Umul8_16
 11565  177C  01A3               	clrf	??__Umul8_16+1
 11566  177D  0822               	movf	??__Umul8_16,w
 11567  177E  00A6               	movwf	__Umul8_16@word_mpld
 11568  177F  0823               	movf	??__Umul8_16+1,w
 11569  1780  00A7               	movwf	__Umul8_16@word_mpld+1
 11570  1781                     l5003:	
 11571  1781  1C28               	btfss	__Umul8_16@multiplier,0
 11572  1782  2F87               	goto	l1711
 11573  1783  0826               	movf	__Umul8_16@word_mpld,w
 11574  1784  07A4               	addwf	__Umul8_16@product,f
 11575  1785  0827               	movf	__Umul8_16@word_mpld+1,w
 11576  1786  3DA5               	addwfc	__Umul8_16@product+1,f
 11577  1787                     l1711:	
 11578  1787  3001               	movlw	1
 11579  1788                     u4675:	
 11580  1788  35A6               	lslf	__Umul8_16@word_mpld,f
 11581  1789  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 11582  178A  0B89               	decfsz	9,f
 11583  178B  2F88               	goto	u4675
 11584  178C  1003               	clrc
 11585  178D  0CA8               	rrf	__Umul8_16@multiplier,f
 11586  178E  0828               	movf	__Umul8_16@multiplier,w
 11587  178F  1D03               	btfss	3,2
 11588  1790  2F81               	goto	l5003
 11589  1791  0825               	movf	__Umul8_16@product+1,w
 11590  1792  00A1               	movwf	?__Umul8_16+1
 11591  1793  0824               	movf	__Umul8_16@product,w
 11592  1794  00A0               	movwf	?__Umul8_16
 11593  1795  0008               	return
 11594  1796                     __end_of__Umul8_16:	
 11595                           
 11596                           	psect	text22
 11597  0436                     __ptext22:	
 11598 ;; *************** function ___fldiv *****************
 11599 ;; Defined at:
 11600 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;  a               4   14[BANK0 ] unsigned int 
 11603 ;;  b               4   18[BANK0 ] unsigned int 
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;  grs             4   34[BANK0 ] unsigned long 
 11606 ;;  rem             4   27[BANK0 ] unsigned long 
 11607 ;;  new_exp         2   32[BANK0 ] int 
 11608 ;;  aexp            1   39[BANK0 ] unsigned char 
 11609 ;;  bexp            1   38[BANK0 ] unsigned char 
 11610 ;;  sign            1   31[BANK0 ] unsigned char 
 11611 ;; Return value:  Size  Location     Type
 11612 ;;                  4   14[BANK0 ] unsigned char 
 11613 ;; Registers used:
 11614 ;;		wreg, status,2, status,0
 11615 ;; Tracked objects:
 11616 ;;		On entry : 0/0
 11617 ;;		On exit  : 0/0
 11618 ;;		Unchanged: 0/0
 11619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11620 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11621 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11622 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11623 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11624 ;;Total ram usage:       26 bytes
 11625 ;; Hardware stack levels used:    1
 11626 ;; Hardware stack levels required when called:    4
 11627 ;; This function calls:
 11628 ;;		Nothing
 11629 ;; This function is called by:
 11630 ;;		_LED_setColor
 11631 ;; This function uses a non-reentrant model
 11632 ;;
 11633                           
 11634                           
 11635                           ;psect for function ___fldiv
 11636  0436                     ___fldiv:	
 11637                           
 11638                           ;incstack = 0
 11639                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11640  0436  0140               	movlb	0	; select bank0
 11641  0437  0835               	movf	___fldiv@b+3,w
 11642  0438  3980               	andlw	128
 11643  0439  00B6               	movwf	??___fldiv
 11644  043A  0836               	movf	??___fldiv,w
 11645  043B  00BF               	movwf	___fldiv@sign
 11646  043C  3535               	lslf	___fldiv@b+3,w
 11647  043D  00B6               	movwf	??___fldiv
 11648  043E  0836               	movf	??___fldiv,w
 11649  043F  00C6               	movwf	___fldiv@bexp
 11650  0440  1BB4               	btfsc	___fldiv@b+2,7
 11651  0441  1446               	bsf	___fldiv@bexp,0
 11652  0442  0846               	movf	___fldiv@bexp,w
 11653  0443  1903               	btfsc	3,2
 11654  0444  2C53               	goto	l3741
 11655  0445  0A46               	incf	___fldiv@bexp,w
 11656  0446  1D03               	btfss	3,2
 11657  0447  2C50               	goto	l3737
 11658  0448  3000               	movlw	0
 11659  0449  00B5               	movwf	___fldiv@b+3
 11660  044A  3000               	movlw	0
 11661  044B  00B4               	movwf	___fldiv@b+2
 11662  044C  3000               	movlw	0
 11663  044D  00B3               	movwf	___fldiv@b+1
 11664  044E  3000               	movlw	0
 11665  044F  00B2               	movwf	___fldiv@b
 11666  0450                     l3737:	
 11667  0450  17B4               	bsf	___fldiv@b+2,7
 11668  0451  01B5               	clrf	___fldiv@b+3
 11669  0452  2C5B               	goto	l3743
 11670  0453                     l3741:	
 11671  0453  3000               	movlw	0
 11672  0454  00B5               	movwf	___fldiv@b+3
 11673  0455  3000               	movlw	0
 11674  0456  00B4               	movwf	___fldiv@b+2
 11675  0457  3000               	movlw	0
 11676  0458  00B3               	movwf	___fldiv@b+1
 11677  0459  3000               	movlw	0
 11678  045A  00B2               	movwf	___fldiv@b
 11679  045B                     l3743:	
 11680  045B  0831               	movf	___fldiv@a+3,w
 11681  045C  3980               	andlw	128
 11682  045D  00B6               	movwf	??___fldiv
 11683  045E  0836               	movf	??___fldiv,w
 11684  045F  06BF               	xorwf	___fldiv@sign,f
 11685  0460  3531               	lslf	___fldiv@a+3,w
 11686  0461  00B6               	movwf	??___fldiv
 11687  0462  0836               	movf	??___fldiv,w
 11688  0463  00C7               	movwf	___fldiv@aexp
 11689  0464  1BB0               	btfsc	___fldiv@a+2,7
 11690  0465  1447               	bsf	___fldiv@aexp,0
 11691  0466  0847               	movf	___fldiv@aexp,w
 11692  0467  1903               	btfsc	3,2
 11693  0468  2C77               	goto	l3761
 11694  0469  0A47               	incf	___fldiv@aexp,w
 11695  046A  1D03               	btfss	3,2
 11696  046B  2C74               	goto	l3757
 11697  046C  3000               	movlw	0
 11698  046D  00B1               	movwf	___fldiv@a+3
 11699  046E  3000               	movlw	0
 11700  046F  00B0               	movwf	___fldiv@a+2
 11701  0470  3000               	movlw	0
 11702  0471  00AF               	movwf	___fldiv@a+1
 11703  0472  3000               	movlw	0
 11704  0473  00AE               	movwf	___fldiv@a
 11705  0474                     l3757:	
 11706  0474  17B0               	bsf	___fldiv@a+2,7
 11707  0475  01B1               	clrf	___fldiv@a+3
 11708  0476  2C7F               	goto	l1606
 11709  0477                     l3761:	
 11710  0477  3000               	movlw	0
 11711  0478  00B1               	movwf	___fldiv@a+3
 11712  0479  3000               	movlw	0
 11713  047A  00B0               	movwf	___fldiv@a+2
 11714  047B  3000               	movlw	0
 11715  047C  00AF               	movwf	___fldiv@a+1
 11716  047D  3000               	movlw	0
 11717  047E  00AE               	movwf	___fldiv@a
 11718  047F                     l1606:	
 11719  047F  0831               	movf	___fldiv@a+3,w
 11720  0480  0430               	iorwf	___fldiv@a+2,w
 11721  0481  042F               	iorwf	___fldiv@a+1,w
 11722  0482  042E               	iorwf	___fldiv@a,w
 11723  0483  1D03               	skipz
 11724  0484  2C9E               	goto	l3771
 11725  0485  3000               	movlw	0
 11726  0486  00B5               	movwf	___fldiv@b+3
 11727  0487  3000               	movlw	0
 11728  0488  00B4               	movwf	___fldiv@b+2
 11729  0489  3000               	movlw	0
 11730  048A  00B3               	movwf	___fldiv@b+1
 11731  048B  3000               	movlw	0
 11732  048C  00B2               	movwf	___fldiv@b
 11733  048D  3080               	movlw	128
 11734  048E  04B4               	iorwf	___fldiv@b+2,f
 11735  048F  307F               	movlw	127
 11736  0490  04B5               	iorwf	___fldiv@b+3,f
 11737  0491                     L8:	
 11738  0491  083F               	movf	___fldiv@sign,w
 11739  0492  00B6               	movwf	??___fldiv
 11740  0493  0836               	movf	??___fldiv,w
 11741  0494  04B5               	iorwf	___fldiv@b+3,f
 11742  0495  0835               	movf	___fldiv@b+3,w
 11743  0496  00B1               	movwf	?___fldiv+3
 11744  0497  0834               	movf	___fldiv@b+2,w
 11745  0498  00B0               	movwf	?___fldiv+2
 11746  0499  0833               	movf	___fldiv@b+1,w
 11747  049A  00AF               	movwf	?___fldiv+1
 11748  049B  0832               	movf	___fldiv@b,w
 11749  049C  00AE               	movwf	?___fldiv
 11750  049D  0008               	return
 11751  049E                     l3771:	
 11752  049E  0846               	movf	___fldiv@bexp,w
 11753  049F  1D03               	btfss	3,2
 11754  04A0  2CAA               	goto	l3777
 11755  04A1  3000               	movlw	0
 11756  04A2  00B1               	movwf	?___fldiv+3
 11757  04A3  3000               	movlw	0
 11758  04A4  00B0               	movwf	?___fldiv+2
 11759  04A5  3000               	movlw	0
 11760  04A6  00AF               	movwf	?___fldiv+1
 11761  04A7  3000               	movlw	0
 11762  04A8  00AE               	movwf	?___fldiv
 11763  04A9  0008               	return
 11764  04AA                     l3777:	
 11765  04AA  0846               	movf	___fldiv@bexp,w
 11766  04AB  00B6               	movwf	??___fldiv
 11767  04AC  01B7               	clrf	??___fldiv+1
 11768  04AD  0837               	movf	??___fldiv+1,w
 11769  04AE  00B9               	movwf	??___fldiv+3
 11770  04AF  0847               	movf	___fldiv@aexp,w
 11771  04B0  0236               	subwf	??___fldiv,w
 11772  04B1  00B8               	movwf	??___fldiv+2
 11773  04B2  1C03               	skipc
 11774  04B3  03B9               	decf	??___fldiv+3,f
 11775  04B4  0838               	movf	??___fldiv+2,w
 11776  04B5  3E7F               	addlw	127
 11777  04B6  00C0               	movwf	___fldiv@new_exp
 11778  04B7  3000               	movlw	0
 11779  04B8  3D39               	addwfc	??___fldiv+3,w
 11780  04B9  00C1               	movwf	___fldiv@new_exp+1
 11781  04BA  0835               	movf	___fldiv@b+3,w
 11782  04BB  00BE               	movwf	___fldiv@rem+3
 11783  04BC  0834               	movf	___fldiv@b+2,w
 11784  04BD  00BD               	movwf	___fldiv@rem+2
 11785  04BE  0833               	movf	___fldiv@b+1,w
 11786  04BF  00BC               	movwf	___fldiv@rem+1
 11787  04C0  0832               	movf	___fldiv@b,w
 11788  04C1  00BB               	movwf	___fldiv@rem
 11789  04C2  3000               	movlw	0
 11790  04C3  00B5               	movwf	___fldiv@b+3
 11791  04C4  3000               	movlw	0
 11792  04C5  00B4               	movwf	___fldiv@b+2
 11793  04C6  3000               	movlw	0
 11794  04C7  00B3               	movwf	___fldiv@b+1
 11795  04C8  3000               	movlw	0
 11796  04C9  00B2               	movwf	___fldiv@b
 11797  04CA  3000               	movlw	0
 11798  04CB  00C5               	movwf	___fldiv@grs+3
 11799  04CC  3000               	movlw	0
 11800  04CD  00C4               	movwf	___fldiv@grs+2
 11801  04CE  3000               	movlw	0
 11802  04CF  00C3               	movwf	___fldiv@grs+1
 11803  04D0  3000               	movlw	0
 11804  04D1  00C2               	movwf	___fldiv@grs
 11805  04D2  01C7               	clrf	___fldiv@aexp
 11806  04D3                     l3805:	
 11807  04D3  301A               	movlw	26
 11808  04D4  0247               	subwf	___fldiv@aexp,w
 11809  04D5  1803               	btfsc	3,0
 11810  04D6  2D0F               	goto	l3807
 11811  04D7  0847               	movf	___fldiv@aexp,w
 11812  04D8  1903               	btfsc	3,2
 11813  04D9  2CF1               	goto	l3797
 11814  04DA  3001               	movlw	1
 11815  04DB                     u2815:	
 11816  04DB  35BB               	lslf	___fldiv@rem,f
 11817  04DC  0DBC               	rlf	___fldiv@rem+1,f
 11818  04DD  0DBD               	rlf	___fldiv@rem+2,f
 11819  04DE  0DBE               	rlf	___fldiv@rem+3,f
 11820  04DF  0B89               	decfsz	9,f
 11821  04E0  2CDB               	goto	u2815
 11822  04E1  3001               	movlw	1
 11823  04E2                     u2825:	
 11824  04E2  35B2               	lslf	___fldiv@b,f
 11825  04E3  0DB3               	rlf	___fldiv@b+1,f
 11826  04E4  0DB4               	rlf	___fldiv@b+2,f
 11827  04E5  0DB5               	rlf	___fldiv@b+3,f
 11828  04E6  0B89               	decfsz	9,f
 11829  04E7  2CE2               	goto	u2825
 11830  04E8  1BC5               	btfsc	___fldiv@grs+3,7
 11831  04E9  1432               	bsf	___fldiv@b,0
 11832  04EA  3001               	movlw	1
 11833  04EB                     u2845:	
 11834  04EB  35C2               	lslf	___fldiv@grs,f
 11835  04EC  0DC3               	rlf	___fldiv@grs+1,f
 11836  04ED  0DC4               	rlf	___fldiv@grs+2,f
 11837  04EE  0DC5               	rlf	___fldiv@grs+3,f
 11838  04EF  0B89               	decfsz	9,f
 11839  04F0  2CEB               	goto	u2845
 11840  04F1                     l3797:	
 11841  04F1  0831               	movf	___fldiv@a+3,w
 11842  04F2  023E               	subwf	___fldiv@rem+3,w
 11843  04F3  1D03               	skipz
 11844  04F4  2CFF               	goto	u2855
 11845  04F5  0830               	movf	___fldiv@a+2,w
 11846  04F6  023D               	subwf	___fldiv@rem+2,w
 11847  04F7  1D03               	skipz
 11848  04F8  2CFF               	goto	u2855
 11849  04F9  082F               	movf	___fldiv@a+1,w
 11850  04FA  023C               	subwf	___fldiv@rem+1,w
 11851  04FB  1D03               	skipz
 11852  04FC  2CFF               	goto	u2855
 11853  04FD  082E               	movf	___fldiv@a,w
 11854  04FE  023B               	subwf	___fldiv@rem,w
 11855  04FF                     u2855:	
 11856  04FF  1C03               	skipc
 11857  0500  2D0A               	goto	l3803
 11858  0501  1745               	bsf	___fldiv@grs+3,6
 11859  0502  082E               	movf	___fldiv@a,w
 11860  0503  02BB               	subwf	___fldiv@rem,f
 11861  0504  082F               	movf	___fldiv@a+1,w
 11862  0505  3BBC               	subwfb	___fldiv@rem+1,f
 11863  0506  0830               	movf	___fldiv@a+2,w
 11864  0507  3BBD               	subwfb	___fldiv@rem+2,f
 11865  0508  0831               	movf	___fldiv@a+3,w
 11866  0509  3BBE               	subwfb	___fldiv@rem+3,f
 11867  050A                     l3803:	
 11868  050A  3001               	movlw	1
 11869  050B  00B6               	movwf	??___fldiv
 11870  050C  0836               	movf	??___fldiv,w
 11871  050D  07C7               	addwf	___fldiv@aexp,f
 11872  050E  2CD3               	goto	l3805
 11873  050F                     l3807:	
 11874  050F  083E               	movf	___fldiv@rem+3,w
 11875  0510  043D               	iorwf	___fldiv@rem+2,w
 11876  0511  043C               	iorwf	___fldiv@rem+1,w
 11877  0512  043B               	iorwf	___fldiv@rem,w
 11878  0513  1D03               	btfss	3,2
 11879  0514  1442               	bsf	___fldiv@grs,0
 11880  0515                     l3821:	
 11881  0515  1BB4               	btfsc	___fldiv@b+2,7
 11882  0516  2D2C               	goto	l3823
 11883  0517  3001               	movlw	1
 11884  0518                     u2885:	
 11885  0518  35B2               	lslf	___fldiv@b,f
 11886  0519  0DB3               	rlf	___fldiv@b+1,f
 11887  051A  0DB4               	rlf	___fldiv@b+2,f
 11888  051B  0DB5               	rlf	___fldiv@b+3,f
 11889  051C  0B89               	decfsz	9,f
 11890  051D  2D18               	goto	u2885
 11891  051E  1BC5               	btfsc	___fldiv@grs+3,7
 11892  051F  1432               	bsf	___fldiv@b,0
 11893  0520  3001               	movlw	1
 11894  0521                     u2905:	
 11895  0521  35C2               	lslf	___fldiv@grs,f
 11896  0522  0DC3               	rlf	___fldiv@grs+1,f
 11897  0523  0DC4               	rlf	___fldiv@grs+2,f
 11898  0524  0DC5               	rlf	___fldiv@grs+3,f
 11899  0525  0B89               	decfsz	9,f
 11900  0526  2D21               	goto	u2905
 11901  0527  30FF               	movlw	255
 11902  0528  07C0               	addwf	___fldiv@new_exp,f
 11903  0529  30FF               	movlw	255
 11904  052A  3DC1               	addwfc	___fldiv@new_exp+1,f
 11905  052B  2D15               	goto	l3821
 11906  052C                     l3823:	
 11907  052C  01C7               	clrf	___fldiv@aexp
 11908  052D  1FC5               	btfss	___fldiv@grs+3,7
 11909  052E  2D45               	goto	l3833
 11910  052F  30FF               	movlw	255
 11911  0530  0542               	andwf	___fldiv@grs,w
 11912  0531  00B6               	movwf	??___fldiv
 11913  0532  30FF               	movlw	255
 11914  0533  0543               	andwf	___fldiv@grs+1,w
 11915  0534  00B7               	movwf	??___fldiv+1
 11916  0535  30FF               	movlw	255
 11917  0536  0544               	andwf	___fldiv@grs+2,w
 11918  0537  00B8               	movwf	??___fldiv+2
 11919  0538  307F               	movlw	127
 11920  0539  0545               	andwf	___fldiv@grs+3,w
 11921  053A  00B9               	movwf	??___fldiv+3
 11922  053B  0839               	movf	??___fldiv+3,w
 11923  053C  0438               	iorwf	??___fldiv+2,w
 11924  053D  0437               	iorwf	??___fldiv+1,w
 11925  053E  0436               	iorwf	??___fldiv,w
 11926  053F  1903               	skipnz
 11927  0540  1832               	btfsc	___fldiv@b,0
 11928  0541  2D43               	goto	l3829
 11929  0542  2D45               	goto	l3833
 11930  0543                     l3829:	
 11931  0543  01C7               	clrf	___fldiv@aexp
 11932  0544  0AC7               	incf	___fldiv@aexp,f
 11933  0545                     l3833:	
 11934  0545  0847               	movf	___fldiv@aexp,w
 11935  0546  1903               	btfsc	3,2
 11936  0547  2D6E               	goto	l3843
 11937  0548  3001               	movlw	1
 11938  0549  07B2               	addwf	___fldiv@b,f
 11939  054A  3000               	movlw	0
 11940  054B  3DB3               	addwfc	___fldiv@b+1,f
 11941  054C  3000               	movlw	0
 11942  054D  3DB4               	addwfc	___fldiv@b+2,f
 11943  054E  3000               	movlw	0
 11944  054F  3DB5               	addwfc	___fldiv@b+3,f
 11945  0550  1C35               	btfss	___fldiv@b+3,0
 11946  0551  2D6E               	goto	l3843
 11947  0552  0832               	movf	___fldiv@b,w
 11948  0553  00B6               	movwf	??___fldiv
 11949  0554  0833               	movf	___fldiv@b+1,w
 11950  0555  00B7               	movwf	??___fldiv+1
 11951  0556  0834               	movf	___fldiv@b+2,w
 11952  0557  00B8               	movwf	??___fldiv+2
 11953  0558  0835               	movf	___fldiv@b+3,w
 11954  0559  00B9               	movwf	??___fldiv+3
 11955  055A  3001               	movlw	1
 11956  055B  00BA               	movwf	??___fldiv+4
 11957  055C                     u2975:	
 11958  055C  37B9               	asrf	??___fldiv+3,f
 11959  055D  0CB8               	rrf	??___fldiv+2,f
 11960  055E  0CB7               	rrf	??___fldiv+1,f
 11961  055F  0CB6               	rrf	??___fldiv,f
 11962  0560  0BBA               	decfsz	??___fldiv+4,f
 11963  0561  2D5C               	goto	u2975
 11964  0562  0839               	movf	??___fldiv+3,w
 11965  0563  00B5               	movwf	___fldiv@b+3
 11966  0564  0838               	movf	??___fldiv+2,w
 11967  0565  00B4               	movwf	___fldiv@b+2
 11968  0566  0837               	movf	??___fldiv+1,w
 11969  0567  00B3               	movwf	___fldiv@b+1
 11970  0568  0836               	movf	??___fldiv,w
 11971  0569  00B2               	movwf	___fldiv@b
 11972  056A  3001               	movlw	1
 11973  056B  07C0               	addwf	___fldiv@new_exp,f
 11974  056C  3000               	movlw	0
 11975  056D  3DC1               	addwfc	___fldiv@new_exp+1,f
 11976  056E                     l3843:	
 11977  056E  0841               	movf	___fldiv@new_exp+1,w
 11978  056F  3A80               	xorlw	128
 11979  0570  00B6               	movwf	??___fldiv
 11980  0571  3080               	movlw	128
 11981  0572  0236               	subwf	??___fldiv,w
 11982  0573  1D03               	skipz
 11983  0574  2D77               	goto	u2985
 11984  0575  30FF               	movlw	255
 11985  0576  0240               	subwf	___fldiv@new_exp,w
 11986  0577                     u2985:	
 11987  0577  1C03               	skipc
 11988  0578  2D86               	goto	l1627
 11989  0579  30FF               	movlw	255
 11990  057A  0140               	movlb	0	; select bank0
 11991  057B  00C0               	movwf	___fldiv@new_exp
 11992  057C  3000               	movlw	0
 11993  057D  00C1               	movwf	___fldiv@new_exp+1
 11994  057E  3000               	movlw	0
 11995  057F  00B5               	movwf	___fldiv@b+3
 11996  0580  3000               	movlw	0
 11997  0581  00B4               	movwf	___fldiv@b+2
 11998  0582  3000               	movlw	0
 11999  0583  00B3               	movwf	___fldiv@b+1
 12000  0584  3000               	movlw	0
 12001  0585  00B2               	movwf	___fldiv@b
 12002  0586                     l1627:	
 12003  0586  0140               	movlb	0	; select bank0
 12004  0587  0841               	movf	___fldiv@new_exp+1,w
 12005  0588  3A80               	xorlw	128
 12006  0589  00B6               	movwf	??___fldiv
 12007  058A  3080               	movlw	128
 12008  058B  0236               	subwf	??___fldiv,w
 12009  058C  1D03               	skipz
 12010  058D  2D90               	goto	u2995
 12011  058E  3001               	movlw	1
 12012  058F  0240               	subwf	___fldiv@new_exp,w
 12013  0590                     u2995:	
 12014  0590  1803               	skipnc
 12015  0591  2D9E               	goto	l1628
 12016  0592  0140               	movlb	0	; select bank0
 12017  0593  01C0               	clrf	___fldiv@new_exp
 12018  0594  01C1               	clrf	___fldiv@new_exp+1
 12019  0595  3000               	movlw	0
 12020  0596  00B5               	movwf	___fldiv@b+3
 12021  0597  3000               	movlw	0
 12022  0598  00B4               	movwf	___fldiv@b+2
 12023  0599  3000               	movlw	0
 12024  059A  00B3               	movwf	___fldiv@b+1
 12025  059B  3000               	movlw	0
 12026  059C  00B2               	movwf	___fldiv@b
 12027  059D  01BF               	clrf	___fldiv@sign
 12028  059E                     l1628:	
 12029  059E  0140               	movlb	0	; select bank0
 12030  059F  0840               	movf	___fldiv@new_exp,w
 12031  05A0  00B6               	movwf	??___fldiv
 12032  05A1  0836               	movf	??___fldiv,w
 12033  05A2  00C6               	movwf	___fldiv@bexp
 12034  05A3  1C46               	btfss	___fldiv@bexp,0
 12035  05A4  2DA7               	goto	l3857
 12036  05A5  17B4               	bsf	___fldiv@b+2,7
 12037  05A6  2DAB               	goto	l1630
 12038  05A7                     l3857:	
 12039  05A7  307F               	movlw	127
 12040  05A8  00B6               	movwf	??___fldiv
 12041  05A9  0836               	movf	??___fldiv,w
 12042  05AA  05B4               	andwf	___fldiv@b+2,f
 12043  05AB                     l1630:	
 12044  05AB  3646               	lsrf	___fldiv@bexp,w
 12045  05AC  00B6               	movwf	??___fldiv
 12046  05AD  0836               	movf	??___fldiv,w
 12047  05AE  00B5               	movwf	___fldiv@b+3
 12048  05AF  2C91               	goto	L8
 12049  05B0                     __end_of___fldiv:	
 12050                           
 12051                           	psect	text23
 12052  081C                     __ptext23:	
 12053 ;; *************** function _LED_init *****************
 12054 ;; Defined at:
 12055 ;;		line 44 in file "lights.c"
 12056 ;; Parameters:    Size  Location     Type
 12057 ;;		None
 12058 ;; Auto vars:     Size  Location     Type
 12059 ;;		None
 12060 ;; Return value:  Size  Location     Type
 12061 ;;                  1    wreg      void 
 12062 ;; Registers used:
 12063 ;;		wreg, status,2, status,0
 12064 ;; Tracked objects:
 12065 ;;		On entry : 0/0
 12066 ;;		On exit  : 0/0
 12067 ;;		Unchanged: 0/0
 12068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12073 ;;Total ram usage:        0 bytes
 12074 ;; Hardware stack levels used:    1
 12075 ;; Hardware stack levels required when called:    4
 12076 ;; This function calls:
 12077 ;;		Nothing
 12078 ;; This function is called by:
 12079 ;;		_main
 12080 ;; This function uses a non-reentrant model
 12081 ;;
 12082                           
 12083                           
 12084                           ;psect for function _LED_init
 12085  081C                     _LED_init:	
 12086                           
 12087                           ;lights.c: 46:     RC7PPS = 0x09;
 12088                           
 12089                           ;incstack = 0
 12090                           ; Regs used in _LED_init: [wreg+status,2+status,0]
 12091  081C  3009               	movlw	9
 12092  081D  017E               	movlb	62	; select bank62
 12093  081E  00A7               	movwf	39	;volatile
 12094                           
 12095                           ;lights.c: 48:     RC6PPS = 0x0A;
 12096  081F  300A               	movlw	10
 12097  0820  00A6               	movwf	38	;volatile
 12098                           
 12099                           ;lights.c: 50:     RC3PPS = 0x0B;
 12100  0821  300B               	movlw	11
 12101  0822  00A3               	movwf	35	;volatile
 12102                           
 12103                           ;lights.c: 52:     RC4PPS = 0x0C;
 12104  0823  300C               	movlw	12
 12105  0824  00A4               	movwf	36	;volatile
 12106                           
 12107                           ;lights.c: 58:     CCP1CONbits.MODE = 0b1100;
 12108  0825  0146               	movlb	6	; select bank6
 12109  0826  080E               	movf	14,w	;volatile
 12110  0827  39F0               	andlw	-16
 12111  0828  380C               	iorlw	12
 12112  0829  008E               	movwf	14	;volatile
 12113                           
 12114                           ;lights.c: 59:     CCP1CONbits.CCP1EN = 1;
 12115  082A  178E               	bsf	14,7	;volatile
 12116                           
 12117                           ;lights.c: 61:     CCP2CONbits.MODE = 0b1100;
 12118  082B  0812               	movf	18,w	;volatile
 12119  082C  39F0               	andlw	-16
 12120  082D  380C               	iorlw	12
 12121  082E  0092               	movwf	18	;volatile
 12122                           
 12123                           ;lights.c: 62:     CCP2CONbits.CCP2EN = 1;
 12124  082F  1792               	bsf	18,7	;volatile
 12125                           
 12126                           ;lights.c: 64:     CCP3CONbits.MODE = 0b1100;
 12127  0830  0816               	movf	22,w	;volatile
 12128  0831  39F0               	andlw	-16
 12129  0832  380C               	iorlw	12
 12130  0833  0096               	movwf	22	;volatile
 12131                           
 12132                           ;lights.c: 65:     CCP3CONbits.CCP3EN = 1;
 12133  0834  1796               	bsf	22,7	;volatile
 12134                           
 12135                           ;lights.c: 67:     CCP4CONbits.MODE = 0b1100;
 12136  0835  081A               	movf	26,w	;volatile
 12137  0836  39F0               	andlw	-16
 12138  0837  380C               	iorlw	12
 12139  0838  009A               	movwf	26	;volatile
 12140                           
 12141                           ;lights.c: 68:     CCP4CONbits.CCP4EN = 1;
 12142  0839  179A               	bsf	26,7	;volatile
 12143                           
 12144                           ;lights.c: 71:     T2CLKCON = 0x01;
 12145  083A  3001               	movlw	1
 12146  083B  0145               	movlb	5	; select bank5
 12147  083C  0090               	movwf	16	;volatile
 12148                           
 12149                           ;lights.c: 72:     T2CONbits.ON = 1;
 12150  083D  178E               	bsf	14,7	;volatile
 12151                           
 12152                           ;lights.c: 74:     TRISC7 = 0;
 12153  083E  0140               	movlb	0	; select bank0
 12154  083F  1394               	bcf	20,7	;volatile
 12155                           
 12156                           ;lights.c: 75:     TRISC6 = 0;
 12157  0840  1314               	bcf	20,6	;volatile
 12158                           
 12159                           ;lights.c: 76:     TRISC3 = 0;
 12160  0841  1194               	bcf	20,3	;volatile
 12161                           
 12162                           ;lights.c: 77:     TRISC4 = 0;
 12163  0842  1214               	bcf	20,4	;volatile
 12164  0843  0008               	return
 12165  0844                     __end_of_LED_init:	
 12166                           
 12167                           	psect	text24
 12168  162D                     __ptext24:	
 12169 ;; *************** function _DMX_init *****************
 12170 ;; Defined at:
 12171 ;;		line 36 in file "lights.c"
 12172 ;; Parameters:    Size  Location     Type
 12173 ;;		None
 12174 ;; Auto vars:     Size  Location     Type
 12175 ;;		None
 12176 ;; Return value:  Size  Location     Type
 12177 ;;                  1    wreg      void 
 12178 ;; Registers used:
 12179 ;;		wreg, status,2, status,0, pclath, cstack
 12180 ;; Tracked objects:
 12181 ;;		On entry : 0/0
 12182 ;;		On exit  : 0/0
 12183 ;;		Unchanged: 0/0
 12184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12189 ;;Total ram usage:        0 bytes
 12190 ;; Hardware stack levels used:    1
 12191 ;; Hardware stack levels required when called:    5
 12192 ;; This function calls:
 12193 ;;		_EUSART1_SetRxInterruptHandler
 12194 ;; This function is called by:
 12195 ;;		_main
 12196 ;; This function uses a non-reentrant model
 12197 ;;
 12198                           
 12199                           
 12200                           ;psect for function _DMX_init
 12201  162D                     _DMX_init:	
 12202                           
 12203                           ;lights.c: 37:     EUSART1_SetRxInterruptHandler(handler);
 12204                           
 12205                           ;incstack = 0
 12206                           ; Regs used in _DMX_init: [wreg+status,2+status,0+pclath+cstack]
 12207  162D  30FE               	movlw	low _handler
 12208  162E  0140               	movlb	0	; select bank0
 12209  162F  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12210  1630  3008               	movlw	high _handler
 12211  1631  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12212  1632  3195  25A4         	fcall	_EUSART1_SetRxInterruptHandler
 12213                           
 12214                           ;lights.c: 38:     TRISB4 = 1;
 12215  1634  0140               	movlb	0	; select bank0
 12216  1635  1613               	bsf	19,4	;volatile
 12217                           
 12218                           ;lights.c: 39:     ANSELB = 0x00;
 12219  1636  017E               	movlb	62	; select bank62
 12220  1637  01C3               	clrf	67	;volatile
 12221                           
 12222                           ;lights.c: 41:     point = 0;
 12223  1638  0141               	movlb	1	; select bank1
 12224  1639  01B1               	clrf	_point^(0+128)
 12225  163A  01B2               	clrf	(_point+1)^(0+128)
 12226  163B  0008               	return
 12227  163C                     __end_of_DMX_init:	
 12228                           
 12229                           	psect	text25
 12230  15A4                     __ptext25:	
 12231 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 12232 ;; Defined at:
 12233 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 12234 ;; Parameters:    Size  Location     Type
 12235 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12236 ;;		 -> handler(1), EUSART1_Receive_ISR(1), 
 12237 ;; Auto vars:     Size  Location     Type
 12238 ;;		None
 12239 ;; Return value:  Size  Location     Type
 12240 ;;                  1    wreg      void 
 12241 ;; Registers used:
 12242 ;;		wreg
 12243 ;; Tracked objects:
 12244 ;;		On entry : 0/0
 12245 ;;		On exit  : 0/0
 12246 ;;		Unchanged: 0/0
 12247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12248 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12251 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12252 ;;Total ram usage:        2 bytes
 12253 ;; Hardware stack levels used:    1
 12254 ;; Hardware stack levels required when called:    4
 12255 ;; This function calls:
 12256 ;;		Nothing
 12257 ;; This function is called by:
 12258 ;;		_EUSART1_Initialize
 12259 ;;		_DMX_init
 12260 ;; This function uses a non-reentrant model
 12261 ;;
 12262                           
 12263                           
 12264                           ;psect for function _EUSART1_SetRxInterruptHandler
 12265  15A4                     _EUSART1_SetRxInterruptHandler:	
 12266                           
 12267                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 12268                           
 12269                           ;incstack = 0
 12270                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 12271  15A4  0140               	movlb	0	; select bank0
 12272  15A5  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 12273  15A6  0142               	movlb	2	; select bank2
 12274  15A7  00D1               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 12275  15A8  0140               	movlb	0	; select bank0
 12276  15A9  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 12277  15AA  0142               	movlb	2	; select bank2
 12278  15AB  00D0               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 12279  15AC  0008               	return
 12280  15AD                     __end_of_EUSART1_SetRxInterruptHandler:	
 12281                           
 12282                           	psect	text26
 12283  0AD8                     __ptext26:	
 12284 ;; *************** function _CONTROLLER_task *****************
 12285 ;; Defined at:
 12286 ;;		line 42 in file "controller.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;		None
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;  active          1   31[BANK0 ] _Bool 
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  1    wreg      void 
 12293 ;; Registers used:
 12294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12301 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12302 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12303 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12304 ;;Total ram usage:        3 bytes
 12305 ;; Hardware stack levels used:    1
 12306 ;; Hardware stack levels required when called:   11
 12307 ;; This function calls:
 12308 ;;		_BUTTONS_isClicked
 12309 ;;		_BUTTONS_isHeld
 12310 ;;		_CLOCK_getTime
 12311 ;;		_TM1650_enable
 12312 ;;		_address_dec
 12313 ;;		_address_inc
 12314 ;; This function is called by:
 12315 ;;		_main
 12316 ;; This function uses a non-reentrant model
 12317 ;;
 12318                           
 12319                           
 12320                           ;psect for function _CONTROLLER_task
 12321  0AD8                     _CONTROLLER_task:	
 12322                           
 12323                           ;controller.c: 43:     _Bool active = 1;
 12324                           
 12325                           ;incstack = 0
 12326                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12327  0AD8  0140               	movlb	0	; select bank0
 12328  0AD9  01BF               	clrf	CONTROLLER_task@active
 12329  0ADA  0ABF               	incf	CONTROLLER_task@active,f
 12330                           
 12331                           ;controller.c: 45:     if (BUTTONS_isClicked(up)) {
 12332  0ADB  0141               	movlb	1	; select bank1
 12333  0ADC  0844               	movf	_up^(0+128),w
 12334  0ADD  3196  264D  318A   	fcall	_BUTTONS_isClicked
 12335  0AE0  3A00               	xorlw	0
 12336  0AE1  1903               	skipnz
 12337  0AE2  2AE7               	goto	l5367
 12338  0AE3                     l5365:	
 12339                           
 12340                           ;controller.c: 46:         address_inc();
 12341  0AE3  3197  2701  318A   	fcall	_address_inc
 12342                           
 12343                           ;controller.c: 47:     } else if (BUTTONS_isClicked(down)) {
 12344  0AE6  2B05               	goto	l5381
 12345  0AE7                     l5367:	
 12346  0AE7  0141               	movlb	1	; select bank1
 12347  0AE8  0843               	movf	_down^(0+128),w
 12348  0AE9  3196  264D  318A   	fcall	_BUTTONS_isClicked
 12349  0AEC  3A00               	xorlw	0
 12350  0AED  1903               	skipnz
 12351  0AEE  2AF3               	goto	l5371
 12352  0AEF                     l5369:	
 12353                           
 12354                           ;controller.c: 48:         address_dec();
 12355  0AEF  3196  26E9  318A   	fcall	_address_dec
 12356                           
 12357                           ;controller.c: 49:     } else if (BUTTONS_isHeld(up)){
 12358  0AF2  2B05               	goto	l5381
 12359  0AF3                     l5371:	
 12360  0AF3  0141               	movlb	1	; select bank1
 12361  0AF4  0844               	movf	_up^(0+128),w
 12362  0AF5  3196  261E  318A   	fcall	_BUTTONS_isHeld
 12363  0AF8  3A00               	xorlw	0
 12364  0AF9  1D03               	btfss	3,2
 12365  0AFA  2AE3               	goto	l5365
 12366  0AFB  0141               	movlb	1	; select bank1
 12367  0AFC  0843               	movf	_down^(0+128),w
 12368  0AFD  3196  261E  318A   	fcall	_BUTTONS_isHeld
 12369  0B00  3A00               	xorlw	0
 12370  0B01  1D03               	btfss	3,2
 12371  0B02  2AEF               	goto	l5369
 12372                           
 12373                           ;controller.c: 54:         active = 0;
 12374  0B03  0140               	movlb	0	; select bank0
 12375  0B04  01BF               	clrf	CONTROLLER_task@active
 12376  0B05                     l5381:	
 12377                           
 12378                           ;controller.c: 57:     if(active){
 12379  0B05  0140               	movlb	0	; select bank0
 12380  0B06  083F               	movf	CONTROLLER_task@active,w
 12381  0B07  1903               	btfsc	3,2
 12382  0B08  2B18               	goto	l5387
 12383                           
 12384                           ;controller.c: 58:         TM1650_enable(1);
 12385  0B09  3001               	movlw	1
 12386  0B0A  3196  26D1  318A   	fcall	_TM1650_enable
 12387                           
 12388                           ;controller.c: 59:         lastActiveTime = CLOCK_getTime();
 12389  0B0D  3195  2592  318A   	fcall	_CLOCK_getTime
 12390  0B10  0140               	movlb	0	; select bank0
 12391  0B11  0821               	movf	?_CLOCK_getTime+1,w
 12392  0B12  0141               	movlb	1	; select bank1
 12393  0B13  00B6               	movwf	(_lastActiveTime+1)^(0+128)
 12394  0B14  0140               	movlb	0	; select bank0
 12395  0B15  0820               	movf	?_CLOCK_getTime,w
 12396  0B16  0141               	movlb	1	; select bank1
 12397  0B17  00B5               	movwf	_lastActiveTime^(0+128)
 12398  0B18                     l5387:	
 12399                           
 12400                           ;controller.c: 62:     if(CLOCK_getTime() - lastActiveTime >= 5000){
 12401  0B18  3195  2592  318A   	fcall	_CLOCK_getTime
 12402  0B1B  0141               	movlb	1	; select bank1
 12403  0B1C  0835               	movf	_lastActiveTime^(0+128),w
 12404  0B1D  0140               	movlb	0	; select bank0
 12405  0B1E  0220               	subwf	?_CLOCK_getTime,w
 12406  0B1F  00BD               	movwf	??_CONTROLLER_task
 12407  0B20  0141               	movlb	1	; select bank1
 12408  0B21  0836               	movf	(_lastActiveTime+1)^(0+128),w
 12409  0B22  0140               	movlb	0	; select bank0
 12410  0B23  3B21               	subwfb	?_CLOCK_getTime+1,w
 12411  0B24  00BE               	movwf	??_CONTROLLER_task+1
 12412  0B25  3013               	movlw	19
 12413  0B26  023E               	subwf	??_CONTROLLER_task+1,w
 12414  0B27  3088               	movlw	136
 12415  0B28  1903               	skipnz
 12416  0B29  023D               	subwf	??_CONTROLLER_task,w
 12417  0B2A  1C03               	skipc
 12418  0B2B  0008               	return
 12419                           
 12420                           ;controller.c: 63:         TM1650_enable(0);
 12421  0B2C  3000               	movlw	0
 12422  0B2D  3196  26D1  318A   	fcall	_TM1650_enable
 12423                           
 12424                           ;controller.c: 64:         lastActiveTime = CLOCK_getTime() - 5001;
 12425  0B30  3195  2592         	fcall	_CLOCK_getTime
 12426  0B32  0140               	movlb	0	; select bank0
 12427  0B33  0820               	movf	?_CLOCK_getTime,w
 12428  0B34  3E77               	addlw	119
 12429  0B35  0141               	movlb	1	; select bank1
 12430  0B36  00B5               	movwf	_lastActiveTime^(0+128)
 12431  0B37  30EC               	movlw	236
 12432  0B38  0140               	movlb	0	; select bank0
 12433  0B39  3D21               	addwfc	?_CLOCK_getTime+1,w
 12434  0B3A  0141               	movlb	1	; select bank1
 12435  0B3B  00B6               	movwf	(_lastActiveTime+1)^(0+128)
 12436  0B3C  0008               	return
 12437  0B3D                     __end_of_CONTROLLER_task:	
 12438                           
 12439                           	psect	text27
 12440  1701                     __ptext27:	
 12441 ;; *************** function _address_inc *****************
 12442 ;; Defined at:
 12443 ;;		line 17 in file "controller.c"
 12444 ;; Parameters:    Size  Location     Type
 12445 ;;		None
 12446 ;; Auto vars:     Size  Location     Type
 12447 ;;		None
 12448 ;; Return value:  Size  Location     Type
 12449 ;;                  1    wreg      void 
 12450 ;; Registers used:
 12451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12452 ;; Tracked objects:
 12453 ;;		On entry : 0/0
 12454 ;;		On exit  : 0/0
 12455 ;;		Unchanged: 0/0
 12456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12461 ;;Total ram usage:        0 bytes
 12462 ;; Hardware stack levels used:    1
 12463 ;; Hardware stack levels required when called:   10
 12464 ;; This function calls:
 12465 ;;		_TM1650_fastPrintNum
 12466 ;; This function is called by:
 12467 ;;		_CONTROLLER_task
 12468 ;; This function uses a non-reentrant model
 12469 ;;
 12470                           
 12471                           
 12472                           ;psect for function _address_inc
 12473  1701                     _address_inc:	
 12474                           
 12475                           ;controller.c: 19:     if(address == 512)
 12476                           
 12477                           ;incstack = 0
 12478                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12479  1701  3002               	movlw	2
 12480  1702  0141               	movlb	1	; select bank1
 12481  1703  066B               	xorwf	(_address+1)^(0+128),w
 12482  1704  046A               	iorwf	_address^(0+128),w
 12483  1705  1D03               	btfss	3,2
 12484  1706  2F0C               	goto	l5091
 12485                           
 12486                           ;controller.c: 20:         address = 1;
 12487  1707  3001               	movlw	1
 12488  1708  00EA               	movwf	_address^(0+128)
 12489  1709  3000               	movlw	0
 12490  170A  00EB               	movwf	(_address^(0+128)+1)
 12491  170B  2F10               	goto	l5093
 12492  170C                     l5091:	
 12493                           
 12494                           ;controller.c: 22:         address++;
 12495  170C  3001               	movlw	1
 12496  170D  07EA               	addwf	_address^(0+128),f
 12497  170E  3000               	movlw	0
 12498  170F  3DEB               	addwfc	(_address+1)^(0+128),f
 12499  1710                     l5093:	
 12500                           
 12501                           ;controller.c: 25:     TM1650_fastPrintNum(address);
 12502  1710  086B               	movf	(_address+1)^(0+128),w
 12503  1711  0140               	movlb	0	; select bank0
 12504  1712  00BB               	movwf	TM1650_fastPrintNum@inputNumber+1
 12505  1713  0141               	movlb	1	; select bank1
 12506  1714  086A               	movf	_address^(0+128),w
 12507  1715  0140               	movlb	0	; select bank0
 12508  1716  00BA               	movwf	TM1650_fastPrintNum@inputNumber
 12509  1717  318D  25A9         	fcall	_TM1650_fastPrintNum
 12510  1719  0008               	return
 12511  171A                     __end_of_address_inc:	
 12512                           
 12513                           	psect	text28
 12514  16E9                     __ptext28:	
 12515 ;; *************** function _address_dec *****************
 12516 ;; Defined at:
 12517 ;;		line 31 in file "controller.c"
 12518 ;; Parameters:    Size  Location     Type
 12519 ;;		None
 12520 ;; Auto vars:     Size  Location     Type
 12521 ;;		None
 12522 ;; Return value:  Size  Location     Type
 12523 ;;                  1    wreg      void 
 12524 ;; Registers used:
 12525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12526 ;; Tracked objects:
 12527 ;;		On entry : 0/0
 12528 ;;		On exit  : 0/0
 12529 ;;		Unchanged: 0/0
 12530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12535 ;;Total ram usage:        0 bytes
 12536 ;; Hardware stack levels used:    1
 12537 ;; Hardware stack levels required when called:   10
 12538 ;; This function calls:
 12539 ;;		_TM1650_fastPrintNum
 12540 ;; This function is called by:
 12541 ;;		_CONTROLLER_task
 12542 ;; This function uses a non-reentrant model
 12543 ;;
 12544                           
 12545                           
 12546                           ;psect for function _address_dec
 12547  16E9                     _address_dec:	
 12548                           
 12549                           ;controller.c: 33:     if(address == 1)
 12550                           
 12551                           ;incstack = 0
 12552                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12553  16E9  0141               	movlb	1	; select bank1
 12554  16EA  036A               	decf	_address^(0+128),w
 12555  16EB  046B               	iorwf	(_address+1)^(0+128),w
 12556  16EC  1D03               	btfss	3,2
 12557  16ED  2EF3               	goto	l5099
 12558                           
 12559                           ;controller.c: 34:         address = 512;
 12560  16EE  3000               	movlw	0
 12561  16EF  00EA               	movwf	_address^(0+128)
 12562  16F0  3002               	movlw	2
 12563  16F1  00EB               	movwf	(_address^(0+128)+1)
 12564  16F2  2EF7               	goto	l5101
 12565  16F3                     l5099:	
 12566                           
 12567                           ;controller.c: 36:         address--;
 12568  16F3  3001               	movlw	1
 12569  16F4  02EA               	subwf	_address^(0+128),f
 12570  16F5  3000               	movlw	0
 12571  16F6  3BEB               	subwfb	(_address+1)^(0+128),f
 12572  16F7                     l5101:	
 12573                           
 12574                           ;controller.c: 39:     TM1650_fastPrintNum(address);
 12575  16F7  086B               	movf	(_address+1)^(0+128),w
 12576  16F8  0140               	movlb	0	; select bank0
 12577  16F9  00BB               	movwf	TM1650_fastPrintNum@inputNumber+1
 12578  16FA  0141               	movlb	1	; select bank1
 12579  16FB  086A               	movf	_address^(0+128),w
 12580  16FC  0140               	movlb	0	; select bank0
 12581  16FD  00BA               	movwf	TM1650_fastPrintNum@inputNumber
 12582  16FE  318D  25A9         	fcall	_TM1650_fastPrintNum
 12583  1700  0008               	return
 12584  1701                     __end_of_address_dec:	
 12585                           
 12586                           	psect	text29
 12587  16D1                     __ptext29:	
 12588 ;; *************** function _TM1650_enable *****************
 12589 ;; Defined at:
 12590 ;;		line 105 in file "tm1650.c"
 12591 ;; Parameters:    Size  Location     Type
 12592 ;;  enable          1    wreg     _Bool 
 12593 ;; Auto vars:     Size  Location     Type
 12594 ;;  enable          1   21[BANK0 ] _Bool 
 12595 ;; Return value:  Size  Location     Type
 12596 ;;                  1    wreg      void 
 12597 ;; Registers used:
 12598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12599 ;; Tracked objects:
 12600 ;;		On entry : 0/0
 12601 ;;		On exit  : 0/0
 12602 ;;		Unchanged: 0/0
 12603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12607 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12608 ;;Total ram usage:        1 bytes
 12609 ;; Hardware stack levels used:    1
 12610 ;; Hardware stack levels required when called:    8
 12611 ;; This function calls:
 12612 ;;		_writeData
 12613 ;; This function is called by:
 12614 ;;		_TM1650_init
 12615 ;;		_CONTROLLER_task
 12616 ;; This function uses a non-reentrant model
 12617 ;;
 12618                           
 12619                           
 12620                           ;psect for function _TM1650_enable
 12621  16D1                     _TM1650_enable:	
 12622                           
 12623                           ;incstack = 0
 12624                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12625                           ;TM1650_enable@enable stored from wreg
 12626  16D1  0140               	movlb	0	; select bank0
 12627  16D2  00B5               	movwf	TM1650_enable@enable
 12628                           
 12629                           ;tm1650.c: 106:     if(enable){
 12630  16D3  0835               	movf	TM1650_enable@enable,w
 12631  16D4  1903               	btfsc	3,2
 12632  16D5  2EDF               	goto	l5047
 12633                           
 12634                           ;tm1650.c: 107:         writeData(0x24, 0x01);
 12635  16D6  01AE               	clrf	writeData@data
 12636  16D7  0AAE               	incf	writeData@data,f
 12637  16D8  3024               	movlw	36
 12638  16D9  3197  2796         	fcall	_writeData
 12639                           
 12640                           ;tm1650.c: 108:         displayState = 1;
 12641  16DB  0141               	movlb	1	; select bank1
 12642  16DC  01C0               	clrf	_displayState^(0+128)
 12643  16DD  0AC0               	incf	_displayState^(0+128),f
 12644                           
 12645                           ;tm1650.c: 109:     } else if(!enable){
 12646  16DE  0008               	return
 12647  16DF                     l5047:	
 12648  16DF  0835               	movf	TM1650_enable@enable,w
 12649  16E0  1D03               	btfss	3,2
 12650  16E1  0008               	return
 12651                           
 12652                           ;tm1650.c: 110:         writeData(0x24, 0x00);
 12653  16E2  01AE               	clrf	writeData@data
 12654  16E3  3024               	movlw	36
 12655  16E4  3197  2796         	fcall	_writeData
 12656                           
 12657                           ;tm1650.c: 111:         displayState = 0;
 12658  16E6  0141               	movlb	1	; select bank1
 12659  16E7  01C0               	clrf	_displayState^(0+128)
 12660  16E8  0008               	return
 12661  16E9                     __end_of_TM1650_enable:	
 12662                           
 12663                           	psect	text30
 12664  161E                     __ptext30:	
 12665 ;; *************** function _BUTTONS_isHeld *****************
 12666 ;; Defined at:
 12667 ;;		line 92 in file "buttons.c"
 12668 ;; Parameters:    Size  Location     Type
 12669 ;;  button          1    wreg     PTR struct .
 12670 ;;		 -> buttons(32), NULL(0), 
 12671 ;; Auto vars:     Size  Location     Type
 12672 ;;  button          1    0[BANK0 ] PTR struct .
 12673 ;;		 -> buttons(32), NULL(0), 
 12674 ;; Return value:  Size  Location     Type
 12675 ;;                  1    wreg      _Bool 
 12676 ;; Registers used:
 12677 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12678 ;; Tracked objects:
 12679 ;;		On entry : 0/0
 12680 ;;		On exit  : 0/0
 12681 ;;		Unchanged: 0/0
 12682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12686 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12687 ;;Total ram usage:        1 bytes
 12688 ;; Hardware stack levels used:    1
 12689 ;; Hardware stack levels required when called:    4
 12690 ;; This function calls:
 12691 ;;		Nothing
 12692 ;; This function is called by:
 12693 ;;		_CONTROLLER_task
 12694 ;; This function uses a non-reentrant model
 12695 ;;
 12696                           
 12697                           
 12698                           ;psect for function _BUTTONS_isHeld
 12699  161E                     _BUTTONS_isHeld:	
 12700                           
 12701                           ;incstack = 0
 12702                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 12703                           ;BUTTONS_isHeld@button stored from wreg
 12704  161E  0140               	movlb	0	; select bank0
 12705  161F  00A0               	movwf	BUTTONS_isHeld@button
 12706                           
 12707                           ;buttons.c: 93:     if (button->event == EVENT_HELD) {
 12708  1620  0820               	movf	BUTTONS_isHeld@button,w
 12709  1621  3E05               	addlw	5
 12710  1622  0086               	movwf	6
 12711  1623  3001               	movlw	1	; select bank2/3
 12712  1624  0087               	movwf	7
 12713  1625  3002               	movlw	2
 12714  1626  0601               	xorwf	1,w
 12715  1627  1D03               	btfss	3,2
 12716  1628  2E2B               	goto	l5083
 12717                           
 12718                           ;buttons.c: 94:         return 1;
 12719  1629  3001               	movlw	1
 12720  162A  0008               	return
 12721  162B                     l5083:	
 12722                           
 12723                           ;buttons.c: 96:     return 0;
 12724  162B  3000               	movlw	0
 12725  162C  0008               	return
 12726  162D                     __end_of_BUTTONS_isHeld:	
 12727                           
 12728                           	psect	text31
 12729  164D                     __ptext31:	
 12730 ;; *************** function _BUTTONS_isClicked *****************
 12731 ;; Defined at:
 12732 ;;		line 82 in file "buttons.c"
 12733 ;; Parameters:    Size  Location     Type
 12734 ;;  button          1    wreg     PTR struct .
 12735 ;;		 -> buttons(32), NULL(0), 
 12736 ;; Auto vars:     Size  Location     Type
 12737 ;;  button          1    0[BANK0 ] PTR struct .
 12738 ;;		 -> buttons(32), NULL(0), 
 12739 ;; Return value:  Size  Location     Type
 12740 ;;                  1    wreg      _Bool 
 12741 ;; Registers used:
 12742 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12743 ;; Tracked objects:
 12744 ;;		On entry : 0/0
 12745 ;;		On exit  : 0/0
 12746 ;;		Unchanged: 0/0
 12747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12751 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12752 ;;Total ram usage:        1 bytes
 12753 ;; Hardware stack levels used:    1
 12754 ;; Hardware stack levels required when called:    4
 12755 ;; This function calls:
 12756 ;;		Nothing
 12757 ;; This function is called by:
 12758 ;;		_CONTROLLER_task
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           
 12763                           ;psect for function _BUTTONS_isClicked
 12764  164D                     _BUTTONS_isClicked:	
 12765                           
 12766                           ;incstack = 0
 12767                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 12768                           ;BUTTONS_isClicked@button stored from wreg
 12769  164D  0140               	movlb	0	; select bank0
 12770  164E  00A0               	movwf	BUTTONS_isClicked@button
 12771                           
 12772                           ;buttons.c: 83:     if (button->event == EVENT_PRESSED) {
 12773  164F  0820               	movf	BUTTONS_isClicked@button,w
 12774  1650  3E05               	addlw	5
 12775  1651  0086               	movwf	6
 12776  1652  3001               	movlw	1	; select bank2/3
 12777  1653  0087               	movwf	7
 12778  1654  0301               	decf	1,w
 12779  1655  1D03               	btfss	3,2
 12780  1656  2E5F               	goto	l5073
 12781                           
 12782                           ;buttons.c: 84:         button->event = EVENT_IDLE;
 12783  1657  0820               	movf	BUTTONS_isClicked@button,w
 12784  1658  3E05               	addlw	5
 12785  1659  0086               	movwf	6
 12786  165A  3001               	movlw	1	; select bank2/3
 12787  165B  0087               	movwf	7
 12788  165C  0181               	clrf	1
 12789                           
 12790                           ;buttons.c: 85:         return 1;
 12791  165D  3001               	movlw	1
 12792  165E  0008               	return
 12793  165F                     l5073:	
 12794                           
 12795                           ;buttons.c: 89:     return 0;
 12796  165F  3000               	movlw	0
 12797  1660  0008               	return
 12798  1661                     __end_of_BUTTONS_isClicked:	
 12799                           
 12800                           	psect	text32
 12801  15ED                     __ptext32:	
 12802 ;; *************** function _CONTROLLER_init *****************
 12803 ;; Defined at:
 12804 ;;		line 10 in file "controller.c"
 12805 ;; Parameters:    Size  Location     Type
 12806 ;;		None
 12807 ;; Auto vars:     Size  Location     Type
 12808 ;;		None
 12809 ;; Return value:  Size  Location     Type
 12810 ;;                  1    wreg      void 
 12811 ;; Registers used:
 12812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12813 ;; Tracked objects:
 12814 ;;		On entry : 0/0
 12815 ;;		On exit  : 0/0
 12816 ;;		Unchanged: 0/0
 12817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12822 ;;Total ram usage:        0 bytes
 12823 ;; Hardware stack levels used:    1
 12824 ;; Hardware stack levels required when called:   10
 12825 ;; This function calls:
 12826 ;;		_TM1650_fastPrintNum
 12827 ;; This function is called by:
 12828 ;;		_main
 12829 ;; This function uses a non-reentrant model
 12830 ;;
 12831                           
 12832                           
 12833                           ;psect for function _CONTROLLER_init
 12834  15ED                     _CONTROLLER_init:	
 12835                           
 12836                           ;controller.c: 11:     TM1650_fastPrintNum(address);
 12837                           
 12838                           ;incstack = 0
 12839                           ; Regs used in _CONTROLLER_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12840  15ED  0141               	movlb	1	; select bank1
 12841  15EE  086B               	movf	(_address+1)^(0+128),w
 12842  15EF  0140               	movlb	0	; select bank0
 12843  15F0  00BB               	movwf	TM1650_fastPrintNum@inputNumber+1
 12844  15F1  0141               	movlb	1	; select bank1
 12845  15F2  086A               	movf	_address^(0+128),w
 12846  15F3  0140               	movlb	0	; select bank0
 12847  15F4  00BA               	movwf	TM1650_fastPrintNum@inputNumber
 12848  15F5  318D  25A9         	fcall	_TM1650_fastPrintNum
 12849  15F7  0008               	return
 12850  15F8                     __end_of_CONTROLLER_init:	
 12851                           
 12852                           	psect	text33
 12853  0DA9                     __ptext33:	
 12854 ;; *************** function _TM1650_fastPrintNum *****************
 12855 ;; Defined at:
 12856 ;;		line 71 in file "tm1650.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;  inputNumber     2   26[BANK0 ] unsigned short 
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;		None
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  1    wreg      void 
 12863 ;; Registers used:
 12864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12870 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12872 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12873 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12874 ;;Total ram usage:        3 bytes
 12875 ;; Hardware stack levels used:    1
 12876 ;; Hardware stack levels required when called:    9
 12877 ;; This function calls:
 12878 ;;		_TM1650_setDigit
 12879 ;;		___lwdiv
 12880 ;;		___lwmod
 12881 ;; This function is called by:
 12882 ;;		_main
 12883 ;;		_CONTROLLER_init
 12884 ;;		_address_inc
 12885 ;;		_address_dec
 12886 ;; This function uses a non-reentrant model
 12887 ;;
 12888                           
 12889                           
 12890                           ;psect for function _TM1650_fastPrintNum
 12891  0DA9                     _TM1650_fastPrintNum:	
 12892                           
 12893                           ;incstack = 0
 12894                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12895  0DA9  3000               	movlw	0
 12896  0DAA  0140               	movlb	0	; select bank0
 12897  0DAB  023B               	subwf	TM1650_fastPrintNum@inputNumber+1,w
 12898  0DAC  300A               	movlw	10
 12899  0DAD  1903               	skipnz
 12900  0DAE  023A               	subwf	TM1650_fastPrintNum@inputNumber,w
 12901  0DAF  1803               	skipnc
 12902  0DB0  2DD1               	goto	l4977
 12903                           
 12904                           ;tm1650.c: 76:         TM1650_setDigit(0, ' ', 0);
 12905  0DB1  3020               	movlw	32
 12906  0DB2  00BC               	movwf	??_TM1650_fastPrintNum
 12907  0DB3  083C               	movf	??_TM1650_fastPrintNum,w
 12908  0DB4  00B5               	movwf	TM1650_setDigit@num
 12909  0DB5  01B6               	clrf	TM1650_setDigit@dp
 12910  0DB6  3000               	movlw	0
 12911  0DB7  3197  2738  318D   	fcall	_TM1650_setDigit
 12912                           
 12913                           ;tm1650.c: 77:         TM1650_setDigit(1, ' ', 0);
 12914  0DBA  3020               	movlw	32
 12915  0DBB  0140               	movlb	0	; select bank0
 12916  0DBC  00BC               	movwf	??_TM1650_fastPrintNum
 12917  0DBD  083C               	movf	??_TM1650_fastPrintNum,w
 12918  0DBE  00B5               	movwf	TM1650_setDigit@num
 12919  0DBF  01B6               	clrf	TM1650_setDigit@dp
 12920  0DC0  3001               	movlw	1
 12921  0DC1  3197  2738  318D   	fcall	_TM1650_setDigit
 12922                           
 12923                           ;tm1650.c: 78:         TM1650_setDigit(2, ' ', 0);
 12924  0DC4  3020               	movlw	32
 12925  0DC5  0140               	movlb	0	; select bank0
 12926  0DC6  00BC               	movwf	??_TM1650_fastPrintNum
 12927  0DC7  083C               	movf	??_TM1650_fastPrintNum,w
 12928  0DC8  00B5               	movwf	TM1650_setDigit@num
 12929  0DC9  01B6               	clrf	TM1650_setDigit@dp
 12930  0DCA  3002               	movlw	2
 12931  0DCB  3197  2738  318D   	fcall	_TM1650_setDigit
 12932                           
 12933                           ;tm1650.c: 79:         TM1650_setDigit(3, inputNumber + 48, 0);
 12934  0DCE  0140               	movlb	0	; select bank0
 12935  0DCF  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 12936  0DD0  2E7F               	goto	L12
 12937  0DD1                     l4977:	
 12938                           ;tm1650.c: 80:     } else if (10 <= inputNumber && inputNumber <= 99) {
 12939                           
 12940  0DD1  3000               	movlw	0
 12941  0DD2  023B               	subwf	TM1650_fastPrintNum@inputNumber+1,w
 12942  0DD3  300A               	movlw	10
 12943  0DD4  1903               	skipnz
 12944  0DD5  023A               	subwf	TM1650_fastPrintNum@inputNumber,w
 12945  0DD6  1C03               	skipc
 12946  0DD7  2DEB               	goto	l4983
 12947  0DD8  3000               	movlw	0
 12948  0DD9  023B               	subwf	TM1650_fastPrintNum@inputNumber+1,w
 12949  0DDA  3064               	movlw	100
 12950  0DDB  1903               	skipnz
 12951  0DDC  023A               	subwf	TM1650_fastPrintNum@inputNumber,w
 12952  0DDD  1803               	skipnc
 12953  0DDE  2DEB               	goto	l4983
 12954                           
 12955                           ;tm1650.c: 81:         TM1650_setDigit(0, ' ', 0);
 12956  0DDF  3020               	movlw	32
 12957  0DE0  00BC               	movwf	??_TM1650_fastPrintNum
 12958  0DE1  083C               	movf	??_TM1650_fastPrintNum,w
 12959  0DE2  00B5               	movwf	TM1650_setDigit@num
 12960  0DE3  01B6               	clrf	TM1650_setDigit@dp
 12961  0DE4  3000               	movlw	0
 12962  0DE5  3197  2738  318D   	fcall	_TM1650_setDigit
 12963                           
 12964                           ;tm1650.c: 82:         TM1650_setDigit(1, ' ', 0);
 12965  0DE8  3020               	movlw	32
 12966  0DE9  0140               	movlb	0	; select bank0
 12967  0DEA  2E46               	goto	L13
 12968  0DEB                     l4983:	
 12969                           ;tm1650.c: 85:     } else if (100 <= inputNumber && inputNumber <= 999){
 12970                           
 12971                           ;tm1650.c: 84:         TM1650_setDigit(3, (inputNumber % 10) + 48, 0);
 12972                           
 12973                           ;tm1650.c: 83:         TM1650_setDigit(2, ((inputNumber / 10) % 10) + 48, 0);
 12974                           
 12975  0DEB  3000               	movlw	0
 12976  0DEC  023B               	subwf	TM1650_fastPrintNum@inputNumber+1,w
 12977  0DED  3064               	movlw	100
 12978  0DEE  1903               	skipnz
 12979  0DEF  023A               	subwf	TM1650_fastPrintNum@inputNumber,w
 12980  0DF0  1C03               	skipc
 12981  0DF1  2DFB               	goto	l4989
 12982  0DF2  3003               	movlw	3
 12983  0DF3  023B               	subwf	TM1650_fastPrintNum@inputNumber+1,w
 12984  0DF4  30E8               	movlw	232
 12985  0DF5  1903               	skipnz
 12986  0DF6  023A               	subwf	TM1650_fastPrintNum@inputNumber,w
 12987  0DF7  1803               	skipnc
 12988  0DF8  2DFB               	goto	l4989
 12989                           
 12990                           ;tm1650.c: 86:         TM1650_setDigit(0, ' ', 0);
 12991  0DF9  3020               	movlw	32
 12992  0DFA  2E23               	goto	L14
 12993  0DFB                     l4989:	
 12994                           ;tm1650.c: 90:     } else if (1000 <= inputNumber && inputNumber <= 9999){
 12995                           
 12996                           ;tm1650.c: 89:         TM1650_setDigit(3, (inputNumber % 10) + 48, 0);
 12997                           
 12998                           ;tm1650.c: 88:         TM1650_setDigit(2, ((inputNumber / 10) % 10) + 48, 0);
 12999                           
 13000                           ;tm1650.c: 87:         TM1650_setDigit(1, ((inputNumber / 100) % 10) + 48, 0);
 13001                           
 13002  0DFB  3003               	movlw	3
 13003  0DFC  023B               	subwf	TM1650_fastPrintNum@inputNumber+1,w
 13004  0DFD  30E8               	movlw	232
 13005  0DFE  1903               	skipnz
 13006  0DFF  023A               	subwf	TM1650_fastPrintNum@inputNumber,w
 13007  0E00  1C03               	skipc
 13008  0E01  2E81               	goto	l4995
 13009  0E02  3027               	movlw	39
 13010  0E03  023B               	subwf	TM1650_fastPrintNum@inputNumber+1,w
 13011  0E04  3010               	movlw	16
 13012  0E05  1903               	skipnz
 13013  0E06  023A               	subwf	TM1650_fastPrintNum@inputNumber,w
 13014  0E07  1803               	skipnc
 13015  0E08  2E81               	goto	l4995
 13016                           
 13017                           ;tm1650.c: 91:         TM1650_setDigit(0, ((inputNumber / 1000) % 10) + 48, 0);
 13018  0E09  300A               	movlw	10
 13019  0E0A  00A8               	movwf	___lwmod@divisor
 13020  0E0B  3000               	movlw	0
 13021  0E0C  00A9               	movwf	___lwmod@divisor+1
 13022  0E0D  30E8               	movlw	232
 13023  0E0E  00A0               	movwf	___lwdiv@divisor
 13024  0E0F  3003               	movlw	3
 13025  0E10  00A1               	movwf	___lwdiv@divisor+1
 13026  0E11  083B               	movf	TM1650_fastPrintNum@inputNumber+1,w
 13027  0E12  00A3               	movwf	___lwdiv@dividend+1
 13028  0E13  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 13029  0E14  00A2               	movwf	___lwdiv@dividend
 13030  0E15  3189  2133  318D   	fcall	___lwdiv
 13031  0E18  0140               	movlb	0	; select bank0
 13032  0E19  0821               	movf	?___lwdiv+1,w
 13033  0E1A  00AB               	movwf	___lwmod@dividend+1
 13034  0E1B  0820               	movf	?___lwdiv,w
 13035  0E1C  00AA               	movwf	___lwmod@dividend
 13036  0E1D  3188  206E  318D   	fcall	___lwmod
 13037  0E20  0140               	movlb	0	; select bank0
 13038  0E21  0828               	movf	?___lwmod,w
 13039  0E22  3E30               	addlw	48
 13040  0E23                     L14:	
 13041  0E23  00BC               	movwf	??_TM1650_fastPrintNum
 13042  0E24  083C               	movf	??_TM1650_fastPrintNum,w
 13043  0E25  00B5               	movwf	TM1650_setDigit@num
 13044  0E26  01B6               	clrf	TM1650_setDigit@dp
 13045  0E27  3000               	movlw	0
 13046  0E28  3197  2738  318D   	fcall	_TM1650_setDigit
 13047                           
 13048                           ;tm1650.c: 92:         TM1650_setDigit(1, ((inputNumber / 100) % 10) + 48, 0);
 13049  0E2B  300A               	movlw	10
 13050  0E2C  0140               	movlb	0	; select bank0
 13051  0E2D  00A8               	movwf	___lwmod@divisor
 13052  0E2E  3000               	movlw	0
 13053  0E2F  00A9               	movwf	___lwmod@divisor+1
 13054  0E30  3064               	movlw	100
 13055  0E31  00A0               	movwf	___lwdiv@divisor
 13056  0E32  3000               	movlw	0
 13057  0E33  00A1               	movwf	___lwdiv@divisor+1
 13058  0E34  083B               	movf	TM1650_fastPrintNum@inputNumber+1,w
 13059  0E35  00A3               	movwf	___lwdiv@dividend+1
 13060  0E36  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 13061  0E37  00A2               	movwf	___lwdiv@dividend
 13062  0E38  3189  2133  318D   	fcall	___lwdiv
 13063  0E3B  0140               	movlb	0	; select bank0
 13064  0E3C  0821               	movf	?___lwdiv+1,w
 13065  0E3D  00AB               	movwf	___lwmod@dividend+1
 13066  0E3E  0820               	movf	?___lwdiv,w
 13067  0E3F  00AA               	movwf	___lwmod@dividend
 13068  0E40  3188  206E  318D   	fcall	___lwmod
 13069  0E43  0140               	movlb	0	; select bank0
 13070  0E44  0828               	movf	?___lwmod,w
 13071  0E45  3E30               	addlw	48
 13072  0E46                     L13:	
 13073  0E46  00BC               	movwf	??_TM1650_fastPrintNum
 13074  0E47  083C               	movf	??_TM1650_fastPrintNum,w
 13075  0E48  00B5               	movwf	TM1650_setDigit@num
 13076  0E49  01B6               	clrf	TM1650_setDigit@dp
 13077  0E4A  3001               	movlw	1
 13078  0E4B  3197  2738  318D   	fcall	_TM1650_setDigit
 13079                           
 13080                           ;tm1650.c: 93:         TM1650_setDigit(2, ((inputNumber / 10) % 10) + 48, 0);
 13081  0E4E  300A               	movlw	10
 13082  0E4F  0140               	movlb	0	; select bank0
 13083  0E50  00A8               	movwf	___lwmod@divisor
 13084  0E51  3000               	movlw	0
 13085  0E52  00A9               	movwf	___lwmod@divisor+1
 13086  0E53  300A               	movlw	10
 13087  0E54  00A0               	movwf	___lwdiv@divisor
 13088  0E55  3000               	movlw	0
 13089  0E56  00A1               	movwf	___lwdiv@divisor+1
 13090  0E57  083B               	movf	TM1650_fastPrintNum@inputNumber+1,w
 13091  0E58  00A3               	movwf	___lwdiv@dividend+1
 13092  0E59  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 13093  0E5A  00A2               	movwf	___lwdiv@dividend
 13094  0E5B  3189  2133  318D   	fcall	___lwdiv
 13095  0E5E  0140               	movlb	0	; select bank0
 13096  0E5F  0821               	movf	?___lwdiv+1,w
 13097  0E60  00AB               	movwf	___lwmod@dividend+1
 13098  0E61  0820               	movf	?___lwdiv,w
 13099  0E62  00AA               	movwf	___lwmod@dividend
 13100  0E63  3188  206E  318D   	fcall	___lwmod
 13101  0E66  0140               	movlb	0	; select bank0
 13102  0E67  0828               	movf	?___lwmod,w
 13103  0E68  3E30               	addlw	48
 13104  0E69  00BC               	movwf	??_TM1650_fastPrintNum
 13105  0E6A  083C               	movf	??_TM1650_fastPrintNum,w
 13106  0E6B  00B5               	movwf	TM1650_setDigit@num
 13107  0E6C  01B6               	clrf	TM1650_setDigit@dp
 13108  0E6D  3002               	movlw	2
 13109  0E6E  3197  2738  318D   	fcall	_TM1650_setDigit
 13110                           
 13111                           ;tm1650.c: 94:         TM1650_setDigit(3, (inputNumber % 10) + 48, 0);
 13112  0E71  300A               	movlw	10
 13113  0E72  0140               	movlb	0	; select bank0
 13114  0E73  00A8               	movwf	___lwmod@divisor
 13115  0E74  3000               	movlw	0
 13116  0E75  00A9               	movwf	___lwmod@divisor+1
 13117  0E76  083B               	movf	TM1650_fastPrintNum@inputNumber+1,w
 13118  0E77  00AB               	movwf	___lwmod@dividend+1
 13119  0E78  083A               	movf	TM1650_fastPrintNum@inputNumber,w
 13120  0E79  00AA               	movwf	___lwmod@dividend
 13121  0E7A  3188  206E  318D   	fcall	___lwmod
 13122  0E7D  0140               	movlb	0	; select bank0
 13123  0E7E  0828               	movf	?___lwmod,w
 13124  0E7F                     L12:	
 13125  0E7F  3E30               	addlw	48
 13126  0E80  2EA0               	goto	L9
 13127  0E81                     l4995:	
 13128                           ;tm1650.c: 95:     } else {
 13129                           
 13130                           
 13131                           ;tm1650.c: 96:         TM1650_setDigit(0, 'E', 0);
 13132  0E81  3045               	movlw	69
 13133  0E82  00BC               	movwf	??_TM1650_fastPrintNum
 13134  0E83  083C               	movf	??_TM1650_fastPrintNum,w
 13135  0E84  00B5               	movwf	TM1650_setDigit@num
 13136  0E85  01B6               	clrf	TM1650_setDigit@dp
 13137  0E86  3000               	movlw	0
 13138  0E87  3197  2738  318D   	fcall	_TM1650_setDigit
 13139                           
 13140                           ;tm1650.c: 97:         TM1650_setDigit(1, 'r', 0);
 13141  0E8A  3072               	movlw	114
 13142  0E8B  0140               	movlb	0	; select bank0
 13143  0E8C  00BC               	movwf	??_TM1650_fastPrintNum
 13144  0E8D  083C               	movf	??_TM1650_fastPrintNum,w
 13145  0E8E  00B5               	movwf	TM1650_setDigit@num
 13146  0E8F  01B6               	clrf	TM1650_setDigit@dp
 13147  0E90  3001               	movlw	1
 13148  0E91  3197  2738  318D   	fcall	_TM1650_setDigit
 13149                           
 13150                           ;tm1650.c: 98:         TM1650_setDigit(2, 'r', 0);
 13151  0E94  3072               	movlw	114
 13152  0E95  0140               	movlb	0	; select bank0
 13153  0E96  00BC               	movwf	??_TM1650_fastPrintNum
 13154  0E97  083C               	movf	??_TM1650_fastPrintNum,w
 13155  0E98  00B5               	movwf	TM1650_setDigit@num
 13156  0E99  01B6               	clrf	TM1650_setDigit@dp
 13157  0E9A  3002               	movlw	2
 13158  0E9B  3197  2738  318D   	fcall	_TM1650_setDigit
 13159                           
 13160                           ;tm1650.c: 99:         TM1650_setDigit(3, ' ', 0);
 13161  0E9E  3020               	movlw	32
 13162  0E9F  0140               	movlb	0	; select bank0
 13163  0EA0                     L9:	
 13164  0EA0  00BC               	movwf	??_TM1650_fastPrintNum
 13165  0EA1  083C               	movf	??_TM1650_fastPrintNum,w
 13166  0EA2  00B5               	movwf	TM1650_setDigit@num
 13167  0EA3  01B6               	clrf	TM1650_setDigit@dp
 13168  0EA4  3003               	movlw	3
 13169  0EA5  3197  2738  318D   	fcall	_TM1650_setDigit
 13170                           
 13171                           ;tm1650.c: 101:     _delay((unsigned long)((10)*(32000000/4000.0)));
 13172  0EA8  3068               	movlw	104
 13173  0EA9  0140               	movlb	0	; select bank0
 13174  0EAA  00BC               	movwf	??_TM1650_fastPrintNum
 13175  0EAB  30E4               	movlw	228
 13176  0EAC                     u5607:	
 13177  0EAC  0B89               	decfsz	9,f
 13178  0EAD  2EAC               	goto	u5607
 13179  0EAE  0BBC               	decfsz	??_TM1650_fastPrintNum,f
 13180  0EAF  2EAC               	goto	u5607
 13181  0EB0  0000               	nop
 13182  0EB1  0008               	return
 13183  0EB2                     __end_of_TM1650_fastPrintNum:	
 13184                           
 13185                           	psect	text34
 13186  086E                     __ptext34:	
 13187 ;; *************** function ___lwmod *****************
 13188 ;; Defined at:
 13189 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
 13190 ;; Parameters:    Size  Location     Type
 13191 ;;  divisor         2    8[BANK0 ] unsigned int 
 13192 ;;  dividend        2   10[BANK0 ] unsigned int 
 13193 ;; Auto vars:     Size  Location     Type
 13194 ;;  counter         1   13[BANK0 ] unsigned char 
 13195 ;; Return value:  Size  Location     Type
 13196 ;;                  2    8[BANK0 ] unsigned int 
 13197 ;; Registers used:
 13198 ;;		wreg, status,2, status,0
 13199 ;; Tracked objects:
 13200 ;;		On entry : 0/0
 13201 ;;		On exit  : 0/0
 13202 ;;		Unchanged: 0/0
 13203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13204 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13205 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13206 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13207 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13208 ;;Total ram usage:        6 bytes
 13209 ;; Hardware stack levels used:    1
 13210 ;; Hardware stack levels required when called:    4
 13211 ;; This function calls:
 13212 ;;		Nothing
 13213 ;; This function is called by:
 13214 ;;		_TM1650_fastPrintNum
 13215 ;; This function uses a non-reentrant model
 13216 ;;
 13217                           
 13218                           
 13219                           ;psect for function ___lwmod
 13220  086E                     ___lwmod:	
 13221                           
 13222                           ;incstack = 0
 13223                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13224  086E  0140               	movlb	0	; select bank0
 13225  086F  0828               	movf	___lwmod@divisor,w
 13226  0870  0429               	iorwf	___lwmod@divisor+1,w
 13227  0871  1903               	btfsc	3,2
 13228  0872  2896               	goto	l4843
 13229  0873  01AD               	clrf	___lwmod@counter
 13230  0874  0AAD               	incf	___lwmod@counter,f
 13231  0875                     l4833:	
 13232  0875  1BA9               	btfsc	___lwmod@divisor+1,7
 13233  0876  2881               	goto	l4835
 13234  0877  3001               	movlw	1
 13235  0878                     u4545:	
 13236  0878  35A8               	lslf	___lwmod@divisor,f
 13237  0879  0DA9               	rlf	___lwmod@divisor+1,f
 13238  087A  0B89               	decfsz	9,f
 13239  087B  2878               	goto	u4545
 13240  087C  3001               	movlw	1
 13241  087D  00AC               	movwf	??___lwmod
 13242  087E  082C               	movf	??___lwmod,w
 13243  087F  07AD               	addwf	___lwmod@counter,f
 13244  0880  2875               	goto	l4833
 13245  0881                     l4835:	
 13246  0881  0829               	movf	___lwmod@divisor+1,w
 13247  0882  022B               	subwf	___lwmod@dividend+1,w
 13248  0883  1D03               	skipz
 13249  0884  2887               	goto	u4565
 13250  0885  0828               	movf	___lwmod@divisor,w
 13251  0886  022A               	subwf	___lwmod@dividend,w
 13252  0887                     u4565:	
 13253  0887  1C03               	skipc
 13254  0888  288D               	goto	l4839
 13255  0889  0828               	movf	___lwmod@divisor,w
 13256  088A  02AA               	subwf	___lwmod@dividend,f
 13257  088B  0829               	movf	___lwmod@divisor+1,w
 13258  088C  3BAB               	subwfb	___lwmod@dividend+1,f
 13259  088D                     l4839:	
 13260  088D  3001               	movlw	1
 13261  088E                     u4575:	
 13262  088E  36A9               	lsrf	___lwmod@divisor+1,f
 13263  088F  0CA8               	rrf	___lwmod@divisor,f
 13264  0890  0B89               	decfsz	9,f
 13265  0891  288E               	goto	u4575
 13266  0892  3001               	movlw	1
 13267  0893  02AD               	subwf	___lwmod@counter,f
 13268  0894  1D03               	btfss	3,2
 13269  0895  2881               	goto	l4835
 13270  0896                     l4843:	
 13271  0896  082B               	movf	___lwmod@dividend+1,w
 13272  0897  00A9               	movwf	?___lwmod+1
 13273  0898  082A               	movf	___lwmod@dividend,w
 13274  0899  00A8               	movwf	?___lwmod
 13275  089A  0008               	return
 13276  089B                     __end_of___lwmod:	
 13277                           
 13278                           	psect	text35
 13279  1738                     __ptext35:	
 13280 ;; *************** function _TM1650_setDigit *****************
 13281 ;; Defined at:
 13282 ;;		line 37 in file "tm1650.c"
 13283 ;; Parameters:    Size  Location     Type
 13284 ;;  digit           1    wreg     unsigned char 
 13285 ;;  num             1   21[BANK0 ] unsigned char 
 13286 ;;  dp              1   22[BANK0 ] _Bool 
 13287 ;; Auto vars:     Size  Location     Type
 13288 ;;  digit           1   24[BANK0 ] unsigned char 
 13289 ;;  character       1   25[BANK0 ] unsigned char 
 13290 ;; Return value:  Size  Location     Type
 13291 ;;                  1    wreg      void 
 13292 ;; Registers used:
 13293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13294 ;; Tracked objects:
 13295 ;;		On entry : 0/0
 13296 ;;		On exit  : 0/0
 13297 ;;		Unchanged: 0/0
 13298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13299 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13301 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13302 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13303 ;;Total ram usage:        5 bytes
 13304 ;; Hardware stack levels used:    1
 13305 ;; Hardware stack levels required when called:    8
 13306 ;; This function calls:
 13307 ;;		_writeData
 13308 ;; This function is called by:
 13309 ;;		_TM1650_fastPrintNum
 13310 ;;		_putch
 13311 ;; This function uses a non-reentrant model
 13312 ;;
 13313                           
 13314                           
 13315                           ;psect for function _TM1650_setDigit
 13316  1738                     _TM1650_setDigit:	
 13317                           
 13318                           ;incstack = 0
 13319                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13320                           ;TM1650_setDigit@digit stored from wreg
 13321  1738  0140               	movlb	0	; select bank0
 13322  1739  00B8               	movwf	TM1650_setDigit@digit
 13323                           
 13324                           ;tm1650.c: 38:     const uint8_t charTable[] = {;tm1650.c: 47:     uint8_t character = c
      +                          harTable[num - 32];
 13325  173A  0835               	movf	TM1650_setDigit@num,w
 13326  173B  3EE0               	addlw	low ((TM1650_setDigit@charTable+65504)| (0+32768))
 13327  173C  0084               	movwf	4
 13328  173D  308F               	movlw	high ((TM1650_setDigit@charTable+65504)| (0+32768))
 13329  173E  1803               	skipnc
 13330  173F  3E01               	addlw	1
 13331  1740  0085               	movwf	5
 13332  1741  0800               	movf	0,w	;code access
 13333  1742  00B7               	movwf	??_TM1650_setDigit
 13334  1743  0837               	movf	??_TM1650_setDigit,w
 13335  1744  00B9               	movwf	TM1650_setDigit@character
 13336                           
 13337                           ;tm1650.c: 49:     if(dp){
 13338  1745  0836               	movf	TM1650_setDigit@dp,w
 13339  1746  1903               	btfsc	3,2
 13340  1747  2F4D               	goto	l4797
 13341                           
 13342                           ;tm1650.c: 50:         character = 0b10000000 | character;
 13343  1748  0839               	movf	TM1650_setDigit@character,w
 13344  1749  3880               	iorlw	128
 13345  174A  00B7               	movwf	??_TM1650_setDigit
 13346  174B  0837               	movf	??_TM1650_setDigit,w
 13347  174C  00B9               	movwf	TM1650_setDigit@character
 13348  174D                     l4797:	
 13349                           
 13350                           ;tm1650.c: 53:     writeData(0x34 + digit, character);
 13351  174D  0839               	movf	TM1650_setDigit@character,w
 13352  174E  00B7               	movwf	??_TM1650_setDigit
 13353  174F  0837               	movf	??_TM1650_setDigit,w
 13354  1750  00AE               	movwf	writeData@data
 13355  1751  0838               	movf	TM1650_setDigit@digit,w
 13356  1752  3E34               	addlw	52
 13357  1753  3197  2796         	fcall	_writeData
 13358  1755  0008               	return
 13359  1756                     __end_of_TM1650_setDigit:	
 13360                           
 13361                           	psect	text36
 13362  1796                     __ptext36:	
 13363 ;; *************** function _writeData *****************
 13364 ;; Defined at:
 13365 ;;		line 12 in file "tm1650.c"
 13366 ;; Parameters:    Size  Location     Type
 13367 ;;  address         1    wreg     unsigned char 
 13368 ;;  data            1   14[BANK0 ] unsigned char 
 13369 ;; Auto vars:     Size  Location     Type
 13370 ;;  address         1   18[BANK0 ] unsigned char 
 13371 ;;  status          1   20[BANK0 ] enum E10866
 13372 ;;  dataToSend      1   19[BANK0 ] unsigned char 
 13373 ;; Return value:  Size  Location     Type
 13374 ;;                  1    wreg      void 
 13375 ;; Registers used:
 13376 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13377 ;; Tracked objects:
 13378 ;;		On entry : 0/0
 13379 ;;		On exit  : 0/0
 13380 ;;		Unchanged: 0/0
 13381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13382 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13383 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13384 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13385 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13386 ;;Total ram usage:        7 bytes
 13387 ;; Hardware stack levels used:    1
 13388 ;; Hardware stack levels required when called:    7
 13389 ;; This function calls:
 13390 ;;		_I2C1_MasterWrite
 13391 ;; This function is called by:
 13392 ;;		_TM1650_setDigit
 13393 ;;		_TM1650_enable
 13394 ;;		_putch
 13395 ;; This function uses a non-reentrant model
 13396 ;;
 13397                           
 13398                           
 13399                           ;psect for function _writeData
 13400  1796                     _writeData:	
 13401                           
 13402                           ;incstack = 0
 13403                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13404                           ;writeData@address stored from wreg
 13405  1796  0140               	movlb	0	; select bank0
 13406  1797  00B2               	movwf	writeData@address
 13407                           
 13408                           ;tm1650.c: 13:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 13409  1798  3002               	movlw	2
 13410  1799  00AF               	movwf	??_writeData
 13411  179A  082F               	movf	??_writeData,w
 13412  179B  00B4               	movwf	writeData@status
 13413                           
 13414                           ;tm1650.c: 14:     uint8_t dataToSend = data;
 13415  179C  082E               	movf	writeData@data,w
 13416  179D  00AF               	movwf	??_writeData
 13417  179E  082F               	movf	??_writeData,w
 13418  179F  00B3               	movwf	writeData@dataToSend
 13419                           
 13420                           ;tm1650.c: 15:     I2C1_MasterWrite(&dataToSend, 1, address, &status);
 13421  17A0  01A7               	clrf	I2C1_MasterWrite@length
 13422  17A1  0AA7               	incf	I2C1_MasterWrite@length,f
 13423  17A2  0832               	movf	writeData@address,w
 13424  17A3  00AF               	movwf	??_writeData
 13425  17A4  01B0               	clrf	??_writeData+1
 13426  17A5  082F               	movf	??_writeData,w
 13427  17A6  00A8               	movwf	I2C1_MasterWrite@address
 13428  17A7  0830               	movf	??_writeData+1,w
 13429  17A8  00A9               	movwf	I2C1_MasterWrite@address+1
 13430  17A9  3034               	movlw	(low (writeData@status| 0))& (0+255)
 13431  17AA  00B1               	movwf	??_writeData+2
 13432  17AB  0831               	movf	??_writeData+2,w
 13433  17AC  00AA               	movwf	I2C1_MasterWrite@pflag
 13434  17AD  3033               	movlw	(low (writeData@dataToSend| 0))& (0+255)
 13435  17AE  3188  2044  3197   	fcall	_I2C1_MasterWrite
 13436  17B1                     l4775:	
 13437                           ;tm1650.c: 16:     while( status == I2C1_MESSAGE_PENDING );
 13438                           
 13439  17B1  3002               	movlw	2
 13440  17B2  0140               	movlb	0	; select bank0
 13441  17B3  0634               	xorwf	writeData@status,w
 13442  17B4  1D03               	btfss	3,2
 13443  17B5  0008               	return
 13444  17B6  2FB1               	goto	l4775
 13445  17B7                     __end_of_writeData:	
 13446                           
 13447                           	psect	text37
 13448  0844                     __ptext37:	
 13449 ;; *************** function _I2C1_MasterWrite *****************
 13450 ;; Defined at:
 13451 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 13452 ;; Parameters:    Size  Location     Type
 13453 ;;  pdata           1    wreg     PTR unsigned char 
 13454 ;;		 -> writeData@dataToSend(1), 
 13455 ;;  length          1    7[BANK0 ] unsigned char 
 13456 ;;  address         2    8[BANK0 ] unsigned short 
 13457 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 13458 ;;		 -> writeData@status(1), 
 13459 ;; Auto vars:     Size  Location     Type
 13460 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 13461 ;;		 -> writeData@dataToSend(1), 
 13462 ;; Return value:  Size  Location     Type
 13463 ;;                  1    wreg      void 
 13464 ;; Registers used:
 13465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13466 ;; Tracked objects:
 13467 ;;		On entry : 0/0
 13468 ;;		On exit  : 0/0
 13469 ;;		Unchanged: 0/0
 13470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13471 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13473 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13474 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13475 ;;Total ram usage:        7 bytes
 13476 ;; Hardware stack levels used:    1
 13477 ;; Hardware stack levels required when called:    6
 13478 ;; This function calls:
 13479 ;;		_I2C1_MasterTRBInsert
 13480 ;;		_I2C1_MasterWriteTRBBuild
 13481 ;; This function is called by:
 13482 ;;		_writeData
 13483 ;; This function uses a non-reentrant model
 13484 ;;
 13485                           
 13486                           
 13487                           ;psect for function _I2C1_MasterWrite
 13488  0844                     _I2C1_MasterWrite:	
 13489                           
 13490                           ;incstack = 0
 13491                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13492                           ;I2C1_MasterWrite@pdata stored from wreg
 13493  0844  0140               	movlb	0	; select bank0
 13494  0845  00AD               	movwf	I2C1_MasterWrite@pdata
 13495                           
 13496                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 13497  0846  0141               	movlb	1	; select bank1
 13498  0847  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 13499  0848  2867               	goto	l4769
 13500                           
 13501                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 13502  0849  0140               	movlb	0	; select bank0
 13503  084A  082D               	movf	I2C1_MasterWrite@pdata,w
 13504  084B  00AB               	movwf	??_I2C1_MasterWrite
 13505  084C  082B               	movf	??_I2C1_MasterWrite,w
 13506  084D  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 13507  084E  0827               	movf	I2C1_MasterWrite@length,w
 13508  084F  00AC               	movwf	??_I2C1_MasterWrite+1
 13509  0850  082C               	movf	??_I2C1_MasterWrite+1,w
 13510  0851  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 13511  0852  0829               	movf	I2C1_MasterWrite@address+1,w
 13512  0853  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 13513  0854  0828               	movf	I2C1_MasterWrite@address,w
 13514  0855  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 13515  0856  3044               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 13516  0857  3197  27B7  3188   	fcall	_I2C1_MasterWriteTRBBuild
 13517                           
 13518                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 13519  085A  3044               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 13520  085B  0140               	movlb	0	; select bank0
 13521  085C  00AB               	movwf	??_I2C1_MasterWrite
 13522  085D  082B               	movf	??_I2C1_MasterWrite,w
 13523  085E  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 13524  085F  082A               	movf	I2C1_MasterWrite@pflag,w
 13525  0860  00AC               	movwf	??_I2C1_MasterWrite+1
 13526  0861  082C               	movf	??_I2C1_MasterWrite+1,w
 13527  0862  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 13528  0863  3001               	movlw	1
 13529  0864  318A  2286         	fcall	_I2C1_MasterTRBInsert
 13530                           
 13531                           ;mcc_generated_files/i2c1.c: 613:     }
 13532  0866  0008               	return
 13533  0867                     l4769:	
 13534                           
 13535                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 13536  0867  0140               	movlb	0	; select bank0
 13537  0868  082A               	movf	I2C1_MasterWrite@pflag,w
 13538  0869  0086               	movwf	6
 13539  086A  0187               	clrf	7
 13540  086B  0181               	clrf	1
 13541  086C  0A81               	incf	1,f
 13542  086D  0008               	return
 13543  086E                     __end_of_I2C1_MasterWrite:	
 13544                           
 13545                           	psect	text38
 13546  17B7                     __ptext38:	
 13547 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 13548 ;; Defined at:
 13549 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 13550 ;; Parameters:    Size  Location     Type
 13551 ;;  ptrb            1    wreg     PTR struct .
 13552 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 13553 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 13554 ;;		 -> writeData@dataToSend(1), 
 13555 ;;  length          1    1[BANK0 ] unsigned char 
 13556 ;;  address         2    2[BANK0 ] unsigned short 
 13557 ;; Auto vars:     Size  Location     Type
 13558 ;;  ptrb            1    6[BANK0 ] PTR struct .
 13559 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 13560 ;; Return value:  Size  Location     Type
 13561 ;;                  1    wreg      void 
 13562 ;; Registers used:
 13563 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13564 ;; Tracked objects:
 13565 ;;		On entry : 0/0
 13566 ;;		On exit  : 0/0
 13567 ;;		Unchanged: 0/0
 13568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13569 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13570 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13571 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13572 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13573 ;;Total ram usage:        7 bytes
 13574 ;; Hardware stack levels used:    1
 13575 ;; Hardware stack levels required when called:    4
 13576 ;; This function calls:
 13577 ;;		Nothing
 13578 ;; This function is called by:
 13579 ;;		_I2C1_MasterWrite
 13580 ;; This function uses a non-reentrant model
 13581 ;;
 13582                           
 13583                           
 13584                           ;psect for function _I2C1_MasterWriteTRBBuild
 13585  17B7                     _I2C1_MasterWriteTRBBuild:	
 13586                           
 13587                           ;incstack = 0
 13588                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 13589                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 13590  17B7  0140               	movlb	0	; select bank0
 13591  17B8  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 13592                           
 13593                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 13594  17B9  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 13595  17BA  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 13596  17BB  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 13597  17BC  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 13598  17BD  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 13599  17BE  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 13600  17BF  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 13601  17C0  0086               	movwf	6
 13602  17C1  3001               	movlw	1	; select bank2/3
 13603  17C2  0087               	movwf	7
 13604  17C3  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 13605  17C4  3FC0               	movwi [0]fsr1
 13606  17C5  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 13607  17C6  3FC1               	movwi [1]fsr1
 13608                           
 13609                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 13610  17C7  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 13611  17C8  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 13612  17C9  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 13613  17CA  3E02               	addlw	2
 13614  17CB  0086               	movwf	6
 13615  17CC  3001               	movlw	1	; select bank2/3
 13616  17CD  0087               	movwf	7
 13617  17CE  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 13618  17CF  0081               	movwf	1
 13619                           
 13620                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 13621  17D0  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 13622  17D1  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 13623  17D2  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 13624  17D3  3E03               	addlw	3
 13625  17D4  0086               	movwf	6
 13626  17D5  3001               	movlw	1	; select bank2/3
 13627  17D6  0087               	movwf	7
 13628  17D7  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 13629  17D8  0081               	movwf	1
 13630  17D9  0008               	return
 13631  17DA                     __end_of_I2C1_MasterWriteTRBBuild:	
 13632                           
 13633                           	psect	text39
 13634  0A86                     __ptext39:	
 13635 ;; *************** function _I2C1_MasterTRBInsert *****************
 13636 ;; Defined at:
 13637 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 13638 ;; Parameters:    Size  Location     Type
 13639 ;;  count           1    wreg     unsigned char 
 13640 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 13641 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 13642 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 13643 ;;		 -> writeData@status(1), 
 13644 ;; Auto vars:     Size  Location     Type
 13645 ;;  count           1    3[BANK0 ] unsigned char 
 13646 ;; Return value:  Size  Location     Type
 13647 ;;                  1    wreg      void 
 13648 ;; Registers used:
 13649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13650 ;; Tracked objects:
 13651 ;;		On entry : 0/0
 13652 ;;		On exit  : 0/0
 13653 ;;		Unchanged: 0/0
 13654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13655 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13657 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13658 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13659 ;;Total ram usage:        4 bytes
 13660 ;; Hardware stack levels used:    1
 13661 ;; Hardware stack levels required when called:    5
 13662 ;; This function calls:
 13663 ;;		_I2C1_WaitForLastPacketToComplete
 13664 ;; This function is called by:
 13665 ;;		_I2C1_MasterWrite
 13666 ;;		_I2C1_MasterRead
 13667 ;; This function uses a non-reentrant model
 13668 ;;
 13669                           
 13670                           
 13671                           ;psect for function _I2C1_MasterTRBInsert
 13672  0A86                     _I2C1_MasterTRBInsert:	
 13673                           
 13674                           ;incstack = 0
 13675                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13676                           ;I2C1_MasterTRBInsert@count stored from wreg
 13677  0A86  0140               	movlb	0	; select bank0
 13678  0A87  00A3               	movwf	I2C1_MasterTRBInsert@count
 13679                           
 13680                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 13681  0A88  0141               	movlb	1	; select bank1
 13682  0A89  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 13683  0A8A  2AC5               	goto	l4757
 13684                           
 13685                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 13686  0A8B  3002               	movlw	2
 13687  0A8C  0140               	movlb	0	; select bank0
 13688  0A8D  00A2               	movwf	??_I2C1_MasterTRBInsert
 13689  0A8E  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 13690  0A8F  0086               	movwf	6
 13691  0A90  0187               	clrf	7
 13692  0A91  0822               	movf	??_I2C1_MasterTRBInsert,w
 13693  0A92  0081               	movwf	1
 13694                           
 13695                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 13696  0A93  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 13697  0A94  00A2               	movwf	??_I2C1_MasterTRBInsert
 13698  0A95  0141               	movlb	1	; select bank1
 13699  0A96  0A20               	incf	_i2c1_object^(0+128),w
 13700  0A97  0086               	movwf	6
 13701  0A98  0187               	clrf	7
 13702  0A99  0140               	movlb	0	; select bank0
 13703  0A9A  0822               	movf	??_I2C1_MasterTRBInsert,w
 13704  0A9B  0081               	movwf	1
 13705                           
 13706                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 13707  0A9C  0823               	movf	I2C1_MasterTRBInsert@count,w
 13708  0A9D  00A2               	movwf	??_I2C1_MasterTRBInsert
 13709  0A9E  0141               	movlb	1	; select bank1
 13710  0A9F  0820               	movf	_i2c1_object^(0+128),w
 13711  0AA0  0086               	movwf	6
 13712  0AA1  0187               	clrf	7
 13713  0AA2  0140               	movlb	0	; select bank0
 13714  0AA3  0822               	movf	??_I2C1_MasterTRBInsert,w
 13715  0AA4  0081               	movwf	1
 13716                           
 13717                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 13718  0AA5  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 13719  0AA6  00A2               	movwf	??_I2C1_MasterTRBInsert
 13720  0AA7  0141               	movlb	1	; select bank1
 13721  0AA8  0820               	movf	_i2c1_object^(0+128),w
 13722  0AA9  3E02               	addlw	2
 13723  0AAA  0086               	movwf	6
 13724  0AAB  0187               	clrf	7
 13725  0AAC  0140               	movlb	0	; select bank0
 13726  0AAD  0822               	movf	??_I2C1_MasterTRBInsert,w
 13727  0AAE  0081               	movwf	1
 13728                           
 13729                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 13730  0AAF  3003               	movlw	3
 13731  0AB0  00A2               	movwf	??_I2C1_MasterTRBInsert
 13732  0AB1  0822               	movf	??_I2C1_MasterTRBInsert,w
 13733  0AB2  0141               	movlb	1	; select bank1
 13734  0AB3  07A0               	addwf	_i2c1_object^(0+128),f
 13735                           
 13736                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 13737  0AB4  0820               	movf	_i2c1_object^(0+128),w
 13738  0AB5  3AD1               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 13739  0AB6  1D03               	skipz
 13740  0AB7  2ABE               	goto	l4753
 13741                           
 13742                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 13743  0AB8  30CE               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 13744  0AB9  0140               	movlb	0	; select bank0
 13745  0ABA  00A2               	movwf	??_I2C1_MasterTRBInsert
 13746  0ABB  0822               	movf	??_I2C1_MasterTRBInsert,w
 13747  0ABC  0141               	movlb	1	; select bank1
 13748  0ABD  00A0               	movwf	_i2c1_object^(0+128)
 13749  0ABE                     l4753:	
 13750                           
 13751                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 13752  0ABE  10A2               	bcf	(_i2c1_object^(0+128)+2),1
 13753                           
 13754                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 13755  0ABF  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 13756  0AC0  0620               	xorwf	_i2c1_object^(0+128),w
 13757  0AC1  1D03               	skipz
 13758  0AC2  2ACB               	goto	l4759
 13759                           
 13760                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 13761  0AC3  1422               	bsf	(_i2c1_object^(0+128)+2),0
 13762  0AC4  2ACB               	goto	l4759
 13763  0AC5                     l4757:	
 13764                           
 13765                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 13766  0AC5  0140               	movlb	0	; select bank0
 13767  0AC6  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 13768  0AC7  0086               	movwf	6
 13769  0AC8  0187               	clrf	7
 13770  0AC9  0181               	clrf	1
 13771  0ACA  0A81               	incf	1,f
 13772  0ACB                     l4759:	
 13773                           
 13774                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 13775  0ACB  0140               	movlb	0	; select bank0
 13776  0ACC  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 13777  0ACD  0086               	movwf	6
 13778  0ACE  0187               	clrf	7
 13779  0ACF  3002               	movlw	2
 13780  0AD0  0601               	xorwf	1,w
 13781  0AD1  1D03               	btfss	3,2
 13782  0AD2  0008               	return
 13783                           
 13784                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 13785  0AD3  3195  254F         	fcall	_I2C1_WaitForLastPacketToComplete
 13786                           
 13787                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 13788  0AD5  014E               	movlb	14	; select bank14
 13789  0AD6  140F               	bsf	15,0	;volatile
 13790  0AD7  0008               	return
 13791  0AD8                     __end_of_I2C1_MasterTRBInsert:	
 13792                           
 13793                           	psect	text40
 13794  154F                     __ptext40:	
 13795 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 13796 ;; Defined at:
 13797 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 13798 ;; Parameters:    Size  Location     Type
 13799 ;;		None
 13800 ;; Auto vars:     Size  Location     Type
 13801 ;;		None
 13802 ;; Return value:  Size  Location     Type
 13803 ;;                  1    wreg      void 
 13804 ;; Registers used:
 13805 ;;		wreg, status,2, status,0
 13806 ;; Tracked objects:
 13807 ;;		On entry : 0/0
 13808 ;;		On exit  : 0/0
 13809 ;;		Unchanged: 0/0
 13810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13815 ;;Total ram usage:        0 bytes
 13816 ;; Hardware stack levels used:    1
 13817 ;; Hardware stack levels required when called:    4
 13818 ;; This function calls:
 13819 ;;		Nothing
 13820 ;; This function is called by:
 13821 ;;		_I2C1_MasterTRBInsert
 13822 ;; This function uses a non-reentrant model
 13823 ;;
 13824                           
 13825                           
 13826                           ;psect for function _I2C1_WaitForLastPacketToComplete
 13827  154F                     _I2C1_WaitForLastPacketToComplete:	
 13828  154F                     l4739:	
 13829                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 13830                           
 13831                           ;incstack = 0
 13832                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 13833                           
 13834                           
 13835                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 13836  154F  0141               	movlb	1	; select bank1
 13837  1550  084B               	movf	_i2c1_state^(0+128),w
 13838  1551  1903               	btfsc	3,2
 13839  1552  0008               	return
 13840  1553  2D4F               	goto	l4739
 13841  1554                     __end_of_I2C1_WaitForLastPacketToComplete:	
 13842                           
 13843                           	psect	text41
 13844  1566                     __ptext41:	
 13845 ;; *************** function _CLOCK_init *****************
 13846 ;; Defined at:
 13847 ;;		line 20 in file "clock.c"
 13848 ;; Parameters:    Size  Location     Type
 13849 ;;		None
 13850 ;; Auto vars:     Size  Location     Type
 13851 ;;		None
 13852 ;; Return value:  Size  Location     Type
 13853 ;;                  1    wreg      void 
 13854 ;; Registers used:
 13855 ;;		wreg, status,2, status,0, pclath, cstack
 13856 ;; Tracked objects:
 13857 ;;		On entry : 0/0
 13858 ;;		On exit  : 0/0
 13859 ;;		Unchanged: 0/0
 13860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13865 ;;Total ram usage:        0 bytes
 13866 ;; Hardware stack levels used:    1
 13867 ;; Hardware stack levels required when called:    5
 13868 ;; This function calls:
 13869 ;;		_TMR0_SetInterruptHandler
 13870 ;; This function is called by:
 13871 ;;		_main
 13872 ;; This function uses a non-reentrant model
 13873 ;;
 13874                           
 13875                           
 13876                           ;psect for function _CLOCK_init
 13877  1566                     _CLOCK_init:	
 13878                           
 13879                           ;clock.c: 22:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 13880                           
 13881                           ;incstack = 0
 13882                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 13883  1566  3054               	movlw	low _CLOCK_timerCallback
 13884  1567  0140               	movlb	0	; select bank0
 13885  1568  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 13886  1569  3015               	movlw	high _CLOCK_timerCallback
 13887  156A  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 13888  156B  3195  259B         	fcall	_TMR0_SetInterruptHandler
 13889  156D  0008               	return
 13890  156E                     __end_of_CLOCK_init:	
 13891                           
 13892                           	psect	text42
 13893  159B                     __ptext42:	
 13894 ;; *************** function _TMR0_SetInterruptHandler *****************
 13895 ;; Defined at:
 13896 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 13897 ;; Parameters:    Size  Location     Type
 13898 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13899 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 13900 ;; Auto vars:     Size  Location     Type
 13901 ;;		None
 13902 ;; Return value:  Size  Location     Type
 13903 ;;                  1    wreg      void 
 13904 ;; Registers used:
 13905 ;;		wreg
 13906 ;; Tracked objects:
 13907 ;;		On entry : 0/0
 13908 ;;		On exit  : 0/0
 13909 ;;		Unchanged: 0/0
 13910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13911 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13914 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13915 ;;Total ram usage:        2 bytes
 13916 ;; Hardware stack levels used:    1
 13917 ;; Hardware stack levels required when called:    4
 13918 ;; This function calls:
 13919 ;;		Nothing
 13920 ;; This function is called by:
 13921 ;;		_TMR0_Initialize
 13922 ;;		_CLOCK_init
 13923 ;; This function uses a non-reentrant model
 13924 ;;
 13925                           
 13926                           
 13927                           ;psect for function _TMR0_SetInterruptHandler
 13928  159B                     _TMR0_SetInterruptHandler:	
 13929                           
 13930                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 13931                           
 13932                           ;incstack = 0
 13933                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 13934  159B  0140               	movlb	0	; select bank0
 13935  159C  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 13936  159D  0142               	movlb	2	; select bank2
 13937  159E  00C9               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 13938  159F  0140               	movlb	0	; select bank0
 13939  15A0  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 13940  15A1  0142               	movlb	2	; select bank2
 13941  15A2  00C8               	movwf	_TMR0_InterruptHandler^(0+256)
 13942  15A3  0008               	return
 13943  15A4                     __end_of_TMR0_SetInterruptHandler:	
 13944                           
 13945                           	psect	text43
 13946  0702                     __ptext43:	
 13947 ;; *************** function _BUTTONS_task *****************
 13948 ;; Defined at:
 13949 ;;		line 17 in file "buttons.c"
 13950 ;; Parameters:    Size  Location     Type
 13951 ;;		None
 13952 ;; Auto vars:     Size  Location     Type
 13953 ;;  btn             1    8[BANK0 ] PTR struct .
 13954 ;;		 -> buttons(32), 
 13955 ;;  i               1    5[BANK0 ] unsigned char 
 13956 ;;  time            2    6[BANK0 ] unsigned short 
 13957 ;; Return value:  Size  Location     Type
 13958 ;;                  1    wreg      void 
 13959 ;; Registers used:
 13960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13961 ;; Tracked objects:
 13962 ;;		On entry : 0/0
 13963 ;;		On exit  : 0/0
 13964 ;;		Unchanged: 0/0
 13965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13967 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13968 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13969 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13970 ;;Total ram usage:        7 bytes
 13971 ;; Hardware stack levels used:    1
 13972 ;; Hardware stack levels required when called:    5
 13973 ;; This function calls:
 13974 ;;		_CLOCK_getTime
 13975 ;; This function is called by:
 13976 ;;		_main
 13977 ;; This function uses a non-reentrant model
 13978 ;;
 13979                           
 13980                           
 13981                           ;psect for function _BUTTONS_task
 13982  0702                     _BUTTONS_task:	
 13983                           
 13984                           ;buttons.c: 18:     time_t time = CLOCK_getTime();
 13985                           
 13986                           ;incstack = 0
 13987                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13988  0702  3195  2592  3187   	fcall	_CLOCK_getTime
 13989  0705  0140               	movlb	0	; select bank0
 13990  0706  0821               	movf	?_CLOCK_getTime+1,w
 13991  0707  00A7               	movwf	BUTTONS_task@time+1
 13992  0708  0820               	movf	?_CLOCK_getTime,w
 13993  0709  00A6               	movwf	BUTTONS_task@time
 13994                           
 13995                           ;buttons.c: 21:     if (time - lastTime < 10)
 13996  070A  0141               	movlb	1	; select bank1
 13997  070B  082D               	movf	buttons@lastTime^(0+128),w
 13998  070C  0140               	movlb	0	; select bank0
 13999  070D  0226               	subwf	BUTTONS_task@time,w
 14000  070E  00A2               	movwf	??_BUTTONS_task
 14001  070F  0141               	movlb	1	; select bank1
 14002  0710  082E               	movf	(buttons@lastTime+1)^(0+128),w
 14003  0711  0140               	movlb	0	; select bank0
 14004  0712  3B27               	subwfb	BUTTONS_task@time+1,w
 14005  0713  00A3               	movwf	??_BUTTONS_task+1
 14006  0714  3000               	movlw	0
 14007  0715  0223               	subwf	??_BUTTONS_task+1,w
 14008  0716  300A               	movlw	10
 14009  0717  1903               	skipnz
 14010  0718  0222               	subwf	??_BUTTONS_task,w
 14011  0719  1C03               	btfss	3,0
 14012  071A  0008               	return
 14013                           
 14014                           ;buttons.c: 24:     lastTime = time;
 14015  071B  0827               	movf	BUTTONS_task@time+1,w
 14016  071C  0141               	movlb	1	; select bank1
 14017  071D  00AE               	movwf	(buttons@lastTime+1)^(0+128)
 14018  071E  0140               	movlb	0	; select bank0
 14019  071F  0826               	movf	BUTTONS_task@time,w
 14020  0720  0141               	movlb	1	; select bank1
 14021  0721  00AD               	movwf	buttons@lastTime^(0+128)
 14022                           
 14023                           ;buttons.c: 27:     for (uint8_t i = 0; i < 4; i++) {
 14024  0722  0140               	movlb	0	; select bank0
 14025  0723  01A5               	clrf	BUTTONS_task@i
 14026  0724                     l5329:	
 14027                           
 14028                           ;buttons.c: 28:         button_t* btn = buttons + i;
 14029  0724  0825               	movf	BUTTONS_task@i,w
 14030  0725  00A2               	movwf	??_BUTTONS_task
 14031  0726  3002               	movlw	2
 14032  0727                     u5055:	
 14033  0727  35A2               	lslf	??_BUTTONS_task,f
 14034  0728  3EFF               	addlw	-1
 14035  0729  1D03               	skipz
 14036  072A  2F27               	goto	u5055
 14037  072B  3522               	lslf	??_BUTTONS_task,w
 14038  072C  3EA0               	addlw	(low (_buttons| (0+256)))& (0+255)
 14039  072D  00A3               	movwf	??_BUTTONS_task+1
 14040  072E  0823               	movf	??_BUTTONS_task+1,w
 14041  072F  00A8               	movwf	BUTTONS_task@btn
 14042                           
 14043                           ;buttons.c: 31:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 14044  0730  0828               	movf	BUTTONS_task@btn,w
 14045  0731  0086               	movwf	6
 14046  0732  3001               	movlw	1	; select bank2/3
 14047  0733  0087               	movwf	7
 14048  0734  3F40               	moviw [0]fsr1
 14049  0735  00A2               	movwf	??_BUTTONS_task
 14050  0736  3F41               	moviw [1]fsr1
 14051  0737  00A3               	movwf	??_BUTTONS_task+1
 14052  0738  0822               	movf	??_BUTTONS_task,w
 14053  0739  0086               	movwf	6
 14054  073A  0823               	movf	??_BUTTONS_task+1,w
 14055  073B  0087               	movwf	7
 14056  073C  3001               	movlw	1
 14057  073D  00A4               	movwf	??_BUTTONS_task+2
 14058  073E  0828               	movf	BUTTONS_task@btn,w
 14059  073F  3E02               	addlw	2
 14060  0740  0084               	movwf	4
 14061  0741  3001               	movlw	1	; select bank2/3
 14062  0742  0085               	movwf	5
 14063  0743  0A00               	incf	0,w
 14064  0744  2F46               	goto	u5064
 14065  0745                     u5065:	
 14066  0745  35A4               	lslf	??_BUTTONS_task+2,f
 14067  0746                     u5064:	
 14068  0746  0B89               	decfsz	9,f
 14069  0747  2F45               	goto	u5065
 14070  0748  0824               	movf	??_BUTTONS_task+2,w
 14071  0749  0501               	andwf	1,w
 14072  074A  1D03               	btfss	3,2
 14073  074B  2F54               	goto	l5335
 14074                           
 14075                           ;buttons.c: 32:             btn->state = STATE_PRESSED;
 14076  074C  0828               	movf	BUTTONS_task@btn,w
 14077  074D  3E03               	addlw	3
 14078  074E  0086               	movwf	6
 14079  074F  3001               	movlw	1	; select bank2/3
 14080  0750  0087               	movwf	7
 14081  0751  0181               	clrf	1
 14082  0752  0A81               	incf	1,f
 14083                           
 14084                           ;buttons.c: 33:         } else {
 14085  0753  2F5A               	goto	l966
 14086  0754                     l5335:	
 14087                           
 14088                           ;buttons.c: 34:             btn->state = STATE_UNPRESSED;
 14089  0754  0828               	movf	BUTTONS_task@btn,w
 14090  0755  3E03               	addlw	3
 14091  0756  0086               	movwf	6
 14092  0757  3001               	movlw	1	; select bank2/3
 14093  0758  0087               	movwf	7
 14094  0759  0181               	clrf	1
 14095  075A                     l966:	
 14096                           ;buttons.c: 35:         }
 14097                           
 14098                           
 14099                           ;buttons.c: 37:         if(btn->state == STATE_PRESSED && btn->lastState == STATE_UNPRES
      +                          SED){
 14100  075A  0828               	movf	BUTTONS_task@btn,w
 14101  075B  3E03               	addlw	3
 14102  075C  0086               	movwf	6
 14103  075D  3001               	movlw	1	; select bank2/3
 14104  075E  0087               	movwf	7
 14105  075F  0301               	decf	1,w
 14106  0760  1D03               	btfss	3,2
 14107  0761  2F73               	goto	l967
 14108  0762  0828               	movf	BUTTONS_task@btn,w
 14109  0763  3E04               	addlw	4
 14110  0764  0086               	movwf	6
 14111  0765  3001               	movlw	1	; select bank2/3
 14112  0766  0087               	movwf	7
 14113  0767  0801               	movf	1,w
 14114  0768  1D03               	btfss	3,2
 14115  0769  2F73               	goto	l967
 14116                           
 14117                           ;buttons.c: 38:             btn->timeHeld = time;
 14118  076A  0828               	movf	BUTTONS_task@btn,w
 14119  076B  3E06               	addlw	6
 14120  076C  0086               	movwf	6
 14121  076D  3001               	movlw	1	; select bank2/3
 14122  076E  0087               	movwf	7
 14123  076F  0826               	movf	BUTTONS_task@time,w
 14124  0770  3FC0               	movwi [0]fsr1
 14125  0771  0827               	movf	BUTTONS_task@time+1,w
 14126  0772  3FC1               	movwi [1]fsr1
 14127  0773                     l967:	
 14128                           ;buttons.c: 39:         }
 14129                           
 14130                           
 14131                           ;buttons.c: 41:         if (
 14132  0773  0828               	movf	BUTTONS_task@btn,w
 14133  0774  3E03               	addlw	3
 14134  0775  0086               	movwf	6
 14135  0776  3001               	movlw	1	; select bank2/3
 14136  0777  0087               	movwf	7
 14137  0778  0801               	movf	1,w
 14138  0779  1D03               	btfss	3,2
 14139  077A  2F9C               	goto	l968
 14140  077B  0828               	movf	BUTTONS_task@btn,w
 14141  077C  3E04               	addlw	4
 14142  077D  0086               	movwf	6
 14143  077E  3001               	movlw	1	; select bank2/3
 14144  077F  0087               	movwf	7
 14145  0780  0301               	decf	1,w
 14146  0781  1D03               	btfss	3,2
 14147  0782  2F9C               	goto	l968
 14148  0783  0828               	movf	BUTTONS_task@btn,w
 14149  0784  3E06               	addlw	6
 14150  0785  0086               	movwf	6
 14151  0786  3001               	movlw	1	; select bank2/3
 14152  0787  0087               	movwf	7
 14153  0788  3F40               	moviw [0]fsr1
 14154  0789  0226               	subwf	BUTTONS_task@time,w
 14155  078A  00A2               	movwf	??_BUTTONS_task
 14156  078B  3F41               	moviw [1]fsr1
 14157  078C  3B27               	subwfb	BUTTONS_task@time+1,w
 14158  078D  00A3               	movwf	??_BUTTONS_task+1
 14159  078E  3003               	movlw	3
 14160  078F  0223               	subwf	??_BUTTONS_task+1,w
 14161  0790  30E9               	movlw	233
 14162  0791  1903               	skipnz
 14163  0792  0222               	subwf	??_BUTTONS_task,w
 14164  0793  1803               	skipnc
 14165  0794  2F9C               	goto	l968
 14166                           
 14167                           ;buttons.c: 44:             && (time - btn->timeHeld) <= 1000) {;buttons.c: 46:         
      +                              btn->event = EVENT_PRESSED;
 14168  0795  0828               	movf	BUTTONS_task@btn,w
 14169  0796  3E05               	addlw	5
 14170  0797  0086               	movwf	6
 14171  0798  3001               	movlw	1	; select bank2/3
 14172  0799  0087               	movwf	7
 14173  079A  0181               	clrf	1
 14174  079B  0A81               	incf	1,f
 14175  079C                     l968:	
 14176                           ;buttons.c: 48:         }
 14177                           
 14178                           
 14179                           ;buttons.c: 49:         if (btn->state == STATE_UNPRESSED
 14180  079C  0828               	movf	BUTTONS_task@btn,w
 14181  079D  3E03               	addlw	3
 14182  079E  0086               	movwf	6
 14183  079F  3001               	movlw	1	; select bank2/3
 14184  07A0  0087               	movwf	7
 14185  07A1  0801               	movf	1,w
 14186  07A2  1D03               	btfss	3,2
 14187  07A3  2FC4               	goto	l969
 14188  07A4  0828               	movf	BUTTONS_task@btn,w
 14189  07A5  3E04               	addlw	4
 14190  07A6  0086               	movwf	6
 14191  07A7  3001               	movlw	1	; select bank2/3
 14192  07A8  0087               	movwf	7
 14193  07A9  0301               	decf	1,w
 14194  07AA  1D03               	btfss	3,2
 14195  07AB  2FC4               	goto	l969
 14196  07AC  0828               	movf	BUTTONS_task@btn,w
 14197  07AD  3E06               	addlw	6
 14198  07AE  0086               	movwf	6
 14199  07AF  3001               	movlw	1	; select bank2/3
 14200  07B0  0087               	movwf	7
 14201  07B1  3F40               	moviw [0]fsr1
 14202  07B2  0226               	subwf	BUTTONS_task@time,w
 14203  07B3  00A2               	movwf	??_BUTTONS_task
 14204  07B4  3F41               	moviw [1]fsr1
 14205  07B5  3B27               	subwfb	BUTTONS_task@time+1,w
 14206  07B6  00A3               	movwf	??_BUTTONS_task+1
 14207  07B7  3003               	movlw	3
 14208  07B8  0223               	subwf	??_BUTTONS_task+1,w
 14209  07B9  30E9               	movlw	233
 14210  07BA  1903               	skipnz
 14211  07BB  0222               	subwf	??_BUTTONS_task,w
 14212  07BC  1C03               	skipc
 14213  07BD  2FC4               	goto	l969
 14214                           
 14215                           ;buttons.c: 51:             && (time - btn->timeHeld) > 1000) {;buttons.c: 53:          
      +                             btn->event = EVENT_IDLE;
 14216  07BE  0828               	movf	BUTTONS_task@btn,w
 14217  07BF  3E05               	addlw	5
 14218  07C0  0086               	movwf	6
 14219  07C1  3001               	movlw	1	; select bank2/3
 14220  07C2  0087               	movwf	7
 14221  07C3  0181               	clrf	1
 14222  07C4                     l969:	
 14223                           ;buttons.c: 55:         } if (btn->state == STATE_PRESSED && (time - btn->timeHeld) > 10
      +                          00) {
 14224                           
 14225  07C4  0828               	movf	BUTTONS_task@btn,w
 14226  07C5  3E03               	addlw	3
 14227  07C6  0086               	movwf	6
 14228  07C7  3001               	movlw	1	; select bank2/3
 14229  07C8  0087               	movwf	7
 14230  07C9  0301               	decf	1,w
 14231  07CA  1D03               	btfss	3,2
 14232  07CB  2FE7               	goto	l970
 14233  07CC  0828               	movf	BUTTONS_task@btn,w
 14234  07CD  3E06               	addlw	6
 14235  07CE  0086               	movwf	6
 14236  07CF  3001               	movlw	1	; select bank2/3
 14237  07D0  0087               	movwf	7
 14238  07D1  3F40               	moviw [0]fsr1
 14239  07D2  0226               	subwf	BUTTONS_task@time,w
 14240  07D3  00A2               	movwf	??_BUTTONS_task
 14241  07D4  3F41               	moviw [1]fsr1
 14242  07D5  3B27               	subwfb	BUTTONS_task@time+1,w
 14243  07D6  00A3               	movwf	??_BUTTONS_task+1
 14244  07D7  3003               	movlw	3
 14245  07D8  0223               	subwf	??_BUTTONS_task+1,w
 14246  07D9  30E9               	movlw	233
 14247  07DA  1903               	skipnz
 14248  07DB  0222               	subwf	??_BUTTONS_task,w
 14249  07DC  1C03               	skipc
 14250  07DD  2FE7               	goto	l970
 14251                           
 14252                           ;buttons.c: 56:             btn -> event = EVENT_HELD;
 14253  07DE  3002               	movlw	2
 14254  07DF  00A2               	movwf	??_BUTTONS_task
 14255  07E0  0828               	movf	BUTTONS_task@btn,w
 14256  07E1  3E05               	addlw	5
 14257  07E2  0086               	movwf	6
 14258  07E3  3001               	movlw	1	; select bank2/3
 14259  07E4  0087               	movwf	7
 14260  07E5  0822               	movf	??_BUTTONS_task,w
 14261  07E6  0081               	movwf	1
 14262  07E7                     l970:	
 14263                           ;buttons.c: 57:         }
 14264                           
 14265                           
 14266                           ;buttons.c: 59:         btn->lastState = btn->state;
 14267  07E7  0828               	movf	BUTTONS_task@btn,w
 14268  07E8  3E03               	addlw	3
 14269  07E9  0086               	movwf	6
 14270  07EA  3001               	movlw	1	; select bank2/3
 14271  07EB  0087               	movwf	7
 14272  07EC  0801               	movf	1,w
 14273  07ED  00A2               	movwf	??_BUTTONS_task
 14274  07EE  0828               	movf	BUTTONS_task@btn,w
 14275  07EF  3E04               	addlw	4
 14276  07F0  0086               	movwf	6
 14277  07F1  3001               	movlw	1	; select bank2/3
 14278  07F2  0087               	movwf	7
 14279  07F3  0822               	movf	??_BUTTONS_task,w
 14280  07F4  0081               	movwf	1
 14281                           
 14282                           ;buttons.c: 60:     }
 14283  07F5  3001               	movlw	1
 14284  07F6  00A2               	movwf	??_BUTTONS_task
 14285  07F7  0822               	movf	??_BUTTONS_task,w
 14286  07F8  07A5               	addwf	BUTTONS_task@i,f
 14287  07F9  3004               	movlw	4
 14288  07FA  0225               	subwf	BUTTONS_task@i,w
 14289  07FB  1803               	btfsc	3,0
 14290  07FC  0008               	return
 14291  07FD  2F24               	goto	l5329
 14292  07FE                     __end_of_BUTTONS_task:	
 14293                           
 14294                           	psect	text44
 14295  0A3B                     __ptext44:	
 14296 ;; *************** function _BUTTONS_init *****************
 14297 ;; Defined at:
 14298 ;;		line 70 in file "buttons.c"
 14299 ;; Parameters:    Size  Location     Type
 14300 ;;		None
 14301 ;; Auto vars:     Size  Location     Type
 14302 ;;		None
 14303 ;; Return value:  Size  Location     Type
 14304 ;;                  1    wreg      void 
 14305 ;; Registers used:
 14306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14307 ;; Tracked objects:
 14308 ;;		On entry : 0/0
 14309 ;;		On exit  : 0/0
 14310 ;;		Unchanged: 0/0
 14311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14314 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14315 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14316 ;;Total ram usage:        1 bytes
 14317 ;; Hardware stack levels used:    1
 14318 ;; Hardware stack levels required when called:    5
 14319 ;; This function calls:
 14320 ;;		_init
 14321 ;; This function is called by:
 14322 ;;		_main
 14323 ;; This function uses a non-reentrant model
 14324 ;;
 14325                           
 14326                           
 14327                           ;psect for function _BUTTONS_init
 14328  0A3B                     _BUTTONS_init:	
 14329                           
 14330                           ;buttons.c: 71:     menu = &buttons[0];
 14331                           
 14332                           ;incstack = 0
 14333                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14334  0A3B  30A0               	movlw	(low (_buttons| (0+256)))& (0+255)
 14335  0A3C  0140               	movlb	0	; select bank0
 14336  0A3D  00A5               	movwf	??_BUTTONS_init
 14337  0A3E  0825               	movf	??_BUTTONS_init,w
 14338  0A3F  0141               	movlb	1	; select bank1
 14339  0A40  00C1               	movwf	_menu^(0+128)
 14340                           
 14341                           ;buttons.c: 72:     up = &buttons[1];
 14342  0A41  30A8               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 14343  0A42  0140               	movlb	0	; select bank0
 14344  0A43  00A5               	movwf	??_BUTTONS_init
 14345  0A44  0825               	movf	??_BUTTONS_init,w
 14346  0A45  0141               	movlb	1	; select bank1
 14347  0A46  00C4               	movwf	_up^(0+128)
 14348                           
 14349                           ;buttons.c: 73:     down = &buttons[2];
 14350  0A47  30B0               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 14351  0A48  0140               	movlb	0	; select bank0
 14352  0A49  00A5               	movwf	??_BUTTONS_init
 14353  0A4A  0825               	movf	??_BUTTONS_init,w
 14354  0A4B  0141               	movlb	1	; select bank1
 14355  0A4C  00C3               	movwf	_down^(0+128)
 14356                           
 14357                           ;buttons.c: 74:     enter = &buttons[3];
 14358  0A4D  30B8               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 14359  0A4E  0140               	movlb	0	; select bank0
 14360  0A4F  00A5               	movwf	??_BUTTONS_init
 14361  0A50  0825               	movf	??_BUTTONS_init,w
 14362  0A51  0141               	movlb	1	; select bank1
 14363  0A52  00C2               	movwf	_enter^(0+128)
 14364                           
 14365                           ;buttons.c: 76:     init(menu, &PORTC, 2);
 14366  0A53  300E               	movlw	14
 14367  0A54  0140               	movlb	0	; select bank0
 14368  0A55  00A0               	movwf	init@port
 14369  0A56  3000               	movlw	0
 14370  0A57  00A1               	movwf	init@port+1
 14371  0A58  3002               	movlw	2
 14372  0A59  00A5               	movwf	??_BUTTONS_init
 14373  0A5A  0825               	movf	??_BUTTONS_init,w
 14374  0A5B  00A2               	movwf	init@pin
 14375  0A5C  0141               	movlb	1	; select bank1
 14376  0A5D  0841               	movf	_menu^(0+128),w
 14377  0A5E  3197  2756  318A   	fcall	_init
 14378                           
 14379                           ;buttons.c: 77:     init(enter, &PORTA, 2);
 14380  0A61  300C               	movlw	12
 14381  0A62  0140               	movlb	0	; select bank0
 14382  0A63  00A0               	movwf	init@port
 14383  0A64  3000               	movlw	0
 14384  0A65  00A1               	movwf	init@port+1
 14385  0A66  3002               	movlw	2
 14386  0A67  00A5               	movwf	??_BUTTONS_init
 14387  0A68  0825               	movf	??_BUTTONS_init,w
 14388  0A69  00A2               	movwf	init@pin
 14389  0A6A  0141               	movlb	1	; select bank1
 14390  0A6B  0842               	movf	_enter^(0+128),w
 14391  0A6C  3197  2756  318A   	fcall	_init
 14392                           
 14393                           ;buttons.c: 78:     init(down, &PORTC, 0);
 14394  0A6F  300E               	movlw	14
 14395  0A70  0140               	movlb	0	; select bank0
 14396  0A71  00A0               	movwf	init@port
 14397  0A72  3000               	movlw	0
 14398  0A73  00A1               	movwf	init@port+1
 14399  0A74  01A2               	clrf	init@pin
 14400  0A75  0141               	movlb	1	; select bank1
 14401  0A76  0843               	movf	_down^(0+128),w
 14402  0A77  3197  2756  318A   	fcall	_init
 14403                           
 14404                           ;buttons.c: 79:     init(up, &PORTC, 1);
 14405  0A7A  300E               	movlw	14
 14406  0A7B  0140               	movlb	0	; select bank0
 14407  0A7C  00A0               	movwf	init@port
 14408  0A7D  3000               	movlw	0
 14409  0A7E  00A1               	movwf	init@port+1
 14410  0A7F  01A2               	clrf	init@pin
 14411  0A80  0AA2               	incf	init@pin,f
 14412  0A81  0141               	movlb	1	; select bank1
 14413  0A82  0844               	movf	_up^(0+128),w
 14414  0A83  3197  2756         	fcall	_init
 14415  0A85  0008               	return
 14416  0A86                     __end_of_BUTTONS_init:	
 14417                           
 14418                           	psect	text45
 14419  1756                     __ptext45:	
 14420 ;; *************** function _init *****************
 14421 ;; Defined at:
 14422 ;;		line 63 in file "buttons.c"
 14423 ;; Parameters:    Size  Location     Type
 14424 ;;  btn             1    wreg     PTR struct .
 14425 ;;		 -> buttons(32), NULL(0), 
 14426 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 14427 ;;		 -> PORTA(1), PORTC(1), 
 14428 ;;  pin             1    2[BANK0 ] unsigned char 
 14429 ;; Auto vars:     Size  Location     Type
 14430 ;;  btn             1    4[BANK0 ] PTR struct .
 14431 ;;		 -> buttons(32), NULL(0), 
 14432 ;; Return value:  Size  Location     Type
 14433 ;;                  1    wreg      void 
 14434 ;; Registers used:
 14435 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14436 ;; Tracked objects:
 14437 ;;		On entry : 0/0
 14438 ;;		On exit  : 0/0
 14439 ;;		Unchanged: 0/0
 14440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14441 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14443 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14444 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14445 ;;Total ram usage:        5 bytes
 14446 ;; Hardware stack levels used:    1
 14447 ;; Hardware stack levels required when called:    4
 14448 ;; This function calls:
 14449 ;;		Nothing
 14450 ;; This function is called by:
 14451 ;;		_BUTTONS_init
 14452 ;; This function uses a non-reentrant model
 14453 ;;
 14454                           
 14455                           
 14456                           ;psect for function _init
 14457  1756                     _init:	
 14458                           
 14459                           ;incstack = 0
 14460                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 14461                           ;init@btn stored from wreg
 14462  1756  0140               	movlb	0	; select bank0
 14463  1757  00A4               	movwf	init@btn
 14464                           
 14465                           ;buttons.c: 64:     btn->port = port;
 14466  1758  0824               	movf	init@btn,w
 14467  1759  0086               	movwf	6
 14468  175A  3001               	movlw	1	; select bank2/3
 14469  175B  0087               	movwf	7
 14470  175C  0820               	movf	init@port,w
 14471  175D  3FC0               	movwi [0]fsr1
 14472  175E  0821               	movf	init@port+1,w
 14473  175F  3FC1               	movwi [1]fsr1
 14474                           
 14475                           ;buttons.c: 65:     btn->pin = pin;
 14476  1760  0822               	movf	init@pin,w
 14477  1761  00A3               	movwf	??_init
 14478  1762  0824               	movf	init@btn,w
 14479  1763  3E02               	addlw	2
 14480  1764  0086               	movwf	6
 14481  1765  3001               	movlw	1	; select bank2/3
 14482  1766  0087               	movwf	7
 14483  1767  0823               	movf	??_init,w
 14484  1768  0081               	movwf	1
 14485                           
 14486                           ;buttons.c: 66:     btn->state = STATE_UNPRESSED;
 14487  1769  0824               	movf	init@btn,w
 14488  176A  3E03               	addlw	3
 14489  176B  0086               	movwf	6
 14490  176C  3001               	movlw	1	; select bank2/3
 14491  176D  0087               	movwf	7
 14492  176E  0181               	clrf	1
 14493                           
 14494                           ;buttons.c: 67:     btn->event = EVENT_IDLE;
 14495  176F  0824               	movf	init@btn,w
 14496  1770  3E05               	addlw	5
 14497  1771  0086               	movwf	6
 14498  1772  3001               	movlw	1	; select bank2/3
 14499  1773  0087               	movwf	7
 14500  1774  0181               	clrf	1
 14501  1775  0008               	return
 14502  1776                     __end_of_init:	
 14503                           
 14504                           	psect	text46
 14505  0CD8                     __ptext46:	
 14506 ;; *************** function _BEAT_task *****************
 14507 ;; Defined at:
 14508 ;;		line 67 in file "beat.c"
 14509 ;; Parameters:    Size  Location     Type
 14510 ;;		None
 14511 ;; Auto vars:     Size  Location     Type
 14512 ;;  offset          2   10[BANK0 ] unsigned short 
 14513 ;; Return value:  Size  Location     Type
 14514 ;;                  1    wreg      void 
 14515 ;; Registers used:
 14516 ;;		wreg, status,2, status,0, pclath, cstack
 14517 ;; Tracked objects:
 14518 ;;		On entry : 0/0
 14519 ;;		On exit  : 0/0
 14520 ;;		Unchanged: 0/0
 14521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14523 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14524 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14525 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14526 ;;Total ram usage:        4 bytes
 14527 ;; Hardware stack levels used:    1
 14528 ;; Hardware stack levels required when called:    5
 14529 ;; This function calls:
 14530 ;;		_ADCC_SetUpperThreshold
 14531 ;;		_CLOCK_getTime
 14532 ;;		_TM1650_isEnabled
 14533 ;;		___lwdiv
 14534 ;; This function is called by:
 14535 ;;		_main
 14536 ;; This function uses a non-reentrant model
 14537 ;;
 14538                           
 14539                           
 14540                           ;psect for function _BEAT_task
 14541  0CD8                     _BEAT_task:	
 14542                           
 14543                           ;beat.c: 69:     if (TM1650_isEnabled())
 14544                           
 14545                           ;incstack = 0
 14546                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 14547  0CD8  3195  2544  318C   	fcall	_TM1650_isEnabled
 14548  0CDB  3A00               	xorlw	0
 14549  0CDC  1D03               	btfss	3,2
 14550  0CDD  0008               	return
 14551                           
 14552                           ;beat.c: 72:     if (CLOCK_getTime() - lastRun < delay)
 14553  0CDE  3195  2592  318C   	fcall	_CLOCK_getTime
 14554  0CE1  0141               	movlb	1	; select bank1
 14555  0CE2  0827               	movf	_lastRun^(0+128),w
 14556  0CE3  0140               	movlb	0	; select bank0
 14557  0CE4  0220               	subwf	?_CLOCK_getTime,w
 14558  0CE5  00A8               	movwf	??_BEAT_task
 14559  0CE6  0141               	movlb	1	; select bank1
 14560  0CE7  0828               	movf	(_lastRun+1)^(0+128),w
 14561  0CE8  0140               	movlb	0	; select bank0
 14562  0CE9  3B21               	subwfb	?_CLOCK_getTime+1,w
 14563  0CEA  00A9               	movwf	??_BEAT_task+1
 14564  0CEB  0141               	movlb	1	; select bank1
 14565  0CEC  0867               	movf	(_delay+1)^(0+128),w
 14566  0CED  0140               	movlb	0	; select bank0
 14567  0CEE  0229               	subwf	??_BEAT_task+1,w
 14568  0CEF  1D03               	skipz
 14569  0CF0  2CF5               	goto	u5265
 14570  0CF1  0141               	movlb	1	; select bank1
 14571  0CF2  0866               	movf	_delay^(0+128),w
 14572  0CF3  0140               	movlb	0	; select bank0
 14573  0CF4  0228               	subwf	??_BEAT_task,w
 14574  0CF5                     u5265:	
 14575  0CF5  1C03               	btfss	3,0
 14576  0CF6  0008               	return
 14577                           
 14578                           ;beat.c: 75:     lastRun = CLOCK_getTime();
 14579  0CF7  3195  2592  318C   	fcall	_CLOCK_getTime
 14580  0CFA  0140               	movlb	0	; select bank0
 14581  0CFB  0821               	movf	?_CLOCK_getTime+1,w
 14582  0CFC  0141               	movlb	1	; select bank1
 14583  0CFD  00A8               	movwf	(_lastRun+1)^(0+128)
 14584  0CFE  0140               	movlb	0	; select bank0
 14585  0CFF  0820               	movf	?_CLOCK_getTime,w
 14586  0D00  0141               	movlb	1	; select bank1
 14587  0D01  00A7               	movwf	_lastRun^(0+128)
 14588                           
 14589                           ;beat.c: 77:     if (thresholdExceeded == 1) {
 14590  0D02  033E               	decf	_thresholdExceeded^(0+128),w
 14591  0D03  1D03               	btfss	3,2
 14592  0D04  2D0A               	goto	l5407
 14593                           
 14594                           ;beat.c: 81:         thresholdCount++;
 14595  0D05  3001               	movlw	1
 14596  0D06  07A5               	addwf	_thresholdCount^(0+128),f
 14597  0D07  3000               	movlw	0
 14598  0D08  3DA6               	addwfc	(_thresholdCount+1)^(0+128),f
 14599                           
 14600                           ;beat.c: 82:     } else {
 14601  0D09  2D10               	goto	l5411
 14602  0D0A                     l5407:	
 14603                           
 14604                           ;beat.c: 84:         thresholdCount = 0;
 14605  0D0A  01A5               	clrf	_thresholdCount^(0+128)
 14606  0D0B  01A6               	clrf	(_thresholdCount+1)^(0+128)
 14607                           
 14608                           ;beat.c: 85:         delay = 20;
 14609  0D0C  3014               	movlw	20
 14610  0D0D  00E6               	movwf	_delay^(0+128)
 14611  0D0E  3000               	movlw	0
 14612  0D0F  00E7               	movwf	(_delay^(0+128)+1)
 14613  0D10                     l5411:	
 14614                           
 14615                           ;beat.c: 91:     if (thresholdExceeded == 1 && lastDetected == 0) {
 14616  0D10  033E               	decf	_thresholdExceeded^(0+128),w
 14617  0D11  1D03               	btfss	3,2
 14618  0D12  2D55               	goto	l5429
 14619  0D13  083D               	movf	_lastDetected^(0+128),w
 14620  0D14  1D03               	btfss	3,2
 14621  0D15  2D55               	goto	l5429
 14622                           
 14623                           ;beat.c: 93:         detected = 1;
 14624  0D16  01BF               	clrf	_detected^(0+128)
 14625  0D17  0ABF               	incf	_detected^(0+128),f
 14626                           
 14627                           ;beat.c: 96:         delay = 100;
 14628  0D18  3064               	movlw	100
 14629  0D19  00E6               	movwf	_delay^(0+128)
 14630  0D1A  3000               	movlw	0
 14631  0D1B  00E7               	movwf	(_delay^(0+128)+1)
 14632                           
 14633                           ;beat.c: 99:         time_t offset = CLOCK_getTime() - lastBeat;
 14634  0D1C  3195  2592  318C   	fcall	_CLOCK_getTime
 14635  0D1F  0141               	movlb	1	; select bank1
 14636  0D20  082B               	movf	_lastBeat^(0+128),w
 14637  0D21  0140               	movlb	0	; select bank0
 14638  0D22  0220               	subwf	?_CLOCK_getTime,w
 14639  0D23  00AA               	movwf	BEAT_task@offset
 14640  0D24  0141               	movlb	1	; select bank1
 14641  0D25  082C               	movf	(_lastBeat+1)^(0+128),w
 14642  0D26  0140               	movlb	0	; select bank0
 14643  0D27  3B21               	subwfb	?_CLOCK_getTime+1,w
 14644  0D28  00AB               	movwf	BEAT_task@offset+1
 14645                           
 14646                           ;beat.c: 101:         lastBeat = CLOCK_getTime();
 14647  0D29  3195  2592  318C   	fcall	_CLOCK_getTime
 14648  0D2C  0140               	movlb	0	; select bank0
 14649  0D2D  0821               	movf	?_CLOCK_getTime+1,w
 14650  0D2E  0141               	movlb	1	; select bank1
 14651  0D2F  00AC               	movwf	(_lastBeat+1)^(0+128)
 14652  0D30  0140               	movlb	0	; select bank0
 14653  0D31  0820               	movf	?_CLOCK_getTime,w
 14654  0D32  0141               	movlb	1	; select bank1
 14655  0D33  00AB               	movwf	_lastBeat^(0+128)
 14656                           
 14657                           ;beat.c: 103:         if (offset < 150)
 14658  0D34  3000               	movlw	0
 14659  0D35  0140               	movlb	0	; select bank0
 14660  0D36  022B               	subwf	BEAT_task@offset+1,w
 14661  0D37  3096               	movlw	150
 14662  0D38  1903               	skipnz
 14663  0D39  022A               	subwf	BEAT_task@offset,w
 14664  0D3A  1803               	skipnc
 14665  0D3B  2D42               	goto	l5427
 14666                           
 14667                           ;beat.c: 104:             bpm = 400;
 14668  0D3C  3090               	movlw	144
 14669  0D3D  0141               	movlb	1	; select bank1
 14670  0D3E  00A9               	movwf	_bpm^(0+128)
 14671  0D3F  3001               	movlw	1
 14672  0D40  00AA               	movwf	(_bpm^(0+128)+1)
 14673  0D41  2D55               	goto	l5429
 14674  0D42                     l5427:	
 14675                           
 14676                           ;beat.c: 106:             bpm = 60 * 1000 / offset;
 14677  0D42  082B               	movf	BEAT_task@offset+1,w
 14678  0D43  00A1               	movwf	___lwdiv@divisor+1
 14679  0D44  082A               	movf	BEAT_task@offset,w
 14680  0D45  00A0               	movwf	___lwdiv@divisor
 14681  0D46  3060               	movlw	96
 14682  0D47  00A2               	movwf	___lwdiv@dividend
 14683  0D48  30EA               	movlw	234
 14684  0D49  00A3               	movwf	___lwdiv@dividend+1
 14685  0D4A  3189  2133  318C   	fcall	___lwdiv
 14686  0D4D  0140               	movlb	0	; select bank0
 14687  0D4E  0821               	movf	?___lwdiv+1,w
 14688  0D4F  0141               	movlb	1	; select bank1
 14689  0D50  00AA               	movwf	(_bpm+1)^(0+128)
 14690  0D51  0140               	movlb	0	; select bank0
 14691  0D52  0820               	movf	?___lwdiv,w
 14692  0D53  0141               	movlb	1	; select bank1
 14693  0D54  00A9               	movwf	_bpm^(0+128)
 14694  0D55                     l5429:	
 14695                           
 14696                           ;beat.c: 112:     lastDetected = thresholdExceeded;
 14697  0D55  083E               	movf	_thresholdExceeded^(0+128),w
 14698  0D56  0140               	movlb	0	; select bank0
 14699  0D57  00A8               	movwf	??_BEAT_task
 14700  0D58  0828               	movf	??_BEAT_task,w
 14701  0D59  0141               	movlb	1	; select bank1
 14702  0D5A  00BD               	movwf	_lastDetected^(0+128)
 14703                           
 14704                           ;beat.c: 113:     thresholdExceeded = 0;
 14705  0D5B  01BE               	clrf	_thresholdExceeded^(0+128)
 14706                           
 14707                           ;beat.c: 115:     if (thresholdCount > 3) {
 14708  0D5C  0826               	movf	(_thresholdCount+1)^(0+128),w
 14709  0D5D  3A80               	xorlw	128
 14710  0D5E  0140               	movlb	0	; select bank0
 14711  0D5F  00A8               	movwf	??_BEAT_task
 14712  0D60  3080               	movlw	128
 14713  0D61  0228               	subwf	??_BEAT_task,w
 14714  0D62  1D03               	skipz
 14715  0D63  2D67               	goto	u5315
 14716  0D64  3004               	movlw	4
 14717  0D65  0141               	movlb	1	; select bank1
 14718  0D66  0225               	subwf	_thresholdCount^(0+128),w
 14719  0D67                     u5315:	
 14720  0D67  1C03               	skipc
 14721  0D68  2D86               	goto	l5443
 14722                           
 14723                           ;beat.c: 116:         threshold += 1;
 14724  0D69  3001               	movlw	1
 14725  0D6A  0141               	movlb	1	; select bank1
 14726  0D6B  07E8               	addwf	_threshold^(0+128),f
 14727  0D6C  3000               	movlw	0
 14728  0D6D  3DE9               	addwfc	(_threshold+1)^(0+128),f
 14729                           
 14730                           ;beat.c: 117:         ADCC_SetUpperThreshold(threshold);
 14731  0D6E  0869               	movf	(_threshold+1)^(0+128),w
 14732  0D6F  0140               	movlb	0	; select bank0
 14733  0D70  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 14734  0D71  0141               	movlb	1	; select bank1
 14735  0D72  0868               	movf	_threshold^(0+128),w
 14736  0D73  0140               	movlb	0	; select bank0
 14737  0D74  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 14738  0D75  3195  2580  318C   	fcall	_ADCC_SetUpperThreshold
 14739                           
 14740                           ;beat.c: 118:         thresholdCount = 0;
 14741  0D78  0141               	movlb	1	; select bank1
 14742  0D79  01A5               	clrf	_thresholdCount^(0+128)
 14743  0D7A  01A6               	clrf	(_thresholdCount+1)^(0+128)
 14744                           
 14745                           ;beat.c: 121:         lastBeat = CLOCK_getTime();
 14746  0D7B  3195  2592         	fcall	_CLOCK_getTime
 14747  0D7D  0140               	movlb	0	; select bank0
 14748  0D7E  0821               	movf	?_CLOCK_getTime+1,w
 14749  0D7F  0141               	movlb	1	; select bank1
 14750  0D80  00AC               	movwf	(_lastBeat+1)^(0+128)
 14751  0D81  0140               	movlb	0	; select bank0
 14752  0D82  0820               	movf	?_CLOCK_getTime,w
 14753  0D83  0141               	movlb	1	; select bank1
 14754  0D84  00AB               	movwf	_lastBeat^(0+128)
 14755                           
 14756                           ;beat.c: 122:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 14757  0D85  0008               	return
 14758  0D86                     l5443:	
 14759  0D86  3195  2592  318C   	fcall	_CLOCK_getTime
 14760  0D89  0141               	movlb	1	; select bank1
 14761  0D8A  082B               	movf	_lastBeat^(0+128),w
 14762  0D8B  0140               	movlb	0	; select bank0
 14763  0D8C  0220               	subwf	?_CLOCK_getTime,w
 14764  0D8D  00A8               	movwf	??_BEAT_task
 14765  0D8E  0141               	movlb	1	; select bank1
 14766  0D8F  082C               	movf	(_lastBeat+1)^(0+128),w
 14767  0D90  0140               	movlb	0	; select bank0
 14768  0D91  3B21               	subwfb	?_CLOCK_getTime+1,w
 14769  0D92  00A9               	movwf	??_BEAT_task+1
 14770  0D93  3003               	movlw	3
 14771  0D94  0229               	subwf	??_BEAT_task+1,w
 14772  0D95  30E9               	movlw	233
 14773  0D96  1903               	skipnz
 14774  0D97  0228               	subwf	??_BEAT_task,w
 14775  0D98  1C03               	skipc
 14776  0D99  0008               	return
 14777                           
 14778                           ;beat.c: 123:         threshold -= 1;
 14779  0D9A  3001               	movlw	1
 14780  0D9B  0141               	movlb	1	; select bank1
 14781  0D9C  02E8               	subwf	_threshold^(0+128),f
 14782  0D9D  3000               	movlw	0
 14783  0D9E  3BE9               	subwfb	(_threshold+1)^(0+128),f
 14784                           
 14785                           ;beat.c: 124:         ADCC_SetUpperThreshold(threshold);
 14786  0D9F  0869               	movf	(_threshold+1)^(0+128),w
 14787  0DA0  0140               	movlb	0	; select bank0
 14788  0DA1  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 14789  0DA2  0141               	movlb	1	; select bank1
 14790  0DA3  0868               	movf	_threshold^(0+128),w
 14791  0DA4  0140               	movlb	0	; select bank0
 14792  0DA5  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 14793  0DA6  3195  2580         	fcall	_ADCC_SetUpperThreshold
 14794  0DA8  0008               	return
 14795  0DA9                     __end_of_BEAT_task:	
 14796                           
 14797                           	psect	text47
 14798  0933                     __ptext47:	
 14799 ;; *************** function ___lwdiv *****************
 14800 ;; Defined at:
 14801 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
 14802 ;; Parameters:    Size  Location     Type
 14803 ;;  divisor         2    0[BANK0 ] unsigned int 
 14804 ;;  dividend        2    2[BANK0 ] unsigned int 
 14805 ;; Auto vars:     Size  Location     Type
 14806 ;;  quotient        2    6[BANK0 ] unsigned int 
 14807 ;;  counter         1    5[BANK0 ] unsigned char 
 14808 ;; Return value:  Size  Location     Type
 14809 ;;                  2    0[BANK0 ] unsigned int 
 14810 ;; Registers used:
 14811 ;;		wreg, status,2, status,0
 14812 ;; Tracked objects:
 14813 ;;		On entry : 0/0
 14814 ;;		On exit  : 0/0
 14815 ;;		Unchanged: 0/0
 14816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14817 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14818 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14819 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14820 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14821 ;;Total ram usage:        8 bytes
 14822 ;; Hardware stack levels used:    1
 14823 ;; Hardware stack levels required when called:    4
 14824 ;; This function calls:
 14825 ;;		Nothing
 14826 ;; This function is called by:
 14827 ;;		_TM1650_fastPrintNum
 14828 ;;		_BEAT_task
 14829 ;; This function uses a non-reentrant model
 14830 ;;
 14831                           
 14832                           
 14833                           ;psect for function ___lwdiv
 14834  0933                     ___lwdiv:	
 14835                           
 14836                           ;incstack = 0
 14837                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 14838  0933  0140               	movlb	0	; select bank0
 14839  0934  01A6               	clrf	___lwdiv@quotient
 14840  0935  01A7               	clrf	___lwdiv@quotient+1
 14841  0936  0820               	movf	___lwdiv@divisor,w
 14842  0937  0421               	iorwf	___lwdiv@divisor+1,w
 14843  0938  1903               	btfsc	3,2
 14844  0939  2963               	goto	l4821
 14845  093A  01A5               	clrf	___lwdiv@counter
 14846  093B  0AA5               	incf	___lwdiv@counter,f
 14847  093C                     l4809:	
 14848  093C  1BA1               	btfsc	___lwdiv@divisor+1,7
 14849  093D  2948               	goto	l4811
 14850  093E  3001               	movlw	1
 14851  093F                     u4475:	
 14852  093F  35A0               	lslf	___lwdiv@divisor,f
 14853  0940  0DA1               	rlf	___lwdiv@divisor+1,f
 14854  0941  0B89               	decfsz	9,f
 14855  0942  293F               	goto	u4475
 14856  0943  3001               	movlw	1
 14857  0944  00A4               	movwf	??___lwdiv
 14858  0945  0824               	movf	??___lwdiv,w
 14859  0946  07A5               	addwf	___lwdiv@counter,f
 14860  0947  293C               	goto	l4809
 14861  0948                     l4811:	
 14862  0948  3001               	movlw	1
 14863  0949                     u4495:	
 14864  0949  35A6               	lslf	___lwdiv@quotient,f
 14865  094A  0DA7               	rlf	___lwdiv@quotient+1,f
 14866  094B  0B89               	decfsz	9,f
 14867  094C  2949               	goto	u4495
 14868  094D  0821               	movf	___lwdiv@divisor+1,w
 14869  094E  0223               	subwf	___lwdiv@dividend+1,w
 14870  094F  1D03               	skipz
 14871  0950  2953               	goto	u4505
 14872  0951  0820               	movf	___lwdiv@divisor,w
 14873  0952  0222               	subwf	___lwdiv@dividend,w
 14874  0953                     u4505:	
 14875  0953  1C03               	skipc
 14876  0954  295A               	goto	l4817
 14877  0955  0820               	movf	___lwdiv@divisor,w
 14878  0956  02A2               	subwf	___lwdiv@dividend,f
 14879  0957  0821               	movf	___lwdiv@divisor+1,w
 14880  0958  3BA3               	subwfb	___lwdiv@dividend+1,f
 14881  0959  1426               	bsf	___lwdiv@quotient,0
 14882  095A                     l4817:	
 14883  095A  3001               	movlw	1
 14884  095B                     u4515:	
 14885  095B  36A1               	lsrf	___lwdiv@divisor+1,f
 14886  095C  0CA0               	rrf	___lwdiv@divisor,f
 14887  095D  0B89               	decfsz	9,f
 14888  095E  295B               	goto	u4515
 14889  095F  3001               	movlw	1
 14890  0960  02A5               	subwf	___lwdiv@counter,f
 14891  0961  1D03               	btfss	3,2
 14892  0962  2948               	goto	l4811
 14893  0963                     l4821:	
 14894  0963  0827               	movf	___lwdiv@quotient+1,w
 14895  0964  00A1               	movwf	?___lwdiv+1
 14896  0965  0826               	movf	___lwdiv@quotient,w
 14897  0966  00A0               	movwf	?___lwdiv
 14898  0967  0008               	return
 14899  0968                     __end_of___lwdiv:	
 14900                           
 14901                           	psect	text48
 14902  1544                     __ptext48:	
 14903 ;; *************** function _TM1650_isEnabled *****************
 14904 ;; Defined at:
 14905 ;;		line 116 in file "tm1650.c"
 14906 ;; Parameters:    Size  Location     Type
 14907 ;;		None
 14908 ;; Auto vars:     Size  Location     Type
 14909 ;;		None
 14910 ;; Return value:  Size  Location     Type
 14911 ;;                  1    wreg      _Bool 
 14912 ;; Registers used:
 14913 ;;		wreg
 14914 ;; Tracked objects:
 14915 ;;		On entry : 0/0
 14916 ;;		On exit  : 0/0
 14917 ;;		Unchanged: 0/0
 14918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14923 ;;Total ram usage:        0 bytes
 14924 ;; Hardware stack levels used:    1
 14925 ;; Hardware stack levels required when called:    4
 14926 ;; This function calls:
 14927 ;;		Nothing
 14928 ;; This function is called by:
 14929 ;;		_BEAT_task
 14930 ;; This function uses a non-reentrant model
 14931 ;;
 14932                           
 14933                           
 14934                           ;psect for function _TM1650_isEnabled
 14935  1544                     _TM1650_isEnabled:	
 14936                           
 14937                           ;tm1650.c: 117:     return displayState;
 14938                           
 14939                           ;incstack = 0
 14940                           ; Regs used in _TM1650_isEnabled: [wreg]
 14941  1544  0141               	movlb	1	; select bank1
 14942  1545  0840               	movf	_displayState^(0+128),w
 14943  1546  0008               	return
 14944  1547                     __end_of_TM1650_isEnabled:	
 14945                           
 14946                           	psect	text49
 14947  1592                     __ptext49:	
 14948 ;; *************** function _CLOCK_getTime *****************
 14949 ;; Defined at:
 14950 ;;		line 25 in file "clock.c"
 14951 ;; Parameters:    Size  Location     Type
 14952 ;;		None
 14953 ;; Auto vars:     Size  Location     Type
 14954 ;;		None
 14955 ;; Return value:  Size  Location     Type
 14956 ;;                  2    0[BANK0 ] unsigned short 
 14957 ;; Registers used:
 14958 ;;		wreg
 14959 ;; Tracked objects:
 14960 ;;		On entry : 0/0
 14961 ;;		On exit  : 0/0
 14962 ;;		Unchanged: 0/0
 14963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14964 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14967 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14968 ;;Total ram usage:        2 bytes
 14969 ;; Hardware stack levels used:    1
 14970 ;; Hardware stack levels required when called:    4
 14971 ;; This function calls:
 14972 ;;		Nothing
 14973 ;; This function is called by:
 14974 ;;		_main
 14975 ;;		_BUTTONS_task
 14976 ;;		_CONTROLLER_task
 14977 ;;		_BEAT_task
 14978 ;; This function uses a non-reentrant model
 14979 ;;
 14980                           
 14981                           
 14982                           ;psect for function _CLOCK_getTime
 14983  1592                     _CLOCK_getTime:	
 14984                           
 14985                           ;clock.c: 26:     return currentTime;
 14986                           
 14987                           ;incstack = 0
 14988                           ; Regs used in _CLOCK_getTime: [wreg]
 14989  1592  0141               	movlb	1	; select bank1
 14990  1593  0830               	movf	(_currentTime+1)^(0+128),w
 14991  1594  0140               	movlb	0	; select bank0
 14992  1595  00A1               	movwf	?_CLOCK_getTime+1
 14993  1596  0141               	movlb	1	; select bank1
 14994  1597  082F               	movf	_currentTime^(0+128),w
 14995  1598  0140               	movlb	0	; select bank0
 14996  1599  00A0               	movwf	?_CLOCK_getTime
 14997  159A  0008               	return
 14998  159B                     __end_of_CLOCK_getTime:	
 14999                           
 15000                           	psect	text50
 15001  168A                     __ptext50:	
 15002 ;; *************** function _BEAT_init *****************
 15003 ;; Defined at:
 15004 ;;		line 40 in file "beat.c"
 15005 ;; Parameters:    Size  Location     Type
 15006 ;;		None
 15007 ;; Auto vars:     Size  Location     Type
 15008 ;;		None
 15009 ;; Return value:  Size  Location     Type
 15010 ;;                  1    wreg      void 
 15011 ;; Registers used:
 15012 ;;		wreg, status,2, status,0, pclath, cstack
 15013 ;; Tracked objects:
 15014 ;;		On entry : 0/0
 15015 ;;		On exit  : 0/0
 15016 ;;		Unchanged: 0/0
 15017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15022 ;;Total ram usage:        0 bytes
 15023 ;; Hardware stack levels used:    1
 15024 ;; Hardware stack levels required when called:    5
 15025 ;; This function calls:
 15026 ;;		_ADCC_SetADTIInterruptHandler
 15027 ;;		_ADCC_SetUpperThreshold
 15028 ;;		_ADCC_StartConversion
 15029 ;; This function is called by:
 15030 ;;		_main
 15031 ;; This function uses a non-reentrant model
 15032 ;;
 15033                           
 15034                           
 15035                           ;psect for function _BEAT_init
 15036  168A                     _BEAT_init:	
 15037                           
 15038                           ;beat.c: 41:     ADCC_SetUpperThreshold(threshold);
 15039                           
 15040                           ;incstack = 0
 15041                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 15042  168A  0141               	movlb	1	; select bank1
 15043  168B  0869               	movf	(_threshold+1)^(0+128),w
 15044  168C  0140               	movlb	0	; select bank0
 15045  168D  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 15046  168E  0141               	movlb	1	; select bank1
 15047  168F  0868               	movf	_threshold^(0+128),w
 15048  1690  0140               	movlb	0	; select bank0
 15049  1691  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 15050  1692  3195  2580  3196   	fcall	_ADCC_SetUpperThreshold
 15051                           
 15052                           ;beat.c: 42:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 15053  1695  3047               	movlw	low _adcThresholdHandler
 15054  1696  0140               	movlb	0	; select bank0
 15055  1697  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 15056  1698  3015               	movlw	high _adcThresholdHandler
 15057  1699  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 15058  169A  3195  2577  3196   	fcall	_ADCC_SetADTIInterruptHandler
 15059                           
 15060                           ;beat.c: 43:     ADCC_StartConversion(0x0F);
 15061  169D  300F               	movlw	15
 15062  169E  3195  2589         	fcall	_ADCC_StartConversion
 15063  16A0  0008               	return
 15064  16A1                     __end_of_BEAT_init:	
 15065                           
 15066                           	psect	text51
 15067  1589                     __ptext51:	
 15068 ;; *************** function _ADCC_StartConversion *****************
 15069 ;; Defined at:
 15070 ;;		line 121 in file "mcc_generated_files/adcc.c"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;  channel         1    wreg     enum E10867
 15073 ;; Auto vars:     Size  Location     Type
 15074 ;;  channel         1    0[BANK0 ] enum E10867
 15075 ;; Return value:  Size  Location     Type
 15076 ;;                  1    wreg      void 
 15077 ;; Registers used:
 15078 ;;		wreg
 15079 ;; Tracked objects:
 15080 ;;		On entry : 0/0
 15081 ;;		On exit  : 0/0
 15082 ;;		Unchanged: 0/0
 15083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15085 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15087 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15088 ;;Total ram usage:        1 bytes
 15089 ;; Hardware stack levels used:    1
 15090 ;; Hardware stack levels required when called:    4
 15091 ;; This function calls:
 15092 ;;		Nothing
 15093 ;; This function is called by:
 15094 ;;		_BEAT_init
 15095 ;; This function uses a non-reentrant model
 15096 ;;
 15097                           
 15098                           
 15099                           ;psect for function _ADCC_StartConversion
 15100  1589                     _ADCC_StartConversion:	
 15101                           
 15102                           ;incstack = 0
 15103                           ; Regs used in _ADCC_StartConversion: [wreg]
 15104                           ;ADCC_StartConversion@channel stored from wreg
 15105  1589  0140               	movlb	0	; select bank0
 15106  158A  00A0               	movwf	ADCC_StartConversion@channel
 15107                           
 15108                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 15109  158B  0820               	movf	ADCC_StartConversion@channel,w
 15110  158C  0141               	movlb	1	; select bank1
 15111  158D  009F               	movwf	31	;volatile
 15112                           
 15113                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 15114  158E  0142               	movlb	2	; select bank2
 15115  158F  1791               	bsf	17,7	;volatile
 15116                           
 15117                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 15118  1590  1411               	bsf	17,0	;volatile
 15119  1591  0008               	return
 15120  1592                     __end_of_ADCC_StartConversion:	
 15121                           
 15122                           	psect	text52
 15123  1580                     __ptext52:	
 15124 ;; *************** function _ADCC_SetUpperThreshold *****************
 15125 ;; Defined at:
 15126 ;;		line 251 in file "mcc_generated_files/adcc.c"
 15127 ;; Parameters:    Size  Location     Type
 15128 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 15129 ;; Auto vars:     Size  Location     Type
 15130 ;;		None
 15131 ;; Return value:  Size  Location     Type
 15132 ;;                  1    wreg      void 
 15133 ;; Registers used:
 15134 ;;		wreg, status,2
 15135 ;; Tracked objects:
 15136 ;;		On entry : 0/0
 15137 ;;		On exit  : 0/0
 15138 ;;		Unchanged: 0/0
 15139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15140 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15143 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15144 ;;Total ram usage:        2 bytes
 15145 ;; Hardware stack levels used:    1
 15146 ;; Hardware stack levels required when called:    4
 15147 ;; This function calls:
 15148 ;;		Nothing
 15149 ;; This function is called by:
 15150 ;;		_BEAT_init
 15151 ;;		_BEAT_task
 15152 ;; This function uses a non-reentrant model
 15153 ;;
 15154                           
 15155                           
 15156                           ;psect for function _ADCC_SetUpperThreshold
 15157  1580                     _ADCC_SetUpperThreshold:	
 15158                           
 15159                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 15160                           
 15161                           ;incstack = 0
 15162                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 15163  1580  0140               	movlb	0	; select bank0
 15164  1581  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 15165  1582  0141               	movlb	1	; select bank1
 15166  1583  008F               	movwf	15	;volatile
 15167                           
 15168                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 15169  1584  0140               	movlb	0	; select bank0
 15170  1585  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 15171  1586  0141               	movlb	1	; select bank1
 15172  1587  008E               	movwf	14	;volatile
 15173  1588  0008               	return
 15174  1589                     __end_of_ADCC_SetUpperThreshold:	
 15175                           
 15176                           	psect	text53
 15177  1577                     __ptext53:	
 15178 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 15179 ;; Defined at:
 15180 ;;		line 317 in file "mcc_generated_files/adcc.c"
 15181 ;; Parameters:    Size  Location     Type
 15182 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 15183 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 15184 ;; Auto vars:     Size  Location     Type
 15185 ;;		None
 15186 ;; Return value:  Size  Location     Type
 15187 ;;                  1    wreg      void 
 15188 ;; Registers used:
 15189 ;;		wreg
 15190 ;; Tracked objects:
 15191 ;;		On entry : 0/0
 15192 ;;		On exit  : 0/0
 15193 ;;		Unchanged: 0/0
 15194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15195 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15198 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15199 ;;Total ram usage:        2 bytes
 15200 ;; Hardware stack levels used:    1
 15201 ;; Hardware stack levels required when called:    4
 15202 ;; This function calls:
 15203 ;;		Nothing
 15204 ;; This function is called by:
 15205 ;;		_ADCC_Initialize
 15206 ;;		_BEAT_init
 15207 ;; This function uses a non-reentrant model
 15208 ;;
 15209                           
 15210                           
 15211                           ;psect for function _ADCC_SetADTIInterruptHandler
 15212  1577                     _ADCC_SetADTIInterruptHandler:	
 15213                           
 15214                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 15215                           
 15216                           ;incstack = 0
 15217                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 15218  1577  0140               	movlb	0	; select bank0
 15219  1578  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 15220  1579  0141               	movlb	1	; select bank1
 15221  157A  00ED               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128)
 15222  157B  0140               	movlb	0	; select bank0
 15223  157C  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 15224  157D  0141               	movlb	1	; select bank1
 15225  157E  00EC               	movwf	_ADCC_ADTI_InterruptHandler^(0+128)
 15226  157F  0008               	return
 15227  1580                     __end_of_ADCC_SetADTIInterruptHandler:	
 15228                           
 15229                           	psect	text54
 15230  156E                     __ptext54:	
 15231 ;; *************** function _BEAT_detected *****************
 15232 ;; Defined at:
 15233 ;;		line 50 in file "beat.c"
 15234 ;; Parameters:    Size  Location     Type
 15235 ;;		None
 15236 ;; Auto vars:     Size  Location     Type
 15237 ;;		None
 15238 ;; Return value:  Size  Location     Type
 15239 ;;                  1    wreg      _Bool 
 15240 ;; Registers used:
 15241 ;;		wreg, status,2, status,0
 15242 ;; Tracked objects:
 15243 ;;		On entry : 0/0
 15244 ;;		On exit  : 0/0
 15245 ;;		Unchanged: 0/0
 15246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15251 ;;Total ram usage:        0 bytes
 15252 ;; Hardware stack levels used:    1
 15253 ;; Hardware stack levels required when called:    4
 15254 ;; This function calls:
 15255 ;;		Nothing
 15256 ;; This function is called by:
 15257 ;;		_main
 15258 ;; This function uses a non-reentrant model
 15259 ;;
 15260                           
 15261                           
 15262                           ;psect for function _BEAT_detected
 15263  156E                     _BEAT_detected:	
 15264                           
 15265                           ;beat.c: 51:     if (detected) {
 15266                           
 15267                           ;incstack = 0
 15268                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 15269  156E  0141               	movlb	1	; select bank1
 15270  156F  083F               	movf	_detected^(0+128),w
 15271  1570  1903               	btfsc	3,2
 15272  1571  2D75               	goto	l5463
 15273                           
 15274                           ;beat.c: 52:         detected = 0;
 15275  1572  01BF               	clrf	_detected^(0+128)
 15276                           
 15277                           ;beat.c: 53:         return 1;
 15278  1573  3001               	movlw	1
 15279  1574  0008               	return
 15280  1575                     l5463:	
 15281                           
 15282                           ;beat.c: 56:     return 0;
 15283  1575  3000               	movlw	0
 15284  1576  0008               	return
 15285  1577                     __end_of_BEAT_detected:	
 15286                           
 15287                           	psect	intentry
 15288  0004                     __pintentry:	
 15289 ;; *************** function _INTERRUPT_InterruptManager *****************
 15290 ;; Defined at:
 15291 ;;		line 55 in file "mcc_generated_files/interrupt_manager.c"
 15292 ;; Parameters:    Size  Location     Type
 15293 ;;		None
 15294 ;; Auto vars:     Size  Location     Type
 15295 ;;		None
 15296 ;; Return value:  Size  Location     Type
 15297 ;;                  1    wreg      void 
 15298 ;; Registers used:
 15299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15300 ;; Tracked objects:
 15301 ;;		On entry : 0/0
 15302 ;;		On exit  : 0/0
 15303 ;;		Unchanged: 0/0
 15304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15309 ;;Total ram usage:        0 bytes
 15310 ;; Hardware stack levels used:    1
 15311 ;; Hardware stack levels required when called:    3
 15312 ;; This function calls:
 15313 ;;		Absolute function
 15314 ;;		_ADCC_ThresholdISR
 15315 ;;		_EUSART1_Receive_ISR
 15316 ;;		_EUSART1_Transmit_ISR
 15317 ;;		_I2C1_BusCollisionISR
 15318 ;;		_I2C1_ISR
 15319 ;;		_TMR0_ISR
 15320 ;;		_handler
 15321 ;;		i1_CLOCK_getTime
 15322 ;; This function is called by:
 15323 ;;		Interrupt level 1
 15324 ;; This function uses a non-reentrant model
 15325 ;;
 15326                           
 15327  0004                     _INTERRUPT_InterruptManager:	
 15328                           
 15329                           ;incstack = 0
 15330  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 15331                           
 15332                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15333  0005  3180               	pagesel	$
 15334                           
 15335                           ;mcc_generated_files/interrupt_manager.c: 58:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 15336  0006  014E               	movlb	14	; select bank14
 15337  0007  1A96               	btfsc	22,5	;volatile
 15338  0008  1E8C               	btfss	12,5	;volatile
 15339  0009  280E               	goto	i1l181
 15340                           
 15341                           ;mcc_generated_files/interrupt_manager.c: 59:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 60:         TMR0_ISR();
 15342  000A  3196  2611  3180   	fcall	_TMR0_ISR
 15343                           
 15344                           ;mcc_generated_files/interrupt_manager.c: 61:     }
 15345  000D  283F               	goto	i1l195
 15346  000E                     i1l181:	
 15347                           ;mcc_generated_files/interrupt_manager.c: 62:     else if(INTCONbits.PEIE == 1)
 15348                           
 15349  000E  1F0B               	btfss	11,6	;volatile
 15350  000F  283F               	goto	i1l195
 15351                           
 15352                           ;mcc_generated_files/interrupt_manager.c: 63:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 64:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 15353  0010  1899               	btfsc	25,1	;volatile
 15354  0011  1C8F               	btfss	15,1	;volatile
 15355  0012  2817               	goto	i1l184
 15356                           
 15357                           ;mcc_generated_files/interrupt_manager.c: 65:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 66:             I2C1_BusCollisionISR();
 15358  0013  3195  2541  3180   	fcall	_I2C1_BusCollisionISR
 15359                           
 15360                           ;mcc_generated_files/interrupt_manager.c: 67:         }
 15361  0016  283F               	goto	i1l195
 15362  0017                     i1l184:	
 15363                           ;mcc_generated_files/interrupt_manager.c: 68:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 15364                           
 15365  0017  1819               	btfsc	25,0	;volatile
 15366  0018  1C0F               	btfss	15,0	;volatile
 15367  0019  281E               	goto	i1l186
 15368                           
 15369                           ;mcc_generated_files/interrupt_manager.c: 69:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 70:             I2C1_ISR();
 15370  001A  318E  26B2  3180   	fcall	_I2C1_ISR
 15371                           
 15372                           ;mcc_generated_files/interrupt_manager.c: 71:         }
 15373  001D  283F               	goto	i1l195
 15374  001E                     i1l186:	
 15375                           ;mcc_generated_files/interrupt_manager.c: 72:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 15376                           
 15377  001E  1A19               	btfsc	25,4	;volatile
 15378  001F  1E0F               	btfss	15,4	;volatile
 15379  0020  2828               	goto	i1l188
 15380                           
 15381                           ;mcc_generated_files/interrupt_manager.c: 73:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 74:             EUSART1_TxDefaultInterruptHandler();
 15382  0021  0142               	movlb	2	; select bank2
 15383  0022  0853               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 15384  0023  008A               	movwf	10
 15385  0024  0852               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 15386  0025  000A               	callw
 15387  0026  3180               	pagesel	$
 15388                           
 15389                           ;mcc_generated_files/interrupt_manager.c: 75:         }
 15390  0027  283F               	goto	i1l195
 15391  0028                     i1l188:	
 15392                           ;mcc_generated_files/interrupt_manager.c: 76:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 15393                           
 15394  0028  1A99               	btfsc	25,5	;volatile
 15395  0029  1E8F               	btfss	15,5	;volatile
 15396  002A  283A               	goto	i1l190
 15397                           
 15398                           ;mcc_generated_files/interrupt_manager.c: 77:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 78:             EUSART1_RxDefaultInterruptHandler();
 15399  002B  0142               	movlb	2	; select bank2
 15400  002C  0851               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 15401  002D  008A               	movwf	10
 15402  002E  0850               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 15403  002F  000A               	callw
 15404  0030  3180               	pagesel	$
 15405                           
 15406                           ;mcc_generated_files/interrupt_manager.c: 79:             lastActiveDMXTime = CLOCK_getT
      +                          ime();
 15407  0031  3195  255A  3180   	fcall	i1_CLOCK_getTime
 15408  0034  0877               	movf	?i1_CLOCK_getTime+1,w
 15409  0035  0141               	movlb	1	; select bank1
 15410  0036  00BC               	movwf	(_lastActiveDMXTime+1)^(0+128)
 15411  0037  0876               	movf	?i1_CLOCK_getTime,w
 15412  0038  00BB               	movwf	_lastActiveDMXTime^(0+128)
 15413                           
 15414                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 15415  0039  283F               	goto	i1l195
 15416  003A                     i1l190:	
 15417                           ;mcc_generated_files/interrupt_manager.c: 81:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 15418                           
 15419  003A  1897               	btfsc	23,1	;volatile
 15420  003B  1C8D               	btfss	13,1	;volatile
 15421  003C  283F               	goto	i1l195
 15422                           
 15423                           ;mcc_generated_files/interrupt_manager.c: 82:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 83:             ADCC_ThresholdISR();
 15424  003D  3196  2604         	fcall	_ADCC_ThresholdISR
 15425  003F                     i1l195:	
 15426                           ;mcc_generated_files/interrupt_manager.c: 84:         }
 15427                           
 15428  003F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 15429  0040  0009               	retfie
 15430  0041                     __end_of_INTERRUPT_InterruptManager:	
 15431                           
 15432                           	psect	text56
 15433  155A                     __ptext56:	
 15434 ;; *************** function i1_CLOCK_getTime *****************
 15435 ;; Defined at:
 15436 ;;		line 25 in file "clock.c"
 15437 ;; Parameters:    Size  Location     Type
 15438 ;;		None
 15439 ;; Auto vars:     Size  Location     Type
 15440 ;;		None
 15441 ;; Return value:  Size  Location     Type
 15442 ;;                  2    0[COMMON] unsigned short 
 15443 ;; Registers used:
 15444 ;;		wreg
 15445 ;; Tracked objects:
 15446 ;;		On entry : 0/0
 15447 ;;		On exit  : 0/0
 15448 ;;		Unchanged: 0/0
 15449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15454 ;;Total ram usage:        2 bytes
 15455 ;; Hardware stack levels used:    1
 15456 ;; This function calls:
 15457 ;;		Nothing
 15458 ;; This function is called by:
 15459 ;;		_INTERRUPT_InterruptManager
 15460 ;; This function uses a non-reentrant model
 15461 ;;
 15462                           
 15463                           
 15464                           ;psect for function i1_CLOCK_getTime
 15465  155A                     i1_CLOCK_getTime:	
 15466                           
 15467                           ;clock.c: 26:     return currentTime;
 15468                           
 15469                           ;incstack = 0
 15470                           ; Regs used in i1_CLOCK_getTime: [wreg]
 15471  155A  0141               	movlb	1	; select bank1
 15472  155B  0830               	movf	(_currentTime+1)^(0+128),w
 15473  155C  00F7               	movwf	?i1_CLOCK_getTime+1
 15474  155D  082F               	movf	_currentTime^(0+128),w
 15475  155E  00F6               	movwf	?i1_CLOCK_getTime
 15476  155F  0008               	return
 15477  1560                     __end_ofi1_CLOCK_getTime:	
 15478                           
 15479                           	psect	text57
 15480  08CA                     __ptext57:	
 15481 ;; *************** function _EUSART1_Receive_ISR *****************
 15482 ;; Defined at:
 15483 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 15484 ;; Parameters:    Size  Location     Type
 15485 ;;		None
 15486 ;; Auto vars:     Size  Location     Type
 15487 ;;		None
 15488 ;; Return value:  Size  Location     Type
 15489 ;;                  1    wreg      void 
 15490 ;; Registers used:
 15491 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15492 ;; Tracked objects:
 15493 ;;		On entry : 0/0
 15494 ;;		On exit  : 0/0
 15495 ;;		Unchanged: 0/0
 15496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15501 ;;Total ram usage:        0 bytes
 15502 ;; Hardware stack levels used:    1
 15503 ;; Hardware stack levels required when called:    2
 15504 ;; This function calls:
 15505 ;;		Absolute function
 15506 ;;		_EUSART1_DefaultErrorHandler
 15507 ;;		_EUSART1_DefaultFramingErrorHandler
 15508 ;;		_EUSART1_DefaultOverrunErrorHandler
 15509 ;;		_EUSART1_RxDataHandler
 15510 ;; This function is called by:
 15511 ;;		_EUSART1_Initialize
 15512 ;;		_INTERRUPT_InterruptManager
 15513 ;; This function uses a non-reentrant model
 15514 ;;
 15515                           
 15516                           
 15517                           ;psect for function _EUSART1_Receive_ISR
 15518  08CA                     _EUSART1_Receive_ISR:	
 15519                           
 15520                           ;mcc_generated_files/eusart1.c: 216:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 15521                           
 15522                           ;incstack = 0
 15523                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15524  08CA  0871               	movf	_eusart1RxHead,w	;volatile
 15525  08CB  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 15526  08CC  0086               	movwf	6
 15527  08CD  3001               	movlw	1	; select bank2/3
 15528  08CE  0087               	movwf	7
 15529  08CF  0181               	clrf	1
 15530                           
 15531                           ;mcc_generated_files/eusart1.c: 218:     if(RC1STAbits.FERR){
 15532  08D0  0142               	movlb	2	; select bank2
 15533  08D1  1D1D               	btfss	29,2	;volatile
 15534  08D2  28DE               	goto	i1l4067
 15535                           
 15536                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 15537  08D3  0871               	movf	_eusart1RxHead,w	;volatile
 15538  08D4  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 15539  08D5  0086               	movwf	6
 15540  08D6  3001               	movlw	1	; select bank2/3
 15541  08D7  0087               	movwf	7
 15542  08D8  1481               	bsf	1,1
 15543                           
 15544                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_FramingErrorHandler();
 15545  08D9  084F               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 15546  08DA  008A               	movwf	10
 15547  08DB  084E               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 15548  08DC  000A               	callw
 15549  08DD  3188               	pagesel	$
 15550  08DE                     i1l4067:	
 15551                           
 15552                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.OERR){
 15553  08DE  0142               	movlb	2	; select bank2
 15554  08DF  1C9D               	btfss	29,1	;volatile
 15555  08E0  28EC               	goto	i1l4073
 15556                           
 15557                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 15558  08E1  0871               	movf	_eusart1RxHead,w	;volatile
 15559  08E2  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 15560  08E3  0086               	movwf	6
 15561  08E4  3001               	movlw	1	; select bank2/3
 15562  08E5  0087               	movwf	7
 15563  08E6  1501               	bsf	1,2
 15564                           
 15565                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_OverrunErrorHandler();
 15566  08E7  084D               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 15567  08E8  008A               	movwf	10
 15568  08E9  084C               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 15569  08EA  000A               	callw
 15570  08EB  3188               	pagesel	$
 15571  08EC                     i1l4073:	
 15572                           
 15573                           ;mcc_generated_files/eusart1.c: 228:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 15574  08EC  0871               	movf	_eusart1RxHead,w	;volatile
 15575  08ED  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 15576  08EE  0086               	movwf	6
 15577  08EF  3001               	movlw	1	; select bank2/3
 15578  08F0  0087               	movwf	7
 15579  08F1  0801               	movf	1,w
 15580  08F2  1903               	btfsc	3,2
 15581  08F3  28FB               	goto	i1l4077
 15582                           
 15583                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_ErrorHandler();
 15584  08F4  0142               	movlb	2	; select bank2
 15585  08F5  084B               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 15586  08F6  008A               	movwf	10
 15587  08F7  084A               	movf	_EUSART1_ErrorHandler^(0+256),w
 15588  08F8  000A               	callw
 15589  08F9  3188               	pagesel	$
 15590                           
 15591                           ;mcc_generated_files/eusart1.c: 230:     } else {
 15592  08FA  0008               	return
 15593  08FB                     i1l4077:	
 15594                           
 15595                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_RxDataHandler();
 15596  08FB  3196  26A1         	fcall	_EUSART1_RxDataHandler
 15597  08FD  0008               	return
 15598  08FE                     __end_of_EUSART1_Receive_ISR:	
 15599                           
 15600                           	psect	text58
 15601  08FE                     __ptext58:	
 15602 ;; *************** function _handler *****************
 15603 ;; Defined at:
 15604 ;;		line 18 in file "lights.c"
 15605 ;; Parameters:    Size  Location     Type
 15606 ;;		None
 15607 ;; Auto vars:     Size  Location     Type
 15608 ;;  dataIn          1    4[COMMON] unsigned char 
 15609 ;; Return value:  Size  Location     Type
 15610 ;;                  1    wreg      void 
 15611 ;; Registers used:
 15612 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15613 ;; Tracked objects:
 15614 ;;		On entry : 0/0
 15615 ;;		On exit  : 0/0
 15616 ;;		Unchanged: 0/0
 15617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15620 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15621 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15622 ;;Total ram usage:        5 bytes
 15623 ;; Hardware stack levels used:    1
 15624 ;; This function calls:
 15625 ;;		Nothing
 15626 ;; This function is called by:
 15627 ;;		_DMX_init
 15628 ;;		_INTERRUPT_InterruptManager
 15629 ;; This function uses a non-reentrant model
 15630 ;;
 15631                           
 15632                           
 15633                           ;psect for function _handler
 15634  08FE                     _handler:	
 15635                           
 15636                           ;lights.c: 19:     LATC5 = 1;
 15637                           
 15638                           ;incstack = 0
 15639                           ; Regs used in _handler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15640  08FE  0140               	movlb	0	; select bank0
 15641  08FF  169A               	bsf	26,5	;volatile
 15642                           
 15643                           ;lights.c: 20:     if(RC1STAbits.OERR == 1){
 15644  0900  0142               	movlb	2	; select bank2
 15645  0901  1C9D               	btfss	29,1	;volatile
 15646  0902  2905               	goto	i1l4461
 15647                           
 15648                           ;lights.c: 21:                 RC1STAbits.CREN = 0;
 15649  0903  121D               	bcf	29,4	;volatile
 15650                           
 15651                           ;lights.c: 22:                 RC1STAbits.CREN = 1;
 15652  0904  161D               	bsf	29,4	;volatile
 15653  0905                     i1l4461:	
 15654                           
 15655                           ;lights.c: 24:             uint8_t dataIn = RC1REG;
 15656  0905  0819               	movf	25,w	;volatile
 15657  0906  00F6               	movwf	??_handler
 15658  0907  0876               	movf	??_handler,w
 15659  0908  00FA               	movwf	handler@dataIn
 15660                           
 15661                           ;lights.c: 25:             if(RC1STAbits.FERR == 1){
 15662  0909  1D1D               	btfss	29,2	;volatile
 15663  090A  290F               	goto	i1l4467
 15664                           
 15665                           ;lights.c: 26:                 point = 0;
 15666  090B  0141               	movlb	1	; select bank1
 15667  090C  01B1               	clrf	_point^(0+128)
 15668  090D  01B2               	clrf	(_point+1)^(0+128)
 15669                           
 15670                           ;lights.c: 27:             }else if(point > 513){
 15671  090E  2930               	goto	i1l4475
 15672  090F                     i1l4467:	
 15673  090F  0141               	movlb	1	; select bank1
 15674  0910  0832               	movf	(_point+1)^(0+128),w
 15675  0911  3A80               	xorlw	128
 15676  0912  00F6               	movwf	??_handler
 15677  0913  3082               	movlw	130
 15678  0914  0276               	subwf	??_handler,w
 15679  0915  1D03               	skipz
 15680  0916  2919               	goto	u395_25
 15681  0917  3002               	movlw	2
 15682  0918  0231               	subwf	_point^(0+128),w
 15683  0919                     u395_25:	
 15684  0919  1803               	btfsc	3,0
 15685  091A  2930               	goto	i1l4475
 15686                           
 15687                           ;lights.c: 30:                 inputArray[point] = dataIn;
 15688  091B  30EF               	movlw	239
 15689  091C  00F6               	movwf	??_handler
 15690  091D  3025               	movlw	37
 15691  091E  00F7               	movwf	??_handler+1
 15692  091F  0141               	movlb	1	; select bank1
 15693  0920  0831               	movf	_point^(0+128),w
 15694  0921  0776               	addwf	??_handler,w
 15695  0922  00F8               	movwf	??_handler+2
 15696  0923  0832               	movf	(_point+1)^(0+128),w
 15697  0924  3D77               	addwfc	??_handler+1,w
 15698  0925  00F9               	movwf	??_handler+3
 15699  0926  0878               	movf	??_handler+2,w
 15700  0927  0086               	movwf	6
 15701  0928  0879               	movf	??_handler+3,w
 15702  0929  0087               	movwf	7
 15703  092A  087A               	movf	handler@dataIn,w
 15704  092B  0081               	movwf	1
 15705                           
 15706                           ;lights.c: 31:                 point++;
 15707  092C  3001               	movlw	1
 15708  092D  07B1               	addwf	_point^(0+128),f
 15709  092E  3000               	movlw	0
 15710  092F  3DB2               	addwfc	(_point+1)^(0+128),f
 15711  0930                     i1l4475:	
 15712                           
 15713                           ;lights.c: 33:     LATC5 = 0;
 15714  0930  0140               	movlb	0	; select bank0
 15715  0931  129A               	bcf	26,5	;volatile
 15716  0932  0008               	return
 15717  0933                     __end_of_handler:	
 15718                           
 15719                           	psect	text59
 15720  1611                     __ptext59:	
 15721 ;; *************** function _TMR0_ISR *****************
 15722 ;; Defined at:
 15723 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 15724 ;; Parameters:    Size  Location     Type
 15725 ;;		None
 15726 ;; Auto vars:     Size  Location     Type
 15727 ;;		None
 15728 ;; Return value:  Size  Location     Type
 15729 ;;                  1    wreg      void 
 15730 ;; Registers used:
 15731 ;;		wreg, status,2, status,0, pclath, cstack
 15732 ;; Tracked objects:
 15733 ;;		On entry : 0/0
 15734 ;;		On exit  : 0/0
 15735 ;;		Unchanged: 0/0
 15736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15741 ;;Total ram usage:        0 bytes
 15742 ;; Hardware stack levels used:    1
 15743 ;; Hardware stack levels required when called:    1
 15744 ;; This function calls:
 15745 ;;		Absolute function
 15746 ;;		_CLOCK_timerCallback
 15747 ;;		_TMR0_DefaultInterruptHandler
 15748 ;; This function is called by:
 15749 ;;		_INTERRUPT_InterruptManager
 15750 ;; This function uses a non-reentrant model
 15751 ;;
 15752                           
 15753                           
 15754                           ;psect for function _TMR0_ISR
 15755  1611                     _TMR0_ISR:	
 15756                           
 15757                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 15758                           
 15759                           ;incstack = 0
 15760                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 15761  1611  014E               	movlb	14	; select bank14
 15762  1612  128C               	bcf	12,5	;volatile
 15763                           
 15764                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 15765  1613  0142               	movlb	2	; select bank2
 15766  1614  0848               	movf	_TMR0_InterruptHandler^(0+256),w
 15767  1615  0449               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 15768  1616  1903               	btfsc	3,2
 15769  1617  0008               	return
 15770                           
 15771                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 15772  1618  0849               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 15773  1619  008A               	movwf	10
 15774  161A  0848               	movf	_TMR0_InterruptHandler^(0+256),w
 15775  161B  000A               	callw
 15776  161C  3196               	pagesel	$
 15777  161D  0008               	return
 15778  161E                     __end_of_TMR0_ISR:	
 15779                           
 15780                           	psect	text60
 15781  1554                     __ptext60:	
 15782 ;; *************** function _CLOCK_timerCallback *****************
 15783 ;; Defined at:
 15784 ;;		line 15 in file "clock.c"
 15785 ;; Parameters:    Size  Location     Type
 15786 ;;		None
 15787 ;; Auto vars:     Size  Location     Type
 15788 ;;		None
 15789 ;; Return value:  Size  Location     Type
 15790 ;;                  1    wreg      void 
 15791 ;; Registers used:
 15792 ;;		wreg
 15793 ;; Tracked objects:
 15794 ;;		On entry : 0/0
 15795 ;;		On exit  : 0/0
 15796 ;;		Unchanged: 0/0
 15797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15802 ;;Total ram usage:        0 bytes
 15803 ;; Hardware stack levels used:    1
 15804 ;; This function calls:
 15805 ;;		Nothing
 15806 ;; This function is called by:
 15807 ;;		_CLOCK_init
 15808 ;;		_TMR0_ISR
 15809 ;; This function uses a non-reentrant model
 15810 ;;
 15811                           
 15812                           
 15813                           ;psect for function _CLOCK_timerCallback
 15814  1554                     _CLOCK_timerCallback:	
 15815                           
 15816                           ;clock.c: 17:     currentTime++;
 15817                           
 15818                           ;incstack = 0
 15819                           ; Regs used in _CLOCK_timerCallback: [wreg]
 15820  1554  3001               	movlw	1
 15821  1555  0141               	movlb	1	; select bank1
 15822  1556  07AF               	addwf	_currentTime^(0+128),f
 15823  1557  3000               	movlw	0
 15824  1558  3DB0               	addwfc	(_currentTime+1)^(0+128),f
 15825  1559  0008               	return
 15826  155A                     __end_of_CLOCK_timerCallback:	
 15827                           
 15828                           	psect	text61
 15829  07FE                     __ptext61:	
 15830 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 15831 ;; Defined at:
 15832 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 15833 ;; Parameters:    Size  Location     Type
 15834 ;;		None
 15835 ;; Auto vars:     Size  Location     Type
 15836 ;;		None
 15837 ;; Return value:  Size  Location     Type
 15838 ;;                  1    wreg      void 
 15839 ;; Registers used:
 15840 ;;		None
 15841 ;; Tracked objects:
 15842 ;;		On entry : 0/0
 15843 ;;		On exit  : 0/0
 15844 ;;		Unchanged: 0/0
 15845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15850 ;;Total ram usage:        0 bytes
 15851 ;; Hardware stack levels used:    1
 15852 ;; This function calls:
 15853 ;;		Nothing
 15854 ;; This function is called by:
 15855 ;;		_TMR0_Initialize
 15856 ;;		_TMR0_ISR
 15857 ;; This function uses a non-reentrant model
 15858 ;;
 15859                           
 15860                           
 15861                           ;psect for function _TMR0_DefaultInterruptHandler
 15862  07FE                     _TMR0_DefaultInterruptHandler:	
 15863                           
 15864                           ;incstack = 0
 15865                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 15866  07FE  0008               	return
 15867  07FF                     __end_of_TMR0_DefaultInterruptHandler:	
 15868                           
 15869                           	psect	text62
 15870  0EB2                     __ptext62:	
 15871 ;; *************** function _I2C1_ISR *****************
 15872 ;; Defined at:
 15873 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 15874 ;; Parameters:    Size  Location     Type
 15875 ;;		None
 15876 ;; Auto vars:     Size  Location     Type
 15877 ;;		None
 15878 ;; Return value:  Size  Location     Type
 15879 ;;                  1    wreg      void 
 15880 ;; Registers used:
 15881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15882 ;; Tracked objects:
 15883 ;;		On entry : 0/0
 15884 ;;		On exit  : 0/0
 15885 ;;		Unchanged: 0/0
 15886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15889 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15890 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15891 ;;Total ram usage:        4 bytes
 15892 ;; Hardware stack levels used:    1
 15893 ;; Hardware stack levels required when called:    1
 15894 ;; This function calls:
 15895 ;;		_I2C1_FunctionComplete
 15896 ;;		_I2C1_Stop
 15897 ;; This function is called by:
 15898 ;;		_INTERRUPT_InterruptManager
 15899 ;; This function uses a non-reentrant model
 15900 ;;
 15901                           
 15902                           
 15903                           ;psect for function _I2C1_ISR
 15904  0EB2                     _I2C1_ISR:	
 15905                           
 15906                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 15907                           
 15908                           ;incstack = 0
 15909                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15910  0EB2  014E               	movlb	14	; select bank14
 15911  0EB3  100F               	bcf	15,0	;volatile
 15912                           
 15913                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 15914  0EB4  0143               	movlb	3	; select bank3
 15915  0EB5  1F90               	btfss	16,7	;volatile
 15916  0EB6  2FD3               	goto	i1l4223
 15917                           
 15918                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 15919  0EB7  1390               	bcf	16,7	;volatile
 15920                           
 15921                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 15922  0EB8  0141               	movlb	1	; select bank1
 15923  0EB9  01CB               	clrf	_i2c1_state^(0+128)
 15924                           
 15925                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 15926  0EBA  0848               	movf	_p_i2c1_current^(0+128),w
 15927  0EBB  3E02               	addlw	2
 15928  0EBC  0086               	movwf	6
 15929  0EBD  0187               	clrf	7
 15930  0EBE  0801               	movf	1,w
 15931  0EBF  0086               	movwf	6
 15932  0EC0  0187               	clrf	7
 15933  0EC1  0181               	clrf	1
 15934  0EC2  0A81               	incf	1,f
 15935                           
 15936                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 15937  0EC3  01C8               	clrf	_p_i2c1_current^(0+128)
 15938  0EC4  0008               	return
 15939  0EC5                     i1l308:	
 15940                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 15941                           
 15942                           
 15943                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 15944  0EC5  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
 15945  0EC6  0008               	return
 15946                           
 15947                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 15948  0EC7  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15949  0EC8  00F8               	movwf	??_I2C1_ISR
 15950  0EC9  0878               	movf	??_I2C1_ISR,w
 15951  0ECA  00C8               	movwf	_p_i2c1_current^(0+128)
 15952                           
 15953                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 15954  0ECB  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15955  0ECC  0086               	movwf	6
 15956  0ECD  0187               	clrf	7
 15957  0ECE  0801               	movf	1,w
 15958  0ECF  00F8               	movwf	??_I2C1_ISR
 15959  0ED0  0878               	movf	??_I2C1_ISR,w
 15960  0ED1  00CA               	movwf	_i2c1_trb_count^(0+128)
 15961                           
 15962                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 15963  0ED2  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15964  0ED3  0086               	movwf	6
 15965  0ED4  0187               	clrf	7
 15966  0ED5  3F41               	moviw [1]fsr1
 15967  0ED6  00C9               	movwf	_p_i2c1_trb_current^(0+128)
 15968                           
 15969                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 15970  0ED7  3003               	movlw	3
 15971  0ED8  00F8               	movwf	??_I2C1_ISR
 15972  0ED9  0878               	movf	??_I2C1_ISR,w
 15973  0EDA  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 15974                           
 15975                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 15976  0EDB  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15977  0EDC  3AD1               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 15978  0EDD  1D03               	skipz
 15979  0EDE  2EE3               	goto	i1l4111
 15980                           
 15981                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 15982  0EDF  30CE               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 15983  0EE0  00F8               	movwf	??_I2C1_ISR
 15984  0EE1  0878               	movf	??_I2C1_ISR,w
 15985  0EE2  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 15986  0EE3                     i1l4111:	
 15987                           
 15988                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 15989  0EE3  1022               	bcf	(_i2c1_object^(0+128)+2),0
 15990                           
 15991                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 15992  0EE4  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15993  0EE5  0620               	xorwf	_i2c1_object^(0+128),w
 15994  0EE6  1903               	btfsc	3,2
 15995                           
 15996                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 15997  0EE7  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 15998                           
 15999                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 16000                           
 16001                           ;mcc_generated_files/i2c1.c: 290:                 }
 16002  0EE8  0143               	movlb	3	; select bank3
 16003  0EE9  1411               	bsf	17,0	;volatile
 16004  0EEA                     i1l4115:	
 16005                           
 16006                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 16007  0EEA  3002               	movlw	2
 16008  0EEB  00F8               	movwf	??_I2C1_ISR
 16009  0EEC  0878               	movf	??_I2C1_ISR,w
 16010  0EED  0141               	movlb	1	; select bank1
 16011  0EEE  00CB               	movwf	_i2c1_state^(0+128)
 16012  0EEF  0008               	return
 16013  0EF0                     i1l313:	
 16014                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 16015                           
 16016  0EF0  2F7C               	goto	i1l334
 16017  0EF1                     i1l314:	
 16018                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 16019                           
 16020                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 16021                           
 16022                           
 16023                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 16024  0EF1  0143               	movlb	3	; select bank3
 16025  0EF2  1F11               	btfss	17,6	;volatile
 16026  0EF3  2EFD               	goto	i1l4123
 16027                           
 16028                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 16029  0EF4  3001               	movlw	1
 16030  0EF5  00F8               	movwf	??_I2C1_ISR
 16031  0EF6  0878               	movf	??_I2C1_ISR,w
 16032  0EF7  0141               	movlb	1	; select bank1
 16033  0EF8  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 16034                           
 16035                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 16036  0EF9  3004               	movlw	4
 16037  0EFA  3196  26B9         	fcall	_I2C1_Stop
 16038                           
 16039                           ;mcc_generated_files/i2c1.c: 319:             }
 16040  0EFC  0008               	return
 16041  0EFD                     i1l4123:	
 16042                           
 16043                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 16044  0EFD  0875               	movf	I2C1_ISR@i2c_address+1,w
 16045  0EFE  00F9               	movwf	??_I2C1_ISR+1
 16046  0EFF  0874               	movf	I2C1_ISR@i2c_address,w
 16047  0F00  00F8               	movwf	??_I2C1_ISR
 16048  0F01  36F9               	lsrf	??_I2C1_ISR+1,f
 16049  0F02  0CF8               	rrf	??_I2C1_ISR,f
 16050  0F03  0878               	movf	??_I2C1_ISR,w
 16051  0F04  008C               	movwf	12	;volatile
 16052                           
 16053                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 16054  0F05  1C74               	btfss	I2C1_ISR@i2c_address,0
 16055  0F06  2F0D               	goto	i1l4129
 16056                           
 16057                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 16058  0F07  300B               	movlw	11
 16059  0F08  00F8               	movwf	??_I2C1_ISR
 16060  0F09  0878               	movf	??_I2C1_ISR,w
 16061  0F0A  0141               	movlb	1	; select bank1
 16062  0F0B  00CB               	movwf	_i2c1_state^(0+128)
 16063                           
 16064                           ;mcc_generated_files/i2c1.c: 331:                 }
 16065  0F0C  0008               	return
 16066  0F0D                     i1l4129:	
 16067                           
 16068                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 16069  0F0D  3003               	movlw	3
 16070  0F0E  00F8               	movwf	??_I2C1_ISR
 16071  0F0F  0878               	movf	??_I2C1_ISR,w
 16072  0F10  0141               	movlb	1	; select bank1
 16073  0F11  00CB               	movwf	_i2c1_state^(0+128)
 16074  0F12  0008               	return
 16075  0F13                     i1l319:	
 16076                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 16077                           
 16078                           
 16079                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 16080  0F13  0143               	movlb	3	; select bank3
 16081  0F14  1F11               	btfss	17,6	;volatile
 16082  0F15  2F1F               	goto	i1l320
 16083                           
 16084                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 16085  0F16  3001               	movlw	1
 16086  0F17  00F8               	movwf	??_I2C1_ISR
 16087  0F18  0878               	movf	??_I2C1_ISR,w
 16088  0F19  0141               	movlb	1	; select bank1
 16089  0F1A  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 16090                           
 16091                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 16092  0F1B  3004               	movlw	4
 16093  0F1C  3196  26B9         	fcall	_I2C1_Stop
 16094                           
 16095                           ;mcc_generated_files/i2c1.c: 347:             }
 16096  0F1E  0008               	return
 16097  0F1F                     i1l320:	
 16098                           ;mcc_generated_files/i2c1.c: 348:             else
 16099                           
 16100                           
 16101                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 16102  0F1F  1491               	bsf	17,1	;volatile
 16103                           
 16104                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 16105  0F20  0875               	movf	I2C1_ISR@i2c_address+1,w
 16106  0F21  00F9               	movwf	??_I2C1_ISR+1
 16107  0F22  0874               	movf	I2C1_ISR@i2c_address,w
 16108  0F23  00F8               	movwf	??_I2C1_ISR
 16109  0F24  0879               	movf	??_I2C1_ISR+1,w
 16110  0F25  00F8               	movwf	??_I2C1_ISR
 16111  0F26  01F9               	clrf	??_I2C1_ISR+1
 16112  0F27  3006               	movlw	6
 16113  0F28  0578               	andwf	??_I2C1_ISR,w
 16114  0F29  00FA               	movwf	??_I2C1_ISR+2
 16115  0F2A  3000               	movlw	0
 16116  0F2B  0579               	andwf	??_I2C1_ISR+1,w
 16117  0F2C  00FB               	movwf	??_I2C1_ISR+3
 16118  0F2D  30F0               	movlw	240
 16119  0F2E  047A               	iorwf	??_I2C1_ISR+2,w
 16120  0F2F  00F4               	movwf	I2C1_ISR@i2c_address
 16121  0F30  3000               	movlw	0
 16122  0F31  047B               	iorwf	??_I2C1_ISR+3,w
 16123  0F32  00F5               	movwf	I2C1_ISR@i2c_address+1
 16124                           
 16125                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 16126  0F33  1474               	bsf	I2C1_ISR@i2c_address,0
 16127                           
 16128                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 16129  0F34  0141               	movlb	1	; select bank1
 16130  0F35  01C5               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 16131  0F36  0AC5               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 16132  0F37  2EEA               	goto	i1l4115
 16133  0F38                     i1l4143:	
 16134                           
 16135                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 16136  0F38  0345               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 16137  0F39  1903               	btfsc	3,2
 16138  0F3A  2F51               	goto	i1l4163
 16139                           
 16140                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 16141  0F3B  0849               	movf	_p_i2c1_trb_current^(0+128),w
 16142  0F3C  0086               	movwf	6
 16143  0F3D  3001               	movlw	1	; select bank2/3
 16144  0F3E  0087               	movwf	7
 16145  0F3F  3F40               	moviw [0]fsr1
 16146  0F40  00F4               	movwf	I2C1_ISR@i2c_address
 16147  0F41  3F41               	moviw [1]fsr1
 16148  0F42  00F5               	movwf	I2C1_ISR@i2c_address+1
 16149                           
 16150                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 16151  0F43  0849               	movf	_p_i2c1_trb_current^(0+128),w
 16152  0F44  0086               	movwf	6
 16153  0F45  3001               	movlw	1	; select bank2/3
 16154  0F46  0087               	movwf	7
 16155  0F47  3001               	movlw	1	; select bank2/3
 16156  0F48  3F43               	moviw [3]fsr1
 16157  0F49  00C7               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 16158                           
 16159                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 16160  0F4A  0849               	movf	_p_i2c1_trb_current^(0+128),w
 16161  0F4B  0086               	movwf	6
 16162  0F4C  3001               	movlw	1	; select bank2/3
 16163  0F4D  0087               	movwf	7
 16164  0F4E  3001               	movlw	1	; select bank2/3
 16165  0F4F  3F42               	moviw [2]fsr1
 16166  0F50  00C6               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 16167  0F51                     i1l4163:	
 16168                           
 16169                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 16170  0F51  0874               	movf	I2C1_ISR@i2c_address,w
 16171  0F52  0143               	movlb	3	; select bank3
 16172  0F53  008C               	movwf	12	;volatile
 16173                           
 16174                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 16175  0F54  1C74               	btfss	I2C1_ISR@i2c_address,0
 16176  0F55  2F0D               	goto	i1l4129
 16177                           
 16178                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 16179  0F56  3005               	movlw	5
 16180  0F57  00F8               	movwf	??_I2C1_ISR
 16181  0F58  0878               	movf	??_I2C1_ISR,w
 16182  0F59  0141               	movlb	1	; select bank1
 16183  0F5A  00CB               	movwf	_i2c1_state^(0+128)
 16184                           
 16185                           ;mcc_generated_files/i2c1.c: 419:                 }
 16186  0F5B  0008               	return
 16187  0F5C                     i1l330:	
 16188                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 16189                           
 16190                           
 16191                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 16192  0F5C  0143               	movlb	3	; select bank3
 16193  0F5D  1F11               	btfss	17,6	;volatile
 16194  0F5E  2F6A               	goto	i1l4177
 16195                           
 16196                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 16197  0F5F  3001               	movlw	1
 16198  0F60  00F8               	movwf	??_I2C1_ISR
 16199  0F61  0878               	movf	??_I2C1_ISR,w
 16200  0F62  0141               	movlb	1	; select bank1
 16201  0F63  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 16202                           
 16203                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 16204  0F64  0143               	movlb	3	; select bank3
 16205  0F65  1311               	bcf	17,6	;volatile
 16206                           
 16207                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 16208  0F66  3005               	movlw	5
 16209  0F67  3196  26B9         	fcall	_I2C1_Stop
 16210                           
 16211                           ;mcc_generated_files/i2c1.c: 442:             }
 16212  0F69  0008               	return
 16213  0F6A                     i1l4177:	
 16214                           
 16215                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 16216  0F6A  3001               	movlw	1
 16217  0F6B  0141               	movlb	1	; select bank1
 16218  0F6C  02C6               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 16219  0F6D  0A46               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 16220  0F6E  1D03               	btfss	3,2
 16221  0F6F  2F7F               	goto	i1l4185
 16222                           
 16223                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 16224  0F70  3004               	movlw	4
 16225  0F71  00F8               	movwf	??_I2C1_ISR
 16226  0F72  0878               	movf	??_I2C1_ISR,w
 16227  0F73  07C9               	addwf	_p_i2c1_trb_current^(0+128),f
 16228                           
 16229                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 16230  0F74  3001               	movlw	1
 16231  0F75  02CA               	subwf	_i2c1_trb_count^(0+128),f
 16232  0F76  1D03               	btfss	3,2
 16233  0F77  2F7C               	goto	i1l334
 16234                           
 16235                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 16236  0F78  3000               	movlw	0
 16237  0F79  3196  26B9         	fcall	_I2C1_Stop
 16238                           
 16239                           ;mcc_generated_files/i2c1.c: 457:                     }
 16240  0F7B  0008               	return
 16241  0F7C                     i1l334:	
 16242                           ;mcc_generated_files/i2c1.c: 458:                     else
 16243                           
 16244                           
 16245                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 16246  0F7C  0143               	movlb	3	; select bank3
 16247  0F7D  1491               	bsf	17,1	;volatile
 16248  0F7E  2EEA               	goto	i1l4115
 16249  0F7F                     i1l4185:	
 16250                           
 16251                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 16252  0F7F  0847               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 16253  0F80  0086               	movwf	6
 16254  0F81  0187               	clrf	7
 16255  0F82  0801               	movf	1,w
 16256  0F83  0143               	movlb	3	; select bank3
 16257  0F84  008C               	movwf	12	;volatile
 16258  0F85  3001               	movlw	1
 16259  0F86  00F8               	movwf	??_I2C1_ISR
 16260  0F87  0878               	movf	??_I2C1_ISR,w
 16261  0F88  0141               	movlb	1	; select bank1
 16262  0F89  07C7               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 16263  0F8A  0008               	return
 16264  0F8B                     i1l337:	
 16265                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 16266                           
 16267                           
 16268                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 16269  0F8B  0143               	movlb	3	; select bank3
 16270  0F8C  1F11               	btfss	17,6	;volatile
 16271  0F8D  2F99               	goto	i1l338
 16272                           
 16273                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 16274  0F8E  3001               	movlw	1
 16275  0F8F  00F8               	movwf	??_I2C1_ISR
 16276  0F90  0878               	movf	??_I2C1_ISR,w
 16277  0F91  0141               	movlb	1	; select bank1
 16278  0F92  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 16279                           
 16280                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 16281  0F93  3004               	movlw	4
 16282  0F94  3196  26B9         	fcall	_I2C1_Stop
 16283                           
 16284                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 16285  0F96  0143               	movlb	3	; select bank3
 16286  0F97  1311               	bcf	17,6	;volatile
 16287                           
 16288                           ;mcc_generated_files/i2c1.c: 495:             }
 16289  0F98  0008               	return
 16290  0F99                     i1l338:	
 16291                           ;mcc_generated_files/i2c1.c: 496:             else
 16292                           
 16293                           
 16294                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 16295  0F99  1591               	bsf	17,3	;volatile
 16296                           
 16297                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 16298  0F9A  3008               	movlw	8
 16299  0F9B  00F8               	movwf	??_I2C1_ISR
 16300  0F9C  0878               	movf	??_I2C1_ISR,w
 16301  0F9D  0141               	movlb	1	; select bank1
 16302  0F9E  00CB               	movwf	_i2c1_state^(0+128)
 16303  0F9F  0008               	return
 16304  0FA0                     i1l4197:	
 16305                           
 16306                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 16307  0FA0  3008               	movlw	8
 16308  0FA1  00F8               	movwf	??_I2C1_ISR
 16309  0FA2  0878               	movf	??_I2C1_ISR,w
 16310  0FA3  00CB               	movwf	_i2c1_state^(0+128)
 16311                           
 16312                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 16313  0FA4  0143               	movlb	3	; select bank3
 16314  0FA5  1591               	bsf	17,3	;volatile
 16315                           
 16316                           ;mcc_generated_files/i2c1.c: 513:             break;
 16317  0FA6  0008               	return
 16318  0FA7                     i1l4201:	
 16319                           
 16320                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 16321  0FA7  0143               	movlb	3	; select bank3
 16322  0FA8  080C               	movf	12,w	;volatile
 16323  0FA9  00F8               	movwf	??_I2C1_ISR
 16324  0FAA  0141               	movlb	1	; select bank1
 16325  0FAB  0847               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 16326  0FAC  0086               	movwf	6
 16327  0FAD  0187               	clrf	7
 16328  0FAE  0878               	movf	??_I2C1_ISR,w
 16329  0FAF  0081               	movwf	1
 16330  0FB0  3001               	movlw	1
 16331  0FB1  00F8               	movwf	??_I2C1_ISR
 16332  0FB2  0878               	movf	??_I2C1_ISR,w
 16333  0FB3  07C7               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 16334                           
 16335                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 16336  0FB4  3001               	movlw	1
 16337  0FB5  02C6               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 16338  0FB6  1903               	btfsc	3,2
 16339  0FB7  2FC0               	goto	i1l342
 16340                           
 16341                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 16342  0FB8  0143               	movlb	3	; select bank3
 16343  0FB9  1291               	bcf	17,5	;volatile
 16344                           
 16345                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 16346  0FBA  3006               	movlw	6
 16347  0FBB  00F8               	movwf	??_I2C1_ISR
 16348  0FBC  0878               	movf	??_I2C1_ISR,w
 16349  0FBD  0141               	movlb	1	; select bank1
 16350  0FBE  00CB               	movwf	_i2c1_state^(0+128)
 16351                           
 16352                           ;mcc_generated_files/i2c1.c: 532:             }
 16353  0FBF  2FC4               	goto	i1l4213
 16354  0FC0                     i1l342:	
 16355                           ;mcc_generated_files/i2c1.c: 533:             else
 16356                           
 16357                           
 16358                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 16359  0FC0  0143               	movlb	3	; select bank3
 16360  0FC1  1691               	bsf	17,5	;volatile
 16361                           
 16362                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 16363  0FC2  3196  263C         	fcall	_I2C1_FunctionComplete
 16364  0FC4                     i1l4213:	
 16365                           
 16366                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 16367  0FC4  0143               	movlb	3	; select bank3
 16368  0FC5  1611               	bsf	17,4	;volatile
 16369                           
 16370                           ;mcc_generated_files/i2c1.c: 545:             break;
 16371  0FC6  0008               	return
 16372  0FC7                     i1l4215:	
 16373                           
 16374                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 16375  0FC7  3000               	movlw	0
 16376  0FC8  3196  26B9         	fcall	_I2C1_Stop
 16377                           
 16378                           ;mcc_generated_files/i2c1.c: 552:             break;
 16379  0FCA  0008               	return
 16380  0FCB                     i1l4217:	
 16381                           
 16382                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 16383  0FCB  3001               	movlw	1
 16384  0FCC  00F8               	movwf	??_I2C1_ISR
 16385  0FCD  0878               	movf	??_I2C1_ISR,w
 16386  0FCE  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 16387                           
 16388                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 16389  0FCF  3006               	movlw	6
 16390  0FD0  3196  26B9         	fcall	_I2C1_Stop
 16391                           
 16392                           ;mcc_generated_files/i2c1.c: 560:             break;
 16393  0FD2  0008               	return
 16394  0FD3                     i1l4223:	
 16395  0FD3  0141               	movlb	1	; select bank1
 16396  0FD4  084B               	movf	_i2c1_state^(0+128),w
 16397  0FD5  00F8               	movwf	??_I2C1_ISR
 16398  0FD6  01F9               	clrf	??_I2C1_ISR+1
 16399                           
 16400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16401                           ; Switch size 1, requested type "simple"
 16402                           ; Number of cases is 1, Range of values is 0 to 0
 16403                           ; switch strategies available:
 16404                           ; Name         Instructions Cycles
 16405                           ; simple_byte            4     3 (average)
 16406                           ; direct_byte            8     6 (fixed)
 16407                           ; jumptable            260     6 (fixed)
 16408                           ;	Chosen strategy is simple_byte
 16409  0FD7  0879               	movf	??_I2C1_ISR+1,w
 16410  0FD8  3A00               	xorlw	0	; case 0
 16411  0FD9  1903               	skipnz
 16412  0FDA  2FDC               	goto	i1l5635
 16413  0FDB  2FCB               	goto	i1l4217
 16414  0FDC                     i1l5635:	
 16415                           
 16416                           ; Switch size 1, requested type "simple"
 16417                           ; Number of cases is 11, Range of values is 0 to 11
 16418                           ; switch strategies available:
 16419                           ; Name         Instructions Cycles
 16420                           ; direct_byte           30     6 (fixed)
 16421                           ; simple_byte           34    18 (average)
 16422                           ; jumptable            260     6 (fixed)
 16423                           ;	Chosen strategy is simple_byte
 16424  0FDC  0878               	movf	??_I2C1_ISR,w
 16425  0FDD  3A00               	xorlw	0	; case 0
 16426  0FDE  1903               	skipnz
 16427  0FDF  2EC5               	goto	i1l308
 16428  0FE0  3A01               	xorlw	1	; case 1
 16429  0FE1  1903               	skipnz
 16430  0FE2  2EF0               	goto	i1l313
 16431  0FE3  3A03               	xorlw	3	; case 2
 16432  0FE4  1903               	skipnz
 16433  0FE5  2F38               	goto	i1l4143
 16434  0FE6  3A01               	xorlw	1	; case 3
 16435  0FE7  1903               	skipnz
 16436  0FE8  2F5C               	goto	i1l330
 16437  0FE9  3A07               	xorlw	7	; case 4
 16438  0FEA  1903               	skipnz
 16439  0FEB  2FC7               	goto	i1l4215
 16440  0FEC  3A01               	xorlw	1	; case 5
 16441  0FED  1903               	skipnz
 16442  0FEE  2F8B               	goto	i1l337
 16443  0FEF  3A03               	xorlw	3	; case 6
 16444  0FF0  1903               	skipnz
 16445  0FF1  2FA0               	goto	i1l4197
 16446  0FF2  3A01               	xorlw	1	; case 7
 16447  0FF3  1903               	skipnz
 16448  0FF4  2FC7               	goto	i1l4215
 16449  0FF5  3A0F               	xorlw	15	; case 8
 16450  0FF6  1903               	skipnz
 16451  0FF7  2FA7               	goto	i1l4201
 16452  0FF8  3A02               	xorlw	2	; case 10
 16453  0FF9  1903               	skipnz
 16454  0FFA  2EF1               	goto	i1l314
 16455  0FFB  3A01               	xorlw	1	; case 11
 16456  0FFC  1903               	skipnz
 16457  0FFD  2F13               	goto	i1l319
 16458  0FFE  2FCB               	goto	i1l4217
 16459  0FFF  0008               	return
 16460  1000                     __end_of_I2C1_ISR:	
 16461                           
 16462                           	psect	text63
 16463  16B9                     __ptext63:	
 16464 ;; *************** function _I2C1_Stop *****************
 16465 ;; Defined at:
 16466 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 16467 ;; Parameters:    Size  Location     Type
 16468 ;;  completion_c    1    wreg     enum E10866
 16469 ;; Auto vars:     Size  Location     Type
 16470 ;;  completion_c    1    1[COMMON] enum E10866
 16471 ;; Return value:  Size  Location     Type
 16472 ;;                  1    wreg      void 
 16473 ;; Registers used:
 16474 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16475 ;; Tracked objects:
 16476 ;;		On entry : 0/0
 16477 ;;		On exit  : 0/0
 16478 ;;		Unchanged: 0/0
 16479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16484 ;;Total ram usage:        2 bytes
 16485 ;; Hardware stack levels used:    1
 16486 ;; This function calls:
 16487 ;;		Nothing
 16488 ;; This function is called by:
 16489 ;;		_I2C1_ISR
 16490 ;; This function uses a non-reentrant model
 16491 ;;
 16492                           
 16493                           
 16494                           ;psect for function _I2C1_Stop
 16495  16B9                     _I2C1_Stop:	
 16496                           
 16497                           ;incstack = 0
 16498                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 16499                           ;I2C1_Stop@completion_code stored from wreg
 16500  16B9  00F7               	movwf	I2C1_Stop@completion_code
 16501                           
 16502                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 16503  16BA  0143               	movlb	3	; select bank3
 16504  16BB  1511               	bsf	17,2	;volatile
 16505                           
 16506                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 16507  16BC  0141               	movlb	1	; select bank1
 16508  16BD  0848               	movf	_p_i2c1_current^(0+128),w
 16509  16BE  3E02               	addlw	2
 16510  16BF  0086               	movwf	6
 16511  16C0  0187               	clrf	7
 16512  16C1  0801               	movf	1,w
 16513  16C2  1903               	btfsc	3,2
 16514  16C3  2ECF               	goto	i1l3595
 16515                           
 16516                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 16517  16C4  0877               	movf	I2C1_Stop@completion_code,w
 16518  16C5  00F6               	movwf	??_I2C1_Stop
 16519  16C6  0848               	movf	_p_i2c1_current^(0+128),w
 16520  16C7  3E02               	addlw	2
 16521  16C8  0086               	movwf	6
 16522  16C9  0187               	clrf	7
 16523  16CA  0801               	movf	1,w
 16524  16CB  0086               	movwf	6
 16525  16CC  0187               	clrf	7
 16526  16CD  0876               	movf	??_I2C1_Stop,w
 16527  16CE  0081               	movwf	1
 16528  16CF                     i1l3595:	
 16529                           
 16530                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 16531  16CF  01CB               	clrf	_i2c1_state^(0+128)
 16532  16D0  0008               	return
 16533  16D1                     __end_of_I2C1_Stop:	
 16534                           
 16535                           	psect	text64
 16536  163C                     __ptext64:	
 16537 ;; *************** function _I2C1_FunctionComplete *****************
 16538 ;; Defined at:
 16539 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 16540 ;; Parameters:    Size  Location     Type
 16541 ;;		None
 16542 ;; Auto vars:     Size  Location     Type
 16543 ;;		None
 16544 ;; Return value:  Size  Location     Type
 16545 ;;                  1    wreg      void 
 16546 ;; Registers used:
 16547 ;;		wreg, status,2, status,0
 16548 ;; Tracked objects:
 16549 ;;		On entry : 0/0
 16550 ;;		On exit  : 0/0
 16551 ;;		Unchanged: 0/0
 16552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16557 ;;Total ram usage:        1 bytes
 16558 ;; Hardware stack levels used:    1
 16559 ;; This function calls:
 16560 ;;		Nothing
 16561 ;; This function is called by:
 16562 ;;		_I2C1_ISR
 16563 ;; This function uses a non-reentrant model
 16564 ;;
 16565                           
 16566                           
 16567                           ;psect for function _I2C1_FunctionComplete
 16568  163C                     _I2C1_FunctionComplete:	
 16569                           
 16570                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 16571                           
 16572                           ;incstack = 0
 16573                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 16574  163C  3004               	movlw	4
 16575  163D  00F6               	movwf	??_I2C1_FunctionComplete
 16576  163E  0876               	movf	??_I2C1_FunctionComplete,w
 16577  163F  0141               	movlb	1	; select bank1
 16578  1640  07C9               	addwf	_p_i2c1_trb_current^(0+128),f
 16579                           
 16580                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 16581  1641  3001               	movlw	1
 16582  1642  02CA               	subwf	_i2c1_trb_count^(0+128),f
 16583  1643  1D03               	btfss	3,2
 16584  1644  2E4A               	goto	i1l349
 16585                           
 16586                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 16587  1645  3004               	movlw	4
 16588  1646  00F6               	movwf	??_I2C1_FunctionComplete
 16589  1647  0876               	movf	??_I2C1_FunctionComplete,w
 16590  1648  00CB               	movwf	_i2c1_state^(0+128)
 16591                           
 16592                           ;mcc_generated_files/i2c1.c: 575:     }
 16593  1649  0008               	return
 16594  164A                     i1l349:	
 16595                           ;mcc_generated_files/i2c1.c: 576:     else
 16596                           
 16597                           
 16598                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 16599  164A  01CB               	clrf	_i2c1_state^(0+128)
 16600  164B  0ACB               	incf	_i2c1_state^(0+128),f
 16601  164C  0008               	return
 16602  164D                     __end_of_I2C1_FunctionComplete:	
 16603                           
 16604                           	psect	text65
 16605  1541                     __ptext65:	
 16606 ;; *************** function _I2C1_BusCollisionISR *****************
 16607 ;; Defined at:
 16608 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 16609 ;; Parameters:    Size  Location     Type
 16610 ;;		None
 16611 ;; Auto vars:     Size  Location     Type
 16612 ;;		None
 16613 ;; Return value:  Size  Location     Type
 16614 ;;                  1    wreg      void 
 16615 ;; Registers used:
 16616 ;;		None
 16617 ;; Tracked objects:
 16618 ;;		On entry : 0/0
 16619 ;;		On exit  : 0/0
 16620 ;;		Unchanged: 0/0
 16621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16626 ;;Total ram usage:        0 bytes
 16627 ;; Hardware stack levels used:    1
 16628 ;; This function calls:
 16629 ;;		Nothing
 16630 ;; This function is called by:
 16631 ;;		_INTERRUPT_InterruptManager
 16632 ;; This function uses a non-reentrant model
 16633 ;;
 16634                           
 16635                           
 16636                           ;psect for function _I2C1_BusCollisionISR
 16637  1541                     _I2C1_BusCollisionISR:	
 16638                           
 16639                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 16640                           
 16641                           ;incstack = 0
 16642                           ; Regs used in _I2C1_BusCollisionISR: []
 16643  1541  014E               	movlb	14	; select bank14
 16644  1542  108F               	bcf	15,1	;volatile
 16645  1543  0008               	return
 16646  1544                     __end_of_I2C1_BusCollisionISR:	
 16647                           
 16648                           	psect	text66
 16649  171A                     __ptext66:	
 16650 ;; *************** function _EUSART1_Transmit_ISR *****************
 16651 ;; Defined at:
 16652 ;;		line 194 in file "mcc_generated_files/eusart1.c"
 16653 ;; Parameters:    Size  Location     Type
 16654 ;;		None
 16655 ;; Auto vars:     Size  Location     Type
 16656 ;;		None
 16657 ;; Return value:  Size  Location     Type
 16658 ;;                  1    wreg      void 
 16659 ;; Registers used:
 16660 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16661 ;; Tracked objects:
 16662 ;;		On entry : 0/0
 16663 ;;		On exit  : 0/0
 16664 ;;		Unchanged: 0/0
 16665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16668 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16669 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16670 ;;Total ram usage:        1 bytes
 16671 ;; Hardware stack levels used:    1
 16672 ;; This function calls:
 16673 ;;		Nothing
 16674 ;; This function is called by:
 16675 ;;		_EUSART1_Initialize
 16676 ;;		_INTERRUPT_InterruptManager
 16677 ;; This function uses a non-reentrant model
 16678 ;;
 16679                           
 16680                           
 16681                           ;psect for function _EUSART1_Transmit_ISR
 16682  171A                     _EUSART1_Transmit_ISR:	
 16683                           
 16684                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 16685                           
 16686                           ;incstack = 0
 16687                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 16688  171A  3008               	movlw	8
 16689  171B  0141               	movlb	1	; select bank1
 16690  171C  026E               	subwf	_eusart1TxBufferRemaining^(0+128),w	;volatile
 16691  171D  1803               	skipnc
 16692  171E  2F35               	goto	i1l106
 16693                           
 16694                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 16695  171F  0872               	movf	_eusart1TxTail,w
 16696  1720  3E30               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 16697  1721  0086               	movwf	6
 16698  1722  3001               	movlw	1	; select bank2/3
 16699  1723  0087               	movwf	7
 16700  1724  0801               	movf	1,w
 16701  1725  0142               	movlb	2	; select bank2
 16702  1726  009A               	movwf	26	;volatile
 16703  1727  3001               	movlw	1
 16704  1728  00F6               	movwf	??_EUSART1_Transmit_ISR
 16705  1729  0876               	movf	??_EUSART1_Transmit_ISR,w
 16706  172A  07F2               	addwf	_eusart1TxTail,f	;volatile
 16707                           
 16708                           ;mcc_generated_files/eusart1.c: 201:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 16709  172B  3008               	movlw	8
 16710  172C  0272               	subwf	_eusart1TxTail,w	;volatile
 16711  172D  1803               	btfsc	3,0
 16712                           
 16713                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1TxTail = 0;
 16714  172E  01F2               	clrf	_eusart1TxTail	;volatile
 16715                           
 16716                           ;mcc_generated_files/eusart1.c: 205:         eusart1TxBufferRemaining++;
 16717  172F  3001               	movlw	1
 16718  1730  00F6               	movwf	??_EUSART1_Transmit_ISR
 16719  1731  0876               	movf	??_EUSART1_Transmit_ISR,w
 16720  1732  0141               	movlb	1	; select bank1
 16721  1733  07EE               	addwf	_eusart1TxBufferRemaining^(0+128),f	;volatile
 16722                           
 16723                           ;mcc_generated_files/eusart1.c: 206:     }
 16724  1734  0008               	return
 16725  1735                     i1l106:	
 16726                           ;mcc_generated_files/eusart1.c: 207:     else
 16727                           
 16728                           
 16729                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         P
      +                          IE3bits.TX1IE = 0;
 16730  1735  014E               	movlb	14	; select bank14
 16731  1736  1219               	bcf	25,4	;volatile
 16732  1737  0008               	return
 16733  1738                     __end_of_EUSART1_Transmit_ISR:	
 16734                           
 16735                           	psect	text67
 16736  154B                     __ptext67:	
 16737 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 16738 ;; Defined at:
 16739 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 16740 ;; Parameters:    Size  Location     Type
 16741 ;;		None
 16742 ;; Auto vars:     Size  Location     Type
 16743 ;;		None
 16744 ;; Return value:  Size  Location     Type
 16745 ;;                  1    wreg      void 
 16746 ;; Registers used:
 16747 ;;		None
 16748 ;; Tracked objects:
 16749 ;;		On entry : 0/0
 16750 ;;		On exit  : 0/0
 16751 ;;		Unchanged: 0/0
 16752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16757 ;;Total ram usage:        0 bytes
 16758 ;; Hardware stack levels used:    1
 16759 ;; This function calls:
 16760 ;;		Nothing
 16761 ;; This function is called by:
 16762 ;;		_EUSART1_Initialize
 16763 ;;		_EUSART1_Receive_ISR
 16764 ;; This function uses a non-reentrant model
 16765 ;;
 16766                           
 16767                           
 16768                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 16769  154B                     _EUSART1_DefaultOverrunErrorHandler:	
 16770                           
 16771                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 16772                           
 16773                           ;incstack = 0
 16774                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 16775  154B  0142               	movlb	2	; select bank2
 16776  154C  121D               	bcf	29,4	;volatile
 16777                           
 16778                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 16779  154D  161D               	bsf	29,4	;volatile
 16780  154E  0008               	return
 16781  154F                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 16782                           
 16783                           	psect	text68
 16784  07FF                     __ptext68:	
 16785 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 16786 ;; Defined at:
 16787 ;;		line 247 in file "mcc_generated_files/eusart1.c"
 16788 ;; Parameters:    Size  Location     Type
 16789 ;;		None
 16790 ;; Auto vars:     Size  Location     Type
 16791 ;;		None
 16792 ;; Return value:  Size  Location     Type
 16793 ;;                  1    wreg      void 
 16794 ;; Registers used:
 16795 ;;		None
 16796 ;; Tracked objects:
 16797 ;;		On entry : 0/0
 16798 ;;		On exit  : 0/0
 16799 ;;		Unchanged: 0/0
 16800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16805 ;;Total ram usage:        0 bytes
 16806 ;; Hardware stack levels used:    1
 16807 ;; This function calls:
 16808 ;;		Nothing
 16809 ;; This function is called by:
 16810 ;;		_EUSART1_Initialize
 16811 ;;		_EUSART1_Receive_ISR
 16812 ;; This function uses a non-reentrant model
 16813 ;;
 16814                           
 16815                           
 16816                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 16817  07FF                     _EUSART1_DefaultFramingErrorHandler:	
 16818                           
 16819                           ;incstack = 0
 16820                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 16821  07FF  0008               	return
 16822  0800                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 16823                           
 16824                           	psect	text69
 16825  153E                     __ptext69:	
 16826 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 16827 ;; Defined at:
 16828 ;;		line 257 in file "mcc_generated_files/eusart1.c"
 16829 ;; Parameters:    Size  Location     Type
 16830 ;;		None
 16831 ;; Auto vars:     Size  Location     Type
 16832 ;;		None
 16833 ;; Return value:  Size  Location     Type
 16834 ;;                  1    wreg      void 
 16835 ;; Registers used:
 16836 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16837 ;; Tracked objects:
 16838 ;;		On entry : 0/0
 16839 ;;		On exit  : 0/0
 16840 ;;		Unchanged: 0/0
 16841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16846 ;;Total ram usage:        0 bytes
 16847 ;; Hardware stack levels used:    1
 16848 ;; Hardware stack levels required when called:    1
 16849 ;; This function calls:
 16850 ;;		_EUSART1_RxDataHandler
 16851 ;; This function is called by:
 16852 ;;		_EUSART1_Initialize
 16853 ;;		_EUSART1_Receive_ISR
 16854 ;; This function uses a non-reentrant model
 16855 ;;
 16856                           
 16857                           
 16858                           ;psect for function _EUSART1_DefaultErrorHandler
 16859  153E                     _EUSART1_DefaultErrorHandler:	
 16860                           
 16861                           ;mcc_generated_files/eusart1.c: 258:     EUSART1_RxDataHandler();
 16862                           
 16863                           ;incstack = 0
 16864                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16865  153E  3196  26A1         	fcall	_EUSART1_RxDataHandler
 16866  1540  0008               	return
 16867  1541                     __end_of_EUSART1_DefaultErrorHandler:	
 16868                           
 16869                           	psect	text70
 16870  16A1                     __ptext70:	
 16871 ;; *************** function _EUSART1_RxDataHandler *****************
 16872 ;; Defined at:
 16873 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 16874 ;; Parameters:    Size  Location     Type
 16875 ;;		None
 16876 ;; Auto vars:     Size  Location     Type
 16877 ;;		None
 16878 ;; Return value:  Size  Location     Type
 16879 ;;                  1    wreg      void 
 16880 ;; Registers used:
 16881 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16882 ;; Tracked objects:
 16883 ;;		On entry : 0/0
 16884 ;;		On exit  : 0/0
 16885 ;;		Unchanged: 0/0
 16886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16891 ;;Total ram usage:        1 bytes
 16892 ;; Hardware stack levels used:    1
 16893 ;; This function calls:
 16894 ;;		Nothing
 16895 ;; This function is called by:
 16896 ;;		_EUSART1_Receive_ISR
 16897 ;;		_EUSART1_DefaultErrorHandler
 16898 ;; This function uses a non-reentrant model
 16899 ;;
 16900                           
 16901                           
 16902                           ;psect for function _EUSART1_RxDataHandler
 16903  16A1                     _EUSART1_RxDataHandler:	
 16904                           
 16905                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 16906                           
 16907                           ;incstack = 0
 16908                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 16909  16A1  0142               	movlb	2	; select bank2
 16910  16A2  0819               	movf	25,w	;volatile
 16911  16A3  00F6               	movwf	??_EUSART1_RxDataHandler
 16912  16A4  0871               	movf	_eusart1RxHead,w
 16913  16A5  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 16914  16A6  0086               	movwf	6
 16915  16A7  3001               	movlw	1	; select bank2/3
 16916  16A8  0087               	movwf	7
 16917  16A9  0876               	movf	??_EUSART1_RxDataHandler,w
 16918  16AA  0081               	movwf	1
 16919  16AB  3001               	movlw	1
 16920  16AC  00F6               	movwf	??_EUSART1_RxDataHandler
 16921  16AD  0876               	movf	??_EUSART1_RxDataHandler,w
 16922  16AE  07F1               	addwf	_eusart1RxHead,f	;volatile
 16923                           
 16924                           ;mcc_generated_files/eusart1.c: 240:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 16925  16AF  3008               	movlw	8
 16926  16B0  0271               	subwf	_eusart1RxHead,w	;volatile
 16927  16B1  1803               	btfsc	3,0
 16928                           
 16929                           ;mcc_generated_files/eusart1.c: 241:     {;mcc_generated_files/eusart1.c: 242:         e
      +                          usart1RxHead = 0;
 16930  16B2  01F1               	clrf	_eusart1RxHead	;volatile
 16931                           
 16932                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxCount++;
 16933  16B3  3001               	movlw	1
 16934  16B4  00F6               	movwf	??_EUSART1_RxDataHandler
 16935  16B5  0876               	movf	??_EUSART1_RxDataHandler,w
 16936  16B6  0141               	movlb	1	; select bank1
 16937  16B7  07CD               	addwf	_eusart1RxCount^(0+128),f	;volatile
 16938  16B8  0008               	return
 16939  16B9                     __end_of_EUSART1_RxDataHandler:	
 16940                           
 16941                           	psect	text71
 16942  1604                     __ptext71:	
 16943 ;; *************** function _ADCC_ThresholdISR *****************
 16944 ;; Defined at:
 16945 ;;		line 308 in file "mcc_generated_files/adcc.c"
 16946 ;; Parameters:    Size  Location     Type
 16947 ;;		None
 16948 ;; Auto vars:     Size  Location     Type
 16949 ;;		None
 16950 ;; Return value:  Size  Location     Type
 16951 ;;                  1    wreg      void 
 16952 ;; Registers used:
 16953 ;;		wreg, status,2, status,0, pclath, cstack
 16954 ;; Tracked objects:
 16955 ;;		On entry : 0/0
 16956 ;;		On exit  : 0/0
 16957 ;;		Unchanged: 0/0
 16958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16963 ;;Total ram usage:        0 bytes
 16964 ;; Hardware stack levels used:    1
 16965 ;; Hardware stack levels required when called:    1
 16966 ;; This function calls:
 16967 ;;		Absolute function
 16968 ;;		_ADCC_DefaultInterruptHandler
 16969 ;;		_adcThresholdHandler
 16970 ;; This function is called by:
 16971 ;;		_INTERRUPT_InterruptManager
 16972 ;; This function uses a non-reentrant model
 16973 ;;
 16974                           
 16975                           
 16976                           ;psect for function _ADCC_ThresholdISR
 16977  1604                     _ADCC_ThresholdISR:	
 16978                           
 16979                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 16980                           
 16981                           ;incstack = 0
 16982                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 16983  1604  014E               	movlb	14	; select bank14
 16984  1605  108D               	bcf	13,1	;volatile
 16985                           
 16986                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 16987  1606  0141               	movlb	1	; select bank1
 16988  1607  086C               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 16989  1608  046D               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 16990  1609  1903               	btfsc	3,2
 16991  160A  0008               	return
 16992                           
 16993                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 16994  160B  086D               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 16995  160C  008A               	movwf	10
 16996  160D  086C               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 16997  160E  000A               	callw
 16998  160F  3196               	pagesel	$
 16999  1610  0008               	return
 17000  1611                     __end_of_ADCC_ThresholdISR:	
 17001                           
 17002                           	psect	text72
 17003  0003                     __ptext72:	
 17004 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 17005 ;; Defined at:
 17006 ;;		line 320 in file "mcc_generated_files/adcc.c"
 17007 ;; Parameters:    Size  Location     Type
 17008 ;;		None
 17009 ;; Auto vars:     Size  Location     Type
 17010 ;;		None
 17011 ;; Return value:  Size  Location     Type
 17012 ;;                  1    wreg      void 
 17013 ;; Registers used:
 17014 ;;		None
 17015 ;; Tracked objects:
 17016 ;;		On entry : 0/0
 17017 ;;		On exit  : 0/0
 17018 ;;		Unchanged: 0/0
 17019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17024 ;;Total ram usage:        0 bytes
 17025 ;; Hardware stack levels used:    1
 17026 ;; This function calls:
 17027 ;;		Nothing
 17028 ;; This function is called by:
 17029 ;;		_ADCC_Initialize
 17030 ;;		_ADCC_ThresholdISR
 17031 ;; This function uses a non-reentrant model
 17032 ;;
 17033                           
 17034                           
 17035                           ;psect for function _ADCC_DefaultInterruptHandler
 17036  0003                     _ADCC_DefaultInterruptHandler:	
 17037                           
 17038                           ;incstack = 0
 17039                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 17040  0003  0008               	return
 17041  0004                     __end_of_ADCC_DefaultInterruptHandler:	
 17042                           
 17043                           	psect	text73
 17044  1547                     __ptext73:	
 17045 ;; *************** function _adcThresholdHandler *****************
 17046 ;; Defined at:
 17047 ;;		line 36 in file "beat.c"
 17048 ;; Parameters:    Size  Location     Type
 17049 ;;		None
 17050 ;; Auto vars:     Size  Location     Type
 17051 ;;		None
 17052 ;; Return value:  Size  Location     Type
 17053 ;;                  1    wreg      void 
 17054 ;; Registers used:
 17055 ;;		None
 17056 ;; Tracked objects:
 17057 ;;		On entry : 0/0
 17058 ;;		On exit  : 0/0
 17059 ;;		Unchanged: 0/0
 17060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17065 ;;Total ram usage:        0 bytes
 17066 ;; Hardware stack levels used:    1
 17067 ;; This function calls:
 17068 ;;		Nothing
 17069 ;; This function is called by:
 17070 ;;		_BEAT_init
 17071 ;;		_ADCC_ThresholdISR
 17072 ;; This function uses a non-reentrant model
 17073 ;;
 17074                           
 17075                           
 17076                           ;psect for function _adcThresholdHandler
 17077  1547                     _adcThresholdHandler:	
 17078                           
 17079                           ;beat.c: 37:     thresholdExceeded = 1;
 17080                           
 17081                           ;incstack = 0
 17082                           ; Regs used in _adcThresholdHandler: []
 17083  1547  0141               	movlb	1	; select bank1
 17084  1548  01BE               	clrf	_thresholdExceeded^(0+128)
 17085  1549  0ABE               	incf	_thresholdExceeded^(0+128),f
 17086  154A  0008               	return
 17087  154B                     __end_of_adcThresholdHandler:	
 17088  007E                     btemp	set	126	;btemp
 17089  007E                     int$flags	set	126
 17090  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        6
    BSS         127
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     80      80
    BANK1            80     21      79
    BANK2            80      0      52
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           79      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    S1358$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), Absolute function(), ADCC_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S443$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    S455$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    S455$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S466$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    S466$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LED_setColor
    _rand->___omul
    ___awmod->_rand
    _TM1650_init->_TM1650_enable
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_setColor->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _DMX_init->_EUSART1_SetRxInterruptHandler
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_enable->_writeData
    _CONTROLLER_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    ___lwmod->___lwdiv
    _TM1650_setDigit->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_setColor

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   65358
                                              6 BANK1     15    15      0
                      _BEAT_detected
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_init
                       _LED_setColor
                  _SYSTEM_Initialize
                _TM1650_fastPrintNum
                        _TM1650_init
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                10     8      2     316
                                             25 BANK0     10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (2) ___omul                                              25     9     16     316
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     613
                                             35 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    3532
                  _SYSTEM_Initialize
                      _TM1650_enable
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0    1117
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Initialize                                   1     1      0     695
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_setColor                                         9     6      3    9753
                                             77 BANK0      3     0      3
                                              0 BANK1      6     6      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3893
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1729
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0     211
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      3     3      0   23757
                                             29 BANK0      3     3      0
                  _BUTTONS_isClicked
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                      _TM1650_enable
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (2) _address_inc                                          0     0      0   10534
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _address_dec                                          0     0      0   10534
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    2415
                                             21 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isHeld                                       1     1      0     103
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     134
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      0     0      0   10534
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (1) _TM1650_fastPrintNum                                  3     1      2   10534
                                             26 BANK0      3     1      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1852
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _TM1650_setDigit                                      5     3      2    6294
                                             21 BANK0      5     3      2
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _writeData                                            7     6      1    2353
                                             14 BANK0      7     6      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     911
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1898
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                   _TM1650_isEnabled
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1501
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _TM1650_isEnabled                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0      45
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                            _handler *
                    i1_CLOCK_getTime
 ---------------------------------------------------------------------------------
 (10) i1_CLOCK_getTime                                     2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _handler                                             5     5      0      23
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (11) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_detected
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     _TM1650_isEnabled
     ___lwdiv
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
     _TM1650_fastPrintNum
       _TM1650_setDigit
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
         _writeData (ARG)
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _CONTROLLER_task
     _BUTTONS_isClicked
     _BUTTONS_isHeld
     _CLOCK_getTime
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _address_dec
       _TM1650_fastPrintNum
         _TM1650_setDigit
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
           _writeData (ARG)
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _address_inc
       _TM1650_fastPrintNum
         _TM1650_setDigit
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
           _writeData (ARG)
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
   _LED_init
   _LED_setColor
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TM1650_fastPrintNum
     _TM1650_setDigit
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       _writeData (ARG)
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _TM1650_init
     _SYSTEM_Initialize
       _ADCC_Initialize
         _ADCC_SetADTIInterruptHandler
       _EUSART1_Initialize
         _EUSART1_SetErrorHandler
         _EUSART1_SetFramingErrorHandler
         _EUSART1_SetOverrunErrorHandler
         _EUSART1_SetRxInterruptHandler
         _EUSART1_SetTxInterruptHandler
       _I2C1_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
   ___awmod
     _rand (ARG)
       ___omul
   _rand
     ___omul

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *
   _handler *
   i1_CLOCK_getTime *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      FF       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     15      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      34      10       65.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      20      12       40.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              4F      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0      FF      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 23:36:13 2019

                      _eusart1TxBufferRemaining 00EE                                    ___fldiv@aexp 0047  
                                  ___fldiv@bexp 0046                        ??_ADCC_SetUpperThreshold 0022  
                                  ___fldiv@sign 003F                                    ?_TM1650_init 0076  
                                            _up 00C4                              __size_of_BEAT_init 0017  
                              ?i1_CLOCK_getTime 0076                              __size_of_BEAT_task 00D1  
                           __Umul8_16@word_mpld 0026                             _adcThresholdHandler 1547  
                                           l970 07E7                                             l966 075A  
                                           l967 0773                                             l968 079C  
                                           l969 07C4                                             _bpm 00A9  
                       __size_of_PMD_Initialize 000A                                    ___awmod@sign 0049  
                                           wreg 0009                                    ___flmul@aexp 0056  
                                  ___flmul@bexp 005B                                    ___flmul@sign 0055  
                                  ___flmul@temp 0060                                    ___flmul@prod 005C  
                                  _BAUD1CONbits 011F                                __end_of_I2C1_ISR 1000  
                                  ___fltol@exp1 006C                                            l1450 0B87  
                                          l4021 0BE4                                            l1630 05AB  
                                          l1606 047F                                            l1711 1787  
                                          l4031 0BFC                                            l4015 0BD0  
                                          l4009 0BB9                                            l1627 0586  
                                          l5003 1781                                            l4043 0C30  
                                          l4019 0BD4                                            l1628 059E  
                                          l5101 16F7                                            l4029 0C09  
                                          l5105 09FE                                            l1658 02A8  
                                          l1690 0BF7                                            l5211 0227  
                                          l5131 00AD                                            l1684 0BC1  
                                          l5221 0240                                            l5109 0A10  
                          _ADCC_StartConversion 1589                                            l5047 16DF  
                                          l5231 0269                                            l5127 00A3  
                                          l3711 0B83                                            l5073 165F  
                                          l5241 0295                                            l5217 023E  
                                          l5209 0210                                            l5145 00C6  
                                          l5129 00A5                                            l1697 0C0B  
                                          l1698 0C15                                            l5411 0D10  
                                          l5083 162B                                            l5091 170C  
                                          l3803 050A                                            l5235 027E  
                                          l5147 00C8                                            l5093 1710  
                                          l3821 0515                                            l3805 04D3  
                                          l3741 0453                                            l5157 00DE  
                                          l5149 00D0                                            l3709 0B75  
                                          l5407 0D0A                                            l5335 0754  
                                          l3823 052C                                            l3807 050F  
                                          l3743 045B                                            l3719 0B94  
                                          l5503 09E6                                            l5329 0724  
                                          l3833 0545                                            l3761 0477  
                                          l3737 0450                                            l4811 0948  
                                          l5443 0D86                                            l5427 0D42  
                                          l5099 16F3                                            l5371 0AF3  
                                          l3843 056E                                            l3771 049E  
                                          l5507 09EE                                            l4821 0963  
                                          l5429 0D55                                            l5381 0B05  
                                          l5365 0AE3                                            l3829 0543  
                                          l3757 0474                                            l3693 0B50  
                                          l5533 0610                                            l5463 1575  
                                          l5367 0AE7                                            l5543 05D2  
                                          l4817 095A                                            l4809 093C  
                                          l4753 0ABE                                            l4833 0875  
                                          l5369 0AEF                                            l3857 05A7  
                                          l3777 04AA                                            l3689 0B47  
                                          l5481 09B8                                            l4739 154F  
                                          l4835 0881                                            l4843 0896  
                                          l5387 0B18                                            l5571 06A8  
                                          l5563 068F                                            l4757 0AC5  
                                          l3797 04F1                                            l5493 09C5  
                                          l5485 09BF                                            l4759 0ACB  
                                          l4775 17B1                                            l4839 088D  
                                          l5495 09D1                                            l5591 06F2  
                                          l5583 06D2                                            l5575 06B4  
                                          l5567 069A                                            l4769 0867  
                                          l5499 09DD                                            l5587 06E2  
                                          l5579 06C3                                            l4797 174D  
                                          l4983 0DEB                                            l4977 0DD1  
                                          l4995 0E81                                            l4989 0DFB  
                                ?_TM1650_enable 0076                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          u3305 0BDD                                            u5005 0257  
                                          u3325 0BF1                                            u5015 0272  
                                          u5025 0288                                            u3345 0C03  
                                          u2635 0B59                                            u5055 0727  
                                          u2815 04DB                                            u5064 0746  
                                          u4505 0953                                            u5065 0745  
                                          u2905 0521                                            u2825 04E2  
                                          u2665 0B76                                            u3385 0C1D  
                                          u4515 095B                                            u5315 0D67  
                                          _PMD0 0796                                            u2845 04EB  
                                          u5405 09D7                                            _PMD1 0797  
                                          _PMD2 0798                                            u2855 04FF  
                                          u2695 0B8B                                            u5415 09DE  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u5265 0CF5                                            u4545 0878  
                                          u5345 0CC7                                            _PMD5 079B  
                                          _PMD6 079C                                            u4475 093F  
                                          _PMD7 079D                                            u4565 0887  
                                          u2885 0518                                            u4750 09FB  
                                          u4495 0949                                            u4575 088E  
                                          u5607 0EAC                                            u2975 055C  
                                          u2985 0577                                            u4905 01FF  
                                          u5385 09C8                                            u2995 0590  
                                          u4675 1788                                            u4915 0213  
                                          u4935 021C                                            u4865 0154  
                                          u4875 0183                                            u4885 01D9  
                                          u5597 05B7                                            u4895 01F0  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   ?_BUTTONS_init 0076  
                                 ?_BUTTONS_task 0076                            ?_adcThresholdHandler 0076  
                                          _main 05B0                                            _down 00C3  
                                          _init 1756                                            _menu 00C1  
                                          _rand 0C39                                            _seed 0138  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                          start 0041                                 ___fldiv@new_exp 0040  
                TM1650_fastPrintNum@inputNumber 003A                         __end_of_TM1650_setDigit 1756  
                           __size_of_CLOCK_init 0008                            __size_of_address_dec 0018  
                          __size_of_address_inc 0019                  I2C1_MasterWriteTRBBuild@length 0021  
                                _BUTTONS_isHeld 161E                         __end_of_TMR0_Initialize 1675  
                                    _i2c1_state 00CB                  ??_TMR0_DefaultInterruptHandler 0076  
                __size_of_OSCILLATOR_Initialize 0009                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 15DA                        __end_of_TM1650_isEnabled 1547  
                     I2C1_MasterTRBInsert@pflag 0021                           _eusart1RxStatusBuffer 0120  
                              __end_of_LED_init 0844                                   ___fltol@sign1 006B  
                                         _ADCAP 010E                                           _ADACT 0117  
                                         ?_main 0076                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                 __end_of___fldiv 05B0  
                                         ?_rand 0039                                           _ADREF 0116  
                             __end_of_I2C1_Stop 16D1                                           _CCPR1 030C  
                                         _CCPR2 0310                                           _CCPR3 0314  
                                         _CCPR4 0318                                   __CFG_WDTE$OFF 0000  
                               __end_of___awmod 09F3                                __end_of_DMX_init 163C  
                                         _ADRPT 009A                                 __end_of___flmul 02B5  
                               __end_of___fltol 0BA3                                           _LATC5 00D5  
                               __end_of___lwdiv 0968                      _ADCC_ADTI_InterruptHandler 00EC  
                                         i1l106 1735                                           i1l320 0F1F  
                                         i1l313 0EF0                                           i1l330 0F5C  
                                         i1l314 0EF1                                           i1l308 0EC5  
                                         i1l181 000E                                           i1l342 0FC0  
                                         i1l334 0F7C                                           i1l190 003A  
                                         i1l319 0F13                                           i1l184 0017  
                                         i1l337 0F8B                                 __end_of___lwmod 089B  
                                         i1l338 0F99                                           i1l186 001E  
                                         i1l195 003F                                           i1l188 0028  
                                         i1l349 164A                                           _OSCEN 0891  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _PORTA 000C                                           _PORTC 000E  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014               __size_of_TMR0_SetInterruptHandler 0009  
                  __end_of_I2C1_BusCollisionISR 1544                       ?_TMR0_SetInterruptHandler 0020  
                          _EUSART1_Transmit_ISR 171A                                 __end_of_handler 0933  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 161E  
                                         _delay 00E6                                           _enter 00C2  
                         ?_ADCC_StartConversion 0076                                           _point 00B1  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0076  
                             __end_of_BEAT_init 16A1                               __end_of_BEAT_task 0DA9  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 0800     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 07FF                 I2C1_MasterWriteTRBBuild@address 0022  
                        __end_of_BUTTONS_isHeld 162D                                 __initialization 0043  
                          TM1650_setDigit@digit 0038                           I2C1_MasterWrite@pdata 002D  
                         I2C1_MasterWrite@pflag 002A                      __end_of_EUSART1_Initialize 09AD  
                                  __end_of_main 0702                                    __end_of_init 1776  
                               _CONTROLLER_init 15ED                                    __end_of_rand 0CD8  
                               _CONTROLLER_task 0AD8                                   ?_LED_setColor 006D  
                  __size_of_CLOCK_timerCallback 0006                 __size_of_ADCC_SetUpperThreshold 0009  
                         __end_of_CLOCK_getTime 159B                     ?_INTERRUPT_InterruptManager 0076  
                      TM1650_setDigit@charTable 1000                                     _i2c1_object 00A0  
                                        ??_main 00D7                                          ??_init 0023  
                                        ??_rand 003B                        TM1650_setDigit@character 0039  
                         ?_EUSART1_Transmit_ISR 0076                                 ??_TM1650_enable 0035  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RB6PPS 1F1E                                          _RC4PPS 1F24  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          _RC6PPS 1F26  
                                        i1l4111 0EE3                                          i1l4201 0FA7  
                                        i1l4123 0EFD                                          i1l4115 0EEA  
                                        _RC7PPS 1F27                                          i1l4213 0FC4  
                                        i1l4215 0FC7                                          i1l4143 0F38  
                                        i1l4223 0FD3                                          i1l4217 0FCB  
                                        i1l4129 0F0D                                          i1l4073 08EC  
                                        i1l4163 0F51                                          i1l4067 08DE  
                                        i1l4077 08FB                                          i1l4185 0F7F  
                                        i1l4177 0F6A                                          i1l4197 0FA0  
                                        i1l4461 0905                                          i1l3595 16CF  
                                        i1l4475 0930                                          i1l4467 090F  
                                        i1l5635 0FDC                                          _SP1BRG 011B  
                                        u395_25 0919                                          _OSCFRQ 0893  
                                        _RX1PPS 1ECB                                          _TX1REG 011A  
                                        _TX1STA 011E                                          _TRISB4 009C  
                                        _TRISC3 00A3                                          _TRISC4 00A4  
                                        _TRISC6 00A6                                          _TRISC7 00A7  
                              __end_of___xxtofl 0C39                               ?_I2C1_MasterWrite 0027  
                              ?_TM1650_setDigit 0035                                 ?_BUTTONS_isHeld 0076  
                            ??_I2C1_MasterWrite 002B                                  _p_i2c1_current 00C8  
                                ??_LED_setColor 00D1                                          ___omul 09F3  
                   __end_of_TM1650_fastPrintNum 0EB2                               _ADCC_ThresholdISR 1604  
                                     ??___fldiv 0036                                       ??___awmod 0047  
                                     ??___flmul 0050                                       ??___fltol 0066  
                                     ??___lwdiv 0024                                       ??___lwmod 002C  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                              ?_TMR0_Initialize 0076                              ?_ADCC_ThresholdISR 0076  
                                     ?_I2C1_ISR 0076                                 ___awmod@divisor 0043  
                               ___awmod@counter 0048                          __size_of_BEAT_detected 0009  
                                     ??_handler 0076                ??_EUSART1_SetOverrunErrorHandler 0022  
               ?_EUSART1_SetOverrunErrorHandler 0020                                  _lastActiveTime 00B5  
                          __size_of_TM1650_init 0009                                 _ADCC_Initialize 17DA  
                                _PMD_Initialize 15E3                                    ??_CLOCK_init 0022  
                            __size_of__Umul8_16 0020                             ??_ADCC_ThresholdISR 0076  
                        ??_ADCC_StartConversion 0020            ADCC_SetUpperThreshold@upperThreshold 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
                        _ADCC_SetUpperThreshold 1580                   I2C1_MasterWriteTRBBuild@pdata 0020  
                               _eusart1RxBuffer 0128                                 _eusart1TxBuffer 0130  
                                  ___xxtofl@arg 002A                                    ___xxtofl@exp 0029  
                             _SYSTEM_Initialize 1675                                    ___xxtofl@val 0020  
                       __end_of__initialization 0085                         __end_of_CONTROLLER_init 15F8  
                       __end_of_CONTROLLER_task 0B3D                              ?_SYSTEM_Initialize 0076  
                                     ?_LED_init 0076                                      ___fltol@f1 0062  
                                     ?_DMX_init 0076                                  _i2c1_trb_count 00CA  
                __size_of_EUSART1_RxDataHandler 0018                       __end_of_ADCC_ThresholdISR 1611  
                 __end_of_EUSART1_RxDataHandler 16B9                           _I2C1_FunctionComplete 163C  
                          _I2C1_BusCollisionISR 1541                                  __pcstackCOMMON 0076  
                            __end_of_CLOCK_init 156E                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK1 1560                             ??_SYSTEM_Initialize 0023  
                                     ?_TMR0_ISR 0076                                      ??_I2C1_ISR 0078  
                          __end_of_BUTTONS_init 0A86                          __end_of_PMD_Initialize 15ED  
                          __end_of_BUTTONS_task 07FE                          ??_EUSART1_Transmit_ISR 0076  
                   __end_of_EUSART1_Receive_ISR 08FE                               _thresholdExceeded 00BE  
                   ADCC_StartConversion@channel 0020                               LED_setColor@green 006D  
                             LED_setColor@white 006F                       __end_of_SYSTEM_Initialize 168A  
                                 _eusart1RxHead 0071                                   _eusart1TxHead 0073  
                                 _eusart1RxTail 0070                                      __pbssBANK1 00A0  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
                                 _eusart1TxTail 0072               _EUSART1_TxDefaultInterruptHandler 0152  
               ??_EUSART1_SetRxInterruptHandler 0022                                   _BEAT_detected 156E  
                                    ??_LED_init 0020                                      ??_DMX_init 0022  
                             __end_of__Umul8_16 1796                           ?_I2C1_BusCollisionISR 0076  
               __end_of_EUSART1_SetErrorHandler 15B6                                      __pmaintext 05B0  
              __end_of_TMR0_SetInterruptHandler 15A4                                         ?___omul 0020  
                                    ??_TMR0_ISR 0076                                writeData@address 0032  
                       __end_of_ADCC_Initialize 1800                                      __pintentry 0004  
                               _I2C1_Initialize 0800                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                             ___omul@multiplicand 0028  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
                                 BUTTONS_task@i 0025            __end_of_ADCC_SetADTIInterruptHandler 1580  
         __size_of_ADCC_SetADTIInterruptHandler 0009                    _ADCC_SetADTIInterruptHandler 1577  
                                       _ADSTPTH 0093                                         _ADSTPTL 0092  
                               ?_PMD_Initialize 0076                               ?_TM1650_isEnabled 0076  
        __end_of_EUSART1_SetFramingErrorHandler 15BF         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 15B6                                       ?___xxtofl 0020  
                            ??_TM1650_isEnabled 0020                    ?_EUSART1_DefaultErrorHandler 0076  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                     _I2C1_Stop 16B9                                         _OSCTUNE 0892  
                      __size_ofi1_CLOCK_getTime 0006                                         _SSP1ADD 018D  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                          __end_of_LED_setColor 0436                             _CLOCK_timerCallback 1554  
                                ?_BEAT_detected 0076                   I2C1_MasterTRBInsert@ptrb_list 0020  
                            __size_of_writeData 0021                                   ??_address_dec 003D  
                              ?_CONTROLLER_init 0076                                   ??_address_inc 003D  
                              ?_CONTROLLER_task 0076                                 BUTTONS_task@btn 0028  
                        ?_I2C1_FunctionComplete 0076                                       _BEAT_init 168A  
                 __size_of_I2C1_MasterTRBInsert 0052                                       _BEAT_task 0CD8  
                    __size_of_ADCC_ThresholdISR 000D                              _p_i2c1_trb_current 00C9  
                                       ___fldiv 0436                            ?_CLOCK_timerCallback 0076  
                                       ___awmod 09AD                                 __size_of___omul 0048  
                                       ___flmul 0089                                         ___fltol 0B3D  
                                       ___lwdiv 0933                                         ___lwmod 086E  
                                       _address 00EA                                         _handler 08FE  
                                       __ptext1 0C39                                         __ptext2 09F3  
                                       __ptext3 09AD                                         __ptext4 15DA  
                                       __ptext5 1675                                         __ptext6 1661  
                                       __ptext7 15E3                                         __ptext8 089B  
                                       __ptext9 15D1                   ?_ADCC_SetADTIInterruptHandler 0020  
                                       _counter 00B7                                         _lastRun 00A7  
                         _OSCILLATOR_Initialize 15D1                                       _T2CONbits 028E  
                                       _buttons 01A0                                      ??___xxtofl 0024  
                              ___awmod@dividend 0045                              _EUSART1_Initialize 0968  
                      ??_PIN_MANAGER_Initialize 0020                                      _inputArray 25EF  
                                    ?_I2C1_Stop 0076                     __end_of_adcThresholdHandler 154B  
                                       _pointer 00B9                   ??_EUSART1_DefaultErrorHandler 0077  
                    __size_of_SYSTEM_Initialize 0015                            I2C1_ISR@pi2c_buf_ptr 00C7  
                                       clrloop0 15F9                            end_of_initialization 0085  
                           ?_EUSART1_Initialize 0076                                         init@btn 0024  
                                       init@pin 0022                                  ___omul@product 0031  
                              ??_BUTTONS_isHeld 0020                     _EUSART1_OverrunErrorHandler 014C  
                        ??_I2C1_BusCollisionISR 0076                         __end_of_I2C1_Initialize 081C  
         __end_of_EUSART1_SetRxInterruptHandler 15AD          __size_of_EUSART1_SetRxInterruptHandler 0009  
                 _EUSART1_SetRxInterruptHandler 15A4                                      ?_BEAT_init 0076  
                                    ?_BEAT_task 0076                           __size_of_BUTTONS_init 004B  
                         __size_of_BUTTONS_task 00FC                           ??_CLOCK_timerCallback 0076  
                           __end_of_address_dec 1701                             __end_of_address_inc 171A  
                              ?_ADCC_Initialize 0076                            ??_EUSART1_Initialize 0022  
                      _TMR0_SetInterruptHandler 159B                       __size_of_I2C1_MasterWrite 002A  
                                  _displayState 00C0                               __size_of_I2C1_ISR 014E  
                             __end_of_writeData 17B7                         ?_ADCC_SetUpperThreshold 0020  
                                 ___xxtofl@sign 0028                                     ___fldiv@grs 0042  
                                   ___fldiv@rem 003B                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 16E9               I2C1_ISR@i2c_10bit_address_restart 00C5  
                        __size_of_CLOCK_getTime 0009                                     ___flmul@grs 0057  
                                  _BUTTONS_init 0A3B                               ??i1_CLOCK_getTime 0078  
                                  _BUTTONS_task 0702                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                         I2C1_MasterWrite@address 0028  
          __size_of_EUSART1_DefaultErrorHandler 0003                               __size_of_LED_init 0028  
                             __size_of_DMX_init 000F                  ??_ADCC_DefaultInterruptHandler 0076  
                                 ??_TM1650_init 0036                                  __end_of___omul 0A3B  
                       I2C1_MasterWrite@trBlock 0144                               __size_of_TMR0_ISR 000D  
                      I2C1_Stop@completion_code 0077                        __size_of_TM1650_setDigit 001E  
                        ?_OSCILLATOR_Initialize 0076                  __end_of_ADCC_SetUpperThreshold 1589  
                  __size_of_TM1650_fastPrintNum 0109                           __size_of_LED_setColor 0181  
                                  _lastDetected 00BD                             start_initialization 0043  
                                   ??_I2C1_Stop 0076                        __size_of_TMR0_Initialize 0014  
               __size_of_PIN_MANAGER_Initialize 002F   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
 EUSART1_SetTxInterruptHandler@interruptHandler 0020                   __size_of_ADCC_StartConversion 0009  
             __size_of_I2C1_MasterWriteTRBBuild 0023                       ?_I2C1_MasterWriteTRBBuild 0020  
                             _BUTTONS_isClicked 164D                               ___omul@multiplier 0020  
                            ?_BUTTONS_isClicked 0076                                     _address_dec 16E9  
                                   _address_inc 1701                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0076                                     ??_BEAT_task 0028  
                           ??_BUTTONS_isClicked 0020                                ??_PMD_Initialize 0020  
                              main@randomNumber 00E4                                        ??___omul 0030  
                         _EUSART1_RxDataHandler 16A1                                    _LED_setColor 02B5  
                ?_EUSART1_SetRxInterruptHandler 0020                                       __Umul8_16 1776  
                                   __pdataBANK1 00E6                                   _CLOCK_getTime 1592  
                  I2C1_MasterWriteTRBBuild@ptrb 0026                                  _eusart1RxCount 00CD  
                                     ___fldiv@a 002E                                       ___fldiv@b 0032  
                                   __pbssBIGRAM 25EF                             __end_of_TM1650_init 15E3  
                                     ___flmul@a 004C                                       ___flmul@b 0048  
                                   __pbssCOMMON 0070               _EUSART1_RxDefaultInterruptHandler 0150  
                                     ___latbits 0003                   __size_of_EUSART1_Transmit_ISR 001E  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00D1  
                                 _i2c1_tr_queue 00CE                               __size_of___xxtofl 0096  
                     __end_of_BUTTONS_isClicked 1661                 ??_EUSART1_SetTxInterruptHandler 0022  
                               buttons@lastTime 00AD                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                         ??_I2C1_FunctionComplete 0076  
                     __size_of_TM1650_isEnabled 0003                    __size_of_EUSART1_Receive_ISR 0034  
                              LED_setColor@blue 006E                           _TMR0_InterruptHandler 0148  
                                     __pnvBANK1 00EC                                       __pnvBANK2 0148  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 089B  
                                      ?___fldiv 002E                                        ?___awmod 0043  
                                      ?___flmul 0048                                        ?___fltol 0062  
                                    ?__Umul8_16 0020                                        ?___lwdiv 0020  
                                      ?___lwmod 0028                                  ?_CLOCK_getTime 0020  
                                      _I2C1_ISR 0EB2                    ??_INTERRUPT_InterruptManager 007C  
                               writeData@status 0034                                        ?_handler 0076  
                              _I2C1_MasterWrite 0844                                        _BAUD1CON 011F  
                  __end_of_I2C1_MasterTRBInsert 0AD8      __end_of_EUSART1_DefaultOverrunErrorHandler 154F  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076              _EUSART1_DefaultOverrunErrorHandler 154B  
                          _EUSART1_ErrorHandler 014A                         _EUSART1_SetErrorHandler 15AD  
                             ??_TM1650_setDigit 0037                                ___lwdiv@quotient 0026  
                                      _T2CLKCON 0290        __end_of_I2C1_WaitForLastPacketToComplete 1554  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0076                _I2C1_WaitForLastPacketToComplete 154F  
                        I2C1_MasterRead@trBlock 0140                               ??_TMR0_Initialize 0022  
                             _lastActiveDMXTime 00BB         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0020                                       clear_ram0 15F8  
                                      _PIE0bits 0716                                        _LED_init 081C  
                                      _PIE1bits 0717                                        _PIE3bits 0719  
                                      _DMX_init 162D             __size_of_INTERRUPT_InterruptManager 003D  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0076  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 1611                                        _SSP1STAT 018F  
                           writeData@dataToSend 0033                        __size_of_CONTROLLER_init 000B  
                      __size_of_CONTROLLER_task 0065                                     _TM1650_init 15DA  
                                     _threshold 00E8                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                 i1_CLOCK_getTime 155A  
                                     _writeData 1796                      __size_of_BUTTONS_isClicked 0014  
                            TM1650_setDigit@num 0035                    __size_of_adcThresholdHandler 0004  
                   __end_of_CLOCK_timerCallback 155A                                BUTTONS_task@time 0026  
                           _TM1650_fastPrintNum 0DA9                                      _ADSTATbits 0115  
         __end_of_EUSART1_SetTxInterruptHandler 15D1          __size_of_EUSART1_SetTxInterruptHandler 0009  
                 _EUSART1_SetTxInterruptHandler 15C8                   __size_of_I2C1_BusCollisionISR 0003  
                               ??_CLOCK_getTime 0022                          I2C1_ISR@i2c_bytes_left 00C6  
                       ??_OSCILLATOR_Initialize 0020                                     ??__Umul8_16 0022  
                              __size_of___fldiv 017A                                __size_of___awmod 0046  
                              __size_of___flmul 022C                                __size_of___fltol 0066  
                   __size_of_EUSART1_Initialize 0045                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                __end_of_I2C1_MasterWriteTRBBuild 17DA  
                          ?_TM1650_fastPrintNum 003A                                __size_of_handler 0035  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 002A  
                                 handler@dataIn 007A                             TM1650_enable@enable 0035  
           __end_of_EUSART1_DefaultErrorHandler 1541                     _EUSART1_DefaultErrorHandler 153E  
                               LED_setColor@red 00D6                                     _currentTime 00AF  
                                    _CLOCK_init 1566                                        ___xxtofl 0BA3  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                               ___lwdiv@divisor 0020                             I2C1_ISR@i2c_address 0074  
                               ___lwdiv@counter 0025                                        _detected 00BF  
                                    ?_writeData 002E                                        __ptext10 0800  
                                      __ptext11 0968                                        __ptext20 0089  
                                      __ptext12 15C8                                        __ptext21 1776  
                                      __ptext13 15BF                                        __ptext30 161E  
                                      __ptext22 0436                                        __ptext14 15B6  
                                      __ptext31 164D                                        __ptext23 081C  
                                      __ptext15 15AD                                        __ptext40 154F  
                                      __ptext32 15ED                                        __ptext24 162D  
                                      __ptext16 17DA                                        __ptext41 1566  
                                      __ptext33 0DA9                                        __ptext25 15A4  
                                      __ptext17 02B5                                        __ptext50 168A  
                                      __ptext42 159B                                        __ptext34 086E  
                                      __ptext26 0AD8                                        __ptext18 0BA3  
                                      __ptext51 1589                                        __ptext43 0702  
                                      __ptext35 1738                                        __ptext27 1701  
                                      __ptext19 0B3D                                        __ptext60 1554  
                                      __ptext52 1580                                        __ptext44 0A3B  
                                      __ptext36 1796                                        __ptext28 16E9  
                                      __ptext61 07FE                                        __ptext53 1577  
                                      __ptext45 1756                                        __ptext37 0844  
                                      __ptext29 16D1                                        __ptext70 16A1  
                                      __ptext62 0EB2                                        __ptext54 156E  
                                      __ptext46 0CD8                                        __ptext38 17B7  
                                      __ptext71 1604                                        __ptext63 16B9  
                                      __ptext47 0933                                        __ptext39 0A86  
                                      __ptext72 0003                                        __ptext64 163C  
                                      __ptext56 155A                                        __ptext48 1544  
                                      __ptext73 1547                                        __ptext65 1541  
                                      __ptext57 08CA                                        __ptext49 1592  
                                      __ptext66 171A                                        __ptext58 08FE  
                                      __ptext67 154B                                        __ptext59 1611  
                                      __ptext68 07FF                                        __ptext69 153E  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                          BUTTONS_isHeld@button 0020                           __end_of_BEAT_detected 1577  
                                      _lastBeat 00AB                                        _lastTime 00B3  
                              _TM1650_isEnabled 1544                                   __size_of_main 0152  
                                 __size_of_init 0020                                   __size_of_rand 009F  
                                  ?_address_dec 0076            __end_of_TMR0_DefaultInterruptHandler 07FF  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 07FE  
                                  ?_address_inc 0076                            _I2C1_MasterTRBInsert 0A86  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                  __end_of_ADCC_StartConversion 1592                                        int$flags 007E  
                       __size_of_BUTTONS_isHeld 000F              __end_of_INTERRUPT_InterruptManager 0041  
                    _INTERRUPT_InterruptManager 0004                         __end_ofi1_CLOCK_getTime 1560  
                                      main@time 00E2                          __size_of_TM1650_enable 0018  
                   _EUSART1_FramingErrorHandler 014E                             _EUSART1_Receive_ISR 08CA  
                         ??_TM1650_fastPrintNum 003C                               TM1650_setDigit@dp 0036  
                                    _INTCONbits 000B                               ??_CONTROLLER_init 003D  
                             ??_CONTROLLER_task 003D                                        init@port 0020  
          __end_of_ADCC_DefaultInterruptHandler 0004           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 0003                                        intlevel1 0000  
                                _thresholdCount 00A5                            ?_EUSART1_Receive_ISR 0076  
                                 writeData@data 002E                                ___lwmod@dividend 002A  
                       ?_PIN_MANAGER_Initialize 0076                        __end_of_I2C1_MasterWrite 086E  
                __size_of_I2C1_FunctionComplete 0011          __end_of_EUSART1_SetOverrunErrorHandler 15C8  
       __size_of_EUSART1_SetOverrunErrorHandler 0009                  _EUSART1_SetOverrunErrorHandler 15BF  
                 __end_of_I2C1_FunctionComplete 164D                           ?_I2C1_MasterTRBInsert 0020  
                  __end_of_EUSART1_Transmit_ISR 1738                           CONTROLLER_task@active 003F  
                 ?_TMR0_DefaultInterruptHandler 0076  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                ?_EUSART1_SetTxInterruptHandler 0020                                 _TM1650_setDigit 1738  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 00CC  
                                 __pstringtext1 1000                          __Umul8_16@multiplicand 0020  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0028                                     ?_CLOCK_init 0076  
                               _TMR0_Initialize 1661                                 ___lwmod@counter 002D  
                      _I2C1_MasterWriteTRBBuild 17B7                                     ??_writeData 002F  
                                    _TX1STAbits 011E                  ??_ADCC_SetADTIInterruptHandler 0022  
                         ??_EUSART1_Receive_ISR 0077                  __end_of_PIN_MANAGER_Initialize 08CA  
                             ??_ADCC_Initialize 0022                                   _TM1650_enable 16D1  
                            __size_of_I2C1_Stop 0018                   ?_ADCC_DefaultInterruptHandler 0076  
                          __Umul8_16@multiplier 0028                         ??_EUSART1_RxDataHandler 0076  
                             __Umul8_16@product 0024                __end_ofTM1650_setDigit@charTable 1060  
